{"file": "dataset/ori_500/3d_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nfig = plt.figure(figsize=(7.0, 7.0))\nax = fig.add_subplot(111, projection='3d')\n\n# Data for plotting\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\nz = np.cos(x)\n\n# Plotting\nax.plot(x, y, z, 'b-')\nax.scatter(x, y, z, c='r', marker='o')\n\n# Labels\nax.set_xlabel('Time')\nax.set_ylabel('Price')\nax.set_zlabel('Volume')\n\n# Display\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a 3D plot\nfig = plt.figure(figsize=(8.0, 6.0))\nax = fig.add_subplot(111, projection='3d')\n\n# Define the data points\nx = [0.5, 1.5, 2.5, 3.5]\ny = [0.5, 1.5, 2.5, 3.5]\nz = [0.5, 1.5, 2.5, 3.5]\n\n# Create a scatter plot\nscatter = ax.scatter(x, y, z, c='r', marker='o')\n\n# Set the labels for the axes\nax.set_xlabel('Height')\nax.set_ylabel('Width')\nax.set_zlabel('Count')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig = plt.figure(figsize=(8, 6))\nax = fig.add_subplot(111, projection='3d')\n\n# Define the data for the sphere\nu = np.linspace(0, 2 * np.pi, 100)\nv = np.linspace(0, np.pi, 100)\nx = 10 * np.outer(np.cos(u), np.sin(v))\ny = 10 * np.outer(np.sin(u), np.sin(v))\nz = 10 * np.outer(np.ones(np.size(u)), np.cos(v))\n\n# Plot the surface\nax.plot_surface(x, y, z, color='r')\n\n# Set the limits of the axes\nax.set_xlim(-15, 15)\nax.set_ylim(-15, 15)\nax.set_zlim(-15, 15)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nimport numpy as np\n\nfig = plt.figure(figsize=(8.0, 6.0))\nax = fig.add_subplot(111, projection='3d')\n\n# Data for plotting\nx = np.linspace(-4, 4, 100)\ny = np.linspace(-2, 2, 100)\nx, y = np.meshgrid(x, y)\nz = np.sin(np.sqrt(x**2 + y**2))\n\n# Plot the surface\nsurf = ax.plot_surface(x, y, z, cmap='viridis')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_xlabel('Temperature (\u00b0C)')\nax.set_ylabel('Pressure (kPa)')\nax.set_zlabel('Volume (L)')\n\n# Scatter plot of data points\nax.scatter([0, 2, -2], [0, 1, -1], [0, 2, -2], c='r', marker='o')\nax.plot([0, 2, -2], [0, 1, -1], [0, 2, -2], c='b', marker='o')\n\n# Add legend\nax.legend(['Discrete Points', 'Fit Line'])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nyears = ['2010', '2012', '2014', '2016', '2018']\nprivate_schools = [0.3, 0.5, 0.7, 0.9, 0.8]\npublic_schools = [0.2, 0.4, 0.6, 0.8, 0.9]\n\n# Create a 3D plot\nfig = plt.figure(figsize=(8, 6))\nax = fig.add_subplot(111, projection='3d')\n\n# Plot the data\nfor i in range(len(years)):\n    ax.bar([i], private_schools[i], zs=i, zdir='y', color='b', alpha=0.8)\n    ax.bar([i], public_schools[i], zs=i, zdir='y', color='r', alpha=0.8)\n\n# Set labels and title\nax.set_xlabel('Year')\nax.set_ylabel('Type')\nax.set_zlabel('Student to Teacher Ratio')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Create a scatter plot with random data\nx = np.random.rand(50)\ny = np.random.rand(50)\nax.scatter(x, y)\n\n# Set the title of the plot\nax.set_title('Vaccination Incidence Rate by Age and Vaccination Number')\n\n# Set the x-axis label\nax.set_xlabel('Age')\n\n# Set the y-axis label\nax.set_ylabel('Vaccination Number')\n\n# Set the z-axis label\nax.set_zlabel('Incidence Rate')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the first subplot\nfig, ax = plt.subplots(figsize=(10, 8))\nax.set_title('Global AI Investment')\nax.set_xlabel('Year')\nax.set_ylabel('Investment (Billion USD)')\nx = np.arange(2010, 2020)\ny = np.random.randint(1, 10, size=10)\nax.plot(x, y, 'o-')\n\n# Create a figure and axis for the second subplot\nfig, ax = plt.subplots(figsize=(10, 8))\nax.set_title('AI Adoption Rate')\nax.set_xlabel('Time Since Introduction (Years)')\nax.set_ylabel('Adoption Rate (%)')\nx = np.arange(0, 10, 1)\ny = np.random.randint(1, 10, size=10)\nax.plot(x, y, 'o-')\n\n# Display the plots\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_2.pdf", "response": "```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\n# Create a figure and a 3D subplot\nfig = plt.figure(figsize=(10.0, 7.0))\nax1 = fig.add_subplot(121, projection='3d')\nax2 = fig.add_subplot(122, projection='3d')\n\n# Define the grid of points\nx = np.linspace(-1, 1, 50)\ny = np.linspace(-1, 1, 50)\nx, y = np.meshgrid(x, y)\n\n# Define the function f(x,y)\nz = np.sin(np.sqrt(x**2 + y**2))\n\n# Plot the function f(x,y)\nsurf1 = ax1.plot_surface(x, y, z, cmap='coolwarm', linewidth=0, antialiased=False)\nfig.colorbar(surf1, shrink=0.5, aspect=5)\n\n# Define the solution g(x,y)\ng = np.sin(np.sqrt(x**2 + y**2)) * np.exp(-x**2 - y**2)\n\n# Plot the solution g(x,y)\nsurf2 = ax2.plot_surface(x, y, g, cmap='viridis', linewidth=0, antialiased=False)\nfig.colorbar(surf2, shrink=0.5, aspect=5)\n\n# Set the labels for the axes\nax1.set_xlabel('X Label')\nax1.set_ylabel('Y Label')\nax1.set_zlabel('Z Label')\nax2.set_xlabel('X Label')\nax2.set_ylabel('Y Label')\nax2.set_zlabel('Z Label')\n\n# Set the title of the plots\nax1.set_title('f(x)')\nax2.set_title('solution')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the plot\nax.set_title('CIFAR10 Spiking ResNet18 T=6')\n\n# Set the x-axis label\nax.set_xlabel('tau')\n\n# Set the y-axis label\nax.set_ylabel('accuracy (%)')\n\n# Define the data for the plot\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\n\n# Plot the data\nax.plot(x, y)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the plot\nfig, ax = plt.subplots(figsize=(15, 10))\n\n# Define the data for the plot\nx = np.linspace(-100, 100, 100)\ny = np.linspace(-100, 100, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\n\n# Plot the data\nax.contourf(X, Y, Z, cmap='viridis')\n\n# Set the title of the plot\nax.set_title('Origin')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nfig = plt.figure(figsize=(7,7))\nax = fig.add_subplot(111, projection='3d')\n\n# Create a grid of points\nx = np.linspace(0, 1, 10)\ny = np.linspace(0, 1, 10)\nx, y = np.meshgrid(x, y)\nz = np.sin(np.sqrt(x**2 + y**2))\n\n# Plot the surface\nsurf = ax.plot_surface(x, y, z, cmap='viridis')\n\n# Add some targets\ntargets = [(0.5, 0.5, 0.5), (0.8, 0.8, 0.8)]\nfor target in targets:\n    ax.scatter(target[0], target[1], target[2], color='orange')\n\n# Add a legend\nfig.legend(['Targets'])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Create a 3D scatter plot\nx = np.linspace(-4, 4, 100)\ny = np.linspace(-2, 2, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nax.plot_surface(X, Y, Z, cmap='coolwarm')\n\n# Add a color bar which maps values to colors\ncbar = fig.colorbar(ax.collections[0])\ncbar.set_label('Intensity')\n\n# Set the title of the plot\nax.set_title('3D Scatter Plot with Color Bar')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Create a grid of subplots\ngs = fig.add_gridspec(3, 3)\n\n# Add a subplot for the main image\nmain_ax = fig.add_subplot(gs[0, :])\n\n# Add a subplot for the left column\nleft_ax = fig.add_subplot(gs[1:, 0])\n\n# Add a subplot for the right column\nright_ax = fig.add_subplot(gs[1:, 2])\n\n# Add a subplot for the bottom row\nbottom_ax = fig.add_subplot(gs[2, 1])\n\n# Add a colorbar to the right of the main image\ncbar_ax = fig.add_axes([0.95, 0.15, 0.03, 0.7])\n\n# Set the limits of the colorbar\ncbar_ax.set_xlim(0, 12)\ncbar_ax.set_ylim(0, 12)\n\n# Set the colormap of the colorbar\ncbar_ax.imshow(np.linspace(0, 12, 12).reshape(1, 12), aspect='auto', cmap='viridis')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the limits of the x and y axes\nax.set_xlim(-10, 100)\nax.set_ylim(-50, 50)\n\n# Set the labels for the x and y axes\nax.set_xlabel('Income')\nax.set_ylabel('Debt')\n\n# Create a scatter plot with random data points\nx = np.random.randint(0, 100, 20)\ny = np.random.randint(-50, 50, 20)\nax.scatter(x, y, c='red')\n\n# Create a line plot with random data points\nx = np.linspace(0, 100, 100)\ny = np.sin(x/10)\nax.plot(x, y, c='blue')\n\n# Create a bar chart with random data points\nx = np.arange(1, 11)\ny = np.random.randint(0, 100, 10)\nax.bar(x, y, color='orange')\n\n# Create a pie chart with random data points\nx = np.array([10, 20, 30, 40])\ny = np.array([10, 20, 30, 40])\nax.pie(y, colors=['green', 'yellow', 'orange', 'red'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the x and y limits\nax.set_xlim(10, 90)\nax.set_ylim(-30, 50)\n\n# Set the x and y labels\nax.set_xlabel('Time (s)')\nax.set_ylabel('Depth (m)')\n\n# Set the x and y ticks\nax.set_xticks(np.arange(10, 100, 10))\nax.set_yticks(np.arange(-30, 60, 10))\n\n# Draw a rectangle representing the fish tank\nrect = plt.Rectangle((20, -20), 60, 40, fill=False, edgecolor='black')\nax.add_patch(rect)\n\n# Draw a line representing the temperature change\nx = np.linspace(10, 90, 100)\ny = 20 * np.sin(x / 10) + 10\nax.plot(x, y, 'r-')\n\n# Draw a line representing the depth change\nx = np.linspace(10, 90, 100)\ny = 10 * np.cos(x / 10) - 10\nax.plot(x, y, 'b-')\n\n# Draw a line representing the oxygen level change\nx = np.linspace(10, 90, 100)\ny = 5 * np.tan(x / 10) + 10\nax.plot(x, y, 'g-')\n\n# Draw a line representing the pH level change\nx = np.linspace(10, 90, 100)\ny = 15 * np.exp(-x / 10) + 10\nax.plot(x, y, 'y-')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Set the x-axis limits\nax.set_xlim(-20, 20)\n\n# Set the y-axis limits\nax.set_ylim(0, 12)\n\n# Set the x-axis label\nax.set_xlabel('LR Test')\n\n# Set the y-axis label\nax.set_ylabel('Density')\n\n# Set the title of the plot\nax.set_title('Density vs LR Test')\n\n# Create a scatter plot\nx = np.linspace(-20, 20, 100)\ny = np.sin(x)\nax.plot(x, y, 'b-')\n\n# Add a rectangle to the plot\nrectangle = plt.Rectangle((-10, 0), 20, 12, fill=False, edgecolor='red')\nax.add_patch(rectangle)\n\n# Add a circle to the plot\ncircle = plt.Circle((0, 6), 5, color='green', fill=False)\nax.add_artist(circle)\n\n# Add a line to the plot\nline = plt.Line2D([-10, 10], [0, 12], color='blue')\nax.add_line(line)\n\n# Add a polygon to the plot\npolygon = plt.Polygon([(-10, 0), (0, 12), (10, 0)], color='orange', fill=False)\nax.add_patch(polygon)\n\n# Add a text box to the plot\ntext_box = plt.TextBox((0.1, 0.9), \"Text Box\", label=\"Label\")\nax.add_artist(text_box)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7, 5))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the title of the plot\nax.set_title('Average Tracked ORB Feature Number')\n\n# Set the x-axis label\nax.set_xlabel('Average Tracked ORB Feature Number')\n\n# Set the y-axis label\nax.set_ylabel('Log (ATE RMSE)')\n\n# Set the x-axis limits\nax.set_xlim(150, 400)\n\n# Set the y-axis limits\nax.set_ylim(-6, 0)\n\n# Create a scatter plot for each severity level\nseverity_levels = ['Low', 'Middle', 'High']\ncolors = ['blue', 'orange', 'green']\nfor i, severity in enumerate(severity_levels):\n    ax.scatter(np.random.randint(150, 400, 20), np.random.uniform(-6, 0, 20), color=colors[i], label=severity)\n\n# Add a legend\nax.legend()\n\n# Add a correlation value\nax.text(300, -5, 'Correlation: -0.47', fontsize=12)\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2.5], color='grey')\n\n# Add a severity bar\nax.barh([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], height=0.5, left=[0.5, 1.5, 2"}
{"file": "dataset/ori_500/CB_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7, 5))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y, c='blue', label='Data Points')\n\n# Draw a line graph with random data\nx_line = np.linspace(-3, 3, 100)\ny_line = np.sin(x_line)\nax.plot(x_line, y_line, c='black', label='Line Graph')\n\n# Add a legend to the plot\nax.legend()\n\n# Set the title of the plot\nax.set_title('Log-Depth Plot')\n\n# Set the x-axis label\nax.set_xlabel('Log (Depth L1)')\n\n# Set the y-axis label\nax.set_ylabel('Log (ATE RMSE)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Set the title of the plot\nax.set_title('T-test p-value = 0.0000', fontsize=14, fontweight='bold')\n\n# Set the x-axis label\nax.set_xlabel('Average Top-5 Pct of 1D', fontsize=12)\n\n# Set the y-axis label\nax.set_ylabel('Average Top-5 Pct of 2D', fontsize=12)\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 1)\n\n# Draw a rectangle\nrect = plt.Rectangle((0.2, 0.3), 0.6, 0.4, fc='red')\nax.add_patch(rect)\n\n# Draw a circle\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='green')\nax.add_patch(circle)\n\n# Draw a line\nline = plt.Line2D([0.1, 0.9], [0.1, 0.9], lw=2, color='blue')\nax.add_line(line)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 4))\n\n# Set the title of the graph\nax.set_title('Comparison of APO & APO-APEs (GPT-3 5-Turbo)')\n\n# Set the x-axis label\nax.set_xlabel('Tasks')\n\n# Set the y-axis label\nax.set_ylabel('Scores')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3, 4])\nax.set_xticklabels(['snarks', 'navigate', 'question_selection', 'object_counting'])\n\n# Set the y-limits\nax.set_ylim(0.4, 0.9)\n\n# Set the y-ticks\nax.set_yticks([0.4, 0.5, 0.6, 0.7, 0.8, 0.9])\n\n# Set the y-tick labels\nax.set_yticklabels(['0.4', '0.5', '0.6', '0.7', '0.8', '0.9'])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'green', 'red', 'cyan', 'magenta', 'yellow', 'black'])\n\n# Set the color of the line\nax.plot([0, 1, 2, 3, 4], [0.7, 0.8, 0.7, 0.6, 0.7], color='blue')\n\n# Set the color of the markers\nax.plot([0, 1, 2, 3, 4], [0.6, 0.7, 0.8, 0.9, 0.8], 'o', color='red')\n\n# Set the color of the bars\nax.bar([0, 1, 2, 3, 4], [0.5, 0.6, 0.7, 0.8, 0.9], color='green')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 1, 1, color='blue'))\n\n# Set the color of the ellipses\nax.add_patch(plt.Ellipse((0, 0), 1, 1, color='red'))\n\n# Set the color of the polygons\nax.add_patch(plt.Polygon([[0, 0], [1, 1], [2, 0]], color='green'))\n\n# Set the color of the patches\nax.add_patch(plt.Circle((0, 0), 1, color='blue'))\n\n# Set the color of the lines\nax.plot([0, 1, 2, 3, 4], [0.4, 0.5, 0.6, 0.7, 0.8], color='red')\n\n# Set the color of the markers\nax.plot([0, 1, 2, 3, 4], [0.5, 0.6, 0.7, 0.8, 0.9], 'o', color='green')\n\n# Set the color of the bars\nax.bar([0, 1, 2, 3, 4], [0.6, 0.7, 0.8, 0.9, 0.8], color='blue')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 1, 1, color='green'))\n\n# Set the color of the ellipses\nax.add_patch(plt.Ellipse((0, 0), 1, 1, color='blue'))\n\n# Set the color of the polygons\nax.add_patch(plt.Polygon([[0, 0], [1, 1], [2, 0]], color='red'))\n\n# Set the color of the patches\nax.add_patch(plt.Circle((0, 0), 1, color='green'))\n\n# Set the color of the lines\nax.plot([0, 1, 2, 3, 4], [0.7, 0.8, 0.7, 0.6, 0.7], color='blue')\n\n# Set the color of the markers\nax.plot([0, 1, 2, 3, 4], [0.6, 0.7, 0.8, 0.9, 0.8], 'o', color='red')\n\n# Set the color of the bars\nax.bar([0, 1, 2, 3, 4], [0.5, 0.6, 0.7, 0.8, 0.9], color='green')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 1, 1, color='blue'))\n\n# Set the color of the ellipses\nax.add_patch(plt.Ellipse((0, 0), 1, 1, color='red'))\n\n# Set the color of the polygons\nax.add_patch(plt.Polygon([[0, 0], [1, 1], [2, 0]], color='green'))\n\n# Set the color of the patches\nax.add_patch(plt.Circle((0, 0), 1, color='blue'))\n\n# Set the color of the lines\nax.plot([0, 1, 2, 3, 4], [0.4, 0.5, 0.6, 0.7, 0.8], color='red')\n\n# Set the color of the markers\nax.plot([0, 1, 2, 3, 4], [0.5, 0.6, 0.7, 0.8, 0.9], 'o', color='green')\n\n# Set the color of the bars\nax.bar([0, 1, 2, 3, 4], [0.6, 0.7, 0.8, 0.9, 0.8], color='blue')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 1, 1, color='green'))\n\n# Set the color of the ellipses\nax.add_patch(plt.Ellipse((0, 0), 1, 1, color='blue'))\n\n# Set the color of the polygons\nax.add_patch(plt.Polygon([[0, 0], [1, 1], [2, 0]], color='red'))\n\n# Set the color of the patches\nax.add_patch(plt.Circle((0, 0), 1, color='green'))\n\n# Set the color of the lines\nax.plot([0, 1, 2, 3, 4], [0.7, 0.8, 0.7, 0.6, 0.7], color='blue')\n\n# Set the color of the markers\nax.plot([0, 1, 2, 3, 4], [0.6, 0.7, 0.8, 0.9, 0.8], 'o', color='red')\n\n# Set the color of the bars\nax.bar([0, 1, 2, 3, 4], [0.5, 0.6, 0.7, 0.8, 0.9], color='green')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 1, 1, color='blue'))\n\n# Set the color of the ellipses\nax.add_patch(plt.Ellipse((0, 0), 1, 1, color='red'))\n\n# Set the color of the polygons\nax.add_patch(plt.Polygon([[0, 0], [1, 1], [2, 0]], color='green'))\n\n# Set the color of the patches\nax.add_patch(plt.Circle((0, 0), 1, color='blue'))\n\n# Set the color of the lines\nax.plot([0, 1, 2, 3, 4], [0.4, 0.5, 0.6, 0.7, 0.8], color='red')\n\n# Set the color of the markers\nax.plot([0, 1, 2, 3, 4], [0.5, 0.6, 0.7, 0.8, 0.9], 'o', color='green')\n\n# Set the color of the bars\nax.bar([0, 1, 2, 3, 4], [0.6, 0.7, 0.8, 0.9, 0.8], color='blue')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 1, 1, color='green'))\n\n# Set the color of the ellipses\nax.add_patch(plt.Ellipse((0, 0), 1, 1, color='blue'))\n\n# Set the color of the polygons\nax.add_patch(plt.Polygon([[0, 0], [1, 1], [2, 0]], color='red'))\n\n# Set the color of the patches\nax.add_patch(plt.Circle((0, 0), 1, color='green'))\n\n# Set the color of the lines\nax.plot([0, 1, 2, 3, 4], [0.7, 0.8, 0.7, 0.6, 0.7], color='blue')\n\n# Set the color of the markers\nax.plot([0, 1, 2, 3, 4], [0.6, 0.7, 0.8, 0.9, 0.8], 'o', color='red')\n\n# Set the color of the bars\nax.bar([0, 1, 2, 3, 4], [0.5, 0.6, 0.7, 0.8, 0.9], color='green')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 1, 1, color='blue'))\n\n# Set the color of the ellipses\nax.add_patch(plt.Ellipse((0, 0), 1, 1, color='red'))\n\n# Set the color of the polygons\nax.add_patch(plt.Polygon([[0, 0], [1, 1], [2, 0]], color='green'))\n\n# Set the color of the patches\nax.add_patch(plt.Circle((0, 0), 1, color='blue'))\n\n# Set the color of the lines\nax.plot([0, 1, 2, 3, 4], [0.4, 0.5, 0.6, 0.7, 0.8], color='red')\n\n# Set the color of the markers\nax.plot([0, 1, 2, 3, 4], [0.5, 0.6, 0.7, 0.8, 0.9], 'o', color='green')\n\n# Set the color of the bars\nax.bar([0, 1, 2, 3, 4], [0.6, 0.7, 0.8, 0.9, 0.8], color='blue')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 1, 1, color='green'))\n\n# Set the color of the ellipses\nax.add_patch(plt.Ellipse((0, 0), 1, 1, color='blue'))\n\n# Set the color of the polygons\nax.add_patch(plt.Polygon([[0, 0], [1, 1], [2, 0]], color='red'))\n\n# Set the color of the patches\nax.add_patch(plt.Circle((0, 0), 1, color='green'))\n\n# Set the color of the lines\nax.plot([0, 1, 2, 3, 4], [0.7, 0.8, 0.7, 0.6, 0.7], color='blue')\n\n# Set the color of the markers\nax.plot([0, 1, 2, 3, 4], [0.6, 0.7, 0.8, 0.9, 0.8], 'o', color='red')\n\n# Set the color of the bars\nax.bar([0, 1, 2, 3, 4], [0.5, 0.6, 0.7, 0.8, 0.9], color='green')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 1, 1, color='blue'))\n\n# Set the color of the ellipses\nax.add_patch(plt.Ellipse((0, 0), 1, 1, color='red'))\n\n# Set the color of the polygons\nax.add_patch(plt.Polygon([[0, 0], [1, 1], [2, 0]], color='green'))\n\n# Set the color of the patches\nax.add_patch(plt.Circle((0, 0), 1, color='blue'))\n\n# Set the color of the lines\nax.plot([0, 1, 2, 3, 4], [0.4, 0.5, 0.6, 0.7, 0.8], color='red')\n\n# Set the color of the markers\nax.plot([0, 1, 2, 3, 4], [0.5, 0.6, 0.7, 0.8, 0.9], 'o', color='green')\n\n# Set the color of the bars\nax.bar([0, 1, 2, 3, 4], [0.6, 0.7, 0.8, 0.9, 0.8], color='blue')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 1, 1, color='green'))\n\n# Set the color of the ellipses\nax.add_patch(plt.Ellipse((0, 0), 1, 1, color='blue'))\n\n# Set the color of the polygons\nax.add_patch(plt.Polygon([[0, 0], [1, 1], [2, 0]], color='red'))\n\n# Set the color of the patches\nax.add_patch(plt.Circle((0, 0), 1, color='green'))\n\n# Set the color of the lines\nax.plot([0, 1, 2, 3, 4], [0.7, 0.8, 0.7, 0.6, 0.7], color='blue')\n\n# Set the color of the markers\nax.plot([0, 1, 2, 3, 4], [0.6, 0.7, 0.8, 0.9, 0.8], 'o', color='red')\n\n# Set the color of the bars\nax.bar([0, 1, 2, 3, 4], [0.5, 0.6, 0.7, 0.8, 0.9], color='green')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 1, 1, color='blue'))\n\n# Set the color of the ellipses\nax.add_patch(plt.Ellipse((0, 0), 1, 1, color='red'))\n\n# Set the color of the polygons\nax.add_patch(plt.Polygon([[0, 0], [1, 1], [2, 0]], color='green'))\n\n# Set the color of the patches\nax.add_patch(plt.Circle((0, 0), 1, color='blue'))\n\n# Set the color of the lines\nax.plot([0, 1, 2, 3, 4], [0.4, 0.5, 0.6, 0.7, 0.8], color='red')\n\n# Set the color of the markers\nax.plot([0, 1, 2, 3, 4], [0.5, 0.6, 0.7, 0.8, 0.9], 'o', color='green')\n\n# Set the color of the bars\nax.bar([0, 1, 2, 3, 4], [0.6, 0.7, 0.8, 0.9, 0.8], color='blue')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 1, 1, color='green'))\n\n# Set the color of the ellipses\nax.add_patch(plt.Ellipse((0, 0), 1, 1, color='blue'))\n\n# Set the color of the polygons\nax.add_patch(plt.Polygon([[0, 0], [1, 1], [2, 0]], color='red'))\n\n# Set the color of the patches\nax.add_patch(plt.Circle((0, 0), 1, color='green'))\n\n# Set the color of the lines\nax.plot([0, 1, 2, 3, 4], [0.7, 0.8, 0.7, 0.6, 0.7], color='blue')\n\n# Set the color of the markers\nax.plot([0, 1, 2, 3, 4], [0.6, 0.7, 0.8, 0.9, 0.8], 'o', color='red')\n\n# Set the color of the bars\nax.bar([0, 1, 2, 3, 4], [0.5, 0.6, 0.7, 0.8, 0.9], color='green')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 1, 1, color='blue'))\n\n# Set the color of the ellipses\nax.add_patch(plt.Ellipse((0, 0), 1, 1, color='red'))\n\n# Set the color of the polygons\nax.add_patch(plt.Polygon([[0, 0], [1, 1], [2, 0"}
{"file": "dataset/ori_500/CB_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the background color of the plot\nax.set_facecolor('lightpink')\n\n# Set the title of the plot\nax.set_title('summarization_xsum:temperature=0.3,device=cuda')\n\n# Set the x-axis label\nax.set_xlabel('norm size')\n\n# Set the y-axis label\nax.set_ylabel('count')\n\n# Set the x-axis limits\nax.set_xlim(0, 1.4)\n\n# Set the y-axis limits\nax.set_ylim(0, 120)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 1.5, 0.2))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 121, 20))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '20', '40', '60', '80', '100', '120'])\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick"}
{"file": "dataset/ori_500/CB_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Define the data for the pie chart\nlabels = ['Same', 'Different', 'Incomparable']\nsizes = [32, 4, 99]\ncolors = ['blue', 'orange', 'green']\n\n# Create a pie chart\nax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%')\n\n# Set the title of the chart\nax.set_title('Language Comparison')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7, 5))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Set the title of the plot\nax.set_title('Algorithm Performance Comparison')\n\n# Set the x-axis label\nax.set_xlabel('Algorithms')\n\n# Set the y-axis label\nax.set_ylabel('Performance (Seconds)')\n\n# Create a scatter plot for SEAC\nax.scatter([1, 2, 3], [49, 50, 51], color='green', label='SEAC')\n\n# Create a scatter plot for SAC(20Hz)\nax.scatter([1, 2, 3], [48, 49, 50], color='red', label='SAC(20Hz)')\n\n# Add a legend to the plot\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the first graph\nx = ['CodeBERT', 'ChatGPT-3.5', 'ChatGPT-4.0', 'CodeAgent']\ny = [63.64, 80.08, 84.27, 90.11]\ncolors = ['blue', 'cyan', 'magenta', 'green']\n\n# Data for the second graph\nx2 = ['CodeBERT', 'ChatGPT-3.5', 'ChatGPT-4.0', 'CodeAgent']\ny2 = [75.00, 87.20, 89.12, 93.89]\ncolors2 = ['red', 'cyan', 'magenta', 'green']\n\nfig, ax = plt.subplots(1, 2, figsize=(10, 4))\n\n# Plot the first graph\nax[0].bar(x, y, color=colors)\nax[0].set_title('Average Recall Scores by Method')\nax[0].set_xlabel('Method')\nax[0].set_ylabel('Recall Score')\n\n# Plot the second graph\nax[1].plot(x2, y2, color='red')\nax[1].set_title('Average F1 Scores by Method')\nax[1].set_xlabel('Method')\nax[1].set_ylabel('F1 Score')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Define the data for the plot\nx = np.linspace(4, 32, 100)\ny = np.sin(x) * 5 + 90\n\n# Plot the data\nax.plot(x, y, color='blue')\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((4, 88), 28, 8, facecolor='lightblue', alpha=0.5)\nax.add_patch(rect)\n\n# Add a shaded rectangle to the plot\nshaded_rect = plt.Rectangle((4, 88), 28, 8, facecolor='lightblue', alpha=0.5)\nax.add_patch(shaded_rect)\n\n# Add a legend to the plot\nlegend_elements = [Line2D([0], [0], marker='o', color='w', label='Trained w Few-Shot Ex', markerfacecolor='blue', markersize=10),\n                  Line2D([0], [0], marker='o', color='w', label='Def Deduce+Ex Gen', markerfacecolor='red', markersize=10)]\nax.legend(handles=legend_elements, loc='upper left')\n\n# Set the title of the plot\nax.set_title('Micro F1 Score Over Few-Shot K')\n\n# Set the x-axis label\nax.set_xlabel('Few-Shot K')\n\n# Set the y-axis label\nax.set_ylabel('Micro F1')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(7, 7))\n\n# Set the title of the plot\nax.set_title('Car Efficiency vs Vehicle Parameter Size')\n\n# Set the x-axis label\nax.set_xlabel('Vehicle Parameter Size (units)')\n\n# Set the y-axis label\nax.set_ylabel('Efficiency (%)')\n\n# Set the x-axis limits\nax.set_xlim(0, 50)\n\n# Set the y-axis limits\nax.set_ylim(50, 85)\n\n# Plot the data\nax.plot([10, 20, 30, 40, 50], [60, 65, 70, 75, 80], 'ro-')\nax.plot([10, 20, 30, 40, 50], [62, 65, 70, 75, 80], 'bo-')\nax.plot([10, 20, 30, 40, 50], [65, 70, 75, 80, 85], 'go-')\n\n# Add a legend\nax.legend(['Car A', 'Car B', 'Car C'])\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter(20, 62, color='blue')\nax.scatter(30, 65, color='green')\nax.scatter(40, 70, color='purple')\nax.scatter(50, 75, color='orange')\n\n# Add a scatter plot for each car\nax.scatter(10, 60, color='red')\nax.scatter"}
{"file": "dataset/ori_500/CB_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nmodels = ['GPT-2', 'Llama 2 7B', 'Llama 2 70B', 'Mixtral 8x7B', 'GPT-3.5', 'GPT-4']\nsuccess_rates = [16, 12, 20, 26, 20, 12]\ntrends = ['Simple Trend', 'Simple', 'Complex', 'Code']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Plot the success rates\nax.plot(models, success_rates, marker='o', linestyle='-', color='purple')\n\n# Set the title and labels\nax.set_title('Encoding/Decoding Schelling Points by Model')\nax.set_xlabel('Model')\nax.set_ylabel('Success Rate (%)')\n\n# Add trend labels\nfor i, model in enumerate(models):\n    ax.text(i, success_rates[i], trends[i], ha='center', va='bottom')\n\n# Add colored rectangles for each model's success rate\nfor i, rate in enumerate(success_rates):\n    ax.add_patch(plt.Rectangle((i-0.4, 0), 0.8, rate, color=plt.cm.RdYlGn(rate/60)))\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Calibration Curve')\n\n# Set the x-axis label\nax.set_xlabel('Redicted Probability')\n\n# Set the y-axis label\nax.set_ylabel('Fraction of Positives')\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 1)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 1.1, 0.25))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 1.1, 0.25))\n\n# Draw a line graph\nax.plot([0, 1], [0, 1], 'k-')\n\n# Draw a scatter plot\nax.scatter(np.random.rand(10), np.random.rand(10), color='orange')\n\n# Draw a rectangle\nax.add_patch(plt.Rectangle((0.25, 0.75), 0.5, 0.25, color='pink'))\n\n# Draw a circle\ncircle = plt.Circle((0.5, 0.5), 0.1, color='orange')\nax.add_artist(circle)\n\n# Draw a polygon\npolygon = plt.Polygon([[0.25, 0.25], [0.5, 0.75], [0.75, 0.25]], color='orange')\nax.add_patch(polygon)\n\n# Draw a star\nstar = plt.Polygon([[0.5, 0.5], [0.4, 0.3], [0.6, 0.3], [0.5, 0.5], [0.4, 0.7], [0.6, 0.7]], color='orange')\nax.add_patch(star)\n\n# Draw a triangle\ntriangle = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25]], color='orange')\nax.add_patch(triangle)\n\n# Draw a square\nsquare = plt.Rectangle((0.25, 0.25), 0.5, 0.5, color='orange')\nax.add_patch(square)\n\n# Draw a pentagon\npentagon = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.5, 0.75], [0.25, 0.5]], color='orange')\nax.add_patch(pentagon)\n\n# Draw a hexagon\nhexagon = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.5, 0.5]], color='orange')\nax.add_patch(hexagon)\n\n# Draw a heptagon\nheptagon = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.5, 0.5], [0.4, 0.4]], color='orange')\nax.add_patch(heptagon)\n\n# Draw an octagon\noctagon = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.5, 0.5], [0.4, 0.4], [0.6, 0.4]], color='orange')\nax.add_patch(octagon)\n\n# Draw a nonagon\nnonagon = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.5, 0.5], [0.4, 0.4], [0.6, 0.4], [0.5, 0.6]], color='orange')\nax.add_patch(nonagon)\n\n# Draw a decagon\ndecagon = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.5, 0.5], [0.4, 0.4], [0.6, 0.4], [0.5, 0.6], [0.5, 0.4]], color='orange')\nax.add_patch(decagon)\n\n# Draw a dodecagon\ndodecagon = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.5, 0.5], [0.4, 0.4], [0.6, 0.4], [0.5, 0.6], [0.5, 0.4], [0.4, 0.6], [0.6, 0.6]], color='orange')\nax.add_patch(dodecagon)\n\n# Draw a trapezoid\ntrapezoid = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75]], color='orange')\nax.add_patch(trapezoid)\n\n# Draw a parallelogram\nparallelogram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75]], color='orange')\nax.add_patch(parallelogram)\n\n# Draw a rhombus\nrhombus = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75]], color='orange')\nax.add_patch(rhombus)\n\n# Draw a kite\nkite = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75]], color='orange')\nax.add_patch(kite)\n\n# Draw a pentagram\npentagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.5, 0.5], [0.4, 0.4], [0.6, 0.4], [0.5, 0.6], [0.5, 0.4]], color='orange')\nax.add_patch(pentagram)\n\n# Draw a hexagram\nhexagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.5, 0.5], [0.4, 0.4], [0.6, 0.4], [0.5, 0.6], [0.5, 0.4], [0.4, 0.6], [0.6, 0.6]], color='orange')\nax.add_patch(hexagram)\n\n# Draw a heptagram\nheptagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.5, 0.5], [0.4, 0.4], [0.6, 0.4], [0.5, 0.6], [0.5, 0.4], [0.4, 0.6], [0.6, 0.6], [0.5, 0.8]], color='orange')\nax.add_patch(heptagram)\n\n# Draw an octagram\noctagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.5, 0.5], [0.4, 0.4], [0.6, 0.4], [0.5, 0.6], [0.5, 0.4], [0.4, 0.6], [0.6, 0.6], [0.5, 0.8], [0.5, 0.6]], color='orange')\nax.add_patch(octagram)\n\n# Draw a nonagram\nnonagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.5, 0.5], [0.4, 0.4], [0.6, 0.4], [0.5, 0.6], [0.5, 0.4], [0.4, 0.6], [0.6, 0.6], [0.5, 0.8], [0.5, 0.6], [0.5, 0.4]], color='orange')\nax.add_patch(nonagram)\n\n# Draw a decagram\ndecagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.5, 0.5], [0.4, 0.4], [0.6, 0.4], [0.5, 0.6], [0.5, 0.4], [0.4, 0.6], [0.6, 0.6], [0.5, 0.8], [0.5, 0.6], [0.5, 0.4], [0.5, 0.2]], color='orange')\nax.add_patch(decagram)\n\n# Draw a dodecagram\ndodecagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.5, 0.5], [0.4, 0.4], [0.6, 0.4], [0.5, 0.6], [0.5, 0.4], [0.4, 0.6], [0.6, 0.6], [0.5, 0.8], [0.5, 0.6], [0.5, 0.4], [0.5, 0.2], [0.5, 0.4]], color='orange')\nax.add_patch(dodecagram)\n\n# Draw a trapezoid\ntrapezoid = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75]], color='orange')\nax.add_patch(trapezoid)\n\n# Draw a parallelogram\nparallelogram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75]], color='orange')\nax.add_patch(parallelogram)\n\n# Draw a rhombus\nrhombus = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75]], color='orange')\nax.add_patch(rhombus)\n\n# Draw a kite\nkite = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75]], color='orange')\nax.add_patch(kite)\n\n# Draw a pentagram\npentagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.5, 0.5], [0.4, 0.4], [0.6, 0.4], [0.5, 0.6], [0.5, 0.4]], color='orange')\nax.add_patch(pentagram)\n\n# Draw a hexagram\nhexagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.5, 0.5], [0.4, 0.4], [0.6, 0.4], [0.5, 0.6], [0.5, 0.4], [0.4, 0.6], [0.6, 0.6]], color='orange')\nax.add_patch(hexagram)\n\n# Draw a heptagram\nheptagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.5, 0.5], [0.4, 0.4], [0.6, 0.4], [0.5, 0.6], [0.5, 0.4], [0.4, 0.6], [0.6, 0.6], [0.5, 0.8]], color='orange')\nax.add_patch(heptagram)\n\n# Draw an octagram\noctagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.5, 0.5], [0.4, 0.4], [0.6, 0.4], [0.5, 0.6], [0.5, 0.4], [0.4, 0.6], [0.6, 0.6], [0.5, 0.8], [0.5, 0.6], [0.5, 0.4]], color='orange')\nax.add_patch(octagram)\n\n# Draw a nonagram\nnonagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.5, 0.5], [0.4, 0.4], [0.6, 0.4], [0.5, 0.6], [0.5, 0.4], [0.4, 0.6], [0.6, 0.6], [0.5, 0.8], [0.5, 0.6], [0.5, 0.4], [0.5, 0.2]], color='orange')\nax.add_patch(nonagram)\n\n# Draw a decagram\ndecagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.5, 0.5], [0.4, 0.4], [0.6, 0.4], [0.5, 0.6], [0.5, 0.4], [0.4, 0.6], [0.6, 0.6], [0.5, 0.8], [0.5, 0.6], [0.5, 0.4], [0.5, 0.2], [0.5, 0.4]], color='orange')\nax.add_patch(decagram)\n\n# Draw a dodecagram"}
{"file": "dataset/ori_500/CB_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the title of the plot\nax.set_title('Model Performance Comparison', fontsize=16)\n\n# Set the x-axis label\nax.set_xlabel('ACC', fontsize=14)\n\n# Set the y-axis label\nax.set_ylabel('Performance Metrics', fontsize=14)\n\n# Set the x-axis limits\nax.set_xlim(-6, 6)\n\n# Set the y-axis limits\nax.set_ylim(0, 3)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(-6, 7, 2))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 4, 1))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['-6', '-4', '-2', '0', '2', '4', '6'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1', '2', '3'])\n\n# Set the x-axis grid lines\nax.grid(axis='x', linestyle='--', linewidth=0.5)\n\n# Set the y-axis grid lines\nax.grid(axis='y', linestyle='--', linewidth=0.5)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', colors='blue')\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', colors='green')\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', direction='inout')\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', direction='inout')\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', length=10)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', length=10)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', width=2)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', width=2)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', pad=10)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', pad=10)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='major', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='major', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='minor', bottom=False, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='minor', bottom=False, top=False, left=False, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', length=10, width=2, colors='blue', direction='inout', pad=10, rotation=45)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='both', length=10, width=2, colors='green', direction='inout', pad=10, rotation=45)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False"}
{"file": "dataset/ori_500/CB_22.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the first plot\nfig1, ax1 = plt.subplots(figsize=(10, 8))\nax1.plot([1600, 1625, 1650, 1675, 1700, 1725], [0.005, 0.012, 0.015, 0.017, 0.019, 0.022], 'b-')\nax1.set_title('Total')\nax1.set_xlabel('Daily reward (Ether)')\nax1.set_ylabel('Probability')\n\n# Create a figure and axis for the second plot\nfig2, ax2 = plt.subplots(figsize=(10, 8))\nax2.plot([1600, 1625, 1650, 1675, 1700, 1725], [0.005, 0.012, 0.015, 0.017, 0.019, 0.022], 'g-')\nax2.set_title('Proposer')\nax2.set_xlabel('Daily reward (Ether)')\nax2.set_ylabel('Probability')\n\n# Create a figure and axis for the third plot\nfig3, ax3 = plt.subplots(figsize=(10, 8))\nax3.plot([1600, 1625, 1650, 1675, 1700, 1725], [0.005, 0.012, 0.015, 0.017, 0.019, 0.022], 'r-')\nax3.set_title('Sync committee member')\nax3.set_xlabel('Daily reward (Ether)')\nax3.set_ylabel('Probability')\n\n# Create a figure and axis for the fourth plot\nfig4, ax4 = plt.subplots(figsize=(10, 8))\nax4.plot([1600, 1625, 1650, 1675, 1700, 1725], [0.005, 0.012, 0.015, 0.017, 0.019, 0.022], 'y-')\nax4.set_title('Attestor')\nax4.set_xlabel('Daily reward (Ether)')\nax4.set_ylabel('Probability')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_23.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 8.0))\n\n# Set the title of the plot\nax.set_title('LlaSMol vs Trainable Parameter Size')\n\n# Set the x-axis label\nax.set_xlabel('Trainable Parameter Size (M)')\n\n# Set the y-axis label\nax.set_ylabel('RMSE')\n\n# Set the x-axis limits\nax.set_xlim(0, 150)\n\n# Set the y-axis limits\nax.set_ylim(1.15, 1.35)\n\n# Set the x-axis ticks\nax.set_xticks([0, 50, 100, 150])\n\n# Set the y-axis ticks\nax.set_yticks([1.15, 1.25, 1.35])\n\n# Add a legend to the plot\nax.legend()\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='red')\n\n# Add a line plot to the plot\nax.plot([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='blue')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(40, 160)\n\n# Set the y-axis limits\nax.set_ylim(0, 0.15)\n\n# Set the x-axis label\nax.set_xlabel('Execution Duration (clock)')\n\n# Set the y-axis label\nax.set_ylabel('Distribution')\n\n# Set the title of the plot\nax.set_title('Execution Time Distribution')\n\n# Create a scatter plot for each data point\nax.scatter([40, 60, 80, 100, 120, 140, 160], [0.05, 0.07, 0.09, 0.11, 0.13, 0.15, 0.17], color='blue')\n\n# Create a line plot for the distribution\nax.plot([40, 60, 80, 100, 120, 140, 160], [0.05, 0.07, 0.09, 0.11, 0.13, 0.15, 0.17], color='red')\n\n# Add a legend\nax.legend(['Data Points', 'Distribution'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_25.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the graph\nyears = ['15x15', '20x15', '20x20', '30x20', '40x20', '50x20', '60x20']\nsales = [18, 14, 13, 12, 9, 7, 5]\nprofit = [1000, 1200, 1400, 1600, 1800, 2000, 2200]\nimprovement = [15, 14, 13, 12, 11, 10, 9]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Plot the data\nax.plot(years, sales, color='red')\nax.plot(years, profit, color='blue')\nax.plot(years, improvement, color='green')\n\n# Set the title and labels\nax.set_title('Car Sales and Profit Over Time')\nax.set_xlabel('Year')\nax.set_ylabel('Sales/Profit')\n\n# Add a legend\nax.legend(['Sales', 'Profit', 'Improvement'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_26.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 8))\n\n# Set the title of the plot\nax.set_title('Algorithm Performance Comparison')\n\n# Set the x-axis label\nax.set_xlabel('Algorithms')\n\n# Set the y-axis label\nax.set_ylabel('Time Cost (Seconds)')\n\n# Create a list of algorithms\nalgorithms = ['SEAC', 'CTCO']\n\n# Create a list of time costs\ntime_costs = [np.random.rand(10) * 4 for _ in range(len(algorithms))]\n\n# Create a list of colors\ncolors = ['green', 'orange']\n\n# Create a list of markers\nmarkers = ['o', 's']\n\n# Create a list of line styles\nlinestyles = ['-', '--']\n\n# Create a list of line widths\nlinewidths = [1, 2]\n\n# Create a list of line markers\nlinemarkers = ['None', 'None']\n\n# Create a list of line marker sizes\nlinemarker_sizes = [None, None]\n\n# Create a list of line marker edge colors\nlinemarker_edge_colors = [None, None]\n\n# Create a list of line marker face colors\nlinemarker_face_colors = [None, None]\n\n# Create a list of line marker hatch patterns\nlinemarker_hatch_patterns = [None, None]\n\n# Create a list of line marker fill styles\nlinemarker_fill_styles = [None, None]\n\n# Create a list of line marker antialiased values\nlinemarker_antialiased_values = [None, None]\n\n# Create a list of line marker join styles\nlinemarker_join_styles = [None, None]\n\n# Create a list of line marker cap styles\nlinemarker_cap_styles = [None, None]\n\n# Create a list of line marker miter limits\nlinemarker_miter_limits = [None, None]\n\n# Create a list of line marker dash patterns\nlinemarker_dash_patterns = [None, None]\n\n# Create a list of line marker dash offsets\nlinemarker_dash_offsets = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list of line marker dash join styles\nlinemarker_dash_join_styles = [None, None]\n\n# Create a list of line marker dash miter limits\nlinemarker_dash_miter_limits = [None, None]\n\n# Create a list of line marker dash cap styles\nlinemarker_dash_cap_styles = [None, None]\n\n# Create a list"}
{"file": "dataset/ori_500/CB_27.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the graph\nax.set_title('Stock Price Trend')\n\n# Set the x-axis label\nax.set_xlabel('Time to Market (Days)')\n\n# Set the y-axis label\nax.set_ylabel('Stock Price ($)')\n\n# Set the x-axis limits\nax.set_xlim(0, 120)\n\n# Set the y-axis limits\nax.set_ylim(40, 120)\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines"}
{"file": "dataset/ori_500/CB_28.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Set the title of the plot\nax.set_title('Era')\n\n# Set the x-axis label\nax.set_xlabel('Density')\n\n# Set the y-axis label\nax.set_ylabel('Year')\n\n# Create a rectangle for the first era\nrect1 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect1)\n\n# Create a rectangle for the second era\nrect2 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect2)\n\n# Create a rectangle for the third era\nrect3 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect3)\n\n# Create a rectangle for the fourth era\nrect4 = plt.Rectangle((0, 0), 1, 1, fc='blue')\nax.add_patch(rect4)\n\n# Create a rectangle for the fifth era\nrect5 = plt.Rectangle((0, 0), 1, 1, fc='yellow')\nax.add_patch(rect5)\n\n# Create a rectangle for the sixth era\nrect6 = plt.Rectangle((0, 0), 1, 1, fc='red')\nax.add_patch(rect6)\n\n# Create a rectangle for the seventh era\nrect7 = plt.Rectangle((0, 0), 1, 1, fc='purple')\nax.add_patch(rect7)\n\n# Create a rectangle for the eighth era\nrect8 = plt.Rectangle((0, 0), 1, 1, fc='pink')\nax.add_patch(rect8)\n\n# Create a rectangle for the ninth era\nrect9 = plt.Rectangle((0, 0), 1, 1, fc='cyan')\nax.add_patch(rect9)\n\n# Create a rectangle for the tenth era\nrect10 = plt.Rectangle((0, 0), 1, 1, fc='grey')\nax.add_patch(rect10)\n\n# Create a rectangle for the eleventh era\nrect11 = plt.Rectangle((0, 0), 1, 1, fc='black')\nax.add_patch(rect11)\n\n# Create a rectangle for the twelfth era\nrect12 = plt.Rectangle((0, 0), 1, 1, fc='white')\nax.add_patch(rect12)\n\n# Create a rectangle for the thirteenth era\nrect13 = plt.Rectangle((0, 0), 1, 1, fc='silver')\nax.add_patch(rect13)\n\n# Create a rectangle for the fourteenth era\nrect14 = plt.Rectangle((0, 0), 1, 1, fc='gold')\nax.add_patch(rect14)\n\n# Create a rectangle for the fifteenth era\nrect15 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect15)\n\n# Create a rectangle for the sixteenth era\nrect16 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect16)\n\n# Create a rectangle for the seventeenth era\nrect17 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect17)\n\n# Create a rectangle for the eighteenth era\nrect18 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect18)\n\n# Create a rectangle for the nineteenth era\nrect19 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect19)\n\n# Create a rectangle for the twentieth era\nrect20 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect20)\n\n# Create a rectangle for the twenty-first era\nrect21 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect21)\n\n# Create a rectangle for the twenty-second era\nrect22 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect22)\n\n# Create a rectangle for the twenty-third era\nrect23 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect23)\n\n# Create a rectangle for the twenty-fourth era\nrect24 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect24)\n\n# Create a rectangle for the twenty-fifth era\nrect25 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect25)\n\n# Create a rectangle for the twenty-sixth era\nrect26 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect26)\n\n# Create a rectangle for the twenty-seventh era\nrect27 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect27)\n\n# Create a rectangle for the twenty-eighth era\nrect28 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect28)\n\n# Create a rectangle for the twenty-ninth era\nrect29 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect29)\n\n# Create a rectangle for the thirtieth era\nrect30 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect30)\n\n# Create a rectangle for the thirtieth-first era\nrect31 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect31)\n\n# Create a rectangle for the thirtieth-second era\nrect32 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect32)\n\n# Create a rectangle for the thirtieth-third era\nrect33 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect33)\n\n# Create a rectangle for the thirtieth-fourth era\nrect34 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect34)\n\n# Create a rectangle for the thirtieth-fifth era\nrect35 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect35)\n\n# Create a rectangle for the thirtieth-sixth era\nrect36 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect36)\n\n# Create a rectangle for the thirtieth-seventh era\nrect37 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect37)\n\n# Create a rectangle for the thirtieth-eighth era\nrect38 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect38)\n\n# Create a rectangle for the thirtieth-ninth era\nrect39 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect39)\n\n# Create a rectangle for the thirtieth-tenth era\nrect40 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect40)\n\n# Create a rectangle for the thirtieth-eleventh era\nrect41 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect41)\n\n# Create a rectangle for the thirtieth-twelfth era\nrect42 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect42)\n\n# Create a rectangle for the thirtieth-thirteenth era\nrect43 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect43)\n\n# Create a rectangle for the thirtieth-fourteenth era\nrect44 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect44)\n\n# Create a rectangle for the thirtieth-fifteenth era\nrect45 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect45)\n\n# Create a rectangle for the thirtieth-sixteenth era\nrect46 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect46)\n\n# Create a rectangle for the thirtieth-seventeenth era\nrect47 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect47)\n\n# Create a rectangle for the thirtieth-eighteenth era\nrect48 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect48)\n\n# Create a rectangle for the thirtieth-nineteenth era\nrect49 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect49)\n\n# Create a rectangle for the thirtieth-twentieth era\nrect50 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect50)\n\n# Create a rectangle for the thirtieth-twenty-first era\nrect51 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect51)\n\n# Create a rectangle for the thirtieth-twenty-second era\nrect52 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect52)\n\n# Create a rectangle for the thirtieth-twenty-third era\nrect53 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect53)\n\n# Create a rectangle for the thirtieth-twenty-fourth era\nrect54 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect54)\n\n# Create a rectangle for the thirtieth-twenty-fifth era\nrect55 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect55)\n\n# Create a rectangle for the thirtieth-twenty-sixth era\nrect56 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect56)\n\n# Create a rectangle for the thirtieth-twenty-seventh era\nrect57 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect57)\n\n# Create a rectangle for the thirtieth-twenty-eighth era\nrect58 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect58)\n\n# Create a rectangle for the thirtieth-twenty-ninth era\nrect59 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect59)\n\n# Create a rectangle for the thirtieth-thirtieth era\nrect60 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect60)\n\n# Create a rectangle for the thirtieth-thirtieth-first era\nrect61 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect61)\n\n# Create a rectangle for the thirtieth-thirtieth-second era\nrect62 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect62)\n\n# Create a rectangle for the thirtieth-thirtieth-third era\nrect63 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect63)\n\n# Create a rectangle for the thirtieth-thirtieth-fourth era\nrect64 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect64)\n\n# Create a rectangle for the thirtieth-thirtieth-fifteenth era\nrect65 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect65)\n\n# Create a rectangle for the thirtieth-thirtieth-sixteenth era\nrect66 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect66)\n\n# Create a rectangle for the thirtieth-thirtieth-seventeenth era\nrect67 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect67)\n\n# Create a rectangle for the thirtieth-thirtieth-eighteenth era\nrect68 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect68)\n\n# Create a rectangle for the thirtieth-thirtieth-nineteenth era\nrect69 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect69)\n\n# Create a rectangle for the thirtieth-thirtieth-twentieth era\nrect70 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect70)\n\n# Create a rectangle for the thirtieth-thirtieth-twenty-first era\nrect71 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect71)\n\n# Create a rectangle for the thirtieth-thirtieth-twenty-second era\nrect72 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect72)\n\n# Create a rectangle for the thirtieth-thirtieth-twenty-third era\nrect73 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect73)\n\n# Create a rectangle for the thirtieth-thirtieth-twenty-fourth era\nrect74 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect74)\n\n# Create a rectangle for the thirtieth-thirtieth-twenty-fifth era\nrect75 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect75)\n\n# Create a rectangle for the thirtieth-thirtieth-twenty-sixth era\nrect76 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect76)\n\n# Create a rectangle for the thirtieth-thirtieth-twenty-seventh era\nrect77 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect77)\n\n# Create a rectangle for the thirtieth-thirtieth-twenty-eighth era\nrect78 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect78)\n\n# Create a rectangle for the thirtieth-thirtieth-twenty-ninth era\nrect79 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect79)\n\n# Create a rectangle for the thirtieth-thirtieth-thirtieth era\nrect80 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect80)\n\n# Create a rectangle for the thirtieth-thirtieth-thirtieth-first era\nrect81 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect81)\n\n# Create a rectangle for the thirtieth-thirtieth-thirtieth-second era\nrect82 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect82)\n\n# Create a rectangle for the thirtieth-thirtieth-thirtieth-third era\nrect83 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect83)\n\n# Create a rectangle for the thirtieth-thirtieth-thirtieth-fourth era\nrect84 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect84)\n\n# Create a rectangle for the thirtieth-thirtieth-thirtieth-fifteenth era\nrect85 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect85)\n\n# Create a rectangle for the thirtieth-thirtieth-thirtieth-sixteenth era\nrect86 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect86)\n\n# Create a rectangle for the thirtieth-thirtieth-thirtieth-seventeenth era\nrect87 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect87)\n\n# Create a rectangle for the thirtieth-thirtieth-thirtieth-eighteenth era\nrect88 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect88)\n\n# Create a rectangle for the thirtieth-thirtieth-thirtieth-nineteenth era\nrect89 = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect89)\n\n# Create a rectangle for the thirtieth-thirtieth-thirtieth-twentieth era\nrect90 = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect90)\n\n# Create a rectangle for the thirtieth-thirtieth-thirtieth-twenty-first era\nrect91 = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect91)\n\n# Create a rectangle for the thirtieth-thirtieth-thirtieth-twenty-second era\nrect92 = plt"}
{"file": "dataset/ori_500/CB_29.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the graph\nax.set_title('Patent Filings in 2013')\n\n# Set the x-axis label\nax.set_xlabel('Number of Patents')\n\n# Set the y-axis label\nax.set_ylabel('Year')\n\n# Create a list of technology fields\ntech_fields = ['Nano', 'Quantum Computing', 'Cybersecurity', 'VR', 'Biotech', 'Robotics', 'IoT', 'Cloud Computing', 'Blockchain', 'AI']\n\n# Create a list of years\nyears = [2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022]\n\n# Create a list of colors for each technology field\ncolors = ['cyan', 'blue', 'green', 'orange', 'red', 'purple', 'pink', 'brown', 'grey', 'black']\n\n# Create a list of values for each technology field\nvalues = [20, 10, 40, 30, 60, 70, 90, 50, 100, 120]\n\n# Create a list of values for each year\nvalues_2013 = [20, 10, 40, 30, 60, 70, 90, 50, 100, 120]\nvalues_2014 = [25, 15, 45, 35, 65, 75, 95, 55, 105, 125]\nvalues_2015 = [30, 20, 50, 40, 70, 80, 100, 60, 110, 130]\nvalues_2016 = [35, 25, 55, 45, 75, 85, 105, 65, 115, 135]\nvalues_2017 = [40, 30, 60, 50, 80, 90, 110, 70, 120, 140]\nvalues_2018 = [45, 35, 65, 55, 85, 95, 115, 75, 125, 145]\nvalues_2019 = [50, 40, 70, 60, 90, 100, 120, 80, 130, 150]\nvalues_2020 = [55, 45, 75, 65, 95, 105, 125, 85, 135, 155]\nvalues_2021 = [60, 50, 80, 70, 100, 110, 130, 90, 140, 160]\nvalues_2022 = [65, 55, 85, 75, 105, 115, 135, 95, 145, 165]\n\n# Plot the data\nfor i in range(len(tech_fields)):\n    ax.plot(years, [values_2013[i], values_2014[i], values_2015[i], values_2016[i], values_2017[i], values_2018[i], values_2019[i], values_2020[i], values_2021[i], values_2022[i]], color=colors[i])\n\n# Add a legend\nax.legend(tech_fields)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 8))\n\n# Set the color of the background\nax.set_facecolor('lightpink')\n\n# Set the title of the graph\nax.set_title('Calibration Curve', fontsize=24)\n\n# Set the x-axis label\nax.set_xlabel('Predicted Probability', fontsize=18)\n\n# Set the y-axis label\nax.set_ylabel('Fraction of Positives', fontsize=18)\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 1)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 1.1, 0.1))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 1.1, 0.1))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1.0'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1.0'])\n\n# Set the x-axis grid lines\nax.xaxis.grid(True)\n\n# Set the y-axis grid lines\nax.yaxis.grid(True)\n\n# Set the x-axis grid line style\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the y-axis grid line style\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(lin"}
{"file": "dataset/ori_500/CB_30.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data for the graph\nquarters = ['Q1', 'Q2', 'Q3', 'Q4']\nearnings = [250, 300, 350, 400]\ngrowth = [10, 20, 30, 40]\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Plot the data\nax.plot(quarters, earnings, 'r-')\nax.plot(quarters, growth, 'b-')\n\n# Set the title and labels\nax.set_title('Earnings and Growth Over Time')\nax.set_xlabel('Quarter')\nax.set_ylabel('Earnings ($1000s) / Growth (%)')\n\n# Add a legend\nax.legend(['Earnings', 'Growth'])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the plot\nax.set_title('AI Model Performance')\n\n# Set the x-axis label\nax.set_xlabel('Methods')\n\n# Set the y-axis label\nax.set_ylabel('Normalized Requirements (lower is better)')\n\n# Define the data for the plot\nx = ['Linear probing', 'BitFit', 'Prompt tuning', 'Full finetuning', 'LoRA', 'Ours (LoSA)']\ny = [72, 74, 76, 78, 80, 82]\n\n# Plot the data\nax.plot(x, y, marker='o', linestyle='-')\n\n# Add a legend\nax.legend(['Accuracy'])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Team Performance')\n\n# Set the x-axis label\nax.set_xlabel('TM-score')\n\n# Set the y-axis label\nax.set_ylabel('Sequident')\n\n# Create a scatter plot\nax.scatter(np.random.rand(100), np.random.rand(100), color='blue')\n\n# Create a bar chart\nax.bar(['Player 1', 'Player 2', 'Player 3'], [np.random.rand(), np.random.rand(), np.random.rand()], color='blue')\n\n# Create a line graph\nax.plot([0, 1, 2, 3, 4, 5], [np.random.rand(), np.random.rand(), np.random.rand(), np.random.rand(), np.random.rand(), np.random.rand()], color='blue')\n\n# Create a pie chart\nax.pie([np.random.rand(), np.random.rand()], labels=['Player 1', 'Player 2'], colors=['blue', 'red'])\n\n# Create a histogram\nax.hist(np.random.rand(100), bins=10, color='blue')\n\n# Create a heatmap\nax.imshow(np.random.rand(10, 10), cmap='Blues')\n\n# Create a contour plot\nx = np.linspace(-1, 1, 100)\ny = np.linspace(-1, 1, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(X**2 + Y**2)\nCS = ax.contourf(X, Y, Z, cmap='Blues')\n\n# Create a scatter plot with a legend\nax.scatter(np.random.rand(100), np.random.rand(100), color='blue', label='Player 1')\nax.scatter(np.random.rand(100), np.random.rand(100), color='red', label='Player 2')\nax.legend()\n\n# Create a scatter plot with a colorbar\nc = ax.scatter(np.random.rand(100), np.random.rand(100), c=np.random.rand(100), cmap='Blues')\nfig.colorbar(c)\n\n# Create a scatter plot with a colormap\nc = ax.scatter(np.random.rand(100), np.random.rand(100), c=np.random.rand(100), cmap='Blues')\nfig.colorbar(c)\n\n# Create a scatter plot with a colormap and a colorbar\nc = ax.scatter(np.random.rand(100), np.random.rand(100), c=np.random.rand(100), cmap='Blues')\nfig.colorbar(c)\n\n# Create a scatter plot with a colormap and a colorbar and a legend\nc = ax.scatter(np.random.rand(100), np.random.rand(100), c=np.random.rand(100), cmap='Blues')\nfig.colorbar(c)\nax.legend()\n\n# Create a scatter plot with a colormap and a colorbar and a legend and a title\nc = ax.scatter(np.random.rand(100), np.random.rand(100), c=np.random.rand(100), cmap='Blues')\nfig.colorbar(c)\nax.legend()\nax.set_title('Team Performance')\n\n# Create a scatter plot with a colormap and a colorbar and a legend and a title and a subtitle\nc = ax.scatter(np.random.rand(100), np.random.rand(100), c=np.random.rand(100), cmap='Blues')\nfig.colorbar(c)\nax.legend()\nax.set_title('Team Performance')\nax.set_xlabel('TM-score')\nax.set_ylabel('Sequident')\n\n# Create a scatter plot with a colormap and a colorbar and a legend and a title and a subtitle and a caption\nc = ax.scatter(np.random.rand(100), np.random.rand(100), c=np.random.rand(100), cmap='Blues')\nfig.colorbar(c)\nax.legend()\nax.set_title('Team Performance')\nax.set_xlabel('TM-score')\nax.set_ylabel('Sequident')\nax.text(0.5, 0.5, 'This is a caption', transform=ax.transAxes, fontsize=12, verticalalignment='center')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Set the title of the plot\nax.set_title('Fish Population Data', fontsize=20)\n\n# Set the x-axis label\nax.set_xlabel('Relative Cluster Size', fontsize=15)\n\n# Set the y-axis label\nax.set_ylabel('Average Norm of Difference Vectors', fontsize=15)\n\n# Set the x-axis limits\nax.set_xlim(25, 45)\n\n# Set the y-axis limits\nax.set_ylim(-10, 40)\n\n# Create a scatter plot with random data\nx = np.random.rand(100)\ny = np.random.rand(100)\nax.scatter(x, y, c='red')\n\n# Create a second scatter plot with random data\nx = np.random.rand(100)\ny = np.random.rand(100)\nax.scatter(x, y, c='green')\n\n# Create a third scatter plot with random data\nx = np.random.rand(100)\ny = np.random.rand(100)\nax.scatter(x, y, c='blue')\n\n# Add a legend to the plot\nax.legend(['Species 1', 'Species 2', 'Species 3'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis and y-axis limits\nax.set_xlim(0, 128)\nax.set_ylim(0, 128)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('HC_first (after aging)')\nax.set_ylabel('HC_first (before aging)')\n\n# Create a scatter plot with blue circles\nax.scatter([99.6, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90.9, 99.5, 96.0, 92.3, 90.9, 92.5, 91.3, 90."}
{"file": "dataset/ori_500/CB_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Set the title of the plot\nax.set_title('TMS Score vs Sequence ID')\n\n# Set the x-axis label\nax.set_xlabel('Sequence ID')\n\n# Set the y-axis label\nax.set_ylabel('TMS Score')\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 1)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 1.1, 0.1))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 1.1, 0.1))\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n#"}
{"file": "dataset/ori_500/CB_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nyears = [4211, 2411, 2141, 1124]\nvalues = [0.9628, 0.9604, 0.9624, 0.9592]\nsums = [0.9641, 0.9641, 0.9624, 0.9561]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Plot the data\nax.plot(years, values, 'b-o', label='Values')\nax.plot(years, sums, 'r-o', label='Sum (SRCC + PLCC)')\n\n# Set the title and labels\nax.set_title('SRCC and PLCC values with their sum for different modes')\nax.set_xlabel('Modes')\nax.set_ylabel('Values')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(2, 2, figsize=(10.0, 3.0))\n\n# Set the title for each subplot\naxs[0, 0].set_title('IIID-1 SDMT')\naxs[0, 1].set_title('NIID-2 SDST')\naxs[1, 0].set_title('NIID-4 UBSDT')\naxs[1, 1].set_title('NIID-5 UBSDST')\n\n# Create a color map for the plots\ncmap = plt.get_cmap('Blues')\n\n# Create a color bar for the plots\ncbar = fig.colorbar(cmap(np.linspace(0, 1, 10)), ax=axs.ravel().tolist())\n\n# Add a legend to the plot\nfig.legend(['Depth', 'Edge', 'Normals', 'Semseg'], loc='upper right')\n\n# Plot the data\nfor i in range(2):\n    for j in range(2):\n        axs[i, j].plot([0, 1, 2, 3], [0, 1, 2, 3], color=cmap(i*0.5 + j*0.25))\n        axs[i, j].scatter([0, 1, 2, 3], [0, 1, 2, 3], color=cmap(i*0.5 + j*0.25))\n\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Compact Spiral with Elliptical Hollow Center')\n\n# Create a color bar\ncbar = fig.colorbar(ax)\n\n# Set the color map\ncbar.set_cmap('Blues')\n\n# Set the color bar label\ncbar.set_label('Intensity')\n\n# Set the color bar ticks\ncbar.set_ticks([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n\n# Set the color bar tick labels\ncbar.set_ticklabels(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'], rotation=90)\n\n# Set the color bar position\ncbar.ax.set_position([0.05, 0.1, 0.02, 0.8])\n\n# Set the color bar aspect\ncbar.ax.set_aspect(10)\n\n# Set the color bar label position\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90)\n\n# Set the color bar label font size\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12)\n\n# Set the color bar label font weight\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold')\n\n# Set the color bar label font style\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic')\n\n# Set the color bar label font family\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif')\n\n# Set the color bar label font color\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue')\n\n# Set the color bar label font alpha\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5)\n\n# Set the color bar label font rotation\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45)\n\n# Set the color bar label font vertical alignment\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45, va='top')\n\n# Set the color bar label font horizontal alignment\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45, va='top', ha='left')\n\n# Set the color bar label font line height\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45, va='top', ha='left', line_height=1.5)\n\n# Set the color bar label font line spacing\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45, va='top', ha='left', line_height=1.5, line_spacing=1.2)\n\n# Set the color bar label font line width\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45, va='top', ha='left', line_height=1.5, line_spacing=1.2, line_width=1.0)\n\n# Set the color bar label font line join style\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45, va='top', ha='left', line_height=1.5, line_spacing=1.2, line_width=1.0, line_join_style='round')\n\n# Set the color bar label font line cap style\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45, va='top', ha='left', line_height=1.5, line_spacing=1.2, line_width=1.0, line_join_style='round', line_cap_style='round')\n\n# Set the color bar label font line dash pattern\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45, va='top', ha='left', line_height=1.5, line_spacing=1.2, line_width=1.0, line_join_style='round', line_cap_style='round', line_dash_pattern=[1, 2])\n\n# Set the color bar label font line dash offset\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45, va='top', ha='left', line_height=1.5, line_spacing=1.2, line_width=1.0, line_join_style='round', line_cap_style='round', line_dash_pattern=[1, 2], line_dash_offset=1.0)\n\n# Set the color bar label font line miter limit\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45, va='top', ha='left', line_height=1.5, line_spacing=1.2, line_width=1.0, line_join_style='round', line_cap_style='round', line_dash_pattern=[1, 2], line_dash_offset=1.0, line_miter_limit=10.0)\n\n# Set the color bar label font line solid cap style\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45, va='top', ha='left', line_height=1.5, line_spacing=1.2, line_width=1.0, line_join_style='round', line_cap_style='round', line_dash_pattern=[1, 2], line_dash_offset=1.0, line_miter_limit=10.0, line_solid_cap_style='butt')\n\n# Set the color bar label font line solid join style\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45, va='top', ha='left', line_height=1.5, line_spacing=1.2, line_width=1.0, line_join_style='round', line_cap_style='round', line_dash_pattern=[1, 2], line_dash_offset=1.0, line_miter_limit=10.0, line_solid_cap_style='butt', line_solid_join_style='miter')\n\n# Set the color bar label font line solid dash pattern\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45, va='top', ha='left', line_height=1.5, line_spacing=1.2, line_width=1.0, line_join_style='round', line_cap_style='round', line_dash_pattern=[1, 2], line_dash_offset=1.0, line_miter_limit=10.0, line_solid_cap_style='butt', line_solid_join_style='miter', line_solid_dash_pattern=[1, 2])\n\n# Set the color bar label font line solid dash offset\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45, va='top', ha='left', line_height=1.5, line_spacing=1.2, line_width=1.0, line_join_style='round', line_cap_style='round', line_dash_pattern=[1, 2], line_dash_offset=1.0, line_miter_limit=10.0, line_solid_cap_style='butt', line_solid_join_style='miter', line_solid_dash_pattern=[1, 2], line_solid_dash_offset=1.0)\n\n# Set the color bar label font line solid miter limit\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45, va='top', ha='left', line_height=1.5, line_spacing=1.2, line_width=1.0, line_join_style='round', line_cap_style='round', line_dash_pattern=[1, 2], line_dash_offset=1.0, line_miter_limit=10.0, line_solid_cap_style='butt', line_solid_join_style='miter', line_solid_dash_pattern=[1, 2], line_solid_dash_offset=1.0, line_solid_miter_limit=10.0)\n\n# Set the color bar label font line solid solid cap style\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45, va='top', ha='left', line_height=1.5, line_spacing=1.2, line_width=1.0, line_join_style='round', line_cap_style='round', line_dash_pattern=[1, 2], line_dash_offset=1.0, line_miter_limit=10.0, line_solid_cap_style='butt', line_solid_join_style='miter', line_solid_dash_pattern=[1, 2], line_solid_dash_offset=1.0, line_solid_miter_limit=10.0, line_solid_solid_cap_style='butt')\n\n# Set the color bar label font line solid solid join style\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45, va='top', ha='left', line_height=1.5, line_spacing=1.2, line_width=1.0, line_join_style='round', line_cap_style='round', line_dash_pattern=[1, 2], line_dash_offset=1.0, line_miter_limit=10.0, line_solid_cap_style='butt', line_solid_join_style='miter', line_solid_dash_pattern=[1, 2], line_solid_dash_offset=1.0, line_solid_miter_limit=10.0, line_solid_solid_cap_style='butt', line_solid_solid_join_style='miter')\n\n# Set the color bar label font line solid solid dash pattern\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45, va='top', ha='left', line_height=1.5, line_spacing=1.2, line_width=1.0, line_join_style='round', line_cap_style='round', line_dash_pattern=[1, 2], line_dash_offset=1.0, line_miter_limit=10.0, line_solid_cap_style='butt', line_solid_join_style='miter', line_solid_dash_pattern=[1, 2], line_solid_dash_offset=1.0, line_solid_miter_limit=10.0, line_solid_solid_cap_style='butt', line_solid_solid_join_style='miter', line_solid_solid_dash_pattern=[1, 2])\n\n# Set the color bar label font line solid solid dash offset\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45, va='top', ha='left', line_height=1.5, line_spacing=1.2, line_width=1.0, line_join_style='round', line_cap_style='round', line_dash_pattern=[1, 2], line_dash_offset=1.0, line_miter_limit=10.0, line_solid_cap_style='butt', line_solid_join_style='miter', line_solid_dash_pattern=[1, 2], line_solid_dash_offset=1.0, line_solid_miter_limit=10.0, line_solid_solid_cap_style='butt', line_solid_solid_join_style='miter', line_solid_solid_dash_pattern=[1, 2], line_solid_solid_dash_offset=1.0)\n\n# Set the color bar label font line solid solid miter limit\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45, va='top', ha='left', line_height=1.5, line_spacing=1.2, line_width=1.0, line_join_style='round', line_cap_style='round', line_dash_pattern=[1, 2], line_dash_offset=1.0, line_miter_limit=10.0, line_solid_cap_style='butt', line_solid_join_style='miter', line_solid_dash_pattern=[1, 2], line_solid_dash_offset=1.0, line_solid_miter_limit=10.0, line_solid_solid_cap_style='butt', line_solid_solid_join_style='miter', line_solid_solid_dash_pattern=[1, 2], line_solid_solid_dash_offset=1.0, line_solid_solid_miter_limit=10.0)\n\n# Set the color bar label font line solid solid solid cap style\ncbar.ax.text(-0.1, 0.5, 'Intensity', va='center', ha='right', rotation=90, fontsize=12, fontweight='bold', fontstyle='italic', fontfamily='serif', color='blue', alpha=0.5, rotation=45, va='top', ha='left', line_height=1.5, line_spacing=1.2, line_width=1.0, line_join_style='round', line_cap_style='round', line_dash_pattern=[1, 2], line_dash_offset=1.0, line_miter_limit=10.0, line_solid_cap_style='butt', line_solid_join_style='miter', line_solid_dash_pattern=[1, 2], line_solid_dash_offset=1.0, line_solid_miter_limit=10.0, line_solid_solid_cap_style='butt', line_solid_solid_join_style='miter', line_solid_solid_dash_pattern=[1, 2], line"}
{"file": "dataset/ori_500/HR_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Set the title of the plot\nax.set_title('DAXPY memory bandwidth')\n\n# Set the x-axis label\nax.set_xlabel('Flops/s')\n\n# Set the y-axis label\nax.set_ylabel('Flops/byte')\n\n# Set the x-axis limits\nax.set_xlim(10**-1, 10**1)\n\n# Set the y-axis limits\nax.set_ylim(10**10, 10**12)\n\n# Set the x-axis ticks\nax.set_xticks([10**-1, 10**0, 10**1])\n\n# Set the y-axis ticks\nax.set_yticks([10**10, 10**11, 10**12])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['10^-1', '10^0', '10^1'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['10^10', '10^11', '10^12'])\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_color('none')\nax.spines['right'].set_color('none')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightblue')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the legend\nax.legend(loc='upper left')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(0.45, 0.75)\n\n# Set the y-axis limits\nax.set_ylim(-0.01, 0.05)\n\n# Set the x-axis ticks\nax.set_xticks([0.5, 0.6, 0.7])\n\n# Set the y-axis ticks\nax.set_yticks([-0.01, 0, 0.01, 0.02, 0.03, 0.04, 0.05])\n\n# Set the x-axis labels\nax.set_xticklabels(['f(x) = 0.50', 'f(x) = 0.60', 'f(x) = 0.70'])\n\n# Set the y-axis labels\nax.set_yticklabels(['-0.01', '0', '0.01', '0.02', '0.03', '0.04', '0.05'])\n\n# Set the title of the plot\nax.set_title('f(x) = 0.50')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('red')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('blue')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the text\nax.text(0.5, 0.05, 'f(x) = 0.50', fontsize=12, color='purple')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Create a circle for the logo\ncircle = plt.Circle((0.5, 0.5), 0.4, color='pink')\nax.add_artist(circle)\n\n# Create a rectangle for the chatbot\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='orange')\nax.add_artist(rect)\n\n# Create a rectangle for the chatbot\nrect = plt.Rectangle((0.7, 0.2), 0.2, 0.6, color='green')\nax.add_artist(rect)\n\n# Add text for the logo\nax.text(0.5, 0.5, 'CigaR', ha='center', va='center', fontsize=12, color='black')\n\n# Add text for the chatbot\nax.text(0.35, 0.35, 'ChatRepair', ha='center', va='center', fontsize=12, color='black')\n\n# Set the aspect ratio of the plot to be equal\nax.set_aspect('equal')\n\n# Remove the axes\nax.axis('off')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Qwen-VL-Max')\n\n# Create a color map for the levels\ncmap = plt.get_cmap('tab20')\n\n# Create a list of colors for the levels\ncolors = [cmap(i) for i in range(10)]\n\n# Create a list of labels for the levels\nlabels = ['Level 1', 'Level 2', 'Level 3', 'Level 4', 'Level 5']\n\n# Create a list of values for the levels\nvalues = [10, 20, 30, 40, 50]\n\n# Create a bar chart for the levels\nbars = ax.bar(labels, values, color=colors)\n\n# Add a legend to the plot\nax.legend(bars, labels)\n\n# Set the x-axis label\nax.set_xlabel('Levels')\n\n# Set the y-axis label\nax.set_ylabel('Values')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 2, figsize=(10, 4))\n\n# Define the data for the plots\nx = np.logspace(1, 2, 100)\ny1 = 10**np.linspace(-1, -3, 100)\ny2 = 10**np.linspace(-2, -4, 100)\ny3 = 10**np.linspace(-3, -5, 100)\n\n# Plot the data on the first subplot\naxs[0].plot(x, y1, 'b-')\naxs[0].plot(x, y2, 'g-')\naxs[0].plot(x, y3, 'r-')\naxs[0].set_xscale('log')\naxs[0].set_yscale('log')\naxs[0].set_xlabel('number of matvecs m')\naxs[0].set_ylabel('approximation error ||A - \\u03A6\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u208F\\u"}
{"file": "dataset/ori_500/HR_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Draw a circle\ncircle = plt.Circle((0.5, 0.5), 0.4, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle\nrectangle = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='lightgreen')\nax.add_artist(rectangle)\n\n# Draw a triangle\ntriangle = plt.Polygon([[0.3, 0.7], [0.7, 0.7], [0.5, 0.9]], color='lightblue')\nax.add_artist(triangle)\n\n# Draw a star\nstar = plt.Polygon([[0.5, 0.1], [0.4, 0.3], [0.6, 0.3], [0.5, 0.5], [0.4, 0.7], [0.6, 0.7]], color='lightcoral')\nax.add_artist(star)\n\n# Draw a pentagon\npentagon = plt.Polygon([[0.2, 0.2], [0.4, 0.4], [0.6, 0.4], [0.5, 0.6], [0.3, 0.6]], color='lightsalmon')\nax.add_artist(pentagon)\n\n# Set the aspect ratio to be equal so circles look round\nax.set_aspect('equal')\n\n# Set the limits of the plot\nax.set_xlim(0, 1)\nax.set_ylim(0, 1)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Create a rectangle with a green color\nrect1 = plt.Rectangle((0, 0), 10, 10, color='green')\nax.add_patch(rect1)\n\n# Create a rectangle with an orange color\nrect2 = plt.Rectangle((0, 0), 10, 10, color='orange')\nax.add_patch(rect2)\n\n# Create a rectangle with a blue color\nrect3 = plt.Rectangle((0, 0), 10, 10, color='blue')\nax.add_patch(rect3)\n\n# Set the limits of the x and y axes\nax.set_xlim(-4, 140)\nax.set_ylim(-4, 140)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(7, 5))\n\n# Set the title of the plot\nax.set_title('Uncertainty in Thermal Conductivity Measurements')\n\n# Set the x-axis label\nax.set_xlabel('Sample Number')\n\n# Set the y-axis label\nax.set_ylabel('Thermal Conductivity (W/m.K)')\n\n# Create a bar chart with sample data\nx = [0, 1, 2, 3, 4, 5, 6]\ny = [2.5, 3.5, 3.0, 3.5, 4.0, 4.5, 4.0]\nax.bar(x, y, color='skyblue')\n\n# Add a grid to the plot\nax.grid(True)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(7, 5))\n\n# Set the title of the plot\nax.set_title('Scores by number of game and players')\n\n# Set the x-axis label\nax.set_xlabel('Games')\n\n# Set the y-axis label\nax.set_ylabel('Scores')\n\n# Define the data for the plot\ngames = ['I', 'II', 'III', 'IV', 'V']\nscores = [28, 20, 10, 20, 28]\nplayers = ['Player A', 'Player B']\n\n# Create a bar chart with the scores\nbars = ax.bar(games, scores, color='green')\n\n# Add labels to the bars\nfor bar in bars:\n    yval = bar.get_height()\n    ax.text(bar.get_x() + bar.get_width()/2, yval, int(yval), ha='center', va='bottom')\n\n# Add a legend to the plot\nax.legend(players)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Create a circle with a black border\ncircle = plt.Circle((3, 3), 1, color='black', fill=False)\nax.add_artist(circle)\n\n# Create a rectangle with a red border\nrectangle = plt.Rectangle((2, 2), 2, 2, color='red', fill=False)\nax.add_artist(rectangle)\n\n# Create a line graph with a blue border\nline_graph = plt.Line2D([0, 1, 2, 3], [0, 1, 2, 3], color='blue')\nax.add_line(line_graph)\n\n# Create a scatter plot with a green border\nscatter_plot = plt.scatter([0, 1, 2, 3], [0, 1, 2, 3], color='green')\nax.add_collection(scatter_plot)\n\n# Create a bar chart with a yellow border\nbar_chart = plt.bar([0, 1, 2, 3], [0, 1, 2, 3], color='yellow')\nax.add_collection(bar_chart)\n\n# Create a pie chart with a purple border\npie_chart = plt.pie([0, 1, 2, 3], colors=['purple', 'orange', 'green', 'blue'])\nax.add_collection(pie_chart)\n\n# Set the limits of the x and y axes\nax.set_xlim(-6, 6)\nax.set_ylim(-6, 6)\n\n# Set the labels for the x and y axes\nax.set_xlabel('Variable 1')\nax.set_ylabel('Variable 2')\n\n# Set the title of the plot\nax.set_title('My Plot')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the plot\nax.set_title('Trustee Scenario')\n\n# Set the x-axis label\nax.set_xlabel('Trustee Scenario')\n\n# Set the y-axis label\nax.set_ylabel('Average Amount Sent ($)')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3, 4])\n\n# Set the x-tick labels\nax.set_xticklabels(['Female Player', 'Male Player', 'LLM Player', 'Person Player'])\n\n# Set the y-ticks\nax.set_yticks(np.arange(3, 8, 0.5))\n\n# Set the y-tick labels\nax.set_yticklabels(['3.0', '3.5', '4.0', '4.5', '5.0', '5.5', '6.0', '6.5', '7.0', '7.5', '8.0'])\n\n# Set the color of the grid lines\nax.grid(color='blue', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='purple')\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the title\nax.title.set_color('purple')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('purple')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the x-tick labels\nax.get_xticklabels()[0].set_color('purple')\nax.get_xticklabels()[1].set_color('purple')\nax.get_xticklabels()[2].set_color('purple')\nax.get_xticklabels()[3].set_color('purple')\n\n# Set the color of the y-tick labels\nax.get_yticklabels()[0].set_color('purple')\nax.get_yticklabels()[1].set_color('purple')\nax.get_yticklabels()[2].set_color('purple')\nax.get_yticklabels()[3].set_color('purple')\nax.get_yticklabels()[4].set_color('purple')\nax.get_yticklabels()[5].set_color('purple')\nax.get_yticklabels()[6].set_color('purple')\nax.get_yticklabels()[7].set_color('purple')\nax.get_yticklabels()[8].set_color('purple')\nax.get_yticklabels()[9].set_color('purple')\nax.get_yticklabels()[10].set_color('purple')\n\n# Set the color of the grid lines\nax.grid(color='blue', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='purple')\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the title\nax.title.set_color('purple')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('purple')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the x-tick labels\nax.get_xticklabels()[0].set_color('purple')\nax.get_xticklabels()[1].set_color('purple')\nax.get_xticklabels()[2].set_color('purple')\nax.get_xticklabels()[3].set_color('purple')\n\n# Set the color of the y-tick labels\nax.get_yticklabels()[0].set_color('purple')\nax.get_yticklabels()[1].set_color('purple')\nax.get_yticklabels()[2].set_color('purple')\nax.get_yticklabels()[3].set_color('purple')\nax.get_yticklabels()[4].set_color('purple')\nax.get_yticklabels()[5].set_color('purple')\nax.get_yticklabels()[6].set_color('purple')\nax.get_yticklabels()[7].set_color('purple')\nax.get_yticklabels()[8].set_color('purple')\nax.get_yticklabels()[9].set_color('purple')\nax.get_yticklabels()[10].set_color('purple')\n\n# Set the color of the grid lines\nax.grid(color='blue', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='purple')\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the title\nax.title.set_color('purple')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('purple')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the x-tick labels\nax.get_xticklabels()[0].set_color('purple')\nax.get_xticklabels()[1].set_color('purple')\nax.get_xticklabels()[2].set_color('purple')\nax.get_xticklabels()[3].set_color('purple')\n\n# Set the color of the y-tick labels\nax.get_yticklabels()[0].set_color('purple')\nax.get_yticklabels()[1].set_color('purple')\nax.get_yticklabels()[2].set_color('purple')\nax.get_yticklabels()[3].set_color('purple')\nax.get_yticklabels()[4].set_color('purple')\nax.get_yticklabels()[5].set_color('purple')\nax.get_yticklabels()[6].set_color('purple')\nax.get_yticklabels()[7].set_color('purple')\nax.get_yticklabels()[8].set_color('purple')\nax.get_yticklabels()[9].set_color('purple')\nax.get_yticklabels()[10].set_color('purple')\n\n# Set the color of the grid lines\nax.grid(color='blue', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='purple')\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the title\nax.title.set_color('purple')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('purple')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the x-tick labels\nax.get_xticklabels()[0].set_color('purple')\nax.get_xticklabels()[1].set_color('purple')\nax.get_xticklabels()[2].set_color('purple')\nax.get_xticklabels()[3].set_color('purple')\n\n# Set the color of the y-tick labels\nax.get_yticklabels()[0].set_color('purple')\nax.get_yticklabels()[1].set_color('purple')\nax.get_yticklabels()[2].set_color('purple')\nax.get_yticklabels()[3].set_color('purple')\nax.get_yticklabels()[4].set_color('purple')\nax.get_yticklabels()[5].set_color('purple')\nax.get_yticklabels()[6].set_color('purple')\nax.get_yticklabels()[7].set_color('purple')\nax.get_yticklabels()[8].set_color('purple')\nax.get_yticklabels()[9].set_color('purple')\nax.get_yticklabels()[10].set_color('purple')\n\n# Set the color of the grid lines\nax.grid(color='blue', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='purple')\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the title\nax.title.set_color('purple')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('purple')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the x-tick labels\nax.get_xticklabels()[0].set_color('purple')\nax.get_xticklabels()[1].set_color('purple')\nax.get_xticklabels()[2].set_color('purple')\nax.get_xticklabels()[3].set_color('purple')\n\n# Set the color of the y-tick labels\nax.get_yticklabels()[0].set_color('purple')\nax.get_yticklabels()[1].set_color('purple')\nax.get_yticklabels()[2].set_color('purple')\nax.get_yticklabels()[3].set_color('purple')\nax.get_yticklabels()[4].set_color('purple')\nax.get_yticklabels()[5].set_color('purple')\nax.get_yticklabels()[6].set_color('purple')\nax.get_yticklabels()[7].set_color('purple')\nax.get_yticklabels()[8].set_color('purple')\nax.get_yticklabels()[9].set_color('purple')\nax.get_yticklabels()[10].set_color('purple')\n\n# Set the color of the grid lines\nax.grid(color='blue', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='purple')\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the title\nax.title.set_color('purple')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('purple')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the x-tick labels\nax.get_xticklabels()[0].set_color('purple')\nax.get_xticklabels()[1].set_color('purple')\nax.get_xticklabels()[2].set_color('purple')\nax.get_xticklabels()[3].set_color('purple')\n\n# Set the color of the y-tick labels\nax.get_yticklabels()[0].set_color('purple')\nax.get_yticklabels()[1].set_color('purple')\nax.get_yticklabels()[2].set_color('purple')\nax.get_yticklabels()[3].set_color('purple')\nax.get_yticklabels()[4].set_color('purple')\nax.get_yticklabels()[5].set_color('purple')\nax.get_yticklabels()[6].set_color('purple')\nax.get_yticklabels()[7].set_color('purple')\nax.get_yticklabels()[8].set_color('purple')\nax.get_yticklabels()[9].set_color('purple')\nax.get_yticklabels()[10].set_color('purple')\n\n# Set the color of the grid lines\nax.grid(color='blue', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='purple')\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the title\nax.title.set_color('purple')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('purple')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the x-tick labels\nax.get_xticklabels()[0].set_color('purple')\nax.get_xticklabels()[1].set_color('purple')\nax.get_xticklabels()[2].set_color('purple')\nax.get_xticklabels()[3].set_color('purple')\n\n# Set the color of the y-tick labels\nax.get_yticklabels()[0].set_color('purple')\nax.get_yticklabels()[1].set_color('purple')\nax.get_yticklabels()[2].set_color('purple')\nax.get_yticklabels()[3].set_color('purple')\nax.get_yticklabels()[4].set_color('purple')\nax.get_yticklabels()[5].set_color('purple')\nax.get_yticklabels()[6].set_color('purple')\nax.get_yticklabels()[7].set_color('purple')\nax.get_yticklabels()[8].set_color('purple')\nax.get_yticklabels()[9].set_color('purple')\nax.get_yticklabels()[10].set_color('purple')\n\n# Set the color of the grid lines\nax.grid(color='blue', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='purple')\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the title\nax.title.set_color('purple')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('purple')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the x-tick labels\nax.get_xticklabels()[0].set_color('purple')\nax.get_xticklabels()[1].set_color('purple')\nax.get_xticklabels()[2].set_color('purple')\nax.get_xticklabels()[3].set_color('purple')\n\n# Set the color of the y-tick labels\nax.get_yticklabels()[0].set_color('purple')\nax.get_yticklabels()[1].set_color('purple')\nax.get_yticklabels()[2].set_color('purple')\nax.get_yticklabels()[3].set_color('purple')\nax.get_yticklabels()[4].set_color('purple')\nax.get_yticklabels()[5].set_color('purple')\nax.get_yticklabels()[6].set_color('purple')\nax.get_yticklabels()[7].set_color('purple')\nax.get_yticklabels()[8].set_color('purple')\nax.get_yticklabels()[9].set_color('purple')\nax.get_yticklabels()[10].set_color('purple')\n\n# Set the color of the grid lines\nax.grid(color='blue', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='purple')\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the title\nax.title.set_color('purple')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('purple')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the x-tick labels\nax.get_xticklabels()[0].set_color('purple')\nax.get_xticklabels()[1].set_color('purple')\nax.get_xticklabels()[2].set_color('purple')\nax.get_xticklabels()[3].set_color('purple')\n\n# Set the color of the y-tick labels\nax.get_yticklabels()[0].set_color('purple')\nax.get_yticklabels()[1].set_color('purple')\nax.get_yticklabels()[2].set_color('purple')\nax.get_yticklabels()[3].set_color('purple')\nax.get_yticklabels()[4].set_color('purple')\nax.get_yticklabels()[5].set_color('purple')\nax.get_yticklabels()[6].set_color('purple')\nax.get_yticklabels()[7].set_color('purple')\nax.get_yticklabels()[8].set_color('purple')\nax.get_yticklabels()[9].set_color('purple')\nax.get_yticklabels()[10].set_color('purple')\n\n# Set the color of the grid lines\nax.grid(color='blue', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='purple')\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the title\nax.title.set_color('purple')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('purple')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the x-tick labels\nax.get_xticklabels()[0].set_color('purple')\nax.get_xticklabels()[1].set_color('purple')\nax.get_xticklabels()[2].set_color('purple')\nax.get_xticklabels()[3].set_color('purple')\n\n# Set the color of the y-tick labels\nax.get_yticklabels()[0].set_color('purple')\nax.get_yticklabels()[1].set_color('purple')\nax.get_yticklabels()[2].set_color('purple')\nax.get_yticklabels()[3].set_color('purple')\nax.get_yticklabels()[4].set_color('purple')\nax.get_yticklabels()[5].set_color('purple')\nax.get_yticklabels()[6].set_color('purple"}
{"file": "dataset/ori_500/HR_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(7.0, 5.0))\nax.set_title('Endurance Race Performance Analysis')\n\n# Athlete Jim\nax.plot([0, 100], [100, 125], 'g-')\nax.text(50, 115, 'Athlete Jim', ha='center', va='center')\n\n# Athlete Bill\nax.plot([0, 100], [100, 130], 'g-')\nax.text(50, 115, 'Athlete Bill', ha='center', va='center')\n\n# Race interrupted due to weather\nax.plot([0, 100], [100, 150], 'r-')\nax.text(50, 145, 'Race interrupted due to weather', ha='center', va='center')\n\n# Rest\nax.plot([0, 100], [100, 160], 'y-')\nax.text(50, 155, 'Rest', ha='center', va='center')\n\n# Running2\nax.plot([0, 100], [100, 175], 'g-')\nax.text(50, 170, 'Running2', ha='center', va='center')\n\n# Running\nax.plot([0, 100], [100, 190], 'g-')\nax.text(50, 185, 'Running', ha='center', va='center')\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='green'))\n\n# Red rectangle for running2\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='red'))\n\n# Orange rectangle for rest\nax.add_patch(plt.Rectangle((0, 100), 100, 50, color='orange'))\n\n# Green rectangle for running\nax.add_patch(plt.Rectangle((0,"}
{"file": "dataset/ori_500/HR_22.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7, 5))\n\n# Create a scatter plot\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Set the title of the plot\nax.set_title('Comparative Distribution of Three Different Groups')\n\n# Set the x and y labels\nax.set_xlabel('Number of Observations')\nax.set_ylabel('Value Range')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_23.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\ndates = ['2019-01', '2019-02', '2019-03', '2019-04', '2019-05', '2019-06', '2019-07']\nprices = [350, 150, -50, -120, 200, 75, -135]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Plot the data\nax.plot(dates, prices, marker='o')\n\n# Set the title and labels\nax.set_title('Waterfall Chart')\nax.set_xlabel('Date')\nax.set_ylabel('Price')\n\n# Set the y-axis limits\nax.set_ylim(-200, 400)\n\n# Set the x-axis limits\nax.set_xlim(0, 7)\n\n# Set the grid\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set"}
{"file": "dataset/ori_500/HR_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('tripcolor of Delaunay triangulation, flat shading')\n\n# Create a grid of points\nx = np.linspace(-1, 1, 100)\ny = np.linspace(-1, 1, 100)\nX, Y = np.meshgrid(x, y)\n\n# Create a random function for Z values\nZ = np.sin(X**2 + Y**2)\n\n# Create a color map\ncmap = plt.get_cmap('viridis')\n\n# Create a contour plot\ncontour = ax.contourf(X, Y, Z, cmap=cmap)\n\n# Add a color bar\nfig.colorbar(contour)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_25.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('NonUniformImage class')\n\n# Create a grid of subplots\ngs = fig.add_gridspec(2, 2)\n\n# Add a subplot for the nearest neighbor image\nax1 = fig.add_subplot(gs[0, 0])\nax1.imshow(np.random.rand(10, 10), cmap='Oranges')\nax1.set_title('nearest')\n\n# Add a subplot for the bilinear image\nax2 = fig.add_subplot(gs[0, 1])\nax2.imshow(np.random.rand(10, 10), cmap='Blues')\nax2.set_title('bilinear')\n\n# Add a subplot for the nearest neighbor image\nax3 = fig.add_subplot(gs[1, 0])\nax3.imshow(np.random.rand(10, 10), cmap='Purples')\nax3.set_title('nearest')\n\n# Add a subplot for the bilinear image\nax4 = fig.add_subplot(gs[1, 1])\nax4.imshow(np.random.rand(10, 10), cmap='Reds')\nax4.set_title('bilinear')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data for the first graph\nx = np.arange(10)\ny = np.random.randint(200, 600, 10)\ncolors = ['red', 'blue', 'green', 'yellow', 'cyan', 'magenta', 'black', 'white', 'gray', 'brown']\n\n# Data for the second graph\nx2 = np.arange(10)\ny2 = np.random.randint(200, 600, 10)\ncolors2 = ['red', 'blue', 'green', 'yellow', 'cyan', 'magenta', 'black', 'white', 'gray', 'brown']\n\nfig, axs = plt.subplots(1, 2, figsize=(10, 4))\n\n# Plot the first graph\naxs[0].bar(x, y, color=colors)\naxs[0].set_title('Flickr30k')\naxs[0].set_xlabel('Number of bits')\naxs[0].set_ylabel('Recall sum')\n\n# Plot the second graph\naxs[1].bar(x2, y2, color=colors2)\naxs[1].set_title('MS-COCO')\naxs[1].set_xlabel('Number of bits')\naxs[1].set_ylabel('Recall sum')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Denser Points with Perfectly Circular Error Ellipses')\n\n# Set the x-axis label\nax.set_xlabel('x (m)')\n\n# Set the y-axis label\nax.set_ylabel('y (m)')\n\n# Set the x-axis limits\nax.set_xlim(0, 25)\n\n# Set the y-axis limits\nax.set_ylim(0, 30)\n\n# Create a scatter plot\nax.scatter([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], color='blue')\n\n# Create a line plot\nax.plot([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], color='red')\n\n# Create a circle patch\ncircle = plt.Circle((1, 1), 0.5, color='green')\nax.add_artist(circle)\n\n# Create a rectangle patch\nrectangle = plt.Rectangle((2, 2), 1, 1, color='yellow')\nax.add_artist(rectangle)\n\n# Create a text annotation\nax.annotate('Monte Carlo', xy=(1, 1), xytext=(2, 2),\n            arrowprops=dict(facecolor='black', shrink=0.05))\n\n# Create a legend\nlegend_elements = [\n    plt.Line2D([0], [0], marker='o', color='w', label='Monte Carlo',\n              markerfacecolor='g', markersize=10),\n    plt.Line2D([0], [0], marker='o', color='w', label='\u00b1 3-\u03c3 of Prediction',\n              markerfacecolor='b', markersize=10),\n    plt.Line2D([0], [0], marker='o', color='w', label='Mean-Taylor',\n              markerfacecolor='r', markersize=10)\n]\nax.legend(handles=legend_elements, loc='best')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Create a circle\ncircle = plt.Circle((0.5, 0.5), 0.4, color='blue', fill=False)\nax.add_artist(circle)\n\n# Create a rectangle\nrectangle = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='red', fill=False)\nax.add_artist(rectangle)\n\n# Create a triangle\ntriangle = plt.Polygon([[0.1, 0.1], [0.9, 0.1], [0.5, 0.9]], color='green', fill=False)\nax.add_artist(triangle)\n\n# Set the aspect ratio of the plot to be equal\nax.set_aspect('equal')\n\n# Set the limits of the plot\nax.set_xlim(0, 1)\nax.set_ylim(0, 1)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Set the color map for the plot\ncmap = plt.get_cmap('coolwarm')\n\n# Create a grid of values for the x and y axes\nx = np.linspace(0, 2, 100)\ny = np.linspace(0, 2, 100)\nX, Y = np.meshgrid(x, y)\n\n# Calculate the z values using a simple function\nZ = np.sin(X) + np.cos(Y)\n\n# Plot the surface plot\nsurf = ax.plot_surface(X, Y, Z, cmap=cmap)\n\n# Add a color bar which maps values to colors\nfig.colorbar(surf, shrink=0.5, aspect=5)\n\n# Set the title of the plot\nax.set_title('Surface Plot')\n\n# Set the labels for the x and y axes\nax.set_xlabel('\u03b1')\nax.set_ylabel('\u03b2')\nax.set_zlabel('\u0394t')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the first subplot\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Plot the data\nax.plot([0, 100], [0, 0], 'r-')\nax.plot([0, 50], [0.5, -0.5], 'g-')\nax.plot([50, 100], [-0.5, 0.5], 'b-')\n\n# Set the limits of the axes\nax.set_xlim(0, 100)\nax.set_ylim(-2.5, 2.5)\n\n# Add labels\nax.set_xlabel('Users (U)')\nax.set_ylabel('Utility (f)')\n\n# Add a legend\nax.legend(['Left', 'Center Left', 'Center', 'Center Right', 'Right'])\n\n# Create a second subplot\nax2 = fig.add_subplot(122)\n\n# Plot the data\nax2.plot([0, 100], [0, 0], 'r-')\nax2.plot([0, 50], [0.5, -0.5], 'g-')\nax2.plot([50, 100], [-0.5, 0.5], 'b-')\n\n# Set the limits of the axes\nax2.set_xlim(0, 100)\nax2.set_ylim(-2.5, 2.5)\n\n# Add labels\nax2.set_xlabel('Items (I)')\nax2.set_ylabel('Utility (f)')\n\n# Add a legend\nax2.legend(['L', 'CL', 'C', 'CR', 'R'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 4))\n\n# Set the x-axis limits\nax.set_xlim(-2, 4)\n\n# Set the y-axis limits\nax.set_ylim(-2, 4)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(-2, 5, 1))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(-2, 5, 1))\n\n# Set the x-axis labels\nax.set_xticklabels(['-2', '-1', '0', '1', '2', '3', '4'])\n\n# Set the y-axis labels\nax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4'])\n\n# Set the title of the plot\nax.set_title('Reactive-2 Payoff')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('blue')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the text\nax.text(0, 0, 'num. of points = 5', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(2, 2, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(4, 4, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(6, 6, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(8, 8, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(10, 10, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(12, 12, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(14, 14, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(16, 16, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(18, 18, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(20, 20, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(22, 22, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(24, 24, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(26, 26, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(28, 28, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(30, 30, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(32, 32, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(34, 34, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(36, 36, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(38, 38, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(40, 40, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(42, 42, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(44, 44, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(46, 46, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(48, 48, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(50, 50, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(52, 52, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(54, 54, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(56, 56, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(58, 58, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(60, 60, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(62, 62, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(64, 64, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(66, 66, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(68, 68, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(70, 70, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(72, 72, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(74, 74, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(76, 76, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(78, 78, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(80, 80, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(82, 82, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(84, 84, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(86, 86, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(88, 88, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(90, 90, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(92, 92, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(94, 94, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(96, 96, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(98, 98, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(100, 100, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(102, 102, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(104, 104, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(106, 106, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(108, 108, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(110, 110, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(112, 112, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(114, 114, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(116, 116, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(118, 118, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(120, 120, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(122, 122, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(124, 124, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(126, 126, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(128, 128, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(130, 130, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(132, 132, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(134, 134, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(136, 136, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(138, 138, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(140, 140, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(142, 142, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(144, 144, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(146, 146, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(148, 148, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(150, 150, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(152, 152, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(154, 154, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(156, 156, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(158, 158, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(160, 160, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(162, 162, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(164, 164, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(166, 166, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(168, 168, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(170, 170, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(172, 172, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(174, 174, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(176, 176, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(178, 178, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(180, 180, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(182, 182, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(184, 184, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(186, 186, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(188, 188, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(190, 190, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(192, 192, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(194, 194, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(196, 196, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(198, 198, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(200, 200, 'num. of points = 3', fontsize=12, color='red')\n\n# Set the color of the text\nax.text(202, 202, 'num. of points = 3', fontsize=12, color='red"}
{"file": "dataset/ori_500/HR_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 4))\n\n# Create a scatter plot\nax.scatter(np.random.rand(50), np.random.rand(50), color='blue')\n\n# Set the title of the plot\nax.set_title('Model = Vicuna')\n\n# Set the x and y labels\nax.set_xlabel('Permeability Reduction')\nax.set_ylabel('Porosity')\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='red', alpha=0.3)\nax.add_patch(rect)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/PIP_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the background color of the plot\nax.set_facecolor('pink')\n\n# Set the title of the plot\nax.set_title('Stock Market Analysis')\n\n# Set the x-axis label\nax.set_xlabel('\u0394 Robust Accuracy (%)')\n\n# Set the y-axis label\nax.set_ylabel('\u0394 RNFR (%)')\n\n# Create a scatter plot\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y, c='green')\n\n# Create a line plot\nx = np.linspace(-40, 10, 100)\ny = np.sin(x)\nax.plot(x, y, c='blue')\n\n# Create a bar chart\nx = np.arange(1, 6)\ny = np.random.randint(1, 10, 5)\nax.bar(x, y, color='orange')\n\n# Create a histogram\nx = np.random.normal(0, 1, 1000)\nax.hist(x, bins=20, color='gray')\n\n# Create a pie chart\nx = [1, 2, 3, 4, 5]\ny = [10, 20, 30, 40, 50]\nax.pie(y, labels=x, colors=['red', 'green', 'blue', 'yellow', 'purple'])\n\n# Create a box plot\nx = np.random.randn(100)\nax.boxplot(x)\n\n# Create a violin plot\nx = np.random.randn(100)\nax.violinplot(x)\n\n# Create a heatmap\nx = np.random.rand(10, 10)\nax.imshow(x, cmap='hot', interpolation='nearest')\n\n# Create a contour plot\nx = np.linspace(-10, 10, 100)\ny = np.linspace(-10, 10, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nax.contourf(X, Y, Z, levels=10, cmap='coolwarm')\n\n# Create a scatter plot with different colors\nx = np.random.rand(10)\ny = np.random.rand(10)\ncolors = ['red', 'green', 'blue', 'yellow', 'purple']\nax.scatter(x, y, c=colors)\n\n# Create a scatter plot with different sizes\nx = np.random.rand(10)\ny = np.random.rand(10)\nsizes = np.random.randint(10, 100, 10)\nax.scatter(x, y, s=sizes)\n\n# Create a scatter plot with different markers\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkers = ['o', 's', '^', 'D', 'v']\nax.scatter(x, y, marker=markers)\n\n# Create a scatter plot with different edge colors\nx = np.random.rand(10)\ny = np.random.rand(10)\nedge_colors = ['black', 'white', 'gray', 'silver', 'gold']\nax.scatter(x, y, edgecolor=edge_colors)\n\n# Create a scatter plot with different alpha values\nx = np.random.rand(10)\ny = np.random.rand(10)\nalpha_values = [0.1, 0.2, 0.3, 0.4, 0.5]\nax.scatter(x, y, alpha=alpha_values)\n\n# Create a scatter plot with different zorder values\nx = np.random.rand(10)\ny = np.random.rand(10)\nzorder_values = [1, 2, 3, 4, 5]\nax.scatter(x, y, zorder=zorder_values)\n\n# Create a scatter plot with different linewidths\nx = np.random.rand(10)\ny = np.random.rand(10)\nlinewidths = [1, 2, 3, 4, 5]\nax.scatter(x, y, linewidth=linewidths)\n\n# Create a scatter plot with different hatch patterns\nx = np.random.rand(10)\ny = np.random.rand(10)\nhatches = ['/', '\\\\', '|', '-', '+', 'x', 'o', 'O', '.', '*']\nax.scatter(x, y, hatch=hatches)\n\n# Create a scatter plot with different antialiased values\nx = np.random.rand(10)\ny = np.random.rand(10)\nantialiased_values = [True, False, True, False, True]\nax.scatter(x, y, antialiased=antialiased_values)\n\n# Create a scatter plot with different capsize values\nx = np.random.rand(10)\ny = np.random.rand(10)\ncapsize_values = [0, 1, 2, 3, 4]\nax.scatter(x, y, capsize=capsize_values)\n\n# Create a scatter plot with different edgecapsize values\nx = np.random.rand(10)\ny = np.random.rand(10)\nedgecapsize_values = [0, 1, 2, 3, 4]\nax.scatter(x, y, edgecapsize=edgecapsize_values)\n\n# Create a scatter plot with different s values\nx = np.random.rand(10)\ny = np.random.rand(10)\ns_values = [10, 20, 30, 40, 50]\nax.scatter(x, y, s=s_values)\n\n# Create a scatter plot with different c values\nx = np.random.rand(10)\ny = np.random.rand(10)\nc_values = ['red', 'green', 'blue', 'yellow', 'purple']\nax.scatter(x, y, c=c_values)\n\n# Create a scatter plot with different markeredgewidth values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgewidth_values = [0, 1, 2, 3, 4]\nax.scatter(x, y, markeredgewidth=markeredgewidth_values)\n\n# Create a scatter plot with different markeredgecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgecolor_values = ['black', 'white', 'gray', 'silver', 'gold']\nax.scatter(x, y, markeredgecolor=markeredgecolor_values)\n\n# Create a scatter plot with different markerfacecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkerfacecolor_values = ['red', 'green', 'blue', 'yellow', 'purple']\nax.scatter(x, y, markerfacecolor=markerfacecolor_values)\n\n# Create a scatter plot with different markeredgewidth values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgewidth_values = [0, 1, 2, 3, 4]\nax.scatter(x, y, markeredgewidth=markeredgewidth_values)\n\n# Create a scatter plot with different markeredgecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgecolor_values = ['black', 'white', 'gray', 'silver', 'gold']\nax.scatter(x, y, markeredgecolor=markeredgecolor_values)\n\n# Create a scatter plot with different markerfacecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkerfacecolor_values = ['red', 'green', 'blue', 'yellow', 'purple']\nax.scatter(x, y, markerfacecolor=markerfacecolor_values)\n\n# Create a scatter plot with different markeredgewidth values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgewidth_values = [0, 1, 2, 3, 4]\nax.scatter(x, y, markeredgewidth=markeredgewidth_values)\n\n# Create a scatter plot with different markeredgecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgecolor_values = ['black', 'white', 'gray', 'silver', 'gold']\nax.scatter(x, y, markeredgecolor=markeredgecolor_values)\n\n# Create a scatter plot with different markerfacecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkerfacecolor_values = ['red', 'green', 'blue', 'yellow', 'purple']\nax.scatter(x, y, markerfacecolor=markerfacecolor_values)\n\n# Create a scatter plot with different markeredgewidth values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgewidth_values = [0, 1, 2, 3, 4]\nax.scatter(x, y, markeredgewidth=markeredgewidth_values)\n\n# Create a scatter plot with different markeredgecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgecolor_values = ['black', 'white', 'gray', 'silver', 'gold']\nax.scatter(x, y, markeredgecolor=markeredgecolor_values)\n\n# Create a scatter plot with different markerfacecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkerfacecolor_values = ['red', 'green', 'blue', 'yellow', 'purple']\nax.scatter(x, y, markerfacecolor=markerfacecolor_values)\n\n# Create a scatter plot with different markeredgewidth values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgewidth_values = [0, 1, 2, 3, 4]\nax.scatter(x, y, markeredgewidth=markeredgewidth_values)\n\n# Create a scatter plot with different markeredgecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgecolor_values = ['black', 'white', 'gray', 'silver', 'gold']\nax.scatter(x, y, markeredgecolor=markeredgecolor_values)\n\n# Create a scatter plot with different markerfacecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkerfacecolor_values = ['red', 'green', 'blue', 'yellow', 'purple']\nax.scatter(x, y, markerfacecolor=markerfacecolor_values)\n\n# Create a scatter plot with different markeredgewidth values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgewidth_values = [0, 1, 2, 3, 4]\nax.scatter(x, y, markeredgewidth=markeredgewidth_values)\n\n# Create a scatter plot with different markeredgecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgecolor_values = ['black', 'white', 'gray', 'silver', 'gold']\nax.scatter(x, y, markeredgecolor=markeredgecolor_values)\n\n# Create a scatter plot with different markerfacecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkerfacecolor_values = ['red', 'green', 'blue', 'yellow', 'purple']\nax.scatter(x, y, markerfacecolor=markerfacecolor_values)\n\n# Create a scatter plot with different markeredgewidth values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgewidth_values = [0, 1, 2, 3, 4]\nax.scatter(x, y, markeredgewidth=markeredgewidth_values)\n\n# Create a scatter plot with different markeredgecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgecolor_values = ['black', 'white', 'gray', 'silver', 'gold']\nax.scatter(x, y, markeredgecolor=markeredgecolor_values)\n\n# Create a scatter plot with different markerfacecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkerfacecolor_values = ['red', 'green', 'blue', 'yellow', 'purple']\nax.scatter(x, y, markerfacecolor=markerfacecolor_values)\n\n# Create a scatter plot with different markeredgewidth values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgewidth_values = [0, 1, 2, 3, 4]\nax.scatter(x, y, markeredgewidth=markeredgewidth_values)\n\n# Create a scatter plot with different markeredgecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgecolor_values = ['black', 'white', 'gray', 'silver', 'gold']\nax.scatter(x, y, markeredgecolor=markeredgecolor_values)\n\n# Create a scatter plot with different markerfacecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkerfacecolor_values = ['red', 'green', 'blue', 'yellow', 'purple']\nax.scatter(x, y, markerfacecolor=markerfacecolor_values)\n\n# Create a scatter plot with different markeredgewidth values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgewidth_values = [0, 1, 2, 3, 4]\nax.scatter(x, y, markeredgewidth=markeredgewidth_values)\n\n# Create a scatter plot with different markeredgecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgecolor_values = ['black', 'white', 'gray', 'silver', 'gold']\nax.scatter(x, y, markeredgecolor=markeredgecolor_values)\n\n# Create a scatter plot with different markerfacecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkerfacecolor_values = ['red', 'green', 'blue', 'yellow', 'purple']\nax.scatter(x, y, markerfacecolor=markerfacecolor_values)\n\n# Create a scatter plot with different markeredgewidth values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgewidth_values = [0, 1, 2, 3, 4]\nax.scatter(x, y, markeredgewidth=markeredgewidth_values)\n\n# Create a scatter plot with different markeredgecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgecolor_values = ['black', 'white', 'gray', 'silver', 'gold']\nax.scatter(x, y, markeredgecolor=markeredgecolor_values)\n\n# Create a scatter plot with different markerfacecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkerfacecolor_values = ['red', 'green', 'blue', 'yellow', 'purple']\nax.scatter(x, y, markerfacecolor=markerfacecolor_values)\n\n# Create a scatter plot with different markeredgewidth values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgewidth_values = [0, 1, 2, 3, 4]\nax.scatter(x, y, markeredgewidth=markeredgewidth_values)\n\n# Create a scatter plot with different markeredgecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgecolor_values = ['black', 'white', 'gray', 'silver', 'gold']\nax.scatter(x, y, markeredgecolor=markeredgecolor_values)\n\n# Create a scatter plot with different markerfacecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkerfacecolor_values = ['red', 'green', 'blue', 'yellow', 'purple']\nax.scatter(x, y, markerfacecolor=markerfacecolor_values)\n\n# Create a scatter plot with different markeredgewidth values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgewidth_values = [0, 1, 2, 3, 4]\nax.scatter(x, y, markeredgewidth=markeredgewidth_values)\n\n# Create a scatter plot with different markeredgecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgecolor_values = ['black', 'white', 'gray', 'silver', 'gold']\nax.scatter(x, y, markeredgecolor=markeredgecolor_values)\n\n# Create a scatter plot with different markerfacecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkerfacecolor_values = ['red', 'green', 'blue', 'yellow', 'purple']\nax.scatter(x, y, markerfacecolor=markerfacecolor_values)\n\n# Create a scatter plot with different markeredgewidth values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgewidth_values = [0, 1, 2, 3, 4]\nax.scatter(x, y, markeredgewidth=markeredgewidth_values)\n\n# Create a scatter plot with different markeredgecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgecolor_values = ['black', 'white', 'gray', 'silver', 'gold']\nax.scatter(x, y, markeredgecolor=markeredgecolor_values)\n\n# Create a scatter plot with different markerfacecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkerfacecolor_values = ['red', 'green', 'blue', 'yellow', 'purple']\nax.scatter(x, y, markerfacecolor=markerfacecolor_values)\n\n# Create a scatter plot with different markeredgewidth values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgewidth_values = [0, 1, 2, 3, 4]\nax.scatter(x, y, markeredgewidth=markeredgewidth_values)\n\n# Create a scatter plot with different markeredgecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgecolor_values = ['black', 'white', 'gray', 'silver', 'gold']\nax.scatter(x, y, markeredgecolor=markeredgecolor_values)\n\n# Create a scatter plot with different markerfacecolor values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkerfacecolor_values = ['red', 'green', 'blue', 'yellow', 'purple']\nax.scatter(x, y, markerfacecolor=markerfacecolor_values)\n\n# Create a scatter plot with different markeredgewidth values\nx = np.random.rand(10)\ny = np.random.rand(10)\nmarkeredgewidth_values = [0, 1, 2, 3, 4]\nax.scatter(x, y, markeredgewidth=markered"}
{"file": "dataset/ori_500/PIP_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Stock Market Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Gradient Steps (x 62.5K)')\n\n# Set the y-axis label\nax.set_ylabel('Exponential Scale')\n\n# Create a scatter plot with random data\nax.scatter(np.random.rand(10), np.random.rand(10), color='green')\n\n# Create a line plot with random data\nax.plot(np.random.rand(10), np.random.rand(10), color='red')\n\n# Create a bar chart with random data\nax.bar(np.random.rand(10), np.random.rand(10), color='blue')\n\n# Create a pie chart with random data\nax.pie(np.random.rand(10), colors=['green', 'red', 'blue'])\n\n# Create a histogram with random data\nax.hist(np.random.rand(10), bins=10, color='green')\n\n# Create a box plot with random data\nax.boxplot(np.random.rand(10), vert=False, patch_artist=True)\n\n# Create a violin plot with random data\nax.violinplot(np.random.rand(10), showmeans=True)\n\n# Create a heatmap with random data\nax.imshow(np.random.rand(10, 10), cmap='hot', interpolation='nearest')\n\n# Create a contour plot with random data\nax.contourf(np.random.rand(10, 10), np.random.rand(10, 10), cmap='coolwarm')\n\n# Create a streamplot with random data\nax.streamplot(np.random.rand(10, 10), np.random.rand(10, 10), np.random.rand(10, 10), np.random.rand(10, 10))\n\n# Create a polar plot with random data\nax.polar(np.random.rand(10), np.random.rand(10), color='green')\n\n# Create a 3D scatter plot with random data\nax.scatter3D(np.random.rand(10), np.random.rand(10), np.random.rand(10), color='red')\n\n# Create a 3D line plot with random data\nax.plot3D(np.random.rand(10), np.random.rand(10), np.random.rand(10), color='blue')\n\n# Create a 3D bar chart with random data\nax.bar3d(np.random.rand(10), np.random.rand(10), np.random.rand(10), color='green')\n\n# Create a 3D pie chart with random data\nax.pie3D(np.random.rand(10), colors=['red', 'green', 'blue'])\n\n# Create a 3D histogram with random data\nax.hist3D(np.random.rand(10), bins=10, color='green')\n\n# Create a 3D box plot with random data\nax.boxplot3D(np.random.rand(10), vert=False, patch_artist=True)\n\n# Create a 3D violin plot with random data\nax.violinplot3D(np.random.rand(10), showmeans=True)\n\n# Create a 3D heatmap with random data\nax.imshow3D(np.random.rand(10, 10), cmap='hot', interpolation='nearest')\n\n# Create a 3D contour plot with random data\nax.contourf3D(np.random.rand(10, 10), np.random.rand(10, 10), cmap='coolwarm')\n\n# Create a 3D streamplot with random data\nax.streamplot3D(np.random.rand(10, 10), np.random.rand(10, 10), np.random.rand(10, 10), np.random.rand(10, 10))\n\n# Create a 3D polar plot with random data\nax.polar3D(np.random.rand(10), np.random.rand(10), color='green')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/PIP_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Predicted vs Actual')\n\n# Set the x-axis label\nax.set_xlabel('Maximum Predicted Probability')\n\n# Set the y-axis label\nax.set_ylabel('Number of Examples')\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 2000)\n\n# Set the x-axis ticks\nax.set_xticks([0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1])\n\n# Set the y-axis ticks\nax.set_yticks([0, 500, 1000, 1500, 2000])\n\n# Set the grid\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Known', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='green', fontsize=12)\nax.text(0.5, 0.5, 'Unknown', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='blue', fontsize=12)\n\n# Set the color of the line\nax.plot([0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1], [1000, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 1900, 1800, 1700, 1600], color='red')\n\n# Set the color of the bars\nax.bar([0.35, 0.4, 0.45, 0.5, 0.55, 0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1], [1000, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 1900, 1800, 1700, 1600], color='blue')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.35, 0), 0.1, 1000, color='green'))\nax.add_patch(plt.Rectangle((0.45, 0), 0.1, 1200, color='green'))\nax.add_patch(plt.Rectangle((0.55, 0), 0.1, 1300, color='green'))\nax.add_patch(plt.Rectangle((0.65, 0), 0.1, 1400, color='green'))\nax.add_patch(plt.Rectangle((0.75, 0), 0.1, 1500, color='green'))\nax.add_patch(plt.Rectangle((0.85, 0), 0.1, 1600, color='green'))\nax.add_patch(plt.Rectangle((0.95, 0), 0.1, 1700, color='green'))\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/PIP_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Bias Score by Data Type and Model')\n\n# Set the x-axis label\nax.set_xlabel('Data Type')\n\n# Set the y-axis label\nax.set_ylabel('Bias Score')\n\n# Define the data points\nx = ['INT8', 'INT4', 'INT2']\ny = [9.3, 9.1, 9.0]\n\n# Plot the data points\nax.plot(x, y, 'ro-')\n\n# Add a legend\nax.legend(['Model1', 'Model2', 'Model3'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/PIP_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 2000)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 1.1, 0.1))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 2001, 500))\n\n# Set the x-axis labels\nax.set_xticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1.0'])\n\n# Set the y-axis labels\nax.set_yticklabels(['0', '500', '1000', '1500', '2000'])\n\n# Set the title of the plot\nax.set_title('Maximum Predicted Probability')\n\n# Set the color of the line\nax.plot([0, 1], [0, 2000], color='black')\n\n# Set the color of the grid\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='blue')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='red')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='minor', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='purple')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='purple')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='orange')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='cyan')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='cyan')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='magenta')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='yellow')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='yellow')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelcolor='white')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='white')\n\n# Set the color of the"}
{"file": "dataset/ori_500/PIP_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(2**6, 2**11)\n\n# Set the y-axis limits\nax.set_ylim(0, 400000)\n\n# Set the x-axis label\nax.set_xlabel('Width of Layer')\n\n# Set the y-axis label\nax.set_ylabel('Empirical Lipschitz Constant')\n\n# Create a list of colors for the plots\ncolors = ['green', 'blue', 'purple']\n\n# Create a list of labels for the plots\nlabels = ['Cos | n0 = 200', 'Cos | n0 = 400', 'ReLU | n0 = 200', 'ReLU | n0 = 400']\n\n# Create a list of line styles for the plots\nlinestyles = ['-', '--', '-.', ':']\n\n# Create a list of markers for the plots\nmarkers = ['o', 's', '^', 'D']\n\n# Create a list of x values for the plots\nx_values = [2**6, 2**7, 2**8, 2**9, 2**10, 2**11]\n\n# Create a list of y values for the plots\ny_values = [100000, 200000, 300000, 400000, 500000, 600000]\n\n# Create a list of legends for the plots\nlegends = ['Cos | n0 = 200', 'Cos | n0 = 400', 'ReLU | n0 = 200', 'ReLU | n0 = 400']\n\n# Create a list of images for the plots\nimages = ['image1.png', 'image2.png', 'image3.png', 'image4.png']\n\n# Create a list of titles for the plots\ntitles = ['Plot 1', 'Plot 2', 'Plot 3', 'Plot 4']\n\n# Create a list of subtitles for the plots\nsubtitles = ['Subplot 1', 'Subplot 2', 'Subplot 3', 'Subplot 4']\n\n# Create a list of captions for the plots\ncaptions = ['Caption 1', 'Caption 2', 'Caption 3', 'Caption 4']\n\n# Create a list of descriptions for the plots\ndescriptions = ['Description 1', 'Description 2', 'Description 3', 'Description 4']\n\n# Create a list of keywords for the plots\nkeywords = ['Keyword 1', 'Keyword 2', 'Keyword 3', 'Keyword 4']\n\n# Create a list of categories for the plots\ncategories = ['Category 1', 'Category 2', 'Category 3', 'Category 4']\n\n# Create a list of tags for the plots\ntags = ['Tag 1', 'Tag 2', 'Tag 3', 'Tag 4']\n\n# Create a list of authors for the plots\nauthors = ['Author 1', 'Author 2', 'Author 3', 'Author 4']\n\n# Create a list of dates for the plots\ndates = ['Date 1', 'Date 2', 'Date 3', 'Date 4']\n\n# Create a list of sources for the plots\nsources = ['Source 1', 'Source 2', 'Source 3', 'Source 4']\n\n# Create a list of references for the plots\nreferences = ['Reference 1', 'Reference 2', 'Reference 3', 'Reference 4']\n\n# Create a list of acknowledgments for the plots\nacknowledgments = ['Acknowledgment 1', 'Acknowledgment 2', 'Acknowledgment 3', 'Acknowledgment 4']\n\n# Create a list of footnotes for the plots\nfootnotes = ['Footnote 1', 'Footnote 2', 'Footnote 3', 'Footnote 4']\n\n# Create a list of endnotes for the plots\nendnotes = ['Endnote 1', 'Endnote 2', 'Endnote 3', 'Endnote 4']\n\n# Create a list of appendices for the plots\nappendices = ['Appendix 1', 'Appendix 2', 'Appendix 3', 'Appendix 4']\n\n# Create a list of tables for the plots\ntables = ['Table 1', 'Table 2', 'Table 3', 'Table 4']\n\n# Create a list of figures for the plots\nfigures = ['Figure 1', 'Figure 2', 'Figure 3', 'Figure 4']\n\n# Create a list of legends for the plots\nlegends = ['Legend 1', 'Legend 2', 'Legend 3', 'Legend 4']\n\n# Create a list of captions for the plots\ncaptions = ['Caption 1', 'Caption 2', 'Caption 3', 'Caption 4']\n\n# Create a list of descriptions for the plots\ndescriptions = ['Description 1', 'Description 2', 'Description 3', 'Description 4']\n\n# Create a list of keywords for the plots\nkeywords = ['Keyword 1', 'Keyword 2', 'Keyword 3', 'Keyword 4']\n\n# Create a list of categories for the plots\ncategories = ['Category 1', 'Category 2', 'Category 3', 'Category 4']\n\n# Create a list of tags for the plots\ntags = ['Tag 1', 'Tag 2', 'Tag 3', 'Tag 4']\n\n# Create a list of authors for the plots\nauthors = ['Author 1', 'Author 2', 'Author 3', 'Author 4']\n\n# Create a list of dates for the plots\ndates = ['Date 1', 'Date 2', 'Date 3', 'Date 4']\n\n# Create a list of sources for the plots\nsources = ['Source 1', 'Source 2', 'Source 3', 'Source 4']\n\n# Create a list of references for the plots\nreferences = ['Reference 1', 'Reference 2', 'Reference 3', 'Reference 4']\n\n# Create a list of acknowledgments for the plots\nacknowledgments = ['Acknowledgment 1', 'Acknowledgment 2', 'Acknowledgment 3', 'Acknowledgment 4']\n\n# Create a list of footnotes for the plots\nfootnotes = ['Footnote 1', 'Footnote 2', 'Footnote 3', 'Footnote 4']\n\n# Create a list of endnotes for the plots\nendnotes = ['Endnote 1', 'Endnote 2', 'Endnote 3', 'Endnote 4']\n\n# Create a list of appendices for the plots\nappendices = ['Appendix 1', 'Appendix 2', 'Appendix 3', 'Appendix 4']\n\n# Create a list of tables for the plots\ntables = ['Table 1', 'Table 2', 'Table 3', 'Table 4']\n\n# Create a list of figures for the plots\nfigures = ['Figure 1', 'Figure 2', 'Figure 3', 'Figure 4']\n\n# Create a list of legends for the plots\nlegends = ['Legend 1', 'Legend 2', 'Legend 3', 'Legend 4']\n\n# Create a list of captions for the plots\ncaptions = ['Caption 1', 'Caption 2', 'Caption 3', 'Caption 4']\n\n# Create a list of descriptions for the plots\ndescriptions = ['Description 1', 'Description 2', 'Description 3', 'Description 4']\n\n# Create a list of keywords for the plots\nkeywords = ['Keyword 1', 'Keyword 2', 'Keyword 3', 'Keyword 4']\n\n# Create a list of categories for the plots\ncategories = ['Category 1', 'Category 2', 'Category 3', 'Category 4']\n\n# Create a list of tags for the plots\ntags = ['Tag 1', 'Tag 2', 'Tag 3', 'Tag 4']\n\n# Create a list of authors for the plots\nauthors = ['Author 1', 'Author 2', 'Author 3', 'Author 4']\n\n# Create a list of dates for the plots\ndates = ['Date 1', 'Date 2', 'Date 3', 'Date 4']\n\n# Create a list of sources for the plots\nsources = ['Source 1', 'Source 2', 'Source 3', 'Source 4']\n\n# Create a list of references for the plots\nreferences = ['Reference 1', 'Reference 2', 'Reference 3', 'Reference 4']\n\n# Create a list of acknowledgments for the plots\nacknowledgments = ['Acknowledgment 1', 'Acknowledgment 2', 'Acknowledgment 3', 'Acknowledgment 4']\n\n# Create a list of footnotes for the plots\nfootnotes = ['Footnote 1', 'Footnote 2', 'Footnote 3', 'Footnote 4']\n\n# Create a list of endnotes for the plots\nendnotes = ['Endnote 1', 'Endnote 2', 'Endnote 3', 'Endnote 4']\n\n# Create a list of appendices for the plots\nappendices = ['Appendix 1', 'Appendix 2', 'Appendix 3', 'Appendix 4']\n\n# Create a list of tables for the plots\ntables = ['Table 1', 'Table 2', 'Table 3', 'Table 4']\n\n# Create a list of figures for the plots\nfigures = ['Figure 1', 'Figure 2', 'Figure 3', 'Figure 4']\n\n# Create a list of legends for the plots\nlegends = ['Legend 1', 'Legend 2', 'Legend 3', 'Legend 4']\n\n# Create a list of captions for the plots\ncaptions = ['Caption 1', 'Caption 2', 'Caption 3', 'Caption 4']\n\n# Create a list of descriptions for the plots\ndescriptions = ['Description 1', 'Description 2', 'Description 3', 'Description 4']\n\n# Create a list of keywords for the plots\nkeywords = ['Keyword 1', 'Keyword 2', 'Keyword 3', 'Keyword 4']\n\n# Create a list of categories for the plots\ncategories = ['Category 1', 'Category 2', 'Category 3', 'Category 4']\n\n# Create a list of tags for the plots\ntags = ['Tag 1', 'Tag 2', 'Tag 3', 'Tag 4']\n\n# Create a list of authors for the plots\nauthors = ['Author 1', 'Author 2', 'Author 3', 'Author 4']\n\n# Create a list of dates for the plots\ndates = ['Date 1', 'Date 2', 'Date 3', 'Date 4']\n\n# Create a list of sources for the plots\nsources = ['Source 1', 'Source 2', 'Source 3', 'Source 4']\n\n# Create a list of references for the plots\nreferences = ['Reference 1', 'Reference 2', 'Reference 3', 'Reference 4']\n\n# Create a list of acknowledgments for the plots\nacknowledgments = ['Acknowledgment 1', 'Acknowledgment 2', 'Acknowledgment 3', 'Acknowledgment 4']\n\n# Create a list of footnotes for the plots\nfootnotes = ['Footnote 1', 'Footnote 2', 'Footnote 3', 'Footnote 4']\n\n# Create a list of endnotes for the plots\nendnotes = ['Endnote 1', 'Endnote 2', 'Endnote 3', 'Endnote 4']\n\n# Create a list of appendices for the plots\nappendices = ['Appendix 1', 'Appendix 2', 'Appendix 3', 'Appendix 4']\n\n# Create a list of tables for the plots\ntables = ['Table 1', 'Table 2', 'Table 3', 'Table 4']\n\n# Create a list of figures for the plots\nfigures = ['Figure 1', 'Figure 2', 'Figure 3', 'Figure 4']\n\n# Create a list of legends for the plots\nlegends = ['Legend 1', 'Legend 2', 'Legend 3', 'Legend 4']\n\n# Create a list of captions for the plots\ncaptions = ['Caption 1', 'Caption 2', 'Caption 3', 'Caption 4']\n\n# Create a list of descriptions for the plots\ndescriptions = ['Description 1', 'Description 2', 'Description 3', 'Description 4']\n\n# Create a list of keywords for the plots\nkeywords = ['Keyword 1', 'Keyword 2', 'Keyword 3', 'Keyword 4']\n\n# Create a list of categories for the plots\ncategories = ['Category 1', 'Category 2', 'Category 3', 'Category 4']\n\n# Create a list of tags for the plots\ntags = ['Tag 1', 'Tag 2', 'Tag 3', 'Tag 4']\n\n# Create a list of authors for the plots\nauthors = ['Author 1', 'Author 2', 'Author 3', 'Author 4']\n\n# Create a list of dates for the plots\ndates = ['Date 1', 'Date 2', 'Date 3', 'Date 4']\n\n# Create a list of sources for the plots\nsources = ['Source 1', 'Source 2', 'Source 3', 'Source 4']\n\n# Create a list of references for the plots\nreferences = ['Reference 1', 'Reference 2', 'Reference 3', 'Reference 4']\n\n# Create a list of acknowledgments for the plots\nacknowledgments = ['Acknowledgment 1', 'Acknowledgment 2', 'Acknowledgment 3', 'Acknowledgment 4']\n\n# Create a list of footnotes for the plots\nfootnotes = ['Footnote 1', 'Footnote 2', 'Footnote 3', 'Footnote 4']\n\n# Create a list of endnotes for the plots\nendnotes = ['Endnote 1', 'Endnote 2', 'Endnote 3', 'Endnote 4']\n\n# Create a list of appendices for the plots\nappendices = ['Appendix 1', 'Appendix 2', 'Appendix 3', 'Appendix 4']\n\n# Create a list of tables for the plots\ntables = ['Table 1', 'Table 2', 'Table 3', 'Table 4']\n\n# Create a list of figures for the plots\nfigures = ['Figure 1', 'Figure 2', 'Figure 3', 'Figure 4']\n\n# Create a list of legends for the plots\nlegends = ['Legend 1', 'Legend 2', 'Legend 3', 'Legend 4']\n\n# Create a list of captions for the plots\ncaptions = ['Caption 1', 'Caption 2', 'Caption 3', 'Caption 4']\n\n# Create a list of descriptions for the plots\ndescriptions = ['Description 1', 'Description 2', 'Description 3', 'Description 4']\n\n# Create a list of keywords for the plots\nkeywords = ['Keyword 1', 'Keyword 2', 'Keyword 3', 'Keyword 4']\n\n# Create a list of categories for the plots\ncategories = ['Category 1', 'Category 2', 'Category 3', 'Category 4']\n\n# Create a list of tags for the plots\ntags = ['Tag 1', 'Tag 2', 'Tag 3', 'Tag 4']\n\n# Create a list of authors for the plots\nauthors = ['Author 1', 'Author 2', 'Author 3', 'Author 4']\n\n# Create a list of dates for the plots\ndates = ['Date 1', 'Date 2', 'Date 3', 'Date 4']\n\n# Create a list of sources for the plots\nsources = ['Source 1', 'Source 2', 'Source 3', 'Source 4']\n\n# Create a list of references for the plots\nreferences = ['Reference 1', 'Reference 2', 'Reference 3', 'Reference 4']\n\n# Create a list of acknowledgments for the plots\nacknowledgments = ['Acknowledgment 1', 'Acknowledgment 2', 'Acknowledgment 3', 'Acknowledgment 4']\n\n# Create a list of footnotes for the plots\nfootnotes = ['Footnote 1', 'Footnote 2', 'Footnote 3', 'Footnote 4']\n\n# Create a list of endnotes for the plots\nendnotes = ['Endnote 1', 'Endnote 2', 'Endnote 3', 'Endnote 4']\n\n# Create a list of appendices for the plots\nappendices = ['Appendix 1', 'Appendix 2', 'Appendix 3', 'Appendix 4']\n\n# Create a list of tables for the plots\ntables = ['Table 1', 'Table 2', 'Table 3', 'Table 4']\n\n# Create a list of figures for the plots\nfigures = ['Figure 1', 'Figure 2', 'Figure 3', 'Figure 4']\n\n# Create a list of legends for the plots\nlegends = ['Legend 1', 'Legend 2', 'Legend 3', 'Legend 4']\n\n# Create a list of captions for the plots\ncaptions = ['Caption 1', 'Caption 2', 'Caption 3', 'Caption 4']\n\n# Create a list of descriptions for the plots\ndescriptions = ['Description 1', 'Description 2', 'Description 3', 'Description 4']\n\n# Create a list of keywords for the plots\nkeywords = ['Keyword 1', 'Keyword 2', 'Keyword 3', 'Keyword 4']\n\n# Create a list of categories for the plots\ncategories = ['Category 1', 'Category 2', 'Category 3', 'Category 4']\n\n# Create a list of tags for the plots\ntags = ['Tag 1', 'Tag 2', 'Tag 3', 'Tag 4']\n\n# Create a list of authors for the plots\nauthors = ['Author 1', 'Author 2', 'Author 3', 'Author 4']\n\n# Create a list of dates for the plots\ndates = ['Date 1', 'Date 2', 'Date 3', 'Date 4']\n\n# Create a list of sources for the plots\nsources = ['Source 1', 'Source 2', 'Source 3', 'Source 4']\n\n# Create a list of references for the plots\nreferences = ['Reference 1', 'Reference 2', 'Reference 3', 'Reference 4']\n\n# Create a list of acknowledgments for the plots\nacknowledgments = ['Acknowledgment 1', 'Acknowledgment 2', 'Acknowledgment 3', 'Acknowledgment 4']\n\n# Create a list of footnotes for the plots\nfootnotes = ['Footnote 1', '"}
{"file": "dataset/ori_500/PIP_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Plot the data\nax.plot([0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000], [7000, 6500, 6000, 5500, 5000, 4500, 4000, 3500, 3000, 2500, 2000], 'r-')\nax.plot([0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000], [7000, 6500, 6000, 5500, 5000, 4500, 4000, 3500, 3000, 2500, 2000], 'g-')\nax.plot([0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000], [7000, 6500, 6000, 5500, 5000, 4500, 4000, 3500, 3000, 2500, 2000], 'b-')\n\n# Set the title and labels\nax.set_title('Stock Market Analysis')\nax.set_xlabel('Time Steps')\nax.set_ylabel('Discounted Cumulative Rewarded')\n\n# Add legends\nax.legend(['WI', 'ISQ', 'WIQL', 'Greedy'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/PIP_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Plot the data\nax.plot([0, 25, 50, 75, 100, 125, 150, 175, 200], [0.55, 0.50, 0.45, 0.40, 0.35, 0.30, 0.25, 0.20, 0.15], color='blue')\nax.plot([0, 25, 50, 75, 100, 125, 150, 175, 200], [0.50, 0.45, 0.40, 0.35, 0.30, 0.25, 0.20, 0.15, 0.10], color='orange')\n\n# Set the title and labels\nax.set_title('Discounted Cumulative Reward')\nax.set_xlabel('Time Steps')\nax.set_ylabel('Discounted Cumulative Reward')\n\n# Add a legend\nax.legend(['WI', 'ISQ'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/PIP_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the x-axis and y-axis limits\nax.set_xlim(-4, 4)\nax.set_ylim(-4, 4)\n\n# Draw a rectangle\nrectangle = plt.Rectangle((-2, -2), 4, 4, color='blue')\nax.add_patch(rectangle)\n\n# Draw a circle\ncircle = plt.Circle((0, 0), 1, color='red')\nax.add_artist(circle)\n\n# Draw a line\nline = plt.Line2D([-2, 2], [-2, 2], color='green')\nax.add_line(line)\n\n# Draw a scatter plot\nscatter = plt.scatter([0, 1, 2], [0, 1, 2], color='orange')\nax.add_collection(scatter)\n\n# Draw a bar chart\nbar = plt.bar([0, 1, 2], [1, 2, 3], color='purple')\nax.add_collection(bar)\n\n# Draw a pie chart\npie = plt.pie([1, 2, 3], colors=['yellow', 'green', 'blue'])\nax.add_collection(pie)\n\n# Draw a histogram\nhist = plt.hist([0, 1, 2], bins=5, color='orange')\nax.add_collection(hist)\n\n# Draw a box plot\nbox = plt.boxplot([0, 1, 2], vert=False, patch_artist=True, boxprops=dict(facecolor=\"blue\"))\nax.add_collection(box)\n\n# Draw a violin plot\nviolin = plt.violinplot([0, 1, 2], showmeans=True, showmedians=True, showextrema=True)\nax.add_collection(violin)\n\n# Draw a heatmap\nheatmap = plt.imshow([[0, 1, 2], [3, 4, 5], [6, 7, 8]], cmap='hot', interpolation='nearest')\nax.add_collection(heatmap)\n\n# Draw a contour plot\ncontour = plt.contourf([0, 1, 2], [3, 4, 5], [[0, 1, 2], [3, 4, 5], [6, 7, 8]], cmap='coolwarm')\nax.add_collection(contour)\n\n# Draw a stream plot\nstream = plt.streamplot([0, 1, 2], [3, 4, 5], [[0, 1, 2], [3, 4, 5], [6, 7, 8]])\nax.add_collection(stream)\n\n# Draw a polar plot\npolar = plt.polar([0, 1, 2], [3, 4, 5], color='green')\nax.add_collection(polar)\n\n# Draw a 3D plot\nfrom mpl_toolkits.mplot3d import Axes3D\nax3d = fig.add_subplot(111, projection='3d')\nax3d.plot([0, 1, 2], [3, 4, 5], [6, 7, 8], color='blue')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/PIP_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Draw a rectangle\nrectangle = plt.Rectangle((-2, -1), 4, 2, color='red')\nax.add_patch(rectangle)\n\n# Draw a circle\ncircle = plt.Circle((0, 0), 1, color='blue')\nax.add_artist(circle)\n\n# Draw a scatter plot\nx = np.random.rand(50)\ny = np.random.rand(50)\nax.scatter(x, y, color='green')\n\n# Set the limits of the axes\nax.set_xlim(-8, 8)\nax.set_ylim(-8, 8)\n\n# Set the labels of the axes\nax.set_xlabel('X-axis')\nax.set_ylabel('Y-axis')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/area_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('#f2f2f2')\n\n# Set the title of the plot\nax.set_title('Fitness Tracker', fontsize=16)\n\n# Set the x-axis label\nax.set_xlabel('Time (in minutes)', fontsize=14)\n\n# Set the y-axis label\nax.set_ylabel('Calories Burned', fontsize=14)\n\n# Set the x-axis limits\nax.set_xlim(0, 10)\n\n# Set the y-axis limits\nax.set_ylim(0, 35)\n\n# Set the x-axis ticks\nax.set_xticks([0, 2.5, 5, 7.5, 10])\n\n# Set the y-axis ticks\nax.set_yticks([0, 5, 10, 15, 20, 25, 30, 35])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0K', '50K', '1M', '5M', '10M'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '5', '10', '15', '20', '25', '30', '35'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines"}
{"file": "dataset/ori_500/area_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 10))\n\n# Set the title of the plot\nax.set_title('Stock Market Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Time Step')\n\n# Set the y-axis label\nax.set_ylabel('Stock Price')\n\n# Plot the data\nax.plot([0, 1, 2, 3], [50, 40, 30, 20], 'ro-')\nax.plot([0, 1, 2, 3], [10, 20, 30, 40], 'go-')\nax.plot([0, 1, 2, 3], [0, 10, 20, 30], 'bo-')\n\n# Add a legend\nax.legend(['GT', 'DRS', 'PR-based'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/area_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the graph\nax.set_title('Dynamic Effect of Vocab on Zero Shot Accuracy')\n\n# Set the x-axis label\nax.set_xlabel('Deposition IO Norm')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Create a list of colors for the bars\ncolors = ['pink', 'orange', 'blue', 'green', 'pink', 'brown']\n\n# Create a list of labels for the bars\nlabels = ['clip', 'laion (5k)', 'coco (5k)', 'laion (10k)', 'coco (10k)', 'decomposition']\n\n# Create a list of values for the bars\nvalues = [0.53, 0.76, 0.75, 0.74, 0.73, 0.80]\n\n# Create a bar chart with the specified colors and labels\nax.bar(labels, values, color=colors)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/area_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the graph\nx = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\ny_content = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10]\ny_organization = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10]\ny_language = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Plot the data\nax.plot(x, y_content, label='Content', color='blue')\nax.plot(x, y_organization, label='Organization', color='orange')\nax.plot(x, y_language, label='Language', color='green')\n\n# Set the title and labels\nax.set_title('Cumulative Performance Gain by Augmentation Level')\nax.set_xlabel('n')\nax.set_ylabel('Performance Gain (%)')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/area_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data\nyears = [1950, 1960, 1970, 1980, 1990, 2000, 2010]\nafrica = [100, 200, 300, 400, 500, 600, 700]\namericas = [150, 250, 350, 450, 550, 650, 750]\nasia = [200, 300, 400, 500, 600, 700, 800]\neurope = [250, 350, 450, 550, 650, 750, 850]\noceania = [300, 400, 500, 600, 700, 800, 900]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Plot the data\nax.plot(years, africa, label='Africa', color='#90EE90')\nax.plot(years, americas, label='Americas', color='#FFD700')\nax.plot(years, asia, label='Asia', color='#DC143C')\nax.plot(years, europe, label='Europe', color='#FFA500')\nax.plot(years, oceania, label='Oceania', color='#87CEFA')\n\n# Set the title and labels\nax.set_title('World population')\nax.set_xlabel('Year')\nax.set_ylabel('Number of people (millions)')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 5.0))\n\n# Set the x-axis limits\nax.set_xlim([0, 60])\n\n# Set the y-axis limits\nax.set_ylim([0, 7])\n\n# Set the x-axis ticks\nax.set_xticks(range(0, 61, 10))\n\n# Set the y-axis ticks\nax.set_yticks(range(0, 8, 1))\n\n# Set the x-axis labels\nax.set_xticklabels(['0', '10', '20', '30', '40', '50', '60'])\n\n# Set the y-axis labels\nax.set_yticklabels(['0', '1', '2', '3', '4', '5', '6', '7'])\n\n# Set the title of the plot\nax.set_title('Video Game Scores')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='purple')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('"}
{"file": "dataset/ori_500/bar_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Machine Learning Model Accuracy')\n\n# Set the x-axis label\nax.set_xlabel('Model')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy (%)')\n\n# Define the data for the bar chart\nmodels = ['Which', 'What', 'How', 'Will', 'Are', 'Is', 'Choose', 'Select', 'Identify', 'Fill']\naccuracies = [55, 45, 35, 25, 15, 50, 40, 30, 20, 10]\n\n# Create a bar chart\nax.bar(models, accuracies, color='skyblue')\n\n# Set the limits of the y-axis\nax.set_ylim(0, 60)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_100.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(15, 5))\n\n# Set the title of the plot\nax.set_title('Average Monthly Sales by Product Across Regions')\n\n# Create a bar chart with the sales data\nax.bar(['Product A', 'Product B', 'Product C', 'Product D', 'Product E'], [80, 60, 40, 20, 0], color='blue')\nax.bar(['Product A', 'Product B', 'Product C', 'Product D', 'Product E'], [90, 70, 50, 30, 10], color='red')\n\n# Add a legend to the plot\nax.legend(['Region 1', 'Region 2'])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 8))\n\n# Set the background color of the plot\nax.set_facecolor('lavender')\n\n# Set the title of the plot\nax.set_title('Stock Price Prediction', fontsize=20)\n\n# Set the x-axis label\nax.set_xlabel('Time', fontsize=15)\n\n# Set the y-axis label\nax.set_ylabel('Price', fontsize=15)\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3, 4])\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'])\n\n# Set the y-ticks\nax.set_yticks([0, 0.25, 0.5, 0.75, 1])\nax.set_yticklabels(['$0.00', '$0.25', '$0.50', '$0.75', '$1.00'])\n\n# Plot the data\nax.plot([0, 1, 2, 3, 4], [0.5, 0.25, 0.75, 0.5, 0.25], 'b-', lw=2)\nax.plot([0, 1, 2, 3, 4], [0.25, 0.5, 0.25, 0.5, 0.25], 'g-', lw=2)\nax.plot([0, 1, 2, 3, 4], [0.75, 0.25, 0.5, 0.25, 0.5], 'r-', lw=2)\nax.plot([0, 1, 2, 3, 4], [0.5, 0.75, 0.25, 0.5, 0.25], 'c-', lw=2)\nax.plot([0, 1, 2, 3, 4], [0.25, 0.5, 0.75, 0.25, 0.5], 'm-', lw=2)\nax.plot([0, 1, 2, 3, 4], [0.5, 0.25, 0.5, 0.75, 0.25], 'y-', lw=2)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nbeauty_data = [2.2, 11.2, 19.9]\nmovie_data = [3.0, 4.1, 5.1]\ntech_data = [4.8, 4.4, 4.9]\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 3, figsize=(10, 4))\n\n# Plot the data\naxs[0].bar(range(len(beauty_data)), beauty_data)\naxs[1].bar(range(len(movie_data)), movie_data)\naxs[2].bar(range(len(tech_data)), tech_data)\n\n# Set the titles\naxs[0].set_title('Beauty')\naxs[1].set_title('MovieLens-1M')\naxs[2].set_title('Yelp')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nmodels = ['Bactrian-X', 'Lima-X', 'Bactrian-X', 'Lima-X']\nimprovement = [3.5, 2.3, 1.5, 0.8]\nprices = [4.4, 2.3, 1.5, 0.8]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Plot the data\nax.bar(models, improvement, color='blue')\nax.plot(models, prices, color='red')\n\n# Set the title and labels\nax.set_title('ENDEFRRITES sampled')\nax.set_xlabel('Model')\nax.set_ylabel('Improvement [%]')\n\n# Add a legend\nlegend_elements = [plt.Line2D([0], [0], marker='o', color='w', label='Price', markerfacecolor='r', markersize=10)]\nax.legend(handles=legend_elements)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7, 5))\n\n# Set the title of the plot\nax.set_title('Pheme F1-score')\n\n# Set the x-axis label\nax.set_xlabel('Pheme')\n\n# Set the y-axis label\nax.set_ylabel('F1-score')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3, 4, 5, 6])\n\n# Set the x-tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'DELL'])\n\n# Set the y-ticks\nax.set_yticks([0.75, 0.8, 0.85, 0.9, 0.95])\n\n# Set the y-tick labels\nax.set_yticklabels(['0.75', '0.8', '0.85', '0.9', '0.95'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the"}
{"file": "dataset/ori_500/bar_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Human Labeling and Agreement Bias Checking')\n\n# Set the x-axis labels\nax.set_xticks([1, 2, 3, 4, 5, 6])\nax.set_xticklabels(['1', '2', '3', '4', '5', '6'])\n\n# Set the y-axis label\nax.set_ylabel('Scores')\n\n# Set the y-axis limits\nax.set_ylim(0, 50)\n\n# Set the y-axis ticks\nax.set_yticks([0, 10, 20, 30, 40, 50])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='yellow')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='purple', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='orange')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='brown')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='pink')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='cyan')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='magenta', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='lime', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='silver')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='gold')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='navy')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='teal')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='indigo', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='violet', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='white')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='grey')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='silver')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gold', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='navy', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='teal')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='indigo')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='violet')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='silver')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='gold')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='navy')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='teal')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='indigo', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='violet', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='white')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='grey')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='silver')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gold', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='navy', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='teal')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='indigo')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='violet')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='silver')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='gold')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='navy')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='teal')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='indigo', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='violet', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='white')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='grey')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='silver')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gold', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='navy', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='teal')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='indigo')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='violet')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='silver')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='gold')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='navy')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='teal')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='indigo', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='violet', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='white')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='grey')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='silver')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gold', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='navy', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='teal')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='indigo')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='violet')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='silver')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='gold')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='navy')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='teal')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='indigo', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='violet', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='white')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='grey')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='silver')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gold', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='navy', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='teal')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='indigo')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='violet')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='silver')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='gold')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='navy')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='teal')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='indigo', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='violet', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='white')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='grey')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='silver')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gold', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='navy', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='teal')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='indigo')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='violet')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='silver')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='gold')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='navy')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='teal')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='indigo', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='violet', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='white')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='grey')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='silver')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gold', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='navy', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='teal')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='indigo')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='violet')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='silver')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='gold')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='navy')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='teal')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='indigo', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='violet', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='white')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='grey')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='silver')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gold', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='navy', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='teal')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='indigo')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='violet')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle=':', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='silver')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='gold')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='navy')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='teal')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='indigo', linestyle='-', linewidth=0.5)\n\n#"}
{"file": "dataset/ori_500/bar_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny1 = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny2 = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny3 = [0, 100, 200, 300, 400, 500, 600, 700, 800]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Plot the data\nax.plot(x, y1, color='blue')\nax.plot(x, y2, color='yellow')\nax.plot(x, y3, color='red')\n\n# Set the title of the plot\nax.set_title('Resonance Preference Plot for rich-context')\n\n# Set the labels of the axes\nax.set_xlabel('Count')\nax.set_ylabel('Value')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nproducts = ['ARC', 'MMLU', 'TruthfulQ&A', 'Winograde', 'Average']\naccuracies = [53.0, 51.3, 56.4, 56.4, 53.1]\ntasks = ['Evol-Instr-27B', 'Evol-Instr-70k', 'Evol-Instr-AlpaGasus-1k', 'Evol-Instr-1k-longest', 'LIMA-1k']\ntask_accuracies = [73.1, 70.4, 73.2, 72.8, 71.8]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Plot the data\nax.bar(products, accuracies, color='skyblue')\nax.plot(tasks, task_accuracies, marker='o', linestyle='-', color='red')\n\n# Set the title and labels\nax.set_title('Product Accuracy Comparison')\nax.set_xlabel('Products')\nax.set_ylabel('Accuracy (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the x-axis limits\nax.set_xlim(35, 75)\n\n# Set the y-axis limits\nax.set_ylim(40, 70)\n\n# Set the x-axis ticks\nax.set_xticks(range(35, 80, 5))\n\n# Set the y-axis ticks\nax.set_yticks(range(40, 75, 5))\n\n# Set the x-axis labels\nax.set_xlabel('Time (seconds)')\n\n# Set the y-axis labels\nax.set_ylabel('Speed (mph)')\n\n# Set the title of the plot\nax.set_title('Car Performance Comparison')\n\n# Create a bar chart for each car\nax.bar(['GSM8K', 'MNLI', 'race@High'], [50, 60, 55], color='blue')\nax.bar(['GSM8K', 'MNLI', 'race@High'], [55, 65, 60], color='cyan')\nax.bar(['GSM8K', 'MNLI', 'race@High'], [60, 70, 65], color='darkblue')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('DLMA VS. LLAMA-7B', fontsize=24)\n\n# Set the x-axis label\nax.set_xlabel('DLMA win', fontsize=14)\n\n# Set the y-axis label\nax.set_ylabel('LLAMA-7B win', fontsize=14)\n\n# Set the color of the bars\nbar_colors = ['green', 'blue', 'red']\n\n# Set the width of the bars\nbar_width = 0.35\n\n# Set the positions of the bars\nindex = range(len(bar_colors))\n\n# Plot the bars\nbars = ax.bar(index, [60.2, 60.2, 60.2], bar_width, color=bar_colors[0], label='DLMA-7B')\nbars = ax.bar([p + bar_width for p in index], [60.2, 60.2, 60.2], bar_width, color=bar_colors[1], label='LLAMA-7B')\n\n# Add some text for labels, title, and custom x-axis tick labels, etc.\nax.set_xlabel('Match')\nax.set_ylabel('Win Percentage')\nax.set_title('DLMA vs LLAMA-7B')\nax.set_xticks([p + bar_width / 2 for p in index])\nax.set_xticklabels(['DLMA-7B', 'DLMA-7B', 'DLMA-7B'])\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_2.pdf", "response": "import matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 3.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 40)\n\n# Set the y-axis limits\nax.set_ylim(0, 10)\n\n# Set the x-axis tick labels\nax.set_xticks([0, 10, 20, 30, 40])\n\n# Set the y-axis tick labels\nax.set_yticks([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n\n# Set the x-axis label\nax.set_xlabel('Time (s)')\n\n# Set the y-axis label\nax.set_ylabel('Gait Distribution (%)')\n\n# Set the title\nax.set_title('Gait Distribution Over Time: Policy ORC=111')\n\n# Add a rectangle for each time point\nrectangles = [\n    [0, 0, 10, 0.5],\n    [10, 0, 10, 0.8],\n    [20, 0, 10, 0.6],\n    [30, 0, 10, 0.4]\n]\n\nfor rect in rectangles:\n    ax.add_patch(plt.Rectangle((rect[0], rect[1]), rect[2], rect[3], color='blue'))\n\n# Add a rectangle for each gait type\ngait_types = ['trot', 'pace', 'bound', 'pronk']\ncolors = ['green', 'red', 'purple', 'brown', 'gray']\n\nfor i, gait_type in enumerate(gait_types):\n    ax.add_patch(plt.Rectangle((0, i*0.1), 10, 0.1, color=colors[i]))\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/bar_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Top 10 Games by Player Count')\n\n# Set the labels for the x-axis\nax.set_xlabel('Player Count')\n\n# Set the labels for the y-axis\nax.set_ylabel('Game Name')\n\n# Set the data for the bars\nbar_width = 0.35\nopacity = 0.8\nindex = range(len(['LIMA', 'Vicuna', 'Koala', 'Wizardlm', 'Self-Instruct']))\nplayer_counts = [68, 82, 68, 72, 68]\ngame_names = ['LIMA', 'Vicuna', 'Koala', 'Wizardlm', 'Self-Instruct']\n\n# Create the bar chart\nrects = ax.bar(index, player_counts, bar_width,\n             alpha=opacity,\n             color='b',\n             label='Player Count')\n\n# Add text for labels, title and custom x-axis tick labels, etc.\nax.set_xlabel('Game Name')\nax.set_ylabel('Player Count')\nax.set_title('Top 10 Games by Player Count')\nax.set_xticks(index)\nax.set_xticklabels(game_names)\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the charts\nbenefits_data = [14.8, 29.6, 29.6, 18.5, 8.4, 14.8, 26.2, 35.7, 9.5, 9.5]\nreliability_data = [9.4, 24.1, 24.1, 40.7, 27.8, 9.3, 26.2, 45.2, 9.5, 9.5]\nsecurity_data = [8.3, 14.8, 40.7, 20.4, 16.7, 9.3, 26.2, 43.3, 9.5, 9.5]\nprivacy_data = [24.1, 29.6, 29.6, 16.7, 9.3, 26.2, 43.3, 33.3, 9.5, 9.5]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Plot the data\nax.bar(range(len(benefits_data)), benefits_data, color='red', label='Benefits')\nax.bar(range(len(reliability_data)), reliability_data, color='orange', label='Reliability')\nax.bar(range(len(security_data)), security_data, color='grey', label='Security')\nax.bar(range(len(privacy_data)), privacy_data, color='blue', label='Privacy')\n\n# Set the x-axis labels\nax.set_xticks(range(len(benefits_data)))\nax.set_xticklabels(['Strong Disagree', 'Disagree', 'Neutral', 'Agree', 'Strong Agree'])\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_22.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 10.0))\n\n# Set the title of the plot\nax.set_title('Stock Market Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Rotation Angle (\u00b0)')\n\n# Set the y-axis label\nax.set_ylabel('Rate of Gain Change (%)')\n\n# Set the x-ticks\nax.set_xticks(np.arange(-150, 151, 30))\n\n# Set the y-ticks\nax.set_yticks(np.arange(-20, 41, 10))\n\n# Set the grid\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax"}
{"file": "dataset/ori_500/bar_23.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(9.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Ratings of Language Models on a Scale from 1-4')\n\n# Set the x-axis label\nax.set_xlabel('Language Models')\n\n# Set the y-axis label\nax.set_ylabel('Ratings')\n\n# Define the data for the bar chart\nx = ['GPT4', 'GPT-few-shot', 'GPT3.5', 'StarCoder', 'Code Llama', 'NCL']\ny = [3.2, 2.8, 2.5, 2.7, 2.9, 2.6]\n\n# Create a bar chart with the data\nax.bar(x, y, color='blue')\n\n# Add a horizontal line at y=3.5\nax.axhline(y=3.5, color='orange', linestyle='-')\n\n# Add a horizontal line at y=3.0\nax.axhline(y=3.0, color='orange', linestyle='-')\n\n# Add a horizontal line at y=2.5\nax.axhline(y=2.5, color='orange', linestyle='-')\n\n# Add a horizontal line at y=2.0\nax.axhline(y=2.0, color='orange', linestyle='-')\n\n# Add a horizontal line at y=1.5\nax.axhline(y=1.5, color='orange', linestyle='-')\n\n# Add a horizontal line at y=1.0\nax.axhline(y=1.0, color='orange', linestyle='-')\n\n# Add a horizontal line at y=0.5\nax.axhline(y=0.5, color='orange', linestyle='-')\n\n# Add a horizontal line at y=0.0\nax.axhline(y=0.0, color='orange', linestyle='-')\n\n# Add a legend\nax.legend(['Accuracy', 'Completeness', 'Conciseness', 'Readability'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nmodels = ['Majority', 'Flan-T5', 'GPT-3.5', 'GPT-4', 'Wizard13b', 'Vicuna13b', 'Mistral17b']\naccuracies = [0.302, 0.601, 0.468, 0.653, 0.384, 0.379, 0.364]\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\nax.bar(models, accuracies, color='blue')\n\n# Set the title and labels\nax.set_title('Model Accuracy')\nax.set_xlabel('Models')\nax.set_ylabel('Accuracy')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_25.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the title of the plot\nax.set_title('GPT4-as-a-judge')\n\n# Set the x-axis label\nax.set_xlabel('Algorithms')\n\n# Set the y-axis label\nax.set_ylabel('Scores')\n\n# Define the data for the bars\nbars = ['Alpaca-52k+', 'Alpaca-1k+', 'Lima-1k+']\nscores = [78.8, 67.4, 44.2]\nlosses = [11.7, 18.1, 33.9]\n\n# Create a bar chart with the scores\nax.bar(bars, scores, color='blue', label='Scores')\n\n# Create a bar chart with the losses\nax.bar(bars, losses, bottom=scores, color='orange', label='Losses')\n\n# Add a legend to the plot\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_26.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nemotions = ['Ang', 'Ct', 'Dis', 'Fea', 'Joy', 'Ntr', 'Sad', 'Sur']\nsentiments = ['negative', 'positive', 'none', 'mixed']\nvalues = [120, 150, 300, 200, 250, 350, 180, 90]\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\nax.bar(emotions, values, color='red')\n\n# Add labels and title\nax.set_xlabel('Emotions')\nax.set_ylabel('Sentiment Values')\nax.set_title('Sentiment Analysis of Emotions')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_27.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\ncar_models = ['GPT-4V', 'RoboCodeX']\nsuccess_rates = [0.95, 0.85]\noccupancy_errors = [0.02, 0.03]\ntrajectory_optimization_errors = [0.01, 0.02]\ngripping_collision_errors = [0.01, 0.01]\ngrasping_failed = [0.01, 0.01]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 3.0))\n\n# Plot the success rates\nax.bar(car_models, success_rates, color='green')\n\n# Plot the occupancy errors\nax.bar(car_models, occupancy_errors, bottom=success_rates, color='orange')\n\n# Plot the trajectory optimization errors\nax.bar(car_models, trajectory_optimization_errors, bottom=[i+j for i,j in zip(success_rates, occupancy_errors)], color='blue')\n\n# Plot the gripping collision errors\nax.bar(car_models, gripping_collision_errors, bottom=[i+j+k for i,j,k in zip(success_rates, occupancy_errors, trajectory_optimization_errors)], color='yellow')\n\n# Plot the grasping failed\nax.bar(car_models, grasping_failed, bottom=[i+j+k+l for i,j,k,l in zip(success_rates, occupancy_errors, trajectory_optimization_errors, gripping_collision_errors)], color='purple')\n\n# Set the x-axis labels\nax.set_xticks(car_models)\n\n# Set the y-axis label\nax.set_ylabel('Percentage of Total Trials')\n\n# Set the title\nax.set_title('Car Model Performance')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_28.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Transmission Delay (ms)')\n\n# Set the x-axis label\nax.set_xlabel('Datasets')\n\n# Set the y-axis label\nax.set_ylabel('Transmission Delay (ms)')\n\n# Set the x-ticks\nax.set_xticks([1, 2, 3, 4])\n\n# Set the x-tick labels\nax.set_xticklabels(['VOC 2012', 'DEEPJSCC w/ ofdm', 'OURS', 'COCO 2017'])\n\n# Set the y-ticks\nax.set_yticks([0, 1, 2, 3, 4, 5])\n\n# Set the y-tick labels\nax.set_yticklabels(['0', '1', '2', '3', '4', '5'])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params"}
{"file": "dataset/ori_500/bar_29.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Restaurant Menu')\n\n# Set the x-axis label\nax.set_xlabel('PDEs')\n\n# Set the y-axis label\nax.set_ylabel('Log L2')\n\n# Set the x-ticks\nax.set_xticks([1, 2, 3, 4, 5])\nax.set_xticklabels(['Wave', 'Diffusion', 'Heat', 'Poison', 'Burgers'])\n\n# Set the y-ticks\nax.set_yticks([1.0, 1.2, 1.4, 1.6, 1.8, 2.0])\n\n# Set the y-tick labels\nax.set_yticklabels(['1e-1', '1e-2', '1e-3', '1e-4', '1e-5', '1e-6'])\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis labels\nax.xaxis.label.set_color('blue')\n\n# Set the color of the y-axis labels\nax.yaxis.label.set_color('red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='blue')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='red')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='red')\n\n# Set the"}
{"file": "dataset/ori_500/bar_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nmodels = ['w/o DaQNRN', 'w/o CPRN', 'w/o QCN', 'Full model']\nlive_values = [0.975, 0.985, 0.995, 0.965]\nciq_values = [0.975, 0.985, 0.995, 0.965]\ntid2013_values = [0.975, 0.985, 0.995, 0.965]\nlive_m_values = [0.975, 0.985, 0.995, 0.965]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 3))\n\n# Plot the data\nax.plot(models, live_values, label='Live')\nax.plot(models, ciq_values, label='CIQ')\nax.plot(models, tid2013_values, label='TID2013')\nax.plot(models, live_m_values, label='Live-M')\n\n# Add labels and title\nax.set_xlabel('Model')\nax.set_ylabel('Metric Values')\nax.set_title('Comparison of Models')\n\n# Show legend\nax.legend()\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_30.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nx = ['Mixtral-8x7b-Instruct', 'GPT-3.5', 'GPT-4']\ny = [6.11, 28.33, 31.11]\nz = [85.0, 56.11, 60.56]\nw = [44.44, 42.78, 42.78]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Plot the data\nax.bar(x, y, color='pink')\nax.bar(x, z, bottom=y, color='skyblue')\nax.bar(x, w, bottom=[i+j for i,j in zip(y,z)], color='violet')\n\n# Set the title and labels\nax.set_title('One-Pass Rate (%)')\nax.set_xlabel('Model')\nax.set_ylabel('One-Pass Rate (%)')\n\n# Add a legend\nax.legend(['Zero-shot', 'One-shot', 'DS-Agent'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_31.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\ndata = [\n    [17, 54, 29],\n    [20, 67, 12],\n    [25, 56, 18],\n    [30.5, 57.5, 14],\n    [31.5, 61, 19.5]\n]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Plot the data\nfor i, row in enumerate(data):\n    ax.barh(i, row[0], color='skyblue', label='LMM-based vs TPLM-based')\n    ax.barh(i, row[1], left=row[0], color='lightgreen', label='LMM-based vs Template')\n    ax.barh(i, row[2], left=row[0] + row[1], color='salmon', label='TPLM-based vs Template')\n\n# Set the labels and title\nax.set_xlabel('Percentage')\nax.set_title('Comparison of LMM-based vs TPLM-based vs Template')\nax.legend()\n\n# Set the x-axis limits\nax.set_xlim(0, 100)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_32.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the bar chart\nnames = ['Combat Spider', 'Milky Cow', 'Shear Sheep']\nprobabilities = [0.72, 0.74, 0.56]\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(6.0, 2.0))\nax.bar(names, probabilities, color='blue')\n\n# Set the title and labels\nax.set_title('Probability of Improvement over VLM Image Encoder Baseline Returns')\nax.set_xlabel('Model Name')\nax.set_ylabel('Probability of Improvement')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_33.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nsteps = [0, 1, 2, 3, 4]\navg_following_rate = [100, 60, 27.7, 29.8, 27.1]\nfollowing_error_rate = [100, 83.3, 50.7, 63.4, 60.8]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Plot the data\nax.plot(steps, avg_following_rate, 'b-', label='Avg. Following Rate')\nax.plot(steps, following_error_rate, 'g-', label='Following-related Format Error Rate')\n\n# Set the title and labels\nax.set_title('Instruction Following Results In Different Steps (gpt-3.5-turbo)')\nax.set_xlabel('Steps')\nax.set_ylabel('Scores')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_34.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Product Sales by Region')\n\n# Set the x-axis label\nax.set_xlabel('Region')\n\n# Set the y-axis label\nax.set_ylabel('Sales (%)')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\nax.set_xticklabels(['coreutils', 'scp', 'tar', 'exim', 'menc.c', 'niginx', 'bzip2', 'h264', 'liba', 'gcc', 'gobmk', 'hmmr', 'libq', 'libm', 'libp', 'libg', 'libm', 'libl', 'libf', 'libo', 'libm', 'libp', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', 'libm', '"}
{"file": "dataset/ori_500/bar_35.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nbrands = ['Random', 'Llama2', 'Mistral']\nscores = [5.52, 5.53, 5.83]\ncolors = ['purple', 'brown', 'green', 'orange', 'blue', 'grey']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Plot the data\nax.bar(brands, scores, color=colors)\n\n# Set the title and labels\nax.set_title('MT-Bench Score Comparison')\nax.set_xlabel('Brands')\nax.set_ylabel('MT-Bench Score')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_36.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.61, 5.23))\n\n# Set the title of the plot\nax.set_title('Real Estate Prices')\n\n# Set the x-axis label\nax.set_xlabel('Number of Clusters')\n\n# Set the y-axis label\nax.set_ylabel('Price (in millions)')\n\n# Set the x-ticks\nax.set_xticks([100, 1000])\n\n# Set the y-ticks\nax.set_yticks(range(47, 53))\n\n# Set the x-tick labels\nax.set_xticklabels(['100', '1000'])\n\n# Set the y-tick labels\nax.set_yticklabels(['47', '48', '49', '50', '51', '52', '53'])\n\n# Set the color of the grid lines\nax.grid(color='green', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'purple', 'orange'])\n\n# Set the color of the line\nax.plot([100, 1000], [50, 50], color='green')\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 49), 900, 1, color='#c09040'))\n\n#"}
{"file": "dataset/ori_500/bar_37.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the bar chart\nbrands = ['ResNet18', 'AlexNet', 'ResNet50']\nspeedups = [7.4, 6.1, 4.3]\nperturbations = [0, 4.8, 7.8]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 4))\n\n# Plot the bar chart\nax.bar(brands, speedups, color='skyblue')\n\n# Add labels and title\nax.set_xlabel('Brands')\nax.set_ylabel('Speedup')\nax.set_title('Speedup of Different Brands')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_38.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(7, 5))\n\n# Set the title of the plot\nax.set_title('LeetCode, DS-6.7b')\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Set the x-axis limits\nax.set_xlim(0, 100)\n\n# Set the y-axis limits\nax.set_ylim(0, 100)\n\n# Set the x-axis ticks\nax.set_xticks([0, 20, 40, 60, 80, 100])\n\n# Set the y-axis ticks\nax.set_yticks([0, 20, 40, 60, 80, 100])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '20', '40', '60', '80', '100'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '20', '40', '60', '80', '100'])\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('green')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the text\nax.text(50, 90, 'Correct', color='green')\nax.text(50, 80, 'Counterfeit (Test-Passing)', color='blue')\nax.text(50, 70, 'Counterfeit (Test-Failing)', color='red')\nax.text(50, 60, 'Counterfeit (Test-Failing), Confused', color='purple')\n\n# Set the color of the bars\nax.barh([10, 30, 50, 70], [20, 40, 60, 80], color='blue')\nax.barh([20, 40, 60, 80], [10, 30, 50, 70], color='green')\nax.barh([30, 50, 70], [20, 40, 60], color='red')\nax.barh([40, 60, 80], [10, 30, 50], color='purple')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='blue'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='green'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='red'))\nax.add_patch(plt.Rectangle((0, 0), 100, 100, color='purple'))\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, 0), 100, 100,"}
{"file": "dataset/ori_500/bar_39.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\ngames = ['Vicuna', 'Koala', 'WizardLM', 'SInstruct', 'LIMA']\nwins = [53, 80, 116, 99, 179]\nrecosts = [6, 33, 49, 50, 23]\nties = [21, 67, 53, 103, 98]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Plot bars\nax.bar(games, wins, color='coral')\n\n# Add recosts and ties as secondary y-axis\nax2 = ax.twinx()\nax2.bar(games, recosts, color='gold')\nax2.bar(games, ties, color='skyblue')\n\n# Set labels\nax.set_xlabel('Games')\nax.set_ylabel('Wins')\nax2.set_ylabel('Recost (1%)')\n\n# Show plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nbrands = ['CometKiwi', 'LaBSE', 'IF', 'Max', 'Ppl', 'STARE', 'Wass Combo', 'ALTI+', 'STARE']\nsales = [35.15, 26.86, 26.08, 19.08, 22.09, 20.67, 58.99, 66.19, 58.99]\naggregations = [35.15, 26.86, 26.08, 19.08, 22.09, 20.67, 58.99, 66.19, 58.99]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Plot the sales data\nax.plot(brands, sales, color='blue')\n\n# Plot the aggregations data\nax.plot(brands, aggregations, color='red')\n\n# Set the title of the plot\nax.set_title('FPR@90TPR on Guerreiro et al. 2022')\n\n# Set the x-axis label\nax.set_xlabel('Brands')\n\n# Set the y-axis label\nax.set_ylabel('Sales')\n\n# Set the grid\nax.grid(True)\n\n# Set the limits of the x-axis\nax.set_xlim([0, len(brands)])\n\n# Set the limits of the y-axis\nax.set_ylim([0, 80])\n\n# Set the style of the plot\nax.set_facecolor('lightgrey')\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Aggregation', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=14, color='green')\nax.text(0.5, 0.45, 'Non-Aggregation', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=14, color='orange')\nax.text(0.5, 0.4, 'Aggregation', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=14, color='green')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_40.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Relative Difference in Machine vs. Human Focus on Semantic Categories')\n\n# Set the x-axis label\nax.set_xlabel('Difference (%)')\n\n# Set the y-axis label\nax.set_ylabel('Semantic Category')\n\n# Create a bar chart with the data\ncategories = ['Literal', 'Assignment', 'Operator', 'Comment', 'Exception Handling', 'Method Call', 'Return', 'Variable', 'External Class', 'Argument', 'Conditional Block', 'Loop', 'Conditional Statement', 'Variable Declaration', 'Method Declaration', 'Parameter']\nvalues = [20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160]\nax.bar(categories, values, color='blue')\n\n# Set the x-axis limits\nax.set_xlim(-50, 200)\n\n# Set the y-axis limits\nax.set_ylim(0, 170)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_41.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nx = [5, 10, 15, 20]\ny1 = [66.3, 61.9, 53.8, 13.7]\ny2 = [10.1, 13.6, 13.7, 13.7]\ny3 = [49.3, 45.7, 41.6, 31.5]\ny4 = [36.3, 36.3, 36.3, 36.3]\ny5 = [48.0, 42.6, 36.5, 36.5]\ny6 = [40.5, 40.2, 30.6, 22.5]\ny7 = [43.8, 42.8, 40.2, 36.5]\ny8 = [49.5, 49.5, 49.5, 49.5]\ny9 = [43.4, 43.4, 43.4, 43.4]\ny10 = [64.7, 56.8, 59.6, 60.2]\ny11 = [22.3, 25.9, 22.5, 22.5]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(14.0, 4.0))\n\n# Plot the data\nax.plot(x, y1, label='Truthful: Misleading = 2:0')\nax.plot(x, y2, label='Truthful: Misleading = 2:1')\nax.plot(x, y3, label='Truthful: Misleading = 2:2')\nax.plot(x, y4, label='Misleading: Truthful = 2:0')\nax.plot(x, y5, label='Misleading: Truthful = 2:1')\nax.plot(x, y6, label='Misleading: Truthful = 2:2')\nax.plot(x, y7, label='Misleading: Misleading = 2:0')\nax.plot(x, y8, label='Misleading: Misleading = 2:1')\nax.plot(x, y9, label='Misleading: Misleading = 2:2')\nax.plot(x, y10, label='Misleading: Misleading = 0:2')\nax.plot(x, y11, label='Misleading: Misleading = 0:0')\n\n# Set the limits of the x-axis\nax.set_xlim(0, 25)\n\n# Set the limits of the y-axis\nax.set_ylim(-80, 80)\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_42.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the bar chart\nbrands = ['PROST', 'ARC-easy', 'COMVE', 'OpenBookQA', 'SCIQ', 'NumSense', 'CoQA', 'ComQA2.0', 'ComTz', 'CyC', 'Winogventi', 'Com2Sense', 'CODAH', 'WSC', 'ARC-challenge', 'SocialIQA', 'HellaSWAG-wikiHow', 'Al2Sci-elem', 'Winogrande', 'PIQA', 'QuaRel', 'QuaCT', 'SC', 'alphaNLI', 'SWAG']\naccs = [3.4, 3.2, 3.1, 3.0, 2.9, 2.8, 2.7, 2.6, 2.5, 2.4, 2.3, 2.2, 2.1, 2.0, 1.9, 1.8, 1.7, 1.6, 1.5, 1.4, 1.3, 1.2, 1.1, 1.0]\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Plot the bar chart\nax.bar(brands, accs, color='blue')\n\n# Set the title of the chart\nax.set_title('Model = Vicuna')\n\n# Set the x-axis label\nax.set_xlabel('Brand (with Acc)')\n\n# Set the y-axis label\nax.set_ylabel('\u0394Acc')\n\n# Set the y-axis limits\nax.set_ylim(-8, 6)\n\n# Add a horizontal line at \u0394Acc = -1\nax.axhline(y=-1, color='orange', linestyle='-')\n\n# Add a horizontal line at \u0394Acc = 1\nax.axhline(y=1, color='green', linestyle='-')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_43.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\ndata = {\n    'MedMCQA': [48.1, 57.2, 75.2, 64.9, 72.3, 54.3],\n    'MedQA (USMLE)': [56.0, 62.2, 79.2, 64.4, 66.4, 67.6],\n    'GEMT-200b': [78.5, 70.4, 79.2, 64.2, 66.4, 67.9],\n    'GEMT-200b': [84.4, 86.2, 88.7, 80.4, 86.9, 88.9],\n    'GEMT-200b': [76.7, 78.5, 81.8, 83.1, 85.4, 87.5],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [77.7, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87.7],\n    'GEMT-200b': [78.0, 79.8, 81.8, 83.8, 85.2, 87"}
{"file": "dataset/ori_500/bar_44.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Car Performance Metrics')\n\n# Set the x-axis label\nax.set_xlabel('Categories')\n\n# Set the y-axis label\nax.set_ylabel('NLA')\n\n# Define the categories\ncategories = ['AFAN', 'AFBE', 'AFCE', 'AFAO', 'AFEX', 'AFEO', 'AFPK', 'AFPO', 'AFPP', 'AFPR', 'AFSL', 'AFSC', 'AFSF', 'AFTH', 'AFVT', 'AFWS', 'AFWT', 'DAH', 'IC', 'SS']\n\n# Define the NLA values for each category\nnla_values = [45, 42, 39, 36, 33, 30, 27, 24, 21, 18, 15, 12, 9, 6, 3, 0, 45, 42, 39, 36, 33, 30, 27, 24, 21, 18, 15, 12, 9, 6, 3, 0]\n\n# Define the colors for each category\ncolors = ['blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue', 'orange', 'blue',"}
{"file": "dataset/ori_500/bar_45.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 7))\n\n# Set the x-axis data\nx = [3, 5, 7, 9, 11]\n\n# Set the y-axis data\ny = [2.5, 4.5, 6.5, 8.5, 10.5]\n\n# Plot the data\nax.plot(x, y)\n\n# Set the title of the plot\nax.set_title('Taboo')\n\n# Set the labels for the x and y axes\nax.set_xlabel('Num of Constraint Words')\nax.set_ylabel('Score')\n\n# Set the color of the lines\nax.plot(x, y, color='blue')\n\n# Set the color of the markers\nax.plot(x, y, 'o', color='red')\n\n# Set the color of the grid\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left', shadow=True)\n\n# Set the color of the title\nax.set_title('Taboo', color='purple')\n\n# Set the color of the x-axis label\nax.set_xlabel('Num of Constraint Words', color='orange')\n\n# Set the color of the y-axis label\nax.set_ylabel('Score', color='cyan')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both',"}
{"file": "dataset/ori_500/bar_46.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nbrands = ['Lavila', 'Video-LLaMA', 'BLIP1', 'BLIP2 Model', 'LLaVA', 'OSCaR', 'GPT4V']\nsales = [85.93, 73.93, 70.56, 69.87, 68.76, 67.65, 66.54]\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(10, 6))\nax.bar(brands, sales, color='skyblue')\n\n# Set the title and labels\nax.set_title('Human Study')\nax.set_xlabel('Brands')\nax.set_ylabel('Sales (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_47.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\ndata = {\n    'HH': [22, 50, 28],\n    'Reddit': [25, 40, 30],\n    'IMDB': [30, 60, 10],\n    'Avg': [26, 50, 24]\n}\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(13, 6))\n\n# Plot the data\nfor key, value in data.items():\n    ax.bar(key, value[0], color='red')\n    ax.bar(key, value[1], bottom=value[0], color='orange')\n    ax.bar(key, value[2], bottom=[value[0] + value[1]] * len(value), color='pink')\n\n# Set the x-axis limits\nax.set_xlim(0, 100)\n\n# Set the y-axis limits\nax.set_ylim(0, 100)\n\n# Set the title of the plot\nax.set_title('COPR v.s. Golden (Human Eval)')\n\n# Set the labels of the x-axis\nax.set_xlabel('Time (in seconds)')\n\n# Set the labels of the y-axis\nax.set_ylabel('Score (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_48.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Set the title of the plot\nax.set_title('MovieLens')\n\n# Create a bar chart with the data\nax.bar(['Accuracy', 'Unfairness'], [0.32, 0.12], color='blue')\nax.bar(['Accuracy', 'Unfairness'], [0.28, 0.18], color='orange')\n\n# Set the x-axis label\nax.set_xlabel('Metrics')\n\n# Set the y-axis label\nax.set_ylabel('Values')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_49.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Top-1 Accuracy by Resolution and Method')\n\n# Set the x-axis label\nax.set_xlabel('Resolutions')\n\n# Set the y-axis label\nax.set_ylabel('Top-1 Accuracy (%)')\n\n# Define the data for the plots\nresolutions = ['224', '256', '320', '384', '448', '512', '576', '640']\naccuracies = [29, 32, 35, 38, 41, 44, 47, 50]\nmethods = ['ImageNet-1k', 'ImageNet (F)', 'PAC-FNO', 'PAC-FNO']\n\n# Create a bar chart for each method\nfor i, method in enumerate(methods):\n    ax.bar(resolutions, accuracies, color=plt.cm.tab20(i), label=method)\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nx = ['Level 1', 'Level 2', 'Level 3', 'Level 4']\ny = [50, 50, 50, 50]\ncolors = ['yellow', 'cyan', 'red', 'pink']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 3.0))\n\n# Plot the data\nax.bar(x, y, color=colors)\n\n# Set the title and labels\nax.set_title('Player Performance')\nax.set_xlabel('Levels')\nax.set_ylabel('Average Uploads')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_50.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Define the data\nx = np.linspace(0, 1, 100)\ny = np.sin(x)\n\n# Plot the data\nax.plot(x, y)\n\n# Set the title and labels\nax.set_title('Sine Wave')\nax.set_xlabel('Time (s)')\nax.set_ylabel('Amplitude')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_51.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data\ncategories = ['Cleaning / laundry', 'Casting/knitting', 'Baker', 'Carpenter', 'Making Bricks', 'Gardening', 'Construction/renovation', 'Household management', 'Scooter mechanic', 'Farmer']\nviews = [5375, 4190, 3543, 3216, 2915, 2548, 2343, 2158, 2060, 2008]\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(12, 8))\nax.bar(categories, views, color='darkblue')\n\n# Set the title and labels\nax.set_title('Number of Videos by Profession')\nax.set_xlabel('Profession')\nax.set_ylabel('Number of Videos')\n\n# Rotate the x-axis labels for better visibility\nplt.xticks(rotation=45)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_52.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data for each category\ncategories = ['greeting', 'request', 'criticism', 'apology', 'persuasion', 'thanking', 'leave-taking']\nsentiments = ['synthetic data', 'human-authored data']\ngreeting_sentiment_values = [8, 16]\nrequest_sentiment_values = [31, 28]\ncriticism_sentiment_values = [24, 11]\napology_sentiment_values = [7, 5]\npersuasion_sentiment_values = [10, 15]\nthanking_sentiment_values = [7, 16]\nleave_taking_sentiment_values = [10, 9]\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Plot the bar chart\nax.bar(categories, greeting_sentiment_values, color='purple')\nax.bar(categories, request_sentiment_values, bottom=greeting_sentiment_values, color='blue')\nax.bar(categories, criticism_sentiment_values, bottom=[x+y for x,y in zip(greeting_sentiment_values, request_sentiment_values)], color='teal')\nax.bar(categories, apology_sentiment_values, bottom=[x+y+z for x,y,z in zip(greeting_sentiment_values, request_sentiment_values, criticism_sentiment_values)], color='green')\nax.bar(categories, persuasion_sentiment_values, bottom=[x+y+z+t for x,y,z,t in zip(greeting_sentiment_values, request_sentiment_values, criticism_sentiment_values, apology_sentiment_values)], color='brown')\nax.bar(categories, thanking_sentiment_values, bottom=[x+y+z+t+p for x,y,z,t,p in zip(greeting_sentiment_values, request_sentiment_values, criticism_sentiment_values, apology_sentiment_values, persuasion_sentiment_values)], color='orange')\nax.bar(categories, leave_taking_sentiment_values, bottom=[x+y+z+t+p+t2 for x,y,z,t,p,t2 in zip(greeting_sentiment_values, request_sentiment_values, criticism_sentiment_values, apology_sentiment_values, persuasion_sentiment_values, thanking_sentiment_values)], color='red')\n\n# Set the title and labels\nax.set_title('Sentiment Analysis of Social Media Posts')\nax.set_xlabel('Categories')\nax.set_ylabel('Sentiment Values')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_53.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Set the title of the plot\nax.set_title('Context: The human body can tolerate only a')\n\n# Set the x-axis label\nax.set_xlabel('Word')\n\n# Set the y-axis label\nax.set_ylabel('Probability')\n\n# Set the x-ticks\nax.set_xticks(range(len(words)))\nax.set_xticklabels(words)\n\n# Set the y-limits\nax.set_ylim([0, 0.3])\n\n# Set the y-ticks\nax.set_yticks([0, 0.1, 0.2, 0.3])\n\n# Set the y-tick labels\nax.set_yticklabels(['0%', '10%', '20%', '30%'])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['red', 'blue', 'green', 'orange', 'purple', 'cyan', 'magenta', 'yellow', 'black'])\n\n# Set the color of the lines\nax.plot(range(len(words}
{"file": "dataset/ori_500/bar_54.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the bar chart\nmodels = ['Convertible', 'Coupe', 'Sedan', 'Truck', 'SUV']\nprobabilities = [0.75, 0.85, 0.95, 0.80, 0.90]\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(6.0, 2.0))\nax.bar(models, probabilities, color='blue')\n\n# Add labels and title\nax.set_xlabel('Car Models')\nax.set_ylabel('Probability of Improvement')\nax.set_title('Probability of Improvement over VLM Image Encoder Baseline Returns')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_55.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data\nemotions = ['Disapproval', 'Joy', 'Relief', 'Gratitude', 'Annoyance', 'Nervousness', 'Pride', 'Sadness', 'Unboredom', 'Amusement']\nfrequencies = [2.1, 3.0, 3.5, 3.5, 6.0, 6.0, 6.6, 6.7, 7.0, 7.6]\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\nax.bar(emotions, frequencies, color='coral')\n\n# Set the title and labels\nax.set_title('Emotion Frequency')\nax.set_xlabel('Emotion')\nax.set_ylabel('Frequency (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_56.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\nax.set_title('Number of Videos by Profession')\nax.set_xlabel('Profession')\nax.set_ylabel('Number of Videos')\n\n# Create a bar chart with the data\nax.bar(['Making Bricks', 'Carpenter', 'Baker', 'Crafting/Knitting', 'Cleaning/Laundry', 'Gardening'], [500, 600, 700, 400, 300, 200], color='blue')\n\n# Add a grid\nax.grid(True)\n\n# Set the limits for the x and y axes\nax.set_xlim([0, 6])\nax.set_ylim([0, 800])\n\n# Set the tick marks\nax.set_xticks(range(6))\nax.set_yticks(range(0, 801, 100))\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_57.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the title of the graph\nax.set_title('Global Economy')\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Value')\n\n# Set the x-axis limits\nax.set_xlim([0, 50])\n\n# Set the y-axis limits\nax.set_ylim([0, 50])\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 51, 5))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 51, 5))\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the title\n"}
{"file": "dataset/ori_500/bar_58.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the graph\nax.set_title('Real Estate Prices')\n\n# Set the x-axis label\nax.set_xlabel('Year')\n\n# Set the y-axis label\nax.set_ylabel('Price')\n\n# Set the x-axis limits\nax.set_xlim(90, 80)\n\n# Set the y-axis limits\nax.set_ylim(0, 70)\n\n# Set the x-axis ticks\nax.set_xticks(range(90, 80, -10))\n\n# Set the y-axis ticks\nax.set_yticks(range(0, 70, 10))\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color_cycle(['red', 'pink', 'orange', 'yellow', 'cyan', 'blue', 'purple'])\n\n# Set the color of the plot\nax.plot([90, 80], [50, 60], 'r-')\n\n# Set the color of the scatter plot\nax.scatter([90, 80], [50, 60], c='blue')\n\n# Set the color of the bar chart\nax.bar([90, 80], [50, 60], color='green')\n\n# Set the color of the pie chart\nax.pie([50, 60], colors=['red', 'blue'], startangle=90)\n\n# Set the color of the histogram\nax.hist([50, 60], bins=10, color='purple')\n\n# Set the color of the box plot\nax.boxplot([50, 60], patch_artist=True, boxprops=dict(facecolor='blue'))\n\n# Set the color of the violin plot\nax.violinplot([50, 60], showmeans=True, showmedians=False, showextrema=True)\n\n# Set the color of the heatmap\nax.imshow([[50, 60]], cmap='hot', interpolation='nearest')\n\n# Set the color of the contour plot\nax.contour([50, 60], [50, 60], [[50, 60], [50, 60]], cmap='coolwarm')\n\n# Set the color of the scatter plot with different sizes\nax.scatter([90, 80], [50, 60], s=[100, 200], c='blue')\n\n# Set the color of the scatter plot with different colors\nax.scatter([90, 80], [50, 60], c=['red', 'blue'])\n\n# Set the color of the scatter plot with different markers\nax.scatter([90, 80], [50, 60], marker='^', c='blue')\n\n# Set the color of the scatter plot with different edge colors\nax.scatter([90, 80], [50, 60], edgecolors='black', c='blue')\n\n# Set the color of the scatter plot with different alpha values\nax.scatter([90, 80], [50, 60], alpha=0.5, c='blue')\n\n# Set the color of the scatter plot with different linewidths\nax.scatter([90, 80], [50, 60], linewidths=2, c='blue')\n\n# Set the color of the scatter plot with different edge widths\nax.scatter([90, 80], [50, 60], edgewidths=2, c='blue')\n\n# Set the color of the scatter plot with different hatch patterns\nax.scatter([90, 80], [50, 60], hatch='/', c='blue')\n\n# Set the color of the scatter plot with different hatches\nax.scatter([90, 80], [50, 60], hatches='/', c='blue')\n\n# Set the color of the scatter plot with different sizes and colors\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'])\n\n# Set the color of the scatter plot with different sizes, colors, and markers\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^')\n\n# Set the color of the scatter plot with different sizes, colors, markers, and edge colors\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black')\n\n# Set the color of the scatter plot with different sizes, colors, markers, edge colors, and alpha values\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5)\n\n# Set the color of the scatter plot with different sizes, colors, markers, edge colors, alpha values, and linewidths\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2)\n\n# Set the color of the scatter plot with different sizes, colors, markers, edge colors, alpha values, linewidths, and edge widths\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2)\n\n# Set the color of the scatter plot with different sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, and hatch patterns\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/')\n\n# Set the color of the scatter plot with different sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, and hatches\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/')\n\n# Set the color of the scatter plot with different sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, hatches, and sizes\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/', s=[100, 200])\n\n# Set the color of the scatter plot with different sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, hatches, sizes, and colors\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/', s=[100, 200], c=['red', 'blue'])\n\n# Set the color of the scatter plot with different sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, hatches, sizes, colors, and markers\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/', s=[100, 200], c=['red', 'blue'], marker='^')\n\n# Set the color of the scatter plot with different sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, hatches, sizes, colors, markers, and edge colors\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/', s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black')\n\n# Set the color of the scatter plot with different sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, hatches, sizes, colors, markers, edge colors, and alpha values\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/', s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5)\n\n# Set the color of the scatter plot with different sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, hatches, sizes, colors, markers, edge colors, alpha values, and linewidths\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/', s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2)\n\n# Set the color of the scatter plot with different sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, hatches, sizes, colors, markers, edge colors, alpha values, linewidths, and edge widths\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/', s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2)\n\n# Set the color of the scatter plot with different sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, hatches, sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, and hatch patterns\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/', s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/')\n\n# Set the color of the scatter plot with different sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, hatches, sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, and hatches\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/', s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/')\n\n# Set the color of the scatter plot with different sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, hatches, sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, hatches, and sizes\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/', s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/', s=[100, 200])\n\n# Set the color of the scatter plot with different sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, hatches, sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, hatches, sizes, and colors\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/', s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/', s=[100, 200], c=['red', 'blue'])\n\n# Set the color of the scatter plot with different sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, hatches, sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, hatches, sizes, colors, and markers\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/', s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/', s=[100, 200], c=['red', 'blue'], marker='^')\n\n# Set the color of the scatter plot with different sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, hatches, sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, hatches, sizes, colors, markers, and edge colors\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/', s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/', s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black')\n\n# Set the color of the scatter plot with different sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, hatches, sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, hatches, sizes, colors, markers, edge colors, and alpha values\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/', s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/', s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5)\n\n# Set the color of the scatter plot with different sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, hatches, sizes, colors, markers, edge colors, alpha values, linewidths, edge widths, hatch patterns, hatches, sizes, colors, markers, edge colors, alpha values, and linewidths\nax.scatter([90, 80], [50, 60], s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/', s=[100, 200], c=['red', 'blue'], marker='^', edgecolors='black', alpha=0.5, linewidths=2, edgewidths=2, hatch='/', hatches='/', s=[100, 200], c=['red', 'blue'], marker='"}
{"file": "dataset/ori_500/bar_59.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the plot\nax.set_title('Relative Difference in Machine vs. Human Focus on Semantic Categories')\n\n# Create a bar chart with the data\nax.bar(['External Class', 'Argument', 'Loop', 'Conditional Statement', 'Variable Declaration', 'Method Declaration', 'Parameter'], [80, 70, 60, 50, 40, 30, 20], color='blue')\n\n# Set the x-axis label\nax.set_xlabel('Semantic Category')\n\n# Set the y-axis label\nax.set_ylabel('Difference (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data\nemotions = ['Disappointment', 'Embarrassment', 'Oblivious', 'Delight', 'Excitement', 'Disapproval', 'Joy', 'Relief', 'Gratitude', 'Annoyance', 'Nervousness', 'Pride', 'Sadness', 'Unboredom', 'Amusement']\nfrequencies = [7, 6, 5, 4, 3, 2, 1, 0.5, 0.3, 0.2, 0.1, 0.05, 0.03, 0.01]\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\nax.bar(emotions, frequencies, color='skyblue')\n\n# Set the title and labels\nax.set_title('Emotion Frequency')\nax.set_xlabel('Emotion')\nax.set_ylabel('Frequency (%)')\n\n# Rotate the x-axis labels for better visibility\nplt.xticks(rotation=90)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_60.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Set the title of the graph\nax.set_title('Stock Market Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Price')\n\n# Create a rectangle for each stock\nrectangles = [\n    plt.Rectangle((0, 0), 1, 1, color='red', alpha=0.5),\n    plt.Rectangle((2, 0), 1, 1, color='blue', alpha=0.5),\n    plt.Rectangle((4, 0), 1, 1, color='green', alpha=0.5)\n]\n\n# Add rectangles to the plot\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Set the x-axis limits\nax.set_xlim(-20, 20)\n\n# Set the y-axis limits\nax.set_ylim(0, 20)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_61.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the title of the graph\nax.set_title('Tech Industry Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Year')\n\n# Set the y-axis label\nax.set_ylabel('Value ($)')\n\n# Set the x-axis limits\nax.set_xlim([0, 3250])\n\n# Set the y-axis limits\nax.set_ylim([0, 3250])\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 3251, 500))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 3251, 500))\n\n# Set the x-axis grid\nax.grid(True)\n\n# Set the y-axis grid\nax.grid(True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['2000', '2005', '2010', '2015', '2020', '2025', '2030'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '500', '1000', '1500', '2000', '2500', '3000'])\n\n# Set the x-axis tick rotation\nax.tick_params(axis='x', rotation=45)\n\n# Set the y-axis tick rotation\nax.tick_params(axis='y', rotation=45)\n\n# Set the x-axis tick color\nax.tick_params(axis='x', colors='red')\n\n# Set the y-axis tick color\nax.tick_params(axis='y', colors='blue')\n\n# Set the x-axis tick label color\nax.tick_params(axis='x', labelcolor='green')\n\n# Set the y-axis tick label color\nax.tick_params(axis='y', labelcolor='orange')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n#"}
{"file": "dataset/ori_500/bar_62.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data for each category\ncategories = ['greeting', 'request', 'criticism', 'apology', 'persuasion', 'thanking', 'leave-taking']\nsynthetic_data = [12, 35, 28, 15, 18, 14, 16]\nhuman_authored_data = [18, 32, 15, 8, 20, 22, 12]\n\n# Create a bar chart for each category\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\nbars = ax.bar(categories, synthetic_data, color='blue')\nfor bar in bars:\n    yval = bar.get_height()\n    ax.text(bar.get_x() + bar.get_width()/2, yval, int(yval), va='bottom')\n\nbars = ax.bar(categories, human_authored_data, bottom=synthetic_data, color='orange')\nfor bar in bars:\n    yval = bar.get_height()\n    ax.text(bar.get_x() + bar.get_width()/2, yval, int(yval), va='bottom')\n\n# Set the title and labels\nax.set_title('Sentiment Analysis of Synthetic vs Human-Authored Data')\nax.set_xlabel('Sentiment Categories')\nax.set_ylabel('Percentage of Sentiments')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_63.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Scores by Category Over Time')\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Score')\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 1)\n\n# Set the x-axis ticks\nax.set_xticks([0, 0.25, 0.5, 0.75, 1])\n\n# Set the y-axis ticks\nax.set_yticks([0, 0.25, 0.5, 0.75, 1])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Time 0', 'Time 20', 'Time 40', 'Time 60', 'Time 80'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8'])\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='red')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='green')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='"}
{"file": "dataset/ori_500/bar_64.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 7))\n\n# Set the title of the plot\nax.set_title('Air Quality Metrics by Region')\n\n# Define the regions and their corresponding air quality metrics\nregions = ['North', 'East', 'South', 'West']\nmetrics = [92.15, 54.46, 90.45, 100.45]\n\n# Create a bar chart with the regions and their air quality metrics\nax.bar(regions, metrics, color='skyblue')\n\n# Set the x-axis label\nax.set_xlabel('Regions')\n\n# Set the y-axis label\nax.set_ylabel('Air Quality Metrics (ppm)')\n\n# Set the x-axis tick labels\nax.set_xticks(range(len(regions)))\nax.set_xticklabels(regions)\n\n# Set the y-axis tick labels\nax.set_yticks(range(0, 101, 10))\nax.set_yticklabels([str(i) for i in range(0, 101, 10)])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_65.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Scores by group and constraint word count')\n\n# Define the data for the bar chart\nbar_width = 0.25\nindex = range(1, 7)\nconstraint_words = ['3 Constraint Words', '5 Constraint Words', '7 Constraint Words', '9 Constraint Words', '11 Constraint Words', '13 Constraint Words']\nscores = [-2.2, -2.3, -3.3, -3.2, -2.8, -2.9]\n\n# Create a bar chart with the scores\nbars = ax.bar(index, scores, bar_width, color='orange')\n\n# Add labels to the bars\nfor bar in bars:\n    yval = bar.get_height()\n    ax.text(bar.get_x() + bar_width / 2, yval, round(yval, 2), va='bottom')\n\n# Set the x-axis labels\nax.set_xticks([i + bar_width for i in index])\nax.set_xticklabels(constraint_words)\n\n# Set the y-axis label\nax.set_ylabel('Score')\n\n# Set the x-axis limits\nax.set_xlim([min(index)-bar_width, max(index)+bar_width])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_66.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Negative GDP Growth Rates by Country and Year')\n\n# Set the x-axis label\nax.set_xlabel('GDP Growth Rate (%)')\n\n# Set the y-axis label\nax.set_ylabel('Country')\n\n# Set the x-axis limits\nax.set_xlim(-10, 10)\n\n# Set the y-axis limits\nax.set_ylim(0, 10)\n\n# Set the x-axis ticks\nax.set_xticks(range(-10, 11, 2))\n\n# Set the y-axis ticks\nax.set_yticks(range(0, 11, 2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['China', 'Germany', 'USA', 'Brazil'])\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=12)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=12)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=5)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=5)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', pad=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', pad=10)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', rotation=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', rotation=0)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', direction='in')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', direction='in')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='major', bottom=True)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='major', left=True)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='minor', bottom=False)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='minor', left=False)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', length=5)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', length=5)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', width=2)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', width=2)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', pad=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', rotation=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', direction='in')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', direction='in')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=True)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', left=True)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', length=5)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', length=5)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', width=2)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', width=2)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', pad=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', rotation=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', direction='in')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', direction='in')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=True)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', left=True)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', length=5)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', length=5)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', width=2)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', width=2)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', pad=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', rotation=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', direction='in')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', direction='in')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=True)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', left=True)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', length=5)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', length=5)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', width=2)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', width=2)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', pad=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', rotation=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', direction='in')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', direction='in')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=True)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', left=True)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', length=5)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', length=5)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', width=2)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', width=2)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', pad=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', rotation=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', direction='in')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', direction='in')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=True)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', left=True)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', length=5)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', length=5)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', width=2)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', width=2)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', pad=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', rotation=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', direction='in')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', direction='in')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=True)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', left=True)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', length=5)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', length=5)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', width=2)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', width=2)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', pad=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', rotation=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', direction='in')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', direction='in')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=True)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', left=True)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', length=5)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', length=5)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', width=2)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', width=2)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', pad=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', rotation=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', direction='in')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', direction='in')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=True)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', left=True)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', length=5)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', length=5)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', width=2)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', width=2)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', pad=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', rotation=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', direction='in')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', direction='in')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=True)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', left=True)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', length=5)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', length=5)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', width=2)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', width=2)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', pad=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', rotation=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', direction='in')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', direction='in')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=True)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', left=True)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', length=5)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', length=5)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', width=2)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', width=2)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', pad=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', rotation=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', which='both', direction"}
{"file": "dataset/ori_500/bar_67.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nmodels = ['GPT4V', 'OSCAR', 'LLaMA', 'BLIP2', 'BLIP1', 'Video-LLaMA', 'LaVLA']\nperformance = [82.5, 73.93, 31.79, 4.64, 4.64, 0.71, 0.0]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 8))\n\n# Plot the data\nax.bar(models, performance, color='blue')\n\n# Set the title and labels\nax.set_title('Human Study')\nax.set_xlabel('Model')\nax.set_ylabel('Performance (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_68.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Traffic Flow', 'Accident Rate', 'Public Transport Usage', 'Road Condition']\nvalues = [50, 20, 40, 80]\ncolors = ['blue', 'cyan', 'green', 'purple']\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(10, 6))\nax.bar(categories, values, color=colors)\n\n# Set the title and labels\nax.set_title('Stacked Bar Chart of Transportation Data')\nax.set_xlabel('Categories')\nax.set_ylabel('Values')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_69.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 7))\n\n# Set the title of the chart\nax.set_title('Enhanced Stacked Bar Chart with Textures and Annotated Values')\n\n# Create a bar chart with the sales data\nsales_data = [80, 60, 40, 20, 0]\nbar_width = 0.5\nbar_color = 'orange'\nbar_edgecolor = 'black'\nbar_alpha = 0.7\nbar_label = ['Product A Sales', 'Product C Sales', 'Product E Sales', 'Product G Sales', 'Product I Sales']\nax.bar(range(len(sales_data)), sales_data, width=bar_width, color=bar_color, edgecolor=bar_edgecolor, alpha=bar_alpha, label=bar_label)\n\n# Add a legend to the chart\nax.legend()\n\n# Set the x-axis labels\nx_labels = ['Category A', 'Category B', 'Category C', 'Category D', 'Category E', 'Category F', 'Category G']\nax.set_xticks(range(len(x_labels)))\nax.set_xticklabels(x_labels)\n\n# Set the y-axis limits\nax.set_ylim(0, 100)\n\n# Set the grid lines\nax.grid(True)\n\n# Display the chart\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['SEQ', 'REPLAY', 'MTL']\naccuracies = [0.83, 0.6, 0.11]\nembeddings = [0.75, 0.25, 0.0]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('#E0E0E0')\n\n# Set the title of the plot\nax.set_title('Feature Embedding Distance')\n\n# Set the x-axis label\nax.set_xlabel('Categories')\n\n# Set the y-axis label\nax.set_ylabel('Feature Embedding Distance (%)')\n\n# Set the x-ticks\nax.set_xticks(range(len(categories)))\n\n# Set the x-tick labels\nax.set_xticklabels(categories)\n\n# Set the y-ticks\nax.set_yticks(embeddings)\n\n# Set the y-tick labels\nax.set_yticklabels(embeddings)\n\n# Set the y-axis limits\nax.set_ylim(0, 1)\n\n# Set the y-axis ticks\nax.set_yticks([0, 0.25, 0.5, 0.75, 1])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0%', '25%', '50%', '75%', '100%'])\n\n# Set the y-axis grid\nax.grid(True)\n\n# Set the y-axis color\nax.spines['left'].set_color('black')\n\n# Set the y-axis width\nax.spines['left'].set_linewidth(1)\n\n# Set the y-axis position\nax.spines['left'].set_position('zero')\n\n# Set the y-axis label color\nax.yaxis.label.set_color('black')\n\n# Set the y-axis label font size\nax.yaxis.label.set_fontsize(14)\n\n# Set the y-axis label font weight\nax.yaxis.label.set_fontweight('bold')\n\n# Set the y-axis label font style\nax.yaxis.label.set_fontstyle('italic')\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label padding\nax.yaxis.label.set_pad(10)\n\n# Set the y-axis label zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the y-axis label transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label rotation mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label visible\nax.yaxis.label.set_visible(True)\n\n# Set the y"}
{"file": "dataset/ori_500/bar_70.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Human Labeling and Agreement Bias Checking')\n\n# Set the x-axis label\nax.set_xlabel('Human Annotator')\n\n# Set the y-axis label\nax.set_ylabel('Scores')\n\n# Set the x-ticks\nax.set_xticks([1, 2, 3, 4, 5, 6])\n\n# Set the x-tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6'])\n\n# Set the y-ticks\nax.set_yticks(range(0, 51, 10))\n\n# Set the y-tick labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50'])\n\n# Draw a rectangle for each annotator's scores\nax.add_patch(plt.Rectangle((0, 0), 1, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 0), 1, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 0), 1, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 0), 1, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 0), 1, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 0), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each score\nax.add_patch(plt.Rectangle((0, 10), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 10), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 10), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 10), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 10), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 10), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 20), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 20), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 20), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 20), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 20), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 20), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 30), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 30), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 30), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 30), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 30), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 30), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 40), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 40), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 40), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 40), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 40), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 40), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 50), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 50), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 50), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 50), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 50), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 50), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 60), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 60), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 60), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 60), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 60), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 60), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 70), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 70), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 70), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 70), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 70), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 70), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 80), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 80), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 80), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 80), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 80), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 80), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 90), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 90), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 90), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 90), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 90), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 90), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 100), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 100), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 100), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 100), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 100), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 100), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 110), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 110), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 110), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 110), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 110), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 110), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 120), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 120), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 120), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 120), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 120), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 120), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 130), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 130), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 130), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 130), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 130), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 130), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 140), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 140), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 140), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 140), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 140), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 140), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 150), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 150), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 150), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 150), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 150), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 150), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 160), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 160), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 160), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 160), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 160), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 160), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 170), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 170), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 170), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 170), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 170), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 170), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 180), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 180), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 180), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 180), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 180), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 180), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 190), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 190), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 190), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 190), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 190), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 190), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 200), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 200), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 200), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 200), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 200), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 200), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 210), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 210), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 210), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 210), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 210), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 210), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 220), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 220), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 220), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 220), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 220), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 220), 1, 12, color='lightgreen'))\n\n# Draw a rectangle for each annotator's score\nax.add_patch(plt.Rectangle((0, 230), 6, 10, color='lightblue'))\nax.add_patch(plt.Rectangle((1, 230), 5, 8, color='lightgreen'))\nax.add_patch(plt.Rectangle((2, 230), 4, 12, color='lightblue'))\nax.add_patch(plt.Rectangle((3, 230), 3, 10, color='lightgreen'))\nax.add_patch(plt.Rectangle((4, 230), 2, 6, color='lightblue'))\nax.add_patch(plt.Rectangle((5, 230), 1, 12, color='lightgreen'))\n\n# Draw a rectangle"}
{"file": "dataset/ori_500/bar_71.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Product Sales Data')\n\n# Set the x-axis label\nax.set_xlabel('Products')\n\n# Set the y-axis label\nax.set_ylabel('Sales')\n\n# Create a list of products\nproducts = ['coreutils', 'gzip', 'scp', 'libq', 'mcf', 'omnet.', 'perl']\n\n# Create a list of sales data\nsales = [50, 60, 70, 80, 90, 100, 110]\n\n# Create a bar chart\nax.bar(products, sales, color='blue')\n\n# Add a grid\nax.grid(True)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_72.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nbrands = ['Bactrian-X EN', 'Lima-X DE', 'Bactrian-X FR', 'Lima-X IT', 'Bactrian-X ES']\nimprovement = [3.5, 2.3, 4.4, 1.3, 0.7]\nlanguages = ['EN', 'DE', 'FR', 'IT', 'ES']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Plot the bar chart\nax.bar(brands, improvement, color='blue')\n\n# Add labels and title\nax.set_xlabel('Model with Language')\nax.set_ylabel('Improvement [%]')\nax.set_title('Model Performance Improvement by Language')\n\n# Add a color bar which maps values to colors\nsm = plt.cm.ScalarMappable(cmap='viridis', norm=plt.Normalize(vmin=min(improvement), vmax=max(improvement)))\nsm._A = []\ncbar = fig.colorbar(sm)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_73.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the graph\nax.set_title('Dow Jones Index vs Nasdaq Index')\n\n# Set the x-axis label\nax.set_xlabel('Fiscal Quarter')\n\n# Set the y-axis label\nax.set_ylabel('Index Change (%)')\n\n# Set the x-ticks\nax.set_xticks([1, 2, 3, 4, 5])\n\n# Set the x-tick labels\nax.set_xticklabels(['Q1', 'Q2', 'Q3', 'Q4', 'Q5'])\n\n# Set the y-limits\nax.set_ylim(-5, 5)\n\n# Set the y-ticks\nax.set_yticks([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n\n# Set the y-tick labels\nax.set_yticklabels(['-5', '-4', '-3', '-2', '-1', '0', '1', '2', '3', '4', '5'])\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the"}
{"file": "dataset/ori_500/bar_74.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nx = ['E16.6', 'L26.8', 'D19.7', 'L22.2']\ny = [39.4, 35.18, 30.84, 34.06]\ny2 = [35.1, 34.06, 33.0, 32.0, 30.0, 28.0, 26.82, 24.27, 22.2, 20.0, 18.84, 16.96, 14.66, 12.0, 10.0, 8.0, 6.0, 4.0, 2.0, 0.0]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Plot the data\nax.plot(x, y, label='Series 1')\nax.plot(x, y2, label='Series 2')\n\n# Set the title and labels\nax.set_title('Stock Prices')\nax.set_xlabel('Date')\nax.set_ylabel('Price')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_75.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Truthful: Misleading = 2:0')\n\n# Set the x-axis label\nax.set_xlabel('Misleading Recalls')\n\n# Set the y-axis label\nax.set_ylabel('Truthful Recalls')\n\n# Set the x-axis limits\nax.set_xlim(-40, 60)\n\n# Set the y-axis limits\nax.set_ylim(0, 60)\n\n# Set the x-axis ticks\nax.set_xticks(range(-40, 61, 20))\n\n# Set the y-axis ticks\nax.set_yticks(range(0, 61, 10))\n\n# Set the x-axis grid\nax.grid(axis='x')\n\n# Set the y-axis grid\nax.grid(axis='y')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='orange')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='pink')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='cyan')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='magenta')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='yellow')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='brown')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='grey')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='silver')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='orange')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='pink')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='cyan')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='magenta')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='yellow')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='brown')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='grey')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='silver')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='orange')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='pink')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='cyan')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='magenta')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='yellow')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='brown')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='grey')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='silver')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='orange')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='pink')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='cyan')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='magenta')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='yellow')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='brown')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='grey')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='silver')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='orange')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='pink')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='cyan')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='magenta')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='yellow')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='brown')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='grey')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='silver')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='orange')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='pink')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='cyan')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='magenta')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='yellow')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='brown')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='grey')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='silver')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='orange')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='pink')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='cyan')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='magenta')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='yellow')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='brown')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='grey')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='silver')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='orange')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='pink')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='cyan')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='magenta')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='yellow')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='brown')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='grey')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='silver')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='orange')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='pink')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='cyan')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='magenta')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='yellow')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='brown')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='grey')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='silver')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='orange')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='pink')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='cyan')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='magenta')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='yellow')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='brown')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='grey')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='silver')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='orange')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='pink')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='cyan')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='magenta')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='yellow')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='brown')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='grey')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='silver')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='orange')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='pink')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='cyan')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='magenta')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='yellow')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='brown')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='grey')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='silver')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='orange')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='pink')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis"}
{"file": "dataset/ori_500/bar_76.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Environmental Impact by Sector')\n\n# Set the x-axis label\nax.set_xlabel('Industry Sectors')\n\n# Set the y-axis label\nax.set_ylabel('Pollution Emissions (thousands of metric tons)')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3, 4])\nax.set_xticklabels(['Light Industry', 'Heavy Industry', 'Transportation', 'Residential', 'Manufacturing'])\n\n# Set the y-ticks\nax.set_yticks(range(-1600, 1601, 200))\nax.set_yticklabels(['-1600', '-1400', '-1200', '-1000', '-800', '-600', '-400', '-200', '0', '200', '400', '600', '800', '1000', '1200', '1400', '1600'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgrey')\n\n# Set the color of the border\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', bottom=True, top=False, left=True, right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', bottom=False, top=False, left=False, right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\n"}
{"file": "dataset/ori_500/bar_77.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Average City Temperatures')\n\n# Create a bar chart with the data\nax.bar(['Beijing', 'Shanghai', 'Guangzhou', 'Shenzhen', 'Chengdu'], [12, 15, 18, 22, 17], color='skyblue')\n\n# Set the x-axis label\nax.set_xlabel('City')\n\n# Set the y-axis label\nax.set_ylabel('Average Temperature (\u00b0C)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_78.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the plot\nax.set_title('Annual Pollution Emission Reductions')\n\n# Set the x-axis label\nax.set_xlabel('Regions')\n\n# Set the y-axis label\nax.set_ylabel('Emissions (in tons)')\n\n# Define the data for the plot\nregions = ['Region 1', 'Region 2', 'Region 3', 'Region 4']\nemissions_2020 = [120, 150, 180, 210]\nemissions_2021 = [130, 160, 190, 220]\n\n# Plot the data\nax.plot(regions, emissions_2020, color='red', label='2020 Emissions')\nax.plot(regions, emissions_2021, color='blue', label='2021 Emissions')\n\n# Add a legend\nax.legend()\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_79.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data for the pie charts\ndata = [26, 32, 13, 10, 29, 17, 15, 10, 22, 35, 37, 19, 11, 9, 14, 13, 12, 10, 8, 7, 6, 5, 4, 3, 2, 1]\nlabels = ['Question 1', 'Question 2', 'Question 3', 'Question 4', 'Question 5']\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Plot the pie chart\nax.pie(data, labels=labels, autopct='%1.1f%%')\n\n# Set the title of the plot\nax.set_title('Survey Results')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the x-axis values\nx = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n# Set the y-axis values\ny = [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]\n\n# Plot the data\nax.plot(x, y, 'o-')\n\n# Set the title of the plot\nax.set_title('Top-10 superfamily accuracy in training dataset')\n\n# Set the x-axis label\nax.set_xlabel('Top-10 superfamily')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Set the color of the line\nax.plot(x, y, color='blue')\n\n# Set the color of the markers\nax.plot(x, y, 'o', color='red')\n\n# Set the color of the grid\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightblue')\n\n# Set the color of the axes\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the legend\nax.legend(['Accuracy'], loc='upper left', shadow=True)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'This is a text box', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='black')\n\n# Set the color of the annotation\nax.annotate('This is an annotation', xy=(0.5, 0.5), xytext=(0.5, 0.5),\n            arrowprops=dict(facecolor='black', shrink=0.05))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.2, 0.2, color='yellow'))\n\n# Set the color of the ellipse\nax.add_patch(plt.Ellipse((0.5, 0.5), 0.2, 0.2, color='green'))\n\n# Set the color of the polygon\nax.add_patch(plt.Polygon([[0.5, 0.5], [0.5, 0.7], [0.7, 0.5]], color='purple'))\n\n# Set the color of the scatter plot\nax.scatter([0.5, 0.5, 0.5], [0.5, 0.5, 0.5], color='orange')\n\n# Set the color of the bar chart\nax.bar([0.5, 0.5, 0.5], [0.5, 0.5, 0.5], color='pink')\n\n# Set the color of the histogram\nax.hist([0.5, 0.5, 0.5], bins=3, color='brown')\n\n# Set the color of the pie chart\nax.pie([0.5, 0.5, 0.5], labels=['A', 'B', 'C'], colors=['cyan', 'magenta', 'yellow'])\n\n# Set the color of the box plot\nax.boxplot([0.5, 0.5, 0.5])\n\n# Set the color of the violin plot\nax.violinplot([0.5, 0.5, 0.5])\n\n# Set the color of the heatmap\nax.imshow([[0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5]], cmap='hot')\n\n# Set the color of the contour plot\nax.contour([[0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5]])\n\n# Set the color of the contourf plot\nax.contourf([[0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5]])\n\n# Set the color of the streamplot\nax.streamplot([0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5])\n\n# Set the color of the quiver plot\nax.quiver([0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5])\n\n# Set the color of the polar plot\nax.polar([0.5, 0.5, 0.5], [0.5, 0.5, 0.5])\n\n# Set the color of the 3D plot\nax.plot_surface([0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5])\n\n# Set the color of the 3D scatter plot\nax.scatter3D([0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5])\n\n# Set the color of the 3D bar chart\nax.bar3d([0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5])\n\n# Set the color of the 3D histogram\nax.hist3d([0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5], bins=3)\n\n# Set the color of the 3D pie chart\nax.pie3d([0.5, 0.5, 0.5], labels=['A', 'B', 'C'], colors=['cyan', 'magenta', 'yellow'])\n\n# Set the color of the 3D box plot\nax.boxplot3d([0.5, 0.5, 0.5])\n\n# Set the color of the 3D violin plot\nax.violinplot3d([0.5, 0.5, 0.5])\n\n# Set the color of the 3D heatmap\nax.imshow3d([[0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5]], cmap='hot')\n\n# Set the color of the 3D contour plot\nax.contour3d([[0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5]])\n\n# Set the color of the 3D contourf plot\nax.contourf3d([[0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5]])\n\n# Set the color of the 3D streamplot\nax.streamplot3d([0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5])\n\n# Set the color of the 3D quiver plot\nax.quiver3d([0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5])\n\n# Set the color of the 3D polar plot\nax.polar3d([0.5, 0.5, 0.5], [0.5, 0.5, 0.5], [0.5, 0.5, 0.5])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_80.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the plot\nax.set_title('Taboo')\n\n# Set the x-axis label\nax.set_xlabel('Num of Constraint Words')\n\n# Set the y-axis label\nax.set_ylabel('Score')\n\n# Create a bar chart with the data\nax.bar(range(1, 11), [2, 1.8, 1.6, 1.4, 1.2, 1, 0.8, 0.6, 0.4, 0.2], color='blue')\n\n# Add a horizontal line at y=0\nax.axhline(y=0, color='black', linestyle='-')\n\n# Add a vertical line at x=5\nax.axvline(x=5, color='black', linestyle='-')\n\n# Add a rectangle for each constraint word\nfor i in range(1, 11):\n    ax.add_patch(plt.Rectangle((i-0.5, 0), 1, 0.5, color='gray'))\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_81.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nbrands = ['LLaMA', 'Vicuna', 'Alpaca', 'WizardLM']\nrecall = [45.3, 56.9, 34, 53.8, 40, 19.4, 27, 20.7]\nmisleading_recall = [30.1, 34, 34, 43.7]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Plot the data\nax.bar(brands, recall, color='blue')\nax.bar(brands, misleading_recall, bottom=recall, color='pink')\n\n# Set the title and labels\nax.set_title('Truthful: Misleading Recall = 2:1')\nax.set_xlabel('Brand')\nax.set_ylabel('Misleading Recall')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_82.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the bar chart\nbrands = ['Toyota', 'Honda', 'Ford', 'Chevrolet', 'Dodge', 'BMW', 'Audi', 'Mercedes-Benz', 'Jaguar', 'Lexus']\nprobabilities = [25, 30, 15, 20, 25, 28, 22, 24, 26, 29]\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the chart\nax.set_title('Probability of Improvement over VLM Image Encoder Baseline Returns')\n\n# Set the x-axis label\nax.set_xlabel('Brands')\n\n# Set the y-axis label\nax.set_ylabel('Probability of Improvement')\n\n# Create a bar chart\nax.bar(brands, probabilities, color='blue')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_83.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data for the bar chart\nemotions = ['Disapproval', 'Joy', 'Relief', 'Gratitude', 'Annoyance', 'Nervousness', 'Pride', 'Sadness', 'Unbothered', 'Amusement']\nmetrics = [7.6, 7.1, 7.0, 7.0, 6.6, 6.6, 6.7, 6.7, 6.7, 7.1]\ncolors = ['red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet', 'pink', 'brown', 'grey']\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 4))\n\n# Plot the bar chart\nax.bar(emotions, metrics, color=colors)\n\n# Set the title and labels\nax.set_title('Emotion Frequency Metrics')\nax.set_xlabel('Emotions')\nax.set_ylabel('Frequency Metric 1 (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_84.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the title of the plot\nax.set_title('Top 3 Video Games by Player Rating')\n\n# Set the x-axis label\nax.set_xlabel('Player Rating')\n\n# Set the y-axis label\nax.set_ylabel('Game Title')\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 1)\n\n# Set the x-axis ticks\nax.set_xticks([0, 0.25, 0.5, 0.75, 1])\n\n# Set the y-axis ticks\nax.set_yticks([0, 0.25, 0.5, 0.75, 1])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '0.25', '0.5', '0.75', '1'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '0.25', '0.5', '0.75', '1'])\n\n# Set the x-axis grid lines\nax.grid(axis='x')\n\n# Set the y-axis grid lines\nax.grid(axis='y')\n\n# Set the x-axis grid line style\nax.xaxis.grid(True, linestyle='--', linewidth=0.5)\n\n# Set the y-axis grid line style\nax.yaxis.grid(True, linestyle='--', linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.yaxis.grid(alpha=0.5)\n\n# Set the x-axis grid line linestyle\nax.xaxis.grid(linestyle='--')\n\n# Set the y-axis grid line linestyle\nax.yaxis.grid(linestyle='--')\n\n# Set the x-axis grid line linewidth\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line linewidth\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='grey')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='grey')\n\n# Set the x-axis grid line alpha\nax.xaxis.grid(alpha=0.5"}
{"file": "dataset/ori_500/bar_85.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Energy Consumption and Production')\n\n# Set the x-axis label\nax.set_xlabel('Year')\n\n# Set the y-axis label\nax.set_ylabel('Energy Consumption (TWh)')\n\n# Set the x-ticks\nax.set_xticks([0, 500, 1000, 1500, 2000])\n\n# Set the y-ticks\nax.set_yticks([0, 500, 1000, 1500, 2000])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the width of the border\nax.spines['top'].set_linewidth(1)\nax.spines['bottom'].set_linewidth(1)\nax.spines['left'].set_linewidth(1)\nax.spines['right'].set_linewidth(1)\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the legend\nax.legend().get_texts()[0].set_color('black')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, 0.45, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.4, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, 0.35, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, 0.3, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, 0.25, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.2, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, 0.15, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, 0.1, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, 0.05, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.0, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -0.05, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -0.1, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -0.15, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -0.2, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -0.25, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -0.3, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -0.35, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -0.4, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -0.45, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -0.5, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -0.55, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -0.6, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -0.65, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -0.7, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -0.75, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -0.8, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -0.85, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -0.9, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -0.95, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -1.0, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -1.05, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -1.1, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -1.15, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -1.2, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -1.25, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -1.3, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -1.35, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -1.4, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -1.45, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -1.5, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -1.55, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -1.6, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -1.65, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -1.7, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -1.75, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -1.8, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -1.85, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -1.9, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -1.95, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -2.0, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -2.05, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -2.1, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -2.15, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -2.2, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -2.25, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -2.3, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -2.35, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -2.4, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -2.45, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -2.5, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -2.55, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -2.6, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -2.65, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -2.7, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -2.75, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -2.8, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set"}
{"file": "dataset/ori_500/bar_86.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Sentiment Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Sentiment')\n\n# Set the y-axis label\nax.set_ylabel('Percentage')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3, 4])\n\n# Set the x-tick labels\nax.set_xticklabels(['synthetic data', 'human-authored data', 'synthetic data', 'human-authored data', 'synthetic data'])\n\n# Set the y-ticks\nax.set_yticks([0, 5, 10, 15, 20, 25, 30])\n\n# Set the y-tick labels\nax.set_yticklabels(['0%', '5%', '10%', '15%', '20%', '25%', '30%'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'green', 'red', 'purple', 'orange', 'yellow', 'pink'])\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the width of the border\nax.spines['bottom'].set_linewidth(2)\nax.spines['top'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', labelcolor='black')\nax.tick_params(axis='y', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', length=10)\nax.tick_params(axis='y', length=10)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', labelsize=12)\nax.tick_params(axis='y', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='x', width=2)\nax.tick_params(axis='y', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', pad=10)\nax.tick_params(axis='y', pad=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='x', rotation=45)\nax.tick_params(axis='y', rotation=0)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', direction='inout')\nax.tick_params(axis='y', direction='inout')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='major', bottom=True, top=False, left=False, right=False)\nax.tick_params(axis='y', which='major', bottom=False, top=True, left=True, right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='minor', bottom=False, top=False, left=False, right=False)\nax.tick_params(axis='y', which='minor', bottom=False, top=False, left=False, right=False)\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', length=10, width=2, colors='black')\nax.tick_params(axis='y', which='both', length=10, width=2, colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', labelsize=12, labelcolor='black')\nax.tick_params(axis='y', which='both', labelsize=12, labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', pad=10)\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', rotation=45)\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', direction='inout')\nax.tick_params(axis='y', which='both', direction='inout')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', length=10, width=2, colors='black')\nax.tick_params(axis='y', which='both', length=10, width=2, colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', labelsize=12, labelcolor='black')\nax.tick_params(axis='y', which='both', labelsize=12, labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', pad=10)\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', rotation=45)\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', direction='inout')\nax.tick_params(axis='y', which='both', direction='inout')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', length=10, width=2, colors='black')\nax.tick_params(axis='y', which='both', length=10, width=2, colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', labelsize=12, labelcolor='black')\nax.tick_params(axis='y', which='both', labelsize=12, labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', pad=10)\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', rotation=45)\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', direction='inout')\nax.tick_params(axis='y', which='both', direction='inout')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', length=10, width=2, colors='black')\nax.tick_params(axis='y', which='both', length=10, width=2, colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', labelsize=12, labelcolor='black')\nax.tick_params(axis='y', which='both', labelsize=12, labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', pad=10)\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', rotation=45)\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', direction='inout')\nax.tick_params(axis='y', which='both', direction='inout')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', length=10, width=2, colors='black')\nax.tick_params(axis='y', which='both', length=10, width=2, colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', labelsize=12, labelcolor='black')\nax.tick_params(axis='y', which='both', labelsize=12, labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', pad=10)\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', rotation=45)\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', direction='inout')\nax.tick_params(axis='y', which='both', direction='inout')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', length=10, width=2, colors='black')\nax.tick_params(axis='y', which='both', length=10, width=2, colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', labelsize=12, labelcolor='black')\nax.tick_params(axis='y', which='both', labelsize=12, labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', pad=10)\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', rotation=45)\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', direction='inout')\nax.tick_params(axis='y', which='both', direction='inout')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', length=10, width=2, colors='black')\nax.tick_params(axis='y', which='both', length=10, width=2, colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', labelsize=12, labelcolor='black')\nax.tick_params(axis='y', which='both', labelsize=12, labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', pad=10)\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', rotation=45)\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', direction='inout')\nax.tick_params(axis='y', which='both', direction='inout')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', length=10, width=2, colors='black')\nax.tick_params(axis='y', which='both', length=10, width=2, colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', labelsize=12, labelcolor='black')\nax.tick_params(axis='y', which='both', labelsize=12, labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', pad=10)\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', rotation=45)\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', direction='inout')\nax.tick_params(axis='y', which='both', direction='inout')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', length=10, width=2, colors='black')\nax.tick_params(axis='y', which='both', length=10, width=2, colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', labelsize=12, labelcolor='black')\nax.tick_params(axis='y', which='both', labelsize=12, labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', pad=10)\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', rotation=45)\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', direction='inout')\nax.tick_params(axis='y', which='both', direction='inout')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', length=10, width=2, colors='black')\nax.tick_params(axis='y', which='both', length=10, width=2, colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', labelsize=12, labelcolor='black')\nax.tick_params(axis='y', which='both', labelsize=12, labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', pad=10)\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', rotation=45)\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', direction='inout')\nax.tick_params(axis='y', which='both', direction='inout')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', length=10, width=2, colors='black')\nax.tick_params(axis='y', which='both', length=10, width=2, colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', labelsize=12, labelcolor='black')\nax.tick_params(axis='y', which='both', labelsize=12, labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', pad=10)\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', rotation=45)\nax.tick_params(axis='y', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', direction='inout')\nax.tick_params(axis='y', which='both', direction='inout')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', bottom=True, top=False, left=False, right=False)\nax.tick_params(axis='y', which='both', bottom=False, top=True, left=True, right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', length=10, width=2, colors='black')\nax.tick_params(axis='y', which='both', length=10, width=2, colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', which='both', labelsize=12, labelcolor='black')\nax.tick_params(axis='y', which='both', labelsize=12, labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', which='both', pad=10)\nax.tick_params(axis='y', which='both', pad=10)\n\n# Set the color of the tick labels\nax.tick_params(axis"}
{"file": "dataset/ori_500/bar_87.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Set the x-axis limits\nax.set_xlim(-10, 10)\n\n# Set the y-axis limits\nax.set_ylim(-10, 10)\n\n# Set the x-axis ticks\nax.set_xticks(range(-10, 11, 2))\n\n# Set the y-axis ticks\nax.set_yticks(range(-10, 11, 2))\n\n# Set the x-axis labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'])\n\n# Set the y-axis labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'])\n\n# Set the title of the plot\nax.set_title('Stock Market Analysis')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('red')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('blue')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='grey', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the title\nax.title.set_color('purple')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('orange')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('cyan')\n\n# Set the color of the x-axis tick labels\nax.set_xlabel('Time (in minutes)', color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_ylabel('Price (in dollars)', color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='pink')\n\n# Set the color of the y-axis tick labels\nax.set_yticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'], color='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='grey', linestyle='--')\n\n# Set"}
{"file": "dataset/ori_500/bar_88.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Scores by group and constraint word count')\n\n# Define the x-axis values\nx = [-3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0]\n\n# Define the y-axis values for each group\ny1 = [3.2, 3.3, 3.2, 2.2, 2.3, 2.2, 2.2, 2.2]\ny2 = [1.9, 1.9, 1.9, 1.7, 1.6, 1.8, 1.9, 1.9]\ny3 = [0.8, 0.8, 0.8, 0.7, 0.7, 0.6, 0.6, 0.6]\ny4 = [0.5, 0.5, 0.5, 0.4, 0.4, 0.4, 0.4, 0.4]\ny5 = [0.3, 0.3, 0.3, 0.2, 0.2, 0.2, 0.2, 0.2]\ny6 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\n\n# Plot the data\nax.plot(x, y1, label='Vicuna-HAG', color='red')\nax.plot(x, y2, label='Vicuna-Default', color='blue')\nax.plot(x, y3, label='LLAMA-HAG', color='green')\nax.plot(x, y4, label='LLAMA-Default', color='purple')\nax.plot(x, y5, label='3 Constraint Words', color='orange')\nax.plot(x, y6, label='10 Constraint Words', color='cyan')\n\n# Add a legend\nax.legend()\n\n# Set the x-axis limits\nax.set_xlim(-3.5, 0)\n\n# Set the y-axis limits\nax.set_ylim(0, 3.5)\n\n# Set the x-axis ticks\nax.set_xticks([-3.5, -3, -2.5, -2, -1.5, -1, -0.5, 0])\n\n# Set the y-axis ticks\nax.set_yticks([0, 0.5, 1, 1.5, 2, 2.5, 3])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_89.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Top 10 Superfamilies in Training Dataset')\n\n# Set the x-axis label\nax.set_xlabel('Superfamily')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Create a bar chart with the data\nax.bar(range(1, 11), [0.95, 0.85, 0.75, 0.65, 0.55, 0.45, 0.35, 0.25, 0.15, 0.05], color='blue')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the title of the plot\nax.set_title('GENIA')\n\n# Set the x-axis label\nax.set_xlabel('Error Correction Rate (%)')\n\n# Set the y-axis label\nax.set_ylabel('Time (ms)')\n\n# Set the x-axis limits\nax.set_xlim(0, 100)\n\n# Set the y-axis limits\nax.set_ylim(0, 100)\n\n# Create a bar chart\nax.bar(['Type', 'Span', 'T&S', 'Spurious', 'Total'], [50, 40, 30, 20, 10], color='blue')\n\n# Create a scatter plot\nax.scatter(['Type', 'Span', 'T&S', 'Spurious', 'Total'], [70, 60, 50, 40, 30], color='red')\n\n# Create a line plot\nax.plot(['Type', 'Span', 'T&S', 'Spurious', 'Total'], [80, 70, 60, 50, 40], color='green')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_90.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nmodels = ['GPT4V', 'OSCAR', 'LLaMA', 'BLIP2', 'BLIP1', 'Video-LLaMA', 'Lavila']\nscores_a = [82.5, 73.93, 31.79, 4.64, 4.64, 0.71, 0.0]\nscores_b = [20, 25, 30, 35, 40, 45, 50]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 8))\n\n# Plot the scores\nax.bar(models, scores_a, color='red')\nax.bar(models, scores_b, bottom=scores_a, color='blue')\n\n# Set the title and labels\nax.set_title('Human Study')\nax.set_xlabel('Model')\nax.set_ylabel('Score A (%)')\n\n# Add a horizontal line for each model\nfor i, model in enumerate(models):\n    ax.axhline(y=scores_a[i], color='black', linestyle='-')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_91.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Define the data\nphases = ['GCN', 'RvNN', 'Hyphen', 'GET']\nscores = [75, 80, 85, 90]\ncolors = ['blue', 'orange', 'red', 'pink']\n\n# Plot the data\nfor i in range(len(phases)):\n    ax.barh(phases[i], scores[i], color=colors[i])\n\n# Set the title and labels\nax.set_title('Phases of the Project')\nax.set_xlabel('Macro F1-score')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_92.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\nax.set_title('Resonance Preference Plot for rich-context')\n\n# Data for the first subplot\nx1 = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny1 = [0, 100, 200, 300, 400, 500, 600, 700, 800]\nax.plot(x1, y1, 'b-')\nax.fill_between(x1, y1, color='blue', alpha=0.2)\n\n# Data for the second subplot\nx2 = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny2 = [0, 100, 200, 300, 400, 500, 600, 700, 800]\nax.plot(x2, y2, 'g-')\nax.fill_between(x2, y2, color='green', alpha=0.2)\n\n# Data for the third subplot\nx3 = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny3 = [0, 100, 200, 300, 400, 500, 600, 700, 800]\nax.plot(x3, y3, 'r-')\nax.fill_between(x3, y3, color='red', alpha=0.2)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_93.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the first graph\neffort_data = [20.4, 29.6, 20.4, 20.4, 20.4, 9.3]\nbrainwave_data = [7.1, 38.1, 14.3, 16.7, 0, 20.4, 20.4, 9.3]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6, 3))\n\n# Plot the data\nax.bar(range(len(effort_data)), effort_data, color='red')\nax.bar(range(len(brainwave_data)), brainwave_data, color='green')\n\n# Set the labels\nax.set_xticks(range(len(effort_data)))\nax.set_xticklabels(['Very Low', 'Low', 'Neutral', 'High', 'Very High'])\n\n# Set the title\nax.set_title('Eye Movement')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_94.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Stock Market Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Rate of Gain Change[%]')\n\n# Create a bar chart\nbars = ax.bar(range(10), np.random.randint(0, 50, 10), color='blue')\n\n# Add labels to the bars\nfor bar in bars:\n    yval = bar.get_height()\n    ax.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom')\n\n# Create a scatter plot\nscatters = ax.scatter(range(10), np.random.randint(0, 50, 10), color='red')\n\n# Add labels to the scatter points\nfor scatter in scatters:\n    yval = scatter.get_y()\n    ax.text(scatter.get_x(), yval, round(yval, 2), ha='right', va='bottom')\n\n# Create a line plot\nlines = ax.plot(range(10), np.random.randint(0, 50, 10), color='green')\n\n# Add labels to the line plot\nfor line in lines:\n    yval = line.get_ydata()\n    for i, val in enumerate(yval):\n        ax.text(i, val, round(val, 2), ha='right', va='bottom')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_95.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Model Performance Improvement by Language')\n\n# Set the x-axis label\nax.set_xlabel('Model with Language')\n\n# Set the y-axis label\nax.set_ylabel('Performance [mW]')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3, 4, 5])\n\n# Set the x-tick labels\nax.set_xticklabels(['Bactrian-X EN', 'Lima-X DE', 'Bactrian-X FR', 'Lima-X IT', 'Bactrian-X ES'])\n\n# Set the y-limits\nax.set_ylim([-4, 5])\n\n# Set the y-ticks\nax.set_yticks([-4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n\n# Set the y-tick labels\nax.set_yticklabels(['-4.0', '-3.0', '-2.0', '-1.0', '0.0', '1.0', '2.0', '3.0', '4.0', '5.0'])\n\n# Set the grid\nax.grid(True)\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='blue')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='orange')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='green')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='yellow')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='purple')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='red')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='brown')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='grey')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='cyan')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='magenta')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='lime')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='pink')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='silver')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='gold')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='navy')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='olive')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='maroon')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='teal')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='aqua')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='fuchsia')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='white')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='black')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='silver')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='gold')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='navy')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='olive')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='maroon')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='teal')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='aqua')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='fuchsia')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='white')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='black')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='silver')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='gold')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='navy')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='olive')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='maroon')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='teal')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='aqua')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='fuchsia')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='white')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='black')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='silver')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='gold')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='navy')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='olive')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='maroon')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -0.7], bottom=[3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='teal')\n\n# Set the language bar chart\nax.bar([0, 1, 2, 3, 4, 5], [3.5, 2.3, 0.3, 3.4, 1.3, -0.7], color='aqua')\n\n# Set the performance bar chart\nax.bar([0, 1, 2, 3, 4, 5], [4.4, 2.3, 0.3, 3.4, 1.3, -"}
{"file": "dataset/ori_500/bar_96.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Truthful: Misleading = 2:0')\n\n# Create a bar chart with the data\nax.bar(['Random', 'Ours', 'SOTA'], [66.3, 61.9, 53.8], color='blue')\nax.bar(['Random', 'Ours', 'SOTA'], [10.1, 13.6, 13.7], color='red')\n\n# Set the y-axis limits\nax.set_ylim(-10, 80)\n\n# Add a grid\nax.grid(True)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_97.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Human Labeling and Agreement Bias Checking 1')\n\n# Create a bar chart with the data\nax.bar(range(1, 7), [50, 40, 30, 20, 10, 0], color='pink')\n\n# Set the x-axis labels\nax.set_xticks(range(1, 7))\nax.set_xticklabels(['1', '2', '3', '4', '5', '6'])\n\n# Set the y-axis label\nax.set_ylabel('Scores')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_98.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nmodels = ['Model A', 'Model B', 'Model C', 'Model D', 'Model E', 'Model F', 'Model G', 'Model H', 'Model I']\nscores = [54.9, 38.3, 71.5, 79.2, 70.3, 54.5, 52.9, 42.4, 92.6, 89.2, 83.3, 96.4, 83.3, 71.1, 64.6, 60.3, 56.8, 43.8, 87.1, 8.7, 2.0]\ncolors = ['green', 'orange', 'brown', 'red', 'blue', 'cyan', 'magenta', 'yellow']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Plot the data\nfor i in range(len(models)):\n    ax.bar(models[i], scores[i], color=colors[i % len(colors)])\n\n# Set the title and labels\nax.set_title('Performance Comparison by Model')\nax.set_xlabel('Models')\nax.set_ylabel('Scores')\n\n# Add a legend\nax.legend(['Contrastive Search', 'Beam Search'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_99.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the first graph\nx = ['Traffic Flow', 'Accident Rate', 'Public Transport Usage', 'Road Conditions', 'Public Satisfaction']\ny = [150.0, 180.0, 75.0, 90.0, 80.0]\ncolors = ['orange', 'orange', 'orange', 'orange', 'orange']\n\n# Data for the second graph\nx2 = ['Traffic Flow', 'Accident Rate', 'Public Transport Usage', 'Road Conditions', 'Public Satisfaction']\ny2 = [2.5, 2.0, 1.5, 2.0, 1.0]\ncolors2 = ['lightblue', 'lightblue', 'lightblue', 'lightblue', 'lightblue']\n\n# Data for the third graph\nx3 = ['Traffic Flow', 'Accident Rate', 'Public Transport Usage', 'Road Conditions', 'Public Satisfaction']\ny3 = [60.0, 55.0, 70.0, 65.0, 72.0]\ncolors3 = ['lightgreen', 'lightgreen', 'lightgreen', 'lightgreen', 'lightgreen']\n\n# Data for the fourth graph\nx4 = ['Traffic Flow', 'Accident Rate', 'Public Transport Usage', 'Road Conditions', 'Public Satisfaction']\ny4 = [80.0, 75.0, 90.0, 85.0, 88.0]\ncolors4 = ['yellow', 'yellow', 'yellow', 'yellow', 'yellow']\n\nfig, axs = plt.subplots(2, 2, figsize=(10, 8))\n\naxs[0, 0].bar(x, y, color=colors)\naxs[0, 0].set_title('Dataset 1')\naxs[0, 0].set_xlabel('Metrics')\naxs[0, 0].set_ylabel('Values')\n\naxs[0, 1].bar(x2, y2, color=colors2)\naxs[0, 1].set_title('Dataset 2')\naxs[0, 1].set_xlabel('Metrics')\naxs[0, 1].set_ylabel('Values')\n\naxs[1, 0].bar(x3, y3, color=colors3)\naxs[1, 0].set_title('Dataset 3')\naxs[1, 0].set_xlabel('Metrics')\naxs[1, 0].set_ylabel('Values')\n\naxs[1, 1].bar(x4, y4, color=colors4)\naxs[1, 1].set_title('Dataset 4')\naxs[1, 1].set_xlabel('Metrics')\naxs[1, 1].set_ylabel('Values')\n\nplt.tight_layout()\nplt.show()\n```"}
{"file": "dataset/ori_500/box_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(10, 8))\nax.set_title('Dominance')\nax.set_xlabel('SAM Rating')\nax.set_ylabel('Color')\n\n# Define the colors and their corresponding SAM ratings\ncolors = ['neutral', 'yellow high', 'yellow low', 'green high', 'green low', 'blue high', 'blue low', 'red high', 'red low', 'orange']\nsam_ratings = [5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\n\n# Create a bar chart for each color\nfor i, color in enumerate(colors):\n    ax.bar(color, sam_ratings[i], color='grey')\n\n# Add a horizontal line at the middle of the chart\nax.axhline(y=7.5, color='black', linestyle='-')\n\n# Add a vertical line at the middle of the chart\nax.axvline(x=5, color='black', linestyle='-')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/box_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(9, 5))\n\n# Set the title of the plot\nax.set_title('Daily Activity Durations')\n\n# Create a bar chart for gaming duration\ngaming_duration = [20, 30, 40, 50, 60]\ngaming_hours = ['20', '30', '40', '50', '60']\nax.bar(gaming_hours, gaming_duration, color='blue')\n\n# Create a bar chart for exercise duration\nexercise_duration = [10, 20, 30, 40, 50]\nexercise_hours = ['20', '30', '40', '50', '60']\nax.bar(exercise_hours, exercise_duration, color='green')\n\n# Create a bar chart for reading duration\nreading_duration = [5, 10, 15, 20, 25]\nreading_hours = ['20', '30', '40', '50', '60']\nax.bar(reading_hours, reading_duration, color='yellow')\n\n# Create a bar chart for music playtime\nmusic_playtime = [10, 20, 30, 40, 50]\nmusic_hours = ['20', '30', '40', '50', '60']\nax.bar(music_hours, music_playtime, color='purple')\n\n# Set the x-axis label\nax.set_xlabel('Duration (minutes)')\n\n# Set the y-axis label\nax.set_ylabel('Activity')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Llama-70b (T2TT) vs Llama-70b (S2TT)')\n\n# Set the x-axis label\nax.set_xlabel('Llama-70b (T2TT)')\n\n# Set the y-axis label\nax.set_ylabel('Llama-70b (S2TT)')\n\n# Set the x-axis limits\nax.set_xlim(15, 25)\n\n# Set the y-axis limits\nax.set_ylim(15, 25)\n\n# Set the x-axis ticks\nax.set_xticks([15, 20, 25])\n\n# Set the y-axis ticks\nax.set_yticks([15, 20, 25])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['15', '20', '25'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['15', '20', '25'])\n\n# Set the x-axis grid lines\nax.grid(True)\n\n# Set the y-axis grid lines\nax.grid(True)\n\n# Set the x-axis line color\nax.spines['left'].set_color('black')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('black')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['right'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['top'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['right'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['top'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['right'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['top'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['right'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['top'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['right'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['top'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['right'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['top'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['right'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['top'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['right'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['top'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['right'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['top'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['right'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['top'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['right'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['top'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['right'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['top'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['right'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['top'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['right'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['top'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['right'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['top'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['right'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['top'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['right'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['top'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['right'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['top'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['right'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['top'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['right'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['top'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['right'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['top'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['right'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['top'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['right'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['top'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['right'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['top'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['right'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['top'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['right'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['top'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['right'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['top'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['right'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['top'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['right'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['top'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['right'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['top'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['right'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['top'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['right'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['top'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['right'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['top'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['right'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['top'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['right'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['top'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['right'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['top'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['right'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['top'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['right'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['top'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['right'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['top'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['right'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['top'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['right'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['top'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['right'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['top'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['right'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['top'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['right'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['top'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['right'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['top'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['right'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['top'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['right'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['top'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['right'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['top'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set"}
{"file": "dataset/ori_500/box_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis and y-axis limits\nax.set_xlim(0, 1)\nax.set_ylim(2.5, 6.0)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('Time (s)')\nax.set_ylabel('Position (m)')\n\n# Set the title of the plot\nax.set_title('Position vs Time')\n\n# Create a scatter plot with the data\nax.scatter([0, 1], [3, 4], color='blue')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 8))\n\n# Set the title of the plot\nax.set_title('Execution Accuracy')\n\n# Set the x-axis label\nax.set_xlabel('Execution Time')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3, 4])\nax.set_xticklabels(['SQL-Only', 'PoT', 'IC-LP', 'DAIL', 'IC-LP+PoT'])\n\n# Set the y-ticks\nax.set_yticks([0.75, 0.8, 0.85, 0.9, 0.95])\n\n# Set the y-tick labels\nax.set_yticklabels(['0.75', '0.8', '0.85', '0.9', '0.95'])\n\n# Draw rectangles for each bar\nax.bar([0, 1, 2, 3, 4], [0.85, 0.87, 0.88, 0.9, 0.92], color='lightblue')\nax.bar([0, 1, 2, 3, 4], [0.82, 0.84, 0.86, 0.88, 0.9], color='lightgreen')\n\n# Draw lines for each bar\nfor i in range(5):\n    ax.plot([i, i], [0.85, 0.82], color='black')\n    ax.plot([i, i], [0.87, 0.84], color='black')\n    ax.plot([i, i], [0.88, 0.86], color='black')\n    ax.plot([i, i], [0.9, 0.88], color='black')\n    ax.plot([i, i], [0.92, 0.9], color='black')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the left plot\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the left plot\nax.set_title('Region Classification Accuracy')\n\n# Create a bar chart with the accuracy data\naccuracy_data = [0.88, 0.87, 0.83]\nregions = ['DENSE (ref)', 'Joint Multimodal Framework (ours)', 'Cine']\nax.bar(regions, accuracy_data, color='blue')\n\n# Add a star icon at the top of the bar chart\nax.text(1.5, 1.2, '*', fontsize=20, ha='center', va='center')\n\n# Create a figure and axis for the right plot\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the right plot\nax.set_title('Slice Mean Error (ms)')\n\n# Create a bar chart with the slice mean error data\nerror_data = [9.00, 9.33, 9.66, 9.99]\nregions = ['DENSE (ref)', 'Joint Multimodal Framework (ours)', 'Cine']\nax.bar(regions, error_data, color='green')\n\n# Add a star icon at the top of the bar chart\nax.text(1.5, 1.2, '*', fontsize=20, ha='center', va='center')\n\n# Display the plots\nplt.show()\n```"}
{"file": "dataset/ori_500/box_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Z-Score Threshold')\n\n# Set the x-axis label\nax.set_xlabel('Time Period')\n\n# Set the y-axis label\nax.set_ylabel('Z-Score')\n\n# Create a scatter plot with a red line\nax.plot([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 'ro-')\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='blue')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='green')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='red')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='purple')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='orange')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='pink')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='cyan')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='yellow')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='black')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='white')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='gray')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='brown')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='gold')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='navy')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='olive')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='lime')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='aqua')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='fuchsia')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='silver')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='maroon')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='olive')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='lime')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='teal')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='aqua')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='fuchsia')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='gold')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='navy')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='olive')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='lime')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='aqua')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='fuchsia')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='silver')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='maroon')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='olive')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='lime')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='teal')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='aqua')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='fuchsia')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='gold')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='navy')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='olive')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='lime')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='aqua')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='fuchsia')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='silver')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='maroon')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='olive')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='lime')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='teal')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='aqua')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='fuchsia')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='gold')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='navy')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='olive')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='lime')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='aqua')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='fuchsia')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='silver')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='maroon')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='olive')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='lime')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='teal')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='aqua')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='fuchsia')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='gold')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='navy')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='olive')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='lime')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='aqua')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='fuchsia')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='silver')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='maroon')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='olive')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='lime')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='teal')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='aqua')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='fuchsia')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='gold')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='navy')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='olive')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='lime')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='aqua')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='fuchsia')\nax.add_patch(rect)\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='silver')\nax.add_patch(circle)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0.5, 0.5), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a circle patch"}
{"file": "dataset/ori_500/box_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Mean')\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Value')\n\n# Set the x-axis limits\nax.set_xlim(1, 3)\n\n# Set the y-axis limits\nax.set_ylim(0, 3)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(1, 4, 1))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 4, 1))\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((1, 2), 1, 1, color='blue')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((1, 1), 1, 1, color='green')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((1, 0), 1, 1, color='orange')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((2, 2), 1, 1, color='purple')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((2, 1), 1, 1, color='brown')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((2, 0), 1, 1, color='pink')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((3, 2), 1, 1, color='yellow')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((3, 1), 1, 1, color='gray')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((3, 0), 1, 1, color='cyan')\nax.add_patch(rect)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Player Performance')\n\n# Set the x-axis labels\nx_labels = ['Run 1', 'Run 2', 'Run 3', 'Run 4', 'Run 5', 'Run 6', 'Run 7', 'Run 8', 'Run 9', 'Run 10']\nax.set_xticks(np.arange(len(x_labels)))\nax.set_xticklabels(x_labels)\n\n# Set the y-axis label\nax.set_ylabel('Value')\n\n# Set the y-axis limits\nax.set_ylim([0, 100])\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 101, 10))\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box edges\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the box fill\nax.patch.set_facecolor('white')\n\n# Set the color of the box edge\nax.patch.set_edgecolor('black')\n\n# Set the color of the box line width\nax.patch.set_linewidth(1.0)\n\n# Set the color of the box line style\nax.patch.set_linestyle('-')\n\n# Set the color of the box line capstyle\nax.patch.set_capstyle('projecting')\n\n# Set the color of the box line joinstyle\nax.patch.set_joinstyle('round')\n\n# Set the color of the box line hatch\nax.patch.set_hatch('')\n\n# Set the color of the box line antialiased\nax.patch.set_antialiased(True)\n\n# Set the color of the box line visible\nax.patch.set_visible(True)\n\n# Set the color of the box line zorder\nax.patch.set_zorder(0)\n\n# Set the color of the box line transform\nax.patch.set_transform(ax.transAxes)\n\n# Set the color of the box line path\nax.patch.set_path(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0, 1]]))\n\n# Set the color of the box line path codes\nax.patch.set_path_codes(np.array([Path.MOVETO, Path.LINETO, Path.LINETO, Path.CLOSEPOLY]))\n\n# Set the color of the box line path closed\nax.patch.set_path_closed(True)\n\n# Set the color of the box line path vertices\nax.patch.set_path_vertices(np.array([[0, 0], [1, 0], [1, 1], [0"}
{"file": "dataset/ori_500/box_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the background color of the plot\nax.set_facecolor('lightyellow')\n\n# Create a rectangle for the logo\nlogo = plt.Rectangle((0.45, 0.9), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo)\n\n# Create a rectangle for the title\ntitle = plt.Rectangle((0.2, 0.85), 0.6, 0.1, fc='lightblue', ec='black')\nax.add_patch(title)\n\n# Create a rectangle for the subtitle\nsubtitle = plt.Rectangle((0.3, 0.8), 0.4, 0.1, fc='lightgreen', ec='black')\nax.add_patch(subtitle)\n\n# Create a rectangle for the main content\nmain_content = plt.Rectangle((0.1, 0.7), 0.8, 0.3, fc='lightgrey', ec='black')\nax.add_patch(main_content)\n\n# Create a rectangle for the footer\nfooter = plt.Rectangle((0.1, 0.1), 0.8, 0.1, fc='lightcyan', ec='black')\nax.add_patch(footer)\n\n# Create a rectangle for the sidebar\nsidebar = plt.Rectangle((0.9, 0.1), 0.1, 0.9, fc='lightpink', ec='black')\nax.add_patch(sidebar)\n\n# Create a rectangle for the logo in the sidebar\nlogo_sidebar = plt.Rectangle((0.9, 0.9), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_sidebar)\n\n# Create a rectangle for the main content in the sidebar\nmain_content_sidebar = plt.Rectangle((0.8, 0.7), 0.1, 0.3, fc='lightgrey', ec='black')\nax.add_patch(main_content_sidebar)\n\n# Create a rectangle for the footer in the sidebar\nfooter_sidebar = plt.Rectangle((0.8, 0.1), 0.1, 0.1, fc='lightcyan', ec='black')\nax.add_patch(footer_sidebar)\n\n# Create a rectangle for the main content in the main content\nmain_content_main = plt.Rectangle((0.1, 0.7), 0.8, 0.3, fc='lightgrey', ec='black')\nax.add_patch(main_content_main)\n\n# Create a rectangle for the footer in the main content\nfooter_main = plt.Rectangle((0.1, 0.1), 0.8, 0.1, fc='lightcyan', ec='black')\nax.add_patch(footer_main)\n\n# Create a rectangle for the sidebar in the main content\nsidebar_main = plt.Rectangle((0.9, 0.1), 0.1, 0.9, fc='lightpink', ec='black')\nax.add_patch(sidebar_main)\n\n# Create a rectangle for the logo in the sidebar in the main content\nlogo_sidebar_main = plt.Rectangle((0.9, 0.9), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_sidebar_main)\n\n# Create a rectangle for the main content in the sidebar in the main content\nmain_content_sidebar_main = plt.Rectangle((0.8, 0.7), 0.1, 0.3, fc='lightgrey', ec='black')\nax.add_patch(main_content_sidebar_main)\n\n# Create a rectangle for the footer in the sidebar in the main content\nfooter_sidebar_main = plt.Rectangle((0.8, 0.1), 0.1, 0.1, fc='lightcyan', ec='black')\nax.add_patch(footer_sidebar_main)\n\n# Create a rectangle for the main content in the sidebar in the main content in the main content\nmain_content_sidebar_main_main = plt.Rectangle((0.7, 0.7), 0.1, 0.3, fc='lightgrey', ec='black')\nax.add_patch(main_content_sidebar_main_main)\n\n# Create a rectangle for the footer in the sidebar in the main content in the main content in the main content\nfooter_sidebar_main_main = plt.Rectangle((0.7, 0.1), 0.1, 0.1, fc='lightcyan', ec='black')\nax.add_patch(footer_sidebar_main_main)\n\n# Create a rectangle for the sidebar in the sidebar in the main content in the main content in the main content\nsidebar_sidebar_main_main = plt.Rectangle((0.6, 0.1), 0.1, 0.9, fc='lightpink', ec='black')\nax.add_patch(sidebar_sidebar_main_main)\n\n# Create a rectangle for the logo in the sidebar in the sidebar in the main content in the main content in the main content\nlogo_sidebar_sidebar_main_main = plt.Rectangle((0.6, 0.9), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_sidebar_sidebar_main_main)\n\n# Create a rectangle for the main content in the sidebar in the sidebar in the main content in the main content in the main content\nmain_content_sidebar_sidebar_main_main = plt.Rectangle((0.5, 0.7), 0.1, 0.3, fc='lightgrey', ec='black')\nax.add_patch(main_content_sidebar_sidebar_main_main)\n\n# Create a rectangle for the footer in the sidebar in the sidebar in the main content in the main content in the main content in the main content\nfooter_sidebar_sidebar_main_main = plt.Rectangle((0.5, 0.1), 0.1, 0.1, fc='lightcyan', ec='black')\nax.add_patch(footer_sidebar_sidebar_main_main)\n\n# Create a rectangle for the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content\nsidebar_sidebar_sidebar_main_main = plt.Rectangle((0.4, 0.1), 0.1, 0.9, fc='lightpink', ec='black')\nax.add_patch(sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the logo in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content\nlogo_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.4, 0.9), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the main content in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content\nmain_content_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.3, 0.7), 0.1, 0.3, fc='lightgrey', ec='black')\nax.add_patch(main_content_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the footer in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content\nfooter_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.3, 0.1), 0.1, 0.1, fc='lightcyan', ec='black')\nax.add_patch(footer_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content\nsidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.2, 0.1), 0.1, 0.9, fc='lightpink', ec='black')\nax.add_patch(sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the logo in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content\nlogo_sidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.2, 0.9), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the main content in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content\nmain_content_sidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.1, 0.7), 0.1, 0.3, fc='lightgrey', ec='black')\nax.add_patch(main_content_sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the footer in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content in the main content\nfooter_sidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.1, 0.1), 0.1, 0.1, fc='lightcyan', ec='black')\nax.add_patch(footer_sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content in the main content\nsidebar_sidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.0, 0.1), 0.1, 0.9, fc='lightpink', ec='black')\nax.add_patch(sidebar_sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the logo in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content in the main content\nlogo_sidebar_sidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.0, 0.9), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_sidebar_sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the main content in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content in the main content\nmain_content_sidebar_sidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.0, 0.7), 0.1, 0.3, fc='lightgrey', ec='black')\nax.add_patch(main_content_sidebar_sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the footer in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content in the main content in the main content\nfooter_sidebar_sidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.0, 0.1), 0.1, 0.1, fc='lightcyan', ec='black')\nax.add_patch(footer_sidebar_sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content in the main content in the main content\nsidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.0, 0.0), 0.1, 0.9, fc='lightpink', ec='black')\nax.add_patch(sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the logo in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content in the main content in the main content\nlogo_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.0, 0.9), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the main content in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content in the main content in the main content\nmain_content_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.0, 0.7), 0.1, 0.3, fc='lightgrey', ec='black')\nax.add_patch(main_content_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the footer in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content in the main content in the main content in the main content\nfooter_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.0, 0.1), 0.1, 0.1, fc='lightcyan', ec='black')\nax.add_patch(footer_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content in the main content in the main content in the main content\nsidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.0, 0.0), 0.1, 0.9, fc='lightpink', ec='black')\nax.add_patch(sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the logo in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content in the main content in the main content in the main content\nlogo_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.0, 0.9), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the main content in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content in the main content in the main content in the main content\nmain_content_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.0, 0.7), 0.1, 0.3, fc='lightgrey', ec='black')\nax.add_patch(main_content_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the footer in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content in the main content in the main content in the main content in the main content\nfooter_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.0, 0.1), 0.1, 0.1, fc='lightcyan', ec='black')\nax.add_patch(footer_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content in the main content in the main content in the main content in the main content\nsidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.0, 0.0), 0.1, 0.9, fc='lightpink', ec='black')\nax.add_patch(sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the logo in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content in the main content in the main content in the main content in the main content\nlogo_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.0, 0.9), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the main content in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content in the main content in the main content in the main content in the main content\nmain_content_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.0, 0.7), 0.1, 0.3, fc='lightgrey', ec='black')\nax.add_patch(main_content_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the footer in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content in the main content in the main content in the main content in the main content in the main content\nfooter_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.0, 0.1), 0.1, 0.1, fc='lightcyan', ec='black')\nax.add_patch(footer_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content in the main content in the main content in the main content in the main content in the main content\nsidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.0, 0.0), 0.1, 0.9, fc='lightpink', ec='black')\nax.add_patch(sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the logo in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content in the main content in the main content in the main content in the main content in the main content\nlogo_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main = plt.Rectangle((0.0, 0.9), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_sidebar_main_main)\n\n# Create a rectangle for the main content in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the sidebar in the main content in the main content in the main content in the main content in the main content in the"}
{"file": "dataset/ori_500/box_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(2, 3, figsize=(10, 4))\n\n# Set the titles for each subplot\naxs[0, 0].set_title('EME sentences')\naxs[0, 1].set_title('Neutral sentences')\naxs[0, 2].set_title('ME sentences')\n\n# Create a scatter plot for each subplot\nfor i in range(3):\n    # Generate random data for each subplot\n    x = np.random.rand(10)\n    y = np.random.rand(10)\n    # Plot the data\n    axs[0, i].scatter(x, y)\n    # Add a rectangle to the subplot\n    rect = plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='blue', alpha=0.5)\n    axs[0, i].add_patch(rect)\n\n# Repeat the process for the second row of subplots\nfor i in range(3):\n    # Generate random data for each subplot\n    x = np.random.rand(10)\n    y = np.random.rand(10)\n    # Plot the data\n    axs[1, i].scatter(x, y)\n    # Add a rectangle to the subplot\n    rect = plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='green', alpha=0.5)\n    axs[1, i].add_patch(rect)\n\n# Set the labels for the x-axis\naxs[0, 0].set_xlabel('BERT Base')\naxs[0, 1].set_xlabel('MacBERT')\naxs[0, 2].set_xlabel('English HLM')\n\n# Set the labels for the y-axis\naxs[0, 0].set_ylabel('\u03b4 (m/s)')\naxs[1, 0].set_ylabel('\u03b4 (m/s)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(2, 2, figsize=(8.0, 6.0))\n\n# Set the title for each subplot\naxs[0, 0].set_title('Ratings')\naxs[0, 1].set_title('Intrustion')\naxs[1, 0].set_title('Ratings')\naxs[1, 1].set_title('Intrustion')\n\n# Create a color map\ncmap = plt.get_cmap('Blues')\n\n# Create a scatter plot for each subplot\nfor ax in axs.flat:\n    ax.scatter(np.random.rand(5), np.random.rand(5), c=np.random.rand(5), cmap=cmap)\n    ax.set_xlim([0, 1])\n    ax.set_ylim([0, 1])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(2, 3, figsize=(10, 5))\n\n# Set the title for each subplot\naxs[0, 0].set_title('Digit span')\naxs[0, 1].set_title('Lexical decision')\naxs[0, 2].set_title('Lexical decision')\naxs[1, 0].set_title('Reaction time')\naxs[1, 1].set_title('Trail making')\naxs[1, 2].set_title('Trail making')\n\n# Create a scatter plot for each subplot\naxs[0, 0].scatter(np.random.rand(10), np.random.rand(10), color='blue')\naxs[0, 1].scatter(np.random.rand(10), np.random.rand(10), color='orange')\naxs[0, 2].scatter(np.random.rand(10), np.random.rand(10), color='red')\naxs[1, 0].scatter(np.random.rand(10), np.random.rand(10), color='blue')\naxs[1, 1].scatter(np.random.rand(10), np.random.rand(10), color='orange')\naxs[1, 2].scatter(np.random.rand(10), np.random.rand(10), color='red')\n\n# Add a legend to each subplot\naxs[0, 0].legend(['target', 'control'], loc='upper left')\naxs[0, 1].legend(['target', 'control'], loc='upper left')\naxs[0, 2].legend(['target', 'control'], loc='upper left')\naxs[1, 0].legend(['target', 'control'], loc='upper left')\naxs[1, 1].legend(['target', 'control'], loc='upper left')\naxs[1, 2].legend(['target', 'control'], loc='upper left')\n\n# Set the x and y limits for each subplot\naxs[0, 0].set_xlim([0, 1])\naxs[0, 0].set_ylim([0, 1])\naxs[0, 1].set_xlim([0, 1])\naxs[0, 1].set_ylim([0, 1])\naxs[0, 2].set_xlim([0, 1])\naxs[0, 2].set_ylim([0, 1])\naxs[1, 0].set_xlim([0, 1])\naxs[1, 0].set_ylim([0, 1])\naxs[1, 1].set_xlim([0, 1])\naxs[1, 1].set_ylim([0, 1])\naxs[1, 2].set_xlim([0, 1])\naxs[1, 2].set_ylim([0, 1])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9, 5))\n\n# Set the title of the plot\nax.set_title('Methods')\n\n# Create a bar chart with the data\nax.bar(['BG', 'IBP', 'SSP', 'NBP'], [20, 30, 40, 50], color='blue')\n\n# Set the x-axis label\nax.set_xlabel('Prediction Accuracy v_{D_1}')\n\n# Set the y-axis label\nax.set_ylabel('Percentage')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_22.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Set the x-axis limits\nax.set_xlim([50, 350])\n\n# Set the y-axis limits\nax.set_ylim([-0.06, 0.06])\n\n# Set the x-axis label\nax.set_xlabel('Search depth')\n\n# Set the y-axis label\nax.set_ylabel('Reward')\n\n# Create a scatter plot\nax.scatter([50, 100, 150, 200, 250, 300, 350], [0.04, 0.02, 0.01, 0.03, 0.05, 0.04, 0.06], color='blue')\n\n# Add a title\nax.set_title('Deep Q-Learning Reward vs Search Depth')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_23.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9, 5))\n\n# Set the title of the plot\nax.set_title('Daily Activity Durations')\n\n# Create a bar chart with the data\nax.bar(['Music Playtime', 'Reading Duration', 'Exercise Duration', 'Gaming Duration'], [65.1, 55.7, 50.3, 29.5], color='blue')\n\n# Set the x-axis label\nax.set_xlabel('Activity')\n\n# Set the y-axis label\nax.set_ylabel('Duration (minutes)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Mean Value')\n\n# Create a bar chart with the data\nax.bar(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'], [1.5, 2.5, 2.0, 1.8, 1.6], color='blue')\n\n# Set the x-axis label\nax.set_xlabel('Intervention Type')\n\n# Set the y-axis label\nax.set_ylabel('Mean Value')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_25.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the x-axis limits\nax.set_xlim(-40, 40)\n\n# Set the y-axis limits\nax.set_ylim(-0.5, 7.5)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(-40, 41, 20))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 8, 1))\n\n# Set the x-axis label\nax.set_xlabel('Angular Frequency [rad/s]')\n\n# Set the y-axis label\nax.set_ylabel('Thrust [N]')\n\n# Set the title of the plot\nax.set_title('Rocket Thrust vs Angular Frequency')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a horizontal line at y=0\nax.axhline(y=0, color='k', linestyle='-')\n\n# Add a rectangle representing the rocket\nrect = plt.Rectangle((-30, -0.5), 60, 7, fc='blue')\nax.add_patch(rect)\n\n# Add a rectangle representing the propellant\npropellant = plt.Rectangle((-20, -0.5), 40, 7, fc='green')\nax.add_patch(propellant)\n\n# Add a rectangle representing the engine\nengine = plt.Rectangle((-10, -0.5), 20, 7, fc='red')\nax.add_patch(engine)\n\n# Add a rectangle representing the fins\nfins = plt.Rectangle((0, -0.5), 10, 7, fc='cyan')\nax.add_patch(fins)\n\n# Add a rectangle representing the tail fins\ntail_fins = plt.Rectangle((10, -0.5), 10, 7, fc='magenta')\nax.add_patch(tail_fins)\n\n# Add a rectangle representing the nose cone\nnose_cone = plt.Rectangle((20, -0.5), 10, 7, fc='yellow')\nax.add_patch(nose_cone)\n\n# Add a rectangle representing the rocket body\nbody = plt.Rectangle((30, -0.5), 10, 7, fc='orange')\nax.add_patch(body)\n\n# Add a rectangle representing the rocket tail\ntail = plt.Rectangle((40, -0.5), 10, 7, fc='purple')\nax.add_patch(tail)\n\n# Add a rectangle representing the rocket wings\nwings = plt.Rectangle((-30, 7), 60, 1, fc='brown')\nax.add_patch(wings)\n\n# Add a rectangle representing the rocket stabilizers\nstabilizers = plt.Rectangle((-20, 7), 40, 1, fc='grey')\nax.add_patch(stabilizers)\n\n# Add a rectangle representing the rocket thrusters\nthrusters = plt.Rectangle((-10, 7), 20, 1, fc='black')\nax.add_patch(thrusters)\n\n# Add a rectangle representing the rocket exhaust\nexhaust = plt.Rectangle((0, 7), 10, 1, fc='white')\nax.add_patch(exhaust)\n\n# Add a rectangle representing the rocket fuel tank\nfuel_tank = plt.Rectangle((10, 7), 10, 1, fc='silver')\nax.add_patch(fuel_tank)\n\n# Add a rectangle representing the rocket landing gear\nlanding_gear = plt.Rectangle((20, 7), 10, 1, fc='gold')\nax.add_patch(landing_gear)\n\n# Add a rectangle representing the rocket navigation system\nnavigation_system = plt.Rectangle((30, 7), 10, 1, fc='pink')\nax.add_patch(navigation_system)\n\n# Add a rectangle representing the rocket communication system\ncommunication_system = plt.Rectangle((40, 7), 10, 1, fc='lime')\nax.add_patch(communication_system)\n\n# Add a rectangle representing the rocket propulsion system\npropulsion_system = plt.Rectangle((-30, 8), 60, 1, fc='cyan')\nax.add_patch(propulsion_system)\n\n# Add a rectangle representing the rocket guidance system\nguidance_system = plt.Rectangle((-20, 8), 40, 1, fc='magenta')\nax.add_patch(guidance_system)\n\n# Add a rectangle representing the rocket control system\ncontrol_system = plt.Rectangle((-10, 8), 20, 1, fc='yellow')\nax.add_patch(control_system)\n\n# Add a rectangle representing the rocket power system\npower_system = plt.Rectangle((0, 8), 10, 1, fc='orange')\nax.add_patch(power_system)\n\n# Add a rectangle representing the rocket thermal protection system\nthermal_protection_system = plt.Rectangle((10, 8), 10, 1, fc='purple')\nax.add_patch(thermal_protection_system)\n\n# Add a rectangle representing the rocket life support system\nlife_support_system = plt.Rectangle((20, 8), 10, 1, fc='brown')\nax.add_patch(life_support_system)\n\n# Add a rectangle representing the rocket emergency system\nemergency_system = plt.Rectangle((30, 8), 10, 1, fc='grey')\nax.add_patch(emergency_system)\n\n# Add a rectangle representing the rocket recovery system\nrecovery_system = plt.Rectangle((40, 8), 10, 1, fc='black')\nax.add_patch(recovery_system)\n\n# Add a rectangle representing the rocket propulsion system\npropulsion_system = plt.Rectangle((-30, 9), 60, 1, fc='white')\nax.add_patch(propulsion_system)\n\n# Add a rectangle representing the rocket guidance system\nguidance_system = plt.Rectangle((-20, 9), 40, 1, fc='silver')\nax.add_patch(guidance_system)\n\n# Add a rectangle representing the rocket control system\ncontrol_system = plt.Rectangle((-10, 9), 20, 1, fc='gold')\nax.add_patch(control_system)\n\n# Add a rectangle representing the rocket power system\npower_system = plt.Rectangle((0, 9), 10, 1, fc='pink')\nax.add_patch(power_system)\n\n# Add a rectangle representing the rocket thermal protection system\nthermal_protection_system = plt.Rectangle((10, 9), 10, 1, fc='lime')\nax.add_patch(thermal_protection_system)\n\n# Add a rectangle representing the rocket life support system\nlife_support_system = plt.Rectangle((20, 9), 10, 1, fc='cyan')\nax.add_patch(life_support_system)\n\n# Add a rectangle representing the rocket emergency system\nemergency_system = plt.Rectangle((30, 9), 10, 1, fc='magenta')\nax.add_patch(emergency_system)\n\n# Add a rectangle representing the rocket recovery system\nrecovery_system = plt.Rectangle((40, 9), 10, 1, fc='yellow')\nax.add_patch(recovery_system)\n\n# Add a rectangle representing the rocket propulsion system\npropulsion_system = plt.Rectangle((-30, 10), 60, 1, fc='orange')\nax.add_patch(propulsion_system)\n\n# Add a rectangle representing the rocket guidance system\nguidance_system = plt.Rectangle((-20, 10), 40, 1, fc='purple')\nax.add_patch(guidance_system)\n\n# Add a rectangle representing the rocket control system\ncontrol_system = plt.Rectangle((-10, 10), 20, 1, fc='brown')\nax.add_patch(control_system)\n\n# Add a rectangle representing the rocket power system\npower_system = plt.Rectangle((0, 10), 10, 1, fc='grey')\nax.add_patch(power_system)\n\n# Add a rectangle representing the rocket thermal protection system\nthermal_protection_system = plt.Rectangle((10, 10), 10, 1, fc='black')\nax.add_patch(thermal_protection_system)\n\n# Add a rectangle representing the rocket life support system\nlife_support_system = plt.Rectangle((20, 10), 10, 1, fc='white')\nax.add_patch(life_support_system)\n\n# Add a rectangle representing the rocket emergency system\nemergency_system = plt.Rectangle((30, 10), 10, 1, fc='silver')\nax.add_patch(emergency_system)\n\n# Add a rectangle representing the rocket recovery system\nrecovery_system = plt.Rectangle((40, 10), 10, 1, fc='gold')\nax.add_patch(recovery_system)\n\n# Add a rectangle representing the rocket propulsion system\npropulsion_system = plt.Rectangle((-30, 11), 60, 1, fc='pink')\nax.add_patch(propulsion_system)\n\n# Add a rectangle representing the rocket guidance system\nguidance_system = plt.Rectangle((-20, 11), 40, 1, fc='lime')\nax.add_patch(guidance_system)\n\n# Add a rectangle representing the rocket control system\ncontrol_system = plt.Rectangle((-10, 11), 20, 1, fc='cyan')\nax.add_patch(control_system)\n\n# Add a rectangle representing the rocket power system\npower_system = plt.Rectangle((0, 11), 10, 1, fc='magenta')\nax.add_patch(power_system)\n\n# Add a rectangle representing the rocket thermal protection system\nthermal_protection_system = plt.Rectangle((10, 11), 10, 1, fc='yellow')\nax.add_patch(thermal_protection_system)\n\n# Add a rectangle representing the rocket life support system\nlife_support_system = plt.Rectangle((20, 11), 10, 1, fc='orange')\nax.add_patch(life_support_system)\n\n# Add a rectangle representing the rocket emergency system\nemergency_system = plt.Rectangle((30, 11), 10, 1, fc='purple')\nax.add_patch(emergency_system)\n\n# Add a rectangle representing the rocket recovery system\nrecovery_system = plt.Rectangle((40, 11), 10, 1, fc='brown')\nax.add_patch(recovery_system)\n\n# Add a rectangle representing the rocket propulsion system\npropulsion_system = plt.Rectangle((-30, 12), 60, 1, fc='grey')\nax.add_patch(propulsion_system)\n\n# Add a rectangle representing the rocket guidance system\nguidance_system = plt.Rectangle((-20, 12), 40, 1, fc='black')\nax.add_patch(guidance_system)\n\n# Add a rectangle representing the rocket control system\ncontrol_system = plt.Rectangle((-10, 12), 20, 1, fc='white')\nax.add_patch(control_system)\n\n# Add a rectangle representing the rocket power system\npower_system = plt.Rectangle((0, 12), 10, 1, fc='silver')\nax.add_patch(power_system)\n\n# Add a rectangle representing the rocket thermal protection system\nthermal_protection_system = plt.Rectangle((10, 12), 10, 1, fc='gold')\nax.add_patch(thermal_protection_system)\n\n# Add a rectangle representing the rocket life support system\nlife_support_system = plt.Rectangle((20, 12), 10, 1, fc='pink')\nax.add_patch(life_support_system)\n\n# Add a rectangle representing the rocket emergency system\nemergency_system = plt.Rectangle((30, 12), 10, 1, fc='lime')\nax.add_patch(emergency_system)\n\n# Add a rectangle representing the rocket recovery system\nrecovery_system = plt.Rectangle((40, 12), 10, 1, fc='cyan')\nax.add_patch(recovery_system)\n\n# Add a rectangle representing the rocket propulsion system\npropulsion_system = plt.Rectangle((-30, 13), 60, 1, fc='magenta')\nax.add_patch(propulsion_system)\n\n# Add a rectangle representing the rocket guidance system\nguidance_system = plt.Rectangle((-20, 13), 40, 1, fc='yellow')\nax.add_patch(guidance_system)\n\n# Add a rectangle representing the rocket control system\ncontrol_system = plt.Rectangle((-10, 13), 20, 1, fc='orange')\nax.add_patch(control_system)\n\n# Add a rectangle representing the rocket power system\npower_system = plt.Rectangle((0, 13), 10, 1, fc='purple')\nax.add_patch(power_system)\n\n# Add a rectangle representing the rocket thermal protection system\nthermal_protection_system = plt.Rectangle((10, 13), 10, 1, fc='brown')\nax.add_patch(thermal_protection_system)\n\n# Add a rectangle representing the rocket life support system\nlife_support_system = plt.Rectangle((20, 13), 10, 1, fc='grey')\nax.add_patch(life_support_system)\n\n# Add a rectangle representing the rocket emergency system\nemergency_system = plt.Rectangle((30, 13), 10, 1, fc='black')\nax.add_patch(emergency_system)\n\n# Add a rectangle representing the rocket recovery system\nrecovery_system = plt.Rectangle((40, 13), 10, 1, fc='white')\nax.add_patch(recovery_system)\n\n# Add a rectangle representing the rocket propulsion system\npropulsion_system = plt.Rectangle((-30, 14), 60, 1, fc='silver')\nax.add_patch(propulsion_system)\n\n# Add a rectangle representing the rocket guidance system\nguidance_system = plt.Rectangle((-20, 14), 40, 1, fc='gold')\nax.add_patch(guidance_system)\n\n# Add a rectangle representing the rocket control system\ncontrol_system = plt.Rectangle((-10, 14), 20, 1, fc='pink')\nax.add_patch(control_system)\n\n# Add a rectangle representing the rocket power system\npower_system = plt.Rectangle((0, 14), 10, 1, fc='lime')\nax.add_patch(power_system)\n\n# Add a rectangle representing the rocket thermal protection system\nthermal_protection_system = plt.Rectangle((10, 14), 10, 1, fc='cyan')\nax.add_patch(thermal_protection_system)\n\n# Add a rectangle representing the rocket life support system\nlife_support_system = plt.Rectangle((20, 14), 10, 1, fc='magenta')\nax.add_patch(life_support_system)\n\n# Add a rectangle representing the rocket emergency system\nemergency_system = plt.Rectangle((30, 14), 10, 1, fc='yellow')\nax.add_patch(emergency_system)\n\n# Add a rectangle representing the rocket recovery system\nrecovery_system = plt.Rectangle((40, 14), 10, 1, fc='orange')\nax.add_patch(recovery_system)\n\n# Add a rectangle representing the rocket propulsion system\npropulsion_system = plt.Rectangle((-30, 15), 60, 1, fc='purple')\nax.add_patch(propulsion_system)\n\n# Add a rectangle representing the rocket guidance system\nguidance_system = plt.Rectangle((-20, 15), 40, 1, fc='brown')\nax.add_patch(guidance_system)\n\n# Add a rectangle representing the rocket control system\ncontrol_system = plt.Rectangle((-10, 15), 20, 1, fc='grey')\nax.add_patch(control_system)\n\n# Add a rectangle representing the rocket power system\npower_system = plt.Rectangle((0, 15), 10, 1, fc='black')\nax.add_patch(power_system)\n\n# Add a rectangle representing the rocket thermal protection system\nthermal_protection_system = plt.Rectangle((10, 15), 10, 1, fc='white')\nax.add_patch(thermal_protection_system)\n\n# Add a rectangle representing the rocket life support system\nlife_support_system = plt.Rectangle((20, 15), 10, 1, fc='silver')\nax.add_patch(life_support_system)\n\n# Add a rectangle representing the rocket emergency system\nemergency_system = plt.Rectangle((30, 15), 10, 1, fc='gold')\nax.add_patch(emergency_system)\n\n# Add a rectangle representing the rocket recovery system\nrecovery_system = plt.Rectangle((40, 15), 10, 1, fc='pink')\nax.add_patch(recovery_system)\n\n# Add a rectangle representing the rocket propulsion system\npropulsion_system = plt.Rectangle((-30, 16), 60, 1, fc='lime')\nax.add_patch(propulsion_system)\n\n# Add a rectangle representing the rocket guidance system\nguidance_system = plt.Rectangle((-20, 16), 40, 1, fc='cyan')\nax.add_patch(guidance_system)\n\n# Add a rectangle representing the rocket control system\ncontrol_system = plt.Rectangle((-10, 16), 20, 1, fc='magenta')\nax.add_patch(control_system)\n\n# Add a rectangle representing the rocket power system\npower_system = plt.Rectangle((0, 16), 10, 1, fc='yellow')\nax.add_patch(power_system)\n\n# Add a rectangle representing the rocket thermal protection system\nthermal_protection_system = plt.Rectangle((10, 16), 10, 1, fc='orange')\nax.add_patch(thermal_protection_system)\n\n# Add a rectangle representing the rocket life support system\nlife_support_system = plt.Rectangle((20, 16), 10, 1, fc='purple')\nax.add_patch(life_support_system)\n\n# Add a rectangle representing the rocket emergency system\nemergency_system = plt.Rectangle((30, 16), 10, 1, fc='brown')\nax.add_patch(emergency_system)\n\n# Add a rectangle representing the rocket recovery system\nrecovery_system = plt.Rectangle((40, 16), 10, 1, fc='grey')\nax.add_patch(recovery_system)\n\n# Add a rectangle representing the rocket propulsion system\npropulsion_system = plt.Rectangle((-30, 17), 60, 1, fc='black')\nax.add_patch(propulsion_system)\n\n# Add a rectangle representing the rocket guidance system\nguidance_system = plt.Rectangle((-20, 17), 40, 1, fc='white')\nax.add_patch(guidance_system)\n\n# Add a rectangle representing the rocket control system\ncontrol_system = plt.Rectangle((-10, 17), 20, 1, fc='silver')\nax.add_patch(control_system)\n\n# Add a rectangle representing the rocket power system\npower_system = plt.Rectangle((0, 17), 10, 1, fc='gold')\nax.add_patch(power_system)\n\n# Add a rectangle representing the rocket thermal protection system\nthermal_protection_system = plt.Rectangle((10, 17), 10, 1, fc='pink')\nax.add_patch(thermal_protection_system)\n\n# Add a rectangle representing the rocket life support system\n"}
{"file": "dataset/ori_500/box_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Stock Market Performance')\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Performance (%)')\n\n# Set the x-axis limits\nax.set_xlim([0, 10])\n\n# Set the y-axis limits\nax.set_ylim([-10, 70])\n\n# Set the x-axis ticks\nax.set_xticks([0, 2, 4, 6, 8, 10])\n\n# Set the y-axis ticks\nax.set_yticks([0, 10, 20, 30, 40, 50, 60, 70])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both',"}
{"file": "dataset/ori_500/box_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 3))\n\n# Set the title of the plot\nax.set_title('Human Normalized Score')\n\n# Create a scatter plot\nx = np.random.rand(50)\ny = np.random.rand(50)\nax.scatter(x, y)\n\n# Set the x-axis label\nax.set_xlabel('Human Normalized Score')\n\n# Set the y-axis label\nax.set_ylabel('Human Normalized Score')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Thrust Angle vs Angular Frequency')\n\n# Set the x-axis label\nax.set_xlabel('Angular Frequency [rad/s]')\n\n# Set the y-axis label\nax.set_ylabel('Thrust Angle [\u00b0]')\n\n# Set the x-axis limits\nax.set_xlim([2.0, 5.0])\n\n# Set the y-axis limits\nax.set_ylim([-60, 60])\n\n# Set the grid\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\n"}
{"file": "dataset/ori_500/box_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the title of the plot\nax.set_title('Stock Market Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Candlestick (db)')\n\n# Set the y-axis label\nax.set_ylabel('Stock Price (USD)')\n\n# Set the x-axis limits\nax.set_xlim(-10, 10)\n\n# Set the y-axis limits\nax.set_ylim(0, 12)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(-10, 11, 2))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 13, 2))\n\n# Set the x-axis grid lines\nax.grid(True)\n\n# Set the y-axis grid lines\nax.grid(True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['-10dB', '-8dB', '-6dB', '-4dB', '-2dB', '0dB', '2dB', '4dB', '6dB', '8dB', '10dB'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['$0', '$2', '$4', '$6', '$8', '$10', '$12'])\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', colors='red')\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', colors='blue')\n\n# Set the x-axis label color\nax.xaxis.label.set_color('green')\n\n# Set the y-axis label color\nax.yaxis.label.set_color('purple')\n\n# Set the x-axis title color\nax.title.set_color('orange')\n\n# Set the y-axis title color\nax.title.set_color('pink')\n\n# Set the x-axis grid line color\nax.grid(color='black')\n\n# Set the y-axis grid line color\nax.grid(color='black')\n\n# Set the x-axis tick label rotation\nax.set_xticklabels(rotation=45)\n\n# Set the y-axis tick label rotation\nax.set_yticklabels(rotation=45)\n\n# Set the x-axis tick label font size\nax.set_xticklabels(fontsize=12)\n\n# Set the y-axis tick label font size\nax.set_yticklabels(fontsize=12)\n\n# Set the x-axis tick label font weight\nax.set_xticklabels(fontweight='bold')\n\n# Set the y-axis tick label font weight\nax.set_yticklabels(fontweight='bold')\n\n# Set the x-axis tick label font style\nax.set_xticklabels(fontstyle='italic')\n\n# Set the y-axis tick label font style\nax.set_yticklabels(fontstyle='italic')\n\n# Set the x-axis tick label font family\nax.set_xticklabels(fontfamily='serif')\n\n# Set the y-axis tick label font family\nax.set_yticklabels(fontfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.set_xticklabels(fontvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.set_yticklabels(fontvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.set_xticklabels(fontstretch='condensed')\n\n# Set the y-axis tick label font stretch\nax.set_yticklabels(fontstretch='expanded')\n\n# Set the x-axis tick label font size\nax.set_xticklabels(fontsize=12)\n\n# Set the y-axis tick label font size\nax.set_yticklabels(fontsize=12)\n\n# Set the x-axis tick label font weight\nax.set_xticklabels(fontweight='bold')\n\n# Set the y-axis tick label font weight\nax.set_yticklabels(fontweight='bold')\n\n# Set the x-axis tick label font style\nax.set_xticklabels(fontstyle='italic')\n\n# Set the y-axis tick label font style\nax.set_yticklabels(fontstyle='italic')\n\n# Set the x-axis tick label font family\nax.set_xticklabels(fontfamily='serif')\n\n# Set the y-axis tick label font family\nax.set_yticklabels(fontfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.set_xticklabels(fontvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.set_yticklabels(fontvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.set_xticklabels(fontstretch='condensed')\n\n# Set the y-axis tick label font stretch\nax.set_yticklabels(fontstretch='expanded')\n\n# Set the x-axis tick label font size\nax.set_xticklabels(fontsize=12)\n\n# Set the y-axis tick label font size\nax.set_yticklabels(fontsize=12)\n\n# Set the x-axis tick label font weight\nax.set_xticklabels(fontweight='bold')\n\n# Set the y-axis tick label font weight\nax.set_yticklabels(fontweight='bold')\n\n# Set the x-axis tick label font style\nax.set_xticklabels(fontstyle='italic')\n\n# Set the y-axis tick label font style\nax.set_yticklabels(fontstyle='italic')\n\n# Set the x-axis tick label font family\nax.set_xticklabels(fontfamily='serif')\n\n# Set the y-axis tick label font family\nax.set_yticklabels(fontfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.set_xticklabels(fontvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.set_yticklabels(fontvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.set_xticklabels(fontstretch='condensed')\n\n# Set the y-axis tick label font stretch\nax.set_yticklabels(fontstretch='expanded')\n\n# Set the x-axis tick label font size\nax.set_xticklabels(fontsize=12)\n\n# Set the y-axis tick label font size\nax.set_yticklabels(fontsize=12)\n\n# Set the x-axis tick label font weight\nax.set_xticklabels(fontweight='bold')\n\n# Set the y-axis tick label font weight\nax.set_yticklabels(fontweight='bold')\n\n# Set the x-axis tick label font style\nax.set_xticklabels(fontstyle='italic')\n\n# Set the y-axis tick label font style\nax.set_yticklabels(fontstyle='italic')\n\n# Set the x-axis tick label font family\nax.set_xticklabels(fontfamily='serif')\n\n# Set the y-axis tick label font family\nax.set_yticklabels(fontfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.set_xticklabels(fontvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.set_yticklabels(fontvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.set_xticklabels(fontstretch='condensed')\n\n# Set the y-axis tick label font stretch\nax.set_yticklabels(fontstretch='expanded')\n\n# Set the x-axis tick label font size\nax.set_xticklabels(fontsize=12)\n\n# Set the y-axis tick label font size\nax.set_yticklabels(fontsize=12)\n\n# Set the x-axis tick label font weight\nax.set_xticklabels(fontweight='bold')\n\n# Set the y-axis tick label font weight\nax.set_yticklabels(fontweight='bold')\n\n# Set the x-axis tick label font style\nax.set_xticklabels(fontstyle='italic')\n\n# Set the y-axis tick label font style\nax.set_yticklabels(fontstyle='italic')\n\n# Set the x-axis tick label font family\nax.set_xticklabels(fontfamily='serif')\n\n# Set the y-axis tick label font family\nax.set_yticklabels(fontfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.set_xticklabels(fontvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.set_yticklabels(fontvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.set_xticklabels(fontstretch='condensed')\n\n# Set the y-axis tick label font stretch\nax.set_yticklabels(fontstretch='expanded')\n\n# Set the x-axis tick label font size\nax.set_xticklabels(fontsize=12)\n\n# Set the y-axis tick label font size\nax.set_yticklabels(fontsize=12)\n\n# Set the x-axis tick label font weight\nax.set_xticklabels(fontweight='bold')\n\n# Set the y-axis tick label font weight\nax.set_yticklabels(fontweight='bold')\n\n# Set the x-axis tick label font style\nax.set_xticklabels(fontstyle='italic')\n\n# Set the y-axis tick label font style\nax.set_yticklabels(fontstyle='italic')\n\n# Set the x-axis tick label font family\nax.set_xticklabels(fontfamily='serif')\n\n# Set the y-axis tick label font family\nax.set_yticklabels(fontfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.set_xticklabels(fontvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.set_yticklabels(fontvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.set_xticklabels(fontstretch='condensed')\n\n# Set the y-axis tick label font stretch\nax.set_yticklabels(fontstretch='expanded')\n\n# Set the x-axis tick label font size\nax.set_xticklabels(fontsize=12)\n\n# Set the y-axis tick label font size\nax.set_yticklabels(fontsize=12)\n\n# Set the x-axis tick label font weight\nax.set_xticklabels(fontweight='bold')\n\n# Set the y-axis tick label font weight\nax.set_yticklabels(fontweight='bold')\n\n# Set the x-axis tick label font style\nax.set_xticklabels(fontstyle='italic')\n\n# Set the y-axis tick label font style\nax.set_yticklabels(fontstyle='italic')\n\n# Set the x-axis tick label font family\nax.set_xticklabels(fontfamily='serif')\n\n# Set the y-axis tick label font family\nax.set_yticklabels(fontfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.set_xticklabels(fontvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.set_yticklabels(fontvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.set_xticklabels(fontstretch='condensed')\n\n# Set the y-axis tick label font stretch\nax.set_yticklabels(fontstretch='expanded')\n\n# Set the x-axis tick label font size\nax.set_xticklabels(fontsize=12)\n\n# Set the y-axis tick label font size\nax.set_yticklabels(fontsize=12)\n\n# Set the x-axis tick label font weight\nax.set_xticklabels(fontweight='bold')\n\n# Set the y-axis tick label font weight\nax.set_yticklabels(fontweight='bold')\n\n# Set the x-axis tick label font style\nax.set_xticklabels(fontstyle='italic')\n\n# Set the y-axis tick label font style\nax.set_yticklabels(fontstyle='italic')\n\n# Set the x-axis tick label font family\nax.set_xticklabels(fontfamily='serif')\n\n# Set the y-axis tick label font family\nax.set_yticklabels(fontfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.set_xticklabels(fontvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.set_yticklabels(fontvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.set_xticklabels(fontstretch='condensed')\n\n# Set the y-axis tick label font stretch\nax.set_yticklabels(fontstretch='expanded')\n\n# Set the x-axis tick label font size\nax.set_xticklabels(fontsize=12)\n\n# Set the y-axis tick label font size\nax.set_yticklabels(fontsize=12)\n\n# Set the x-axis tick label font weight\nax.set_xticklabels(fontweight='bold')\n\n# Set the y-axis tick label font weight\nax.set_yticklabels(fontweight='bold')\n\n# Set the x-axis tick label font style\nax.set_xticklabels(fontstyle='italic')\n\n# Set the y-axis tick label font style\nax.set_yticklabels(fontstyle='italic')\n\n# Set the x-axis tick label font family\nax.set_xticklabels(fontfamily='serif')\n\n# Set the y-axis tick label font family\nax.set_yticklabels(fontfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.set_xticklabels(fontvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.set_yticklabels(fontvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.set_xticklabels(fontstretch='condensed')\n\n# Set the y-axis tick label font stretch\nax.set_yticklabels(fontstretch='expanded')\n\n# Set the x-axis tick label font size\nax.set_xticklabels(fontsize=12)\n\n# Set the y-axis tick label font size\nax.set_yticklabels(fontsize=12)\n\n# Set the x-axis tick label font weight\nax.set_xticklabels(fontweight='bold')\n\n# Set the y-axis tick label font weight\nax.set_yticklabels(fontweight='bold')\n\n# Set the x-axis tick label font style\nax.set_xticklabels(fontstyle='italic')\n\n# Set the y-axis tick label font style\nax.set_yticklabels(fontstyle='italic')\n\n# Set the x-axis tick label font family\nax.set_xticklabels(fontfamily='serif')\n\n# Set the y-axis tick label font family\nax.set_yticklabels(fontfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.set_xticklabels(fontvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.set_yticklabels(fontvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.set_xticklabels(fontstretch='condensed')\n\n# Set the y-axis tick label font stretch\nax.set_yticklabels(fontstretch='expanded')\n\n# Set the x-axis tick label font size\nax.set_xticklabels(fontsize=12)\n\n# Set the y-axis tick label font size\nax.set_yticklabels(fontsize=12)\n\n# Set the x-axis tick label font weight\nax.set_xticklabels(fontweight='bold')\n\n# Set the y-axis tick label font weight\nax.set_yticklabels(fontweight='bold')\n\n# Set the x-axis tick label font style\nax.set_xticklabels(fontstyle='italic')\n\n# Set the y-axis tick label font style\nax.set_yticklabels(fontstyle='italic')\n\n# Set the x-axis tick label font family\nax.set_xticklabels(fontfamily='serif')\n\n# Set the y-axis tick label font family\nax.set_yticklabels(fontfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.set_xticklabels(fontvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.set_yticklabels(fontvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.set_xticklabels(fontstretch='condensed')\n\n# Set the y-axis tick label font stretch\nax.set_yticklabels(fontstretch='expanded')\n\n# Set the x-axis tick label font size\nax.set_xticklabels(fontsize=12)\n\n# Set the y-axis tick label font size\nax.set_yticklabels(fontsize=12)\n\n# Set the x-axis tick label font weight\nax.set_xticklabels(fontweight='bold')\n\n# Set the y-axis tick label font weight\nax.set_yticklabels(fontweight='bold')\n\n# Set the x-axis tick label font style\nax.set_xticklabels(fontstyle='italic')\n\n# Set the y-axis tick label font style\nax.set_yticklabels(fontstyle='italic')\n\n# Set the x-axis tick label font family\nax.set_xticklabels(fontfamily='serif')\n\n# Set the y-axis tick label font family\nax.set_yticklabels(fontfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.set_xticklabels(fontvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.set_yticklabels(fontvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.set_xticklabels(fontstretch='condensed')\n\n# Set the y-axis tick label font stretch\nax.set_yticklabels(fontstretch='expanded')\n\n# Set the x-axis tick label font size\nax.set_xticklabels(fontsize=12)\n\n# Set the y-axis tick label font size\nax.set_yticklabels(fontsize=12)\n\n# Set the x-axis tick label font weight\nax.set_xticklabels(fontweight='bold')\n\n# Set the y-axis tick label font weight\nax.set_yticklabels(fontweight='bold')\n\n# Set the x-axis tick label font style\nax.set_xticklabels(fontstyle='italic')\n\n# Set the y-axis tick label font style\nax.set_yticklabels(fontstyle='italic')\n\n# Set the x-axis tick label font family\nax.set_xticklabels(fontfamily='serif')\n\n# Set the y-axis tick label font family\nax.set_yticklabels(fontfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.set_xticklabels(fontvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.set_yticklabels(fontvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.set_xticklabels(fontstretch='condensed')\n\n# Set the y-axis tick label font stretch\nax.set_yticklabels(fontstretch='expanded')\n\n# Set the x-axis tick label font size\nax.set_xticklabels(fontsize=12)\n\n# Set the y-axis tick label font size\nax.set_yticklabels(fontsize=12)\n\n# Set the x-axis tick label font weight\nax.set_xticklabels(fontweight='bold')\n\n# Set the y-axis tick label font weight\nax.set_yticklabels(fontweight='bold')\n\n# Set the x-axis tick label font style\nax.set_xticklabels(fontstyle='italic')\n\n# Set the y-axis tick label font style\nax.set_yticklabels(fontstyle='italic')\n\n# Set the x-axis tick label font family\nax.set_xticklabels(fontfamily='serif')\n\n# Set the y-axis tick label font family\nax.set_yticklabels(fontfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.set_xticklabels(fontvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.set_yticklabels(fontvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.set_xticklabels(fontstretch='condensed')\n\n# Set the y-axis tick label font stretch\nax.set_yticklabels(fontstretch='expanded')\n\n# Set the x-axis tick label font size\nax.set_xticklabels(fontsize=12)\n\n# Set the y-axis tick label font size\nax.set_yticklabels(fontsize=12)\n\n# Set the x-axis tick label font weight\nax.set_xticklabels(fontweight='bold')\n\n# Set the y-axis tick label font weight\nax.set_yticklabels(fontweight='bold')\n\n# Set the x-axis tick label font style\nax.set_xticklabels(fontstyle='italic')\n\n# Set the y-axis tick label font style\nax.set_yticklabels(fontstyle='italic')\n\n# Set the x-axis tick label font family\nax.set_xticklabels(fontfamily='serif')\n\n# Set the y-axis tick label font family\nax.set_yticklabels(font"}
{"file": "dataset/ori_500/box_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 3, figsize=(25, 8))\n\n# Set the title for each subplot\naxs[0].set_title('Linear travel times')\naxs[1].set_title('Exponential travel times')\naxs[2].set_title('Sigmoidal travel times')\n\n# Create a list of travel times\ntravel_times = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\n\n# Create a list of travel distances\ntravel_distances = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000]\n\n# Create a list of travel costs\ntravel_costs = [1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000]\n\n# Create a list of travel ratings\ntravel_ratings = [5, 4, 3, 2, 1, 0, -1, -2, -3, -4]\n\n# Create a list of travel safety ratings\ntravel_safety_ratings = [5, 4, 3, 2, 1, 0, -1, -2, -3, -4]\n\n# Create a list of travel convenience ratings\ntravel_convenience_ratings = [5, 4, 3, 2, 1, 0, -1, -2, -3, -4]\n\n# Create a list of travel comfort ratings\ntravel_comfort_ratings = [5, 4, 3, 2, 1, 0, -1, -2, -3, -4]\n\n# Create a list of travel amenities ratings\ntravel_amenities_ratings = [5, 4, 3, 2, 1, 0, -1, -2, -3, -4]\n\n# Create a list of travel destinations\ntravel_destinations = ['Davg', 'Pto-KNN', 'Pto-OLS', 'SAA', 'P-N']\n\n# Create a list of travel companies\ntravel_companies = ['AAA', 'BBB', 'CCC', 'DDD', 'EEE']\n\n# Create a list of travel packages\ntravel_packages = ['Package 1', 'Package 2', 'Package 3', 'Package 4', 'Package 5']\n\n# Create a list of travel reviews\ntravel_reviews = ['Review 1', 'Review 2', 'Review 3', 'Review 4', 'Review 5']\n\n# Create a list of travel photos\ntravel_photos = ['Photo 1', 'Photo 2', 'Photo 3', 'Photo 4', 'Photo 5']\n\n# Create a list of travel videos\ntravel_videos = ['Video 1', 'Video 2', 'Video 3', 'Video 4', 'Video 5']\n\n# Create a list of travel itineraries\ntravel_itineraries = ['Itinerary 1', 'Itinerary 2', 'Itinerary 3', 'Itinerary 4', 'Itinerary 5']\n\n# Create a list of travel deals\ntravel_deals = ['Deal 1', 'Deal 2', 'Deal 3', 'Deal 4', 'Deal 5']\n\n# Create a list of travel promotions\ntravel_promotions = ['Promotion 1', 'Promotion 2', 'Promotion 3', 'Promotion 4', 'Promotion 5']\n\n# Create a list of travel discounts\ntravel_discounts = ['Discount 1', 'Discount 2', 'Discount 3', 'Discount 4', 'Discount 5']\n\n# Create a list of travel coupons\ntravel_coupons = ['Coupon 1', 'Coupon 2', 'Coupon 3', 'Coupon 4', 'Coupon 5']\n\n# Create a list of travel loyalty programs\ntravel_loyalty_programs = ['Loyalty Program 1', 'Loyalty Program 2', 'Loyalty Program 3', 'Loyalty Program 4', 'Loyalty Program 5']\n\n# Create a list of travel rewards\ntravel_rewards = ['Reward 1', 'Reward 2', 'Reward 3', 'Reward 4', 'Reward 5']\n\n# Create a list of travel gift cards\ntravel_gift_cards = ['Gift Card 1', 'Gift Card 2', 'Gift Card 3', 'Gift Card 4', 'Gift Card 5']\n\n# Create a list of travel insurance options\ntravel_insurance_options = ['Insurance Option 1', 'Insurance Option 2', 'Insurance Option 3', 'Insurance Option 4', 'Insurance Option 5']\n\n# Create a list of travel travel guides\ntravel_travel_guides = ['Travel Guide 1', 'Travel Guide 2', 'Travel Guide 3', 'Travel Guide 4', 'Travel Guide 5']\n\n# Create a list of travel travel tips\ntravel_travel_tips = ['Travel Tip 1', 'Travel Tip 2', 'Travel Tip 3', 'Travel Tip 4', 'Travel Tip 5']\n\n# Create a list of travel travel warnings\ntravel_travel_warnings = ['Travel Warning 1', 'Travel Warning 2', 'Travel Warning 3', 'Travel Warning 4', 'Travel Warning 5']\n\n# Create a list of travel travel restrictions\ntravel_travel_restrictions = ['Travel Restriction 1', 'Travel Restriction 2', 'Travel Restriction 3', 'Travel Restriction 4', 'Travel Restriction 5']\n\n# Create a list of travel travel regulations\ntravel_travel_regulations = ['Travel Regulation 1', 'Travel Regulation 2', 'Travel Regulation 3', 'Travel Regulation 4', 'Travel Regulation 5']\n\n# Create a list of travel travel permits\ntravel_travel_permits = ['Travel Permit 1', 'Travel Permit 2', 'Travel Permit 3', 'Travel Permit 4', 'Travel Permit 5']\n\n# Create a list of travel travel visas\ntravel_travel_visas = ['Travel Visa 1', 'Travel Visa 2', 'Travel Visa 3', 'Travel Visa 4', 'Travel Visa 5']\n\n# Create a list of travel travel passports\ntravel_travel_passports = ['Travel Passport 1', 'Travel Passport 2', 'Travel Passport 3', 'Travel Passport 4', 'Travel Passport 5']\n\n# Create a list of travel travel vaccinations\ntravel_travel_vaccinations = ['Travel Vaccination 1', 'Travel Vaccination 2', 'Travel Vaccination 3', 'Travel Vaccination 4', 'Travel Vaccination 5']\n\n# Create a list of travel travel health insurance\ntravel_travel_health_insurance = ['Travel Health Insurance 1', 'Travel Health Insurance 2', 'Travel Health Insurance 3', 'Travel Health Insurance 4', 'Travel Health Insurance 5']\n\n# Create a list of travel travel travel insurance\ntravel_travel_travel_insurance = ['Travel Travel Insurance 1', 'Travel Travel Insurance 2', 'Travel Travel Insurance 3', 'Travel Travel Insurance 4', 'Travel Travel Insurance 5']\n\n# Create a list of travel travel travel travel insurance\ntravel_travel_travel_travel_insurance = ['Travel Travel Travel Insurance 1', 'Travel Travel Travel Insurance 2', 'Travel Travel Travel Insurance 3', 'Travel Travel Travel Insurance 4', 'Travel Travel Travel Insurance 5']\n\n# Create a list of travel travel travel travel travel insurance\ntravel_travel_travel_travel_travel_insurance = ['Travel Travel Travel Travel Insurance 1', 'Travel Travel Travel Travel Insurance 2', 'Travel Travel Travel Travel Insurance 3', 'Travel Travel Travel Travel Insurance 4', 'Travel Travel Travel Travel Insurance 5']\n\n# Create a list of travel travel travel travel travel travel insurance\ntravel_travel_travel_travel_travel_travel_insurance = ['Travel Travel Travel Travel Travel Insurance 1', 'Travel Travel Travel Travel Travel Insurance 2', 'Travel Travel Travel Travel Travel Insurance 3', 'Travel Travel Travel Travel Travel Insurance 4', 'Travel Travel Travel Travel Travel Insurance 5']\n\n# Create a list of travel travel travel travel travel travel travel insurance\ntravel_travel_travel_travel_travel_travel_travel_insurance = ['Travel Travel Travel Travel Travel Travel Insurance 1', 'Travel Travel Travel Travel Travel Travel Insurance 2', 'Travel Travel Travel Travel Travel Travel Insurance 3', 'Travel Travel Travel Travel Travel Travel Insurance 4', 'Travel Travel Travel Travel Travel Travel Insurance 5']\n\n# Create a list of travel travel travel travel travel travel travel travel insurance\ntravel_travel_travel_travel_travel_travel_travel_travel_insurance = ['Travel Travel Travel Travel Travel Travel Travel Insurance 1', 'Travel Travel Travel Travel Travel Travel Travel Insurance 2', 'Travel Travel Travel Travel Travel Travel Travel Insurance 3', 'Travel Travel Travel Travel Travel Travel Travel Insurance 4', 'Travel Travel Travel Travel Travel Travel Travel Insurance 5']\n\n# Create a list of travel travel travel travel travel travel travel travel travel insurance\ntravel_travel_travel_travel_travel_travel_travel_travel_travel_insurance = ['Travel Travel Travel Travel Travel Travel Travel Travel Insurance 1', 'Travel Travel Travel Travel Travel Travel Travel Travel Insurance 2', 'Travel Travel Travel Travel Travel Travel Travel Travel Insurance 3', 'Travel Travel Travel Travel Travel Travel Travel Travel Insurance 4', 'Travel Travel Travel Travel Travel Travel Travel Travel Insurance 5']\n\n# Create a list of travel travel travel travel travel travel travel travel travel travel insurance\ntravel_travel_travel_travel_travel_travel_travel_travel_travel_travel_insurance = ['Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 1', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 2', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 3', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 4', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 5']\n\n# Create a list of travel travel travel travel travel travel travel travel travel travel travel insurance\ntravel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_insurance = ['Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 1', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 2', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 3', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 4', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 5']\n\n# Create a list of travel travel travel travel travel travel travel travel travel travel travel travel insurance\ntravel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_insurance = ['Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 1', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 2', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 3', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 4', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 5']\n\n# Create a list of travel travel travel travel travel travel travel travel travel travel travel travel travel insurance\ntravel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_insurance = ['Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 1', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 2', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 3', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 4', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 5']\n\n# Create a list of travel travel travel travel travel travel travel travel travel travel travel travel travel travel insurance\ntravel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_insurance = ['Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 1', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 2', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 3', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 4', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 5']\n\n# Create a list of travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel insurance\ntravel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_insurance = ['Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 1', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 2', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 3', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 4', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 5']\n\n# Create a list of travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel insurance\ntravel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_insurance = ['Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 1', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 2', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 3', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 4', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 5']\n\n# Create a list of travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel insurance\ntravel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_insurance = ['Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 1', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 2', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 3', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 4', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 5']\n\n# Create a list of travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel insurance\ntravel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_insurance = ['Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 1', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 2', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 3', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 4', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 5']\n\n# Create a list of travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel insurance\ntravel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_insurance = ['Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 1', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 2', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 3', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 4', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 5']\n\n# Create a list of travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel insurance\ntravel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_insurance = ['Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 1', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 2', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 3', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 4', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 5']\n\n# Create a list of travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel insurance\ntravel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_insurance = ['Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 1', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 2', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 3', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 4', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 5']\n\n# Create a list of travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel insurance\ntravel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_insurance = ['Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 1', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 2', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 3', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 4', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 5']\n\n# Create a list of travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel travel insurance\ntravel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_travel_insurance = ['Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 1', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 2', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 3', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 4', 'Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Travel Insurance 5']\n\n# Create a list of travel travel travel travel travel travel travel travel travel travel travel travel"}
{"file": "dataset/ori_500/box_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Modality Performance')\n\n# Set the x-axis label\nax.set_xlabel('Modality')\n\n# Set the y-axis label\nax.set_ylabel('Performance')\n\n# Define the modality names\nmodality_names = ['Only WSI Modality', 'Only CNV Modality', 'WSI+CNV Modality']\n\n# Define the performance values for each modality\nperformance_values = [0.92, 0.88, 0.95]\n\n# Define the colors for each modality\ncolors = ['skyblue', 'lightgreen', 'pink']\n\n# Define the shapes for each modality\nshapes = ['^', 's', 'o']\n\n# Plot the data\nfor i in range(len(modality_names)):\n    ax.plot([i], [performance_values[i]], marker=shapes[i], markersize=10, color=colors[i])\n\n# Set the x-ticks to be the modality names\nax.set_xticks(np.arange(len(modality_names)))\nax.set_xticklabels(modality_names)\n\n# Set the y-limits\nax.set_ylim(0.7, 1.0)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 2, figsize=(10, 5))\n\n# Set the title for each subplot\naxs[0].set_title('0.25 HIAR')\naxs[1].set_title('0.1 HIAR')\n\n# Create a scatter plot for each subplot\naxs[0].scatter([1, 2, 3], [23.4, 23.2, 23.0], color='blue')\naxs[1].scatter([1, 2, 3], [19.8, 19.6, 19.4], color='red')\n\n# Add a rectangle to each subplot\nfor ax in axs:\n    ax.add_patch(plt.Rectangle((0, 0), 1, 1, fill=False, edgecolor='black'))\n    ax.add_patch(plt.Rectangle((0, 0), 1, 1, fill=False, edgecolor='orange'))\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/contour_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('T-SNE plot for the output variable Y3')\n\n# Create a scatter plot with random data\nx = np.random.rand(50)\ny = np.random.rand(50)\ncolors = np.random.rand(50)\narea = (30 * np.random.rand(50))**2  # 0 to 15 point radii\nscatter = ax.scatter(x, y, s=area, c=colors, alpha=0.5)\n\n# Add a legend\nlegend_elements = [Line2D([0], [0], marker='o', color='w', label='Ground Truth',\n                          markerfacecolor='blue', markersize=10),\n                    Line2D([0], [0], marker='o', color='w', label='Generated',\n                          markerfacecolor='red', markersize=10)]\nax.legend(handles=legend_elements, loc='upper right')\n\n# Set the limits of the x and y axes\nax.set_xlim(-80, 80)\nax.set_ylim(-80, 80)\n\n# Draw a circle around the origin\ncircle = plt.Circle((0, 0), 40, color='gray', fill=False)\nax.add_artist(circle)\n\n# Draw a rectangle around the origin\nrectangle = plt.Rectangle((-40, -40), 80, 80, color='gray', fill=False)\nax.add_artist(rectangle)\n\n# Draw a polygon around the origin\npolygon = plt.Polygon([(0, 0), (40, 40), (-40, 40)], color='gray', fill=False)\nax.add_artist(polygon)\n\n# Draw a line from the origin to the point (40, 40)\nline = plt.Line2D([0, 40], [0, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the origin to the point (-40, 40)\nline = plt.Line2D([0, -40], [0, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the origin to the point (40, -40)\nline = plt.Line2D([0, 40], [0, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the origin to the point (-40, -40)\nline = plt.Line2D([0, -40], [0, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the origin to the point (0, 40)\nline = plt.Line2D([0, 0], [0, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the origin to the point (0, -40)\nline = plt.Line2D([0, 0], [0, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the origin to the point (40, 0)\nline = plt.Line2D([0, 40], [0, 0], color='gray')\nax.add_artist(line)\n\n# Draw a line from the origin to the point (-40, 0)\nline = plt.Line2D([0, -40], [0, 0], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (40, 40) to the point (-40, 40)\nline = plt.Line2D([40, -40], [40, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (40, 40) to the point (40, -40)\nline = plt.Line2D([40, 40], [40, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (40, 40) to the point (-40, -40)\nline = plt.Line2D([40, -40], [40, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (-40, 40) to the point (-40, -40)\nline = plt.Line2D([-40, -40], [40, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (-40, 40) to the point (40, -40)\nline = plt.Line2D([-40, 40], [40, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (-40, 40) to the point (40, 40)\nline = plt.Line2D([-40, 40], [40, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (-40, -40) to the point (40, -40)\nline = plt.Line2D([-40, 40], [-40, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (-40, -40) to the point (-40, 40)\nline = plt.Line2D([-40, -40], [-40, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (-40, -40) to the point (40, 40)\nline = plt.Line2D([-40, 40], [-40, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (40, -40) to the point (-40, -40)\nline = plt.Line2D([40, -40], [-40, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (40, -40) to the point (40, 40)\nline = plt.Line2D([40, 40], [-40, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (40, -40) to the point (-40, 40)\nline = plt.Line2D([40, -40], [-40, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (40, 40)\nline = plt.Line2D([0, 40], [0, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (-40, 40)\nline = plt.Line2D([0, -40], [0, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (40, -40)\nline = plt.Line2D([0, 40], [0, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (-40, -40)\nline = plt.Line2D([0, -40], [0, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (0, 40)\nline = plt.Line2D([0, 0], [0, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (0, -40)\nline = plt.Line2D([0, 0], [0, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (40, 0)\nline = plt.Line2D([0, 40], [0, 0], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (-40, 0)\nline = plt.Line2D([0, -40], [0, 0], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (40, 40) to the point (-40, 40)\nline = plt.Line2D([40, -40], [40, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (40, 40) to the point (40, -40)\nline = plt.Line2D([40, 40], [40, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (40, 40) to the point (-40, -40)\nline = plt.Line2D([40, -40], [40, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (-40, 40) to the point (-40, -40)\nline = plt.Line2D([-40, -40], [40, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (-40, 40) to the point (40, -40)\nline = plt.Line2D([-40, 40], [40, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (-40, 40) to the point (40, 40)\nline = plt.Line2D([-40, 40], [40, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (-40, -40) to the point (40, -40)\nline = plt.Line2D([-40, 40], [-40, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (-40, -40) to the point (-40, 40)\nline = plt.Line2D([-40, -40], [-40, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (-40, -40) to the point (40, 40)\nline = plt.Line2D([-40, 40], [-40, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (40, -40) to the point (-40, -40)\nline = plt.Line2D([40, -40], [-40, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (40, -40) to the point (40, 40)\nline = plt.Line2D([40, 40], [-40, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (40, -40) to the point (-40, 40)\nline = plt.Line2D([40, -40], [-40, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (40, 40)\nline = plt.Line2D([0, 40], [0, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (-40, 40)\nline = plt.Line2D([0, -40], [0, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (40, -40)\nline = plt.Line2D([0, 40], [0, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (-40, -40)\nline = plt.Line2D([0, -40], [0, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (0, 40)\nline = plt.Line2D([0, 0], [0, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (0, -40)\nline = plt.Line2D([0, 0], [0, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (40, 0)\nline = plt.Line2D([0, 40], [0, 0], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (-40, 0)\nline = plt.Line2D([0, -40], [0, 0], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (40, 40) to the point (-40, 40)\nline = plt.Line2D([40, -40], [40, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (40, 40) to the point (40, -40)\nline = plt.Line2D([40, 40], [40, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (40, 40) to the point (-40, -40)\nline = plt.Line2D([40, -40], [40, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (-40, 40) to the point (-40, -40)\nline = plt.Line2D([-40, -40], [40, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (-40, 40) to the point (40, -40)\nline = plt.Line2D([-40, 40], [40, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (-40, 40) to the point (40, 40)\nline = plt.Line2D([-40, 40], [40, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (-40, -40) to the point (40, -40)\nline = plt.Line2D([-40, 40], [-40, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (-40, -40) to the point (-40, 40)\nline = plt.Line2D([-40, -40], [-40, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (-40, -40) to the point (40, 40)\nline = plt.Line2D([-40, 40], [-40, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (40, -40) to the point (-40, -40)\nline = plt.Line2D([40, -40], [-40, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (40, -40) to the point (40, 40)\nline = plt.Line2D([40, 40], [-40, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (40, -40) to the point (-40, 40)\nline = plt.Line2D([40, -40], [-40, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (40, 40)\nline = plt.Line2D([0, 40], [0, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (-40, 40)\nline = plt.Line2D([0, -40], [0, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (40, -40)\nline = plt.Line2D([0, 40], [0, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (-40, -40)\nline = plt.Line2D([0, -40], [0, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (0, 40)\nline = plt.Line2D([0, 0], [0, 40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (0, -40)\nline = plt.Line2D([0, 0], [0, -40], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (40, 0)\nline = plt.Line2D([0, 40], [0, 0], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (0, 0) to the point (-40, 0)\nline = plt.Line2D([0, -40], [0, 0], color='gray')\nax.add_artist(line)\n\n# Draw a line from the point (40, 40) to the point (-40, 40)\nline = plt.Line2D([40, -4"}
{"file": "dataset/ori_500/contour_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('\u03bb(x, z)')\n\n# Create a color map for the plot\ncmap = plt.get_cmap('coolwarm')\n\n# Create a grid of points\nx = np.linspace(0, 1, 100)\ny = np.linspace(0, 1, 100)\nX, Y = np.meshgrid(x, y)\n\n# Calculate the values of \u03bb(x, z)\nZ = np.sin(X**2 + Y**2)\n\n# Plot the values using a contour plot\ncontour = ax.contourf(X, Y, Z, cmap=cmap)\n\n# Add a color bar to the plot\nfig.colorbar(contour)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/contour_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the x-axis and y-axis limits\nax.set_xlim(50, 160)\nax.set_ylim(50, 100)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('SBP (mmHg)')\nax.set_ylabel('DBP (mmHg)')\n\n# Create a scatter plot with random data points\nx = np.random.randint(50, 160, 100)\ny = np.random.randint(50, 100, 100)\nax.scatter(x, y, c='blue')\n\n# Create a scatter plot with random data points\nx = np.random.randint(50, 160, 100)\ny = np.random.randint(50, 100, 100)\nax.scatter(x, y, c='red')\n\n# Add a legend\nax.legend(['Female', 'Male'])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/contour_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the limits of the plot\nax.set_xlim(-10, 10)\nax.set_ylim(-10, 10)\n\n# Draw a circle with a blue color\ncircle = plt.Circle((0, 0), 5, color='blue')\nax.add_artist(circle)\n\n# Draw a rectangle with a green color\nrectangle = plt.Rectangle((-2, -2), 4, 4, color='green')\nax.add_artist(rectangle)\n\n# Draw a triangle with a red color\ntriangle = plt.Polygon([[0, 0], [5, 5], [-5, 5]], color='red')\nax.add_artist(triangle)\n\n# Draw a star with a yellow color\nstar = plt.Polygon([[0, 0], [2, 3], [4, 1], [3, -2], [0, -1], [-3, -2], [-4, 1], [-2, 3]], color='yellow')\nax.add_artist(star)\n\n# Draw a pentagon with a purple color\npentagon = plt.Polygon([[0, 0], [2, 3], [4, 1], [3, -2], [0, -1]], color='purple')\nax.add_artist(pentagon)\n\n# Draw a hexagon with a pink color\nhexagon = plt.Polygon([[0, 0], [2, 3], [4, 1], [3, -2], [0, -1], [-3, -2]], color='pink')\nax.add_artist(hexagon)\n\n# Draw a heptagon with a teal color\nheptagon = plt.Polygon([[0, 0], [2, 3], [4, 1], [3, -2], [0, -1], [-3, -2], [-4, 1]], color='teal')\nax.add_artist(heptagon)\n\n# Draw an octagon with a brown color\noctagon = plt.Polygon([[0, 0], [2, 3], [4, 1], [3, -2], [0, -1], [-3, -2], [-4, 1], [-2, 3]], color='brown')\nax.add_artist(octagon)\n\n# Draw a nonagon with a gray color\nnonagon = plt.Polygon([[0, 0], [2, 3], [4, 1], [3, -2], [0, -1], [-3, -2], [-4, 1], [-2, 3], [-1, 2]], color='gray')\nax.add_artist(nonagon)\n\n# Draw a decagon with a silver color\ndecagon = plt.Polygon([[0, 0], [2, 3], [4, 1], [3, -2], [0, -1], [-3, -2], [-4, 1], [-2, 3], [-1, 2], [0, 3]], color='silver')\nax.add_artist(decagon)\n\n# Draw a dodecagon with a gold color\ndodecagon = plt.Polygon([[0, 0], [2, 3], [4, 1], [3, -2], [0, -1], [-3, -2], [-4, 1], [-2, 3], [-1, 2], [0, 3], [1, 2], [2, 3]], color='gold')\nax.add_artist(dodecagon)\n\n# Draw a trapezoid with a bronze color\ntrapezoid = plt.Polygon([[0, 0], [2, 3], [4, 1], [3, -2]], color='bronze')\nax.add_artist(trapezoid)\n\n# Draw a parallelogram with a copper color\nparallelogram = plt.Polygon([[0, 0], [2, 3], [4, 1], [3, -2]], color='copper')\nax.add_artist(parallelogram)\n\n# Draw a rhombus with a brass color\nrhombus = plt.Polygon([[0, 0], [2, 3], [4, 1], [3, -2]], color='brass')\nax.add_artist(rhombus)\n\n# Draw a kite with a pewter color\nkite = plt.Polygon([[0, 0], [2, 3], [4, 1], [3, -2]], color='pewter')\nax.add_artist(kite)\n\n# Draw a trapezoid with a bronze color\ntrapezoid = plt.Polygon([[0, 0], [2, 3], [4, 1], [3, -2]], color='bronze')\nax.add_artist(trapezoid)\n\n# Draw a parallelogram with a copper color\nparallelogram = plt.Polygon([[0, 0], [2, 3], [4, 1], [3, -2]], color='copper')\nax.add_artist(parallelogram)\n\n# Draw a rhombus with a brass color\nrhombus = plt.Polygon([[0, 0], [2, 3], [4, 1], [3, -2]], color='brass')\nax.add_artist(rhombus)\n\n# Draw a kite with a pewter color\nkite = plt.Polygon([[0, 0], [2, 3], [4, 1], [3, -2]], color='pewter')\nax.add_artist(kite)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/contour_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Create a circle with a radius of 10\ncircle = plt.Circle((5, 5), 10, color='red')\nax.add_artist(circle)\n\n# Create a circle with a radius of 8\ncircle = plt.Circle((5, 5), 8, color='orange')\nax.add_artist(circle)\n\n# Create a circle with a radius of 6\ncircle = plt.Circle((5, 5), 6, color='yellow')\nax.add_artist(circle)\n\n# Create a circle with a radius of 4\ncircle = plt.Circle((5, 5), 4, color='green')\nax.add_artist(circle)\n\n# Create a circle with a radius of 2\ncircle = plt.Circle((5, 5), 2, color='cyan')\nax.add_artist(circle)\n\n# Create a circle with a radius of 0\ncircle = plt.Circle((5, 5), 0, color='blue')\nax.add_artist(circle)\n\n# Set the limits of the x and y axes\nax.set_xlim(0, 10)\nax.set_ylim(0, 10)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/density_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 3))\n\n# Define the data for the plot\nx = np.linspace(8, 15, 100)\ny = np.sin(x)\n\n# Plot the data\nax.plot(x, y, color='blue')\n\n# Set the title and labels\nax.set_title('Stock Market Data')\nax.set_xlabel('Time')\nax.set_ylabel('Price')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/density_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Create a circle\ncircle = plt.Circle((0.5, 0.5), 0.4, color='pink')\nax.add_artist(circle)\n\n# Create a rectangle\nrectangle = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='pink')\nax.add_artist(rectangle)\n\n# Set the aspect ratio of the plot to be equal\nax.set_aspect('equal')\n\n# Set the limits of the x and y axes\nax.set_xlim(0, 1)\nax.set_ylim(0, 1)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/density_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Set the title of the plot\nax.set_title('KDE Plot of Spearman Coefficient Distribution')\n\n# Create a scatter plot\nx = np.linspace(-1.0, 1.0, 100)\ny = np.sin(x)\nax.plot(x, y, color='blue')\n\n# Set the x-axis label\nax.set_xlabel('Spearman Coefficient')\n\n# Set the y-axis label\nax.set_ylabel('Density')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/density_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(7, 15)\n\n# Set the y-axis limits\nax.set_ylim(0, 0.7)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(7, 16, 1))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 0.8, 0.1))\n\n# Set the grid\nax.grid(True)\n\n# Set the title\nax.set_title('Stock Price Prediction')\n\n# Set the labels\nax.set_xlabel('Time (p)')\nax.set_ylabel('Price ($)')\n\n# Set the color of the line\nax.plot([7, 8, 9, 10, 11, 12, 13, 14, 15], [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], 'r-')\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((9, 0.3), 1, 0.2, color='blue'))\n\n# Set the color of the circle\ncircle = plt.Circle((10, 0.4), 0.1, color='green')\nax.add_artist(circle)\n\n# Set the color of the triangle\ntriangle = plt.Polygon([[11, 0.5], [12, 0.6], [13, 0.5]], color='red')\nax.add_patch(triangle)\n\n# Set the color of the ellipse\nellipse = plt.Ellipse((14, 0.6), 0.2, 0.1, color='purple')\nax.add_artist(ellipse)\n\n# Set the color of the star\nstar = plt.Polygon([[15, 0.7], [15.5, 0.6], [15, 0.5], [14.5, 0.6], [15, 0.7]], color='orange')\nax.add_patch(star)\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((9, 0.3), 1, 0.2, color='blue'))\n\n# Set the color of the circle\ncircle = plt.Circle((10, 0.4), 0.1, color='green')\nax.add_artist(circle)\n\n# Set the color of the triangle\ntriangle = plt.Polygon([[11, 0.5], [12, 0.6], [13, 0.5]], color='red')\nax.add_patch(triangle)\n\n# Set the color of the ellipse\nellipse = plt.Ellipse((14, 0.6), 0.2, 0.1, color='purple')\nax.add_artist(ellipse)\n\n# Set the color of the star\nstar = plt.Polygon([[15, 0.7], [15.5, 0.6], [15, 0.5], [14.5, 0.6], [15, 0.7]], color='orange')\nax.add_patch(star)\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((9, 0.3), 1, 0.2, color='blue'))\n\n# Set the color of the circle\ncircle = plt.Circle((10, 0.4), 0.1, color='green')\nax.add_artist(circle)\n\n# Set the color of the triangle\ntriangle = plt.Polygon([[11, 0.5], [12, 0.6], [13, 0.5]], color='red')\nax.add_patch(triangle)\n\n# Set the color of the ellipse\nellipse = plt.Ellipse((14, 0.6), 0.2, 0.1, color='purple')\nax.add_artist(ellipse)\n\n# Set the color of the star\nstar = plt.Polygon([[15, 0.7], [15.5, 0.6], [15, 0.5], [14.5, 0.6], [15, 0.7]], color='orange')\nax.add_patch(star)\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((9, 0.3), 1, 0.2, color='blue'))\n\n# Set the color of the circle\ncircle = plt.Circle((10, 0.4), 0.1, color='green')\nax.add_artist(circle)\n\n# Set the color of the triangle\ntriangle = plt.Polygon([[11, 0.5], [12, 0.6], [13, 0.5]], color='red')\nax.add_patch(triangle)\n\n# Set the color of the ellipse\nellipse = plt.Ellipse((14, 0.6), 0.2, 0.1, color='purple')\nax.add_artist(ellipse)\n\n# Set the color of the star\nstar = plt.Polygon([[15, 0.7], [15.5, 0.6], [15, 0.5], [14.5, 0.6], [15, 0.7]], color='orange')\nax.add_patch(star)\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((9, 0.3), 1, 0.2, color='blue'))\n\n# Set the color of the circle\ncircle = plt.Circle((10, 0.4), 0.1, color='green')\nax.add_artist(circle)\n\n# Set the color of the triangle\ntriangle = plt.Polygon([[11, 0.5], [12, 0.6], [13, 0.5]], color='red')\nax.add_patch(triangle)\n\n# Set the color of the ellipse\nellipse = plt.Ellipse((14, 0.6), 0.2, 0.1, color='purple')\nax.add_artist(ellipse)\n\n# Set the color of the star\nstar = plt.Polygon([[15, 0.7], [15.5, 0.6], [15, 0.5], [14.5, 0.6], [15, 0.7]], color='orange')\nax.add_patch(star)\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((9, 0.3), 1, 0.2, color='blue'))\n\n# Set the color of the circle\ncircle = plt.Circle((10, 0.4), 0.1, color='green')\nax.add_artist(circle)\n\n# Set the color of the triangle\ntriangle = plt.Polygon([[11, 0.5], [12, 0.6], [13, 0.5]], color='red')\nax.add_patch(triangle)\n\n# Set the color of the ellipse\nellipse = plt.Ellipse((14, 0.6), 0.2, 0.1, color='purple')\nax.add_artist(ellipse)\n\n# Set the color of the star\nstar = plt.Polygon([[15, 0.7], [15.5, 0.6], [15, 0.5], [14.5, 0.6], [15, 0.7]], color='orange')\nax.add_patch(star)\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((9, 0.3), 1, 0.2, color='blue'))\n\n# Set the color of the circle\ncircle = plt.Circle((10, 0.4), 0.1, color='green')\nax.add_artist(circle)\n\n# Set the color of the triangle\ntriangle = plt.Polygon([[11, 0.5], [12, 0.6], [13, 0.5]], color='red')\nax.add_patch(triangle)\n\n# Set the color of the ellipse\nellipse = plt.Ellipse((14, 0.6), 0.2, 0.1, color='purple')\nax.add_artist(ellipse)\n\n# Set the color of the star\nstar = plt.Polygon([[15, 0.7], [15.5, 0.6], [15, 0.5], [14.5, 0.6], [15, 0.7]], color='orange')\nax.add_patch(star)\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((9, 0.3), 1, 0.2, color='blue'))\n\n# Set the color of the circle\ncircle = plt.Circle((10, 0.4), 0.1, color='green')\nax.add_artist(circle)\n\n# Set the color of the triangle\ntriangle = plt.Polygon([[11, 0.5], [12, 0.6], [13, 0.5]], color='red')\nax.add_patch(triangle)\n\n# Set the color of the ellipse\nellipse = plt.Ellipse((14, 0.6), 0.2, 0.1, color='purple')\nax.add_artist(ellipse)\n\n# Set the color of the star\nstar = plt.Polygon([[15, 0.7], [15.5, 0.6], [15, 0.5], [14.5, 0.6], [15, 0.7]], color='orange')\nax.add_patch(star)\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((9, 0.3), 1, 0.2, color='blue'))\n\n# Set the color of the circle\ncircle = plt.Circle((10, 0.4), 0.1, color='green')\nax.add_artist(circle)\n\n# Set the color of the triangle\ntriangle = plt.Polygon([[11, 0.5], [12, 0.6], [13, 0.5]], color='red')\nax.add_patch(triangle)\n\n# Set the color of the ellipse\nellipse = plt.Ellipse((14, 0.6), 0.2, 0.1, color='purple')\nax.add_artist(ellipse)\n\n# Set the color of the star\nstar = plt.Polygon([[15, 0.7], [15.5, 0.6], [15, 0.5], [14.5, 0.6], [15, 0.7]], color='orange')\nax.add_patch(star)\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((9, 0.3), 1, 0.2, color='blue'))\n\n# Set the color of the circle\ncircle = plt.Circle((10, 0.4), 0.1, color='green')\nax.add_artist(circle)\n\n# Set the color of the triangle\ntriangle = plt.Polygon([[11, 0.5], [12, 0.6], [13, 0.5]], color='red')\nax.add_patch(triangle)\n\n# Set the color of the ellipse\nellipse = plt.Ellipse((14, 0.6), 0.2, 0.1, color='purple')\nax.add_artist(ellipse)\n\n# Set the color of the star\nstar = plt.Polygon([[15, 0.7], [15.5, 0.6], [15, 0.5], [14.5, 0.6], [15, 0.7]], color='orange')\nax.add_patch(star)\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((9, 0.3), 1, 0.2, color='blue'))\n\n# Set the color of the circle\ncircle = plt.Circle((10, 0.4), 0.1, color='green')\nax.add_artist(circle)\n\n# Set the color of the triangle\ntriangle = plt.Polygon([[11, 0.5], [12, 0.6], [13, 0.5]], color='red')\nax.add_patch(triangle)\n\n# Set the color of the ellipse\nellipse = plt.Ellipse((14, 0.6), 0.2, 0.1, color='purple')\nax.add_artist(ellipse)\n\n# Set the color of the star\nstar = plt.Polygon([[15, 0.7], [15.5, 0.6], [15, 0.5], [14.5, 0.6], [15, 0.7]], color='orange')\nax.add_patch(star)\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((9, 0.3), 1, 0.2, color='blue'))\n\n# Set the color of the circle\ncircle = plt.Circle((10, 0.4), 0.1, color='green')\nax.add_artist(circle)\n\n# Set the color of the triangle\ntriangle = plt.Polygon([[11, 0.5], [12, 0.6], [13, 0.5]], color='red')\nax.add_patch(triangle)\n\n# Set the color of the ellipse\nellipse = plt.Ellipse((14, 0.6), 0.2, 0.1, color='purple')\nax.add_artist(ellipse)\n\n# Set the color of the star\nstar = plt.Polygon([[15, 0.7], [15.5, 0.6], [15, 0.5], [14.5, 0.6], [15, 0.7]], color='orange')\nax.add_patch(star)\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((9, 0.3), 1, 0.2, color='blue'))\n\n# Set the color of the circle\ncircle = plt.Circle((10, 0.4), 0.1, color='green')\nax.add_artist(circle)\n\n# Set the color of the triangle\ntriangle = plt.Polygon([[11, 0.5], [12, 0.6], [13, 0.5]], color='red')\nax.add_patch(triangle)\n\n# Set the color of the ellipse\nellipse = plt.Ellipse((14, 0.6), 0.2, 0.1, color='purple')\nax.add_artist(ellipse)\n\n# Set the color of the star\nstar = plt.Polygon([[15, 0.7], [15.5, 0.6], [15, 0.5], [14.5, 0.6], [15, 0.7]], color='orange')\nax.add_patch(star)\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((9, 0.3), 1, 0.2, color='blue'))\n\n# Set the color of the circle\ncircle = plt.Circle((10, 0.4), 0.1, color='green')\nax.add_artist(circle)\n\n# Set the color of the triangle\ntriangle = plt.Polygon([[11, 0.5], [12, 0.6], [13, 0.5]], color='red')\nax.add_patch(triangle)\n\n# Set the color of the ellipse\nellipse = plt.Ellipse((14, 0.6), 0.2, 0.1, color='purple')\nax.add_artist(ellipse)\n\n# Set the color of the star\nstar = plt.Polygon([[15, 0.7], [15.5, 0.6], [15, 0.5], [14.5, 0.6], [15, 0.7]], color='orange')\nax.add_patch(star)\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((9, 0.3), 1, 0.2, color='blue'))\n\n# Set the color of the circle\ncircle = plt.Circle((10, 0.4), 0.1, color='green')\nax.add_artist(circle)\n\n# Set the color of the triangle\ntriangle = plt.Polygon([[11, 0.5], [12, 0.6], [13, 0.5]], color='red')\nax.add_patch(triangle)\n\n# Set the color of the ellipse\nellipse = plt.Ellipse((14, 0.6), 0.2, 0.1, color='purple')\nax.add_artist(ellipse)\n\n# Set the color of the star\nstar = plt.Polygon([[15, 0.7], [15.5, 0.6], [15, 0.5], [14.5, 0.6], [15, 0.7]], color='orange')\nax.add_patch(star)\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((9, 0.3), 1, 0.2, color='blue'))\n\n# Set the color of the circle\ncircle = plt.Circle((10, 0.4), 0.1, color='green')\nax.add_artist(circle)\n\n# Set the color of the triangle\ntriangle = plt.Polygon([[11, 0.5], [12, 0.6], [13, 0.5]], color='red')\nax.add_patch(triangle)\n\n# Set the color of the ellipse\nellipse = plt.Ellipse((14, 0.6), 0.2, 0.1, color='purple')\nax.add_artist(ellipse)\n\n# Set the color of the star\nstar = plt.Polygon([[15, 0.7], [15.5, 0.6], [15, 0.5], [14.5, 0.6], [15, 0.7]], color='orange')\nax.add_patch(star)\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((9, 0.3), 1, 0.2, color='blue'))\n\n# Set the color of the circle\ncircle = plt.Circle((10, 0.4), 0.1, color='green')\nax.add_artist(circle)\n\n# Set the color of the triangle\ntriangle = plt.Polygon([[11, 0.5], [12, "}
{"file": "dataset/ori_500/density_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9, 6))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the title of the plot\nax.set_title('Fashion Trends Over Time')\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Value')\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 15)\n\n# Set the x-axis ticks\nax.set_xticks([0, 0.25, 0.5, 0.75, 1])\n\n# Set the y-axis ticks\nax.set_yticks([0, 2, 4, 6, 8, 10, 12, 14])\n\n# Set the grid lines\nax.grid(True)\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the x-axis limits\nax.set_xlim(-1, 1)\n\n# Set the y-axis limits\nax.set_ylim(-2, 0)\n\n# Set the x-axis ticks\nax.set_xticks([-1, -0.5, 0, 0.5, 1])\n\n# Set the y-axis ticks\nax.set_yticks([-2, -1.5, -1, -0.5, 0])\n\n# Set the x-axis labels\nax.set_xticklabels(['Deep Ensns', 'Dropout', 'Laplace', 'SNPG', 'HET-XL', 'Baseline', 'GP', 'Shallow Ensns', 'DUQ', 'Corr. Pred'])\n\n# Set the y-axis labels\nax.set_yticklabels(['-2.00', '-1.50', '-1.00', '-0.50', '0.00'])\n\n# Set the title of the plot\nax.set_title('Log Probability')\n\n# Set the color of the x-axis labels\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='gray')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='gray')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=10)\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=10)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10"}
{"file": "dataset/ori_500/errorbar_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Expert dimension')\n\n# Define the data for the plot\nx = [1, 2, 3, 4, 5, 6, 7, 8]\ny = [5, 6, 7, 8, 9, 10, 11, 12]\n\n# Plot the data\nax.plot(x, y)\n\n# Set the x-axis label\nax.set_xlabel('Number of experts')\n\n# Set the y-axis label\nax.set_ylabel('IQM Human Normalized Score')\n\n# Set the color of the line\nax.plot(x, y, color='blue')\n\n# Set the color of the markers\nax.plot(x, y, 'o', color='red')\n\n# Set the color of the grid\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightblue')\n\n# Set the color of the text\nax.set_color_cycle(['green', 'purple'])\n\n# Set the color of the legend\nax.legend(['Baseline', 'SoftMoE (unchanged)', 'SoftMoE (\u2202 NumExperts)'])\n\n# Set the color of the labels\nax.set_label_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.set_xlabel_color('black')\nax.set_ylabel_color('black')\n\n# Set the color of the title\nax.set_title_color('black')\n\n# Set the color of the tick labels\nax.set_tick_params(axis='both', colors='black')\n\n# Set the color of the spines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\n"}
{"file": "dataset/ori_500/errorbar_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Accuracy by hospital and method')\n\n# Create a list of hospitals\nhospitals = ['Hospital 1', 'Hospital 2', 'Hospital 3']\n\n# Create a list of methods\nmethods = ['Baseline 1', 'Baseline 2', 'FedMM']\n\n# Create a list of accuracy values for each hospital and method\naccuracy_values = [\n    [0.748, 0.759, 0.762, 0.748, 0.78],\n    [0.75, 0.762, 0.748, 0.78, 0.713],\n    [0.75, 0.762, 0.748, 0.78, 0.713]\n]\n\n# Create a color map for the rectangles\ncmap = plt.get_cmap('tab20')\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i) for i in range(len(hospitals))]\n\n# Create a list of labels for the rectangles\nlabels = [f'{h} {m}' for h in hospitals for m in methods]\n\n# Create a list of positions for the rectangles\npositions = [(i, j) for i in range(len(hospitals)) for j in range(len(methods))]\n\n# Create a list of widths for the rectangles\nwidths = [0.5] * len(positions)\n\n# Create a list of heights for the rectangles\nheights = [0.5] * len(positions)\n\n# Create a list of edge colors for the rectangles\nedge_colors = ['black'] * len(positions)\n\n# Create a list of face colors for the rectangles\nface_colors = [colors[i % len(colors)] for i in range(len(positions))]\n\n# Create a list of hatch patterns for the rectangles\nhatches = ['///'] * len(positions)\n\n# Create a list of text colors for the rectangles\ntext_colors = ['white'] * len(positions)\n\n# Create a list of text sizes for the rectangles\ntext_sizes = [12] * len(positions)\n\n# Create a list of text alignments for the rectangles\ntext_alignments = ['center'] * len(positions)\n\n# Create a list of text vertical alignments for the rectangles\ntext_vertical_alignments = ['center'] * len(positions)\n\n# Create a list of text rotation angles for the rectangles\ntext_rotation_angles = [0] * len(positions)\n\n# Create a list of text rotation modes for the rectangles\ntext_rotation_modes = ['anchor'] * len(positions)\n\n# Create a list of text background colors for the rectangles\ntext_background_colors = ['none'] * len(positions)\n\n# Create a list of text border colors for the rectangles\ntext_border_colors = ['none'] * len(positions)\n\n# Create a list of text border widths for the rectangles\ntext_border_widths = [0] * len(positions)\n\n# Create a list of text border styles for the rectangles\ntext_border_styles = ['solid'] * len(positions)\n\n# Create a list of text border join styles for the rectangles\ntext_border_join_styles = ['miter'] * len(positions)\n\n# Create a list of text border cap styles for the rectangles\ntext_border_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash patterns for the rectangles\ntext_border_dash_patterns = [None] * len(positions)\n\n# Create a list of text border dash offsets for the rectangles\ntext_border_dash_offsets = [0] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash join styles for the rectangles\ntext_border_dash_join_styles = ['miter'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt'] * len(positions)\n\n# Create a list of text border dash cap styles for the rectangles\ntext_border_dash_cap_styles = ['butt"}
{"file": "dataset/ori_500/errorbar_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 6))\n\n# Set the background color of the plot\nax.set_facecolor('#F0F0F0')\n\n# Set the title of the plot\nax.set_title('Car Prices (valuation 40)', fontsize=20)\n\n# Set the x-axis label\nax.set_xlabel('Car Models', fontsize=15)\n\n# Set the y-axis label\nax.set_ylabel('Price', fontsize=15)\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 1, 2, 3])\nax.set_xticklabels(['GPT-4 Buyer (valuation 40)', 'Claude-2 Buyer (valuation 40)', 'Claude-3 Buyer (valuation 40)', 'GPT-3.5 Buyer (valuation 40)'])\n\n# Set the tick labels for the y-axis\nax.set_yticks([-20, -10, 0, 10, 20])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid"}
{"file": "dataset/ori_500/errorbar_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('DNN Performance')\n\n# Set the x-axis label\nax.set_xlabel('Number of Layers')\n\n# Set the y-axis label\nax.set_ylabel('Performance')\n\n# Set the x-axis limits\nax.set_xlim(0.5, 2)\n\n# Set the y-axis limits\nax.set_ylim(0.9, 0.95)\n\n# Set the x-axis ticks\nax.set_xticks([1, 2])\n\n# Set the y-axis ticks\nax.set_yticks([0.9, 0.95])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['[m]', '[k=1]'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['+9.6%', '+9.5%'])\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\nax.add_patch(plt.Rectangle((0.5, 0.95), 0.5, 0.05, color='gray'))\n\n# Set the color of the text\nax.text(1, 0.9, 'DNN x red (k=1)', ha='center', va='center', fontsize=12, color='black')\nax.text(2, 0.9, 'DNN x red (k=2)', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.5, 0.05, color='gray'))\n"}
{"file": "dataset/ori_500/errorbar_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(-1, 5)\n\n# Set the y-axis limits\nax.set_ylim(0, 25)\n\n# Set the x-axis label\nax.set_xlabel('Time (s)')\n\n# Set the y-axis label\nax.set_ylabel('Posterior Accuracy (\u00b0 to no prompting)')\n\n# Set the title of the plot\nax.set_title('Posterior Accuracy over Time')\n\n# Create a bar chart\nax.bar([0, 1, 2, 3, 4], [0.1, 0.15, 0.2, 0.25, 0.3], color='blue')\nax.bar([0, 1, 2, 3, 4], [0.1, 0.15, 0.2, 0.25, 0.3], color='orange')\nax.bar([0, 1, 2, 3, 4], [0.1, 0.15, 0.2, 0.25, 0.3], color='green')\nax.bar([0, 1, 2, 3, 4], [0.1, 0.15, 0.2, 0.25, 0.3], color='red')\nax.bar([0, 1, 2, 3, 4], [0.1, 0.15, 0.2, 0.25, 0.3], color='purple')\nax.bar([0, 1, 2, 3, 4], [0.1, 0.15, 0.2, 0.25, 0.3], color='brown')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 3))\n\n# Set the title of the graph\nax.set_title('Performance Comparison')\n\n# Set the x-axis label\nax.set_xlabel('Players')\n\n# Set the y-axis label\nax.set_ylabel('Performance')\n\n# Create a bar chart\nax.bar(['Player 1', 'Player 2', 'Player 3'], [85, 90, 88], color='blue')\n\n# Add a legend\nax.legend(['Augmented Reality', 'Tactical Estimation', 'Qualification', 'DiffStick'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('FashionMNIST (NEURAL)')\n\n# Set the x-axis label\nax.set_xlabel('Metric')\n\n# Set the y-axis label\nax.set_ylabel('Value')\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 1)\n\n# Set the x-axis ticks\nax.set_xticks([0, 0.2, 0.4, 0.6, 0.8, 1])\n\n# Set the y-axis ticks\nax.set_yticks([0, 0.2, 0.4, 0.6, 0.8, 1])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '0.2', '0.4', '0.6', '0.8', '1'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '0.2', '0.4', '0.6', '0.8', '1'])\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top x-axis line\nax.spines['top'].set_color('black')\n\n# Set the color of the right y-axis line\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the"}
{"file": "dataset/ori_500/errorbar_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the graph\nax.set_title('Higher Education Enrollment Rate')\n\n# Create a bar chart with the data\nax.bar(['Japan', 'Brazil', 'India', 'Germany', 'United States'], [25, 18, 12, 14, 30], color='blue')\n\n# Set the x-axis label\nax.set_xlabel('Country')\n\n# Set the y-axis label\nax.set_ylabel('Enrollment Rate')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 9.0))\n\n# Set the title of the plot\nax.set_title('Annual Carbon Dioxide Emissions')\n\n# Create a bar chart with the data\nax.bar(['Africa', 'South America', 'North America', 'Asia', 'Europe'], [1200, 1800, 5000, 3200, 10400], color='blue')\n\n# Set the x-axis label\nax.set_xlabel('Region')\n\n# Set the y-axis label\nax.set_ylabel('Emissions (in millions of metric tons)')\n\n# Create a second subplot for forest coverage rate\nax2 = fig.add_subplot(212)\nax2.set_title('Forest Coverage Rate')\n\n# Create a bar chart with the data\nax2.bar(['Africa', 'South America', 'North America', 'Asia', 'Europe'], [21, 34, 25, 28, 38], color='green')\n\n# Set the x-axis label\nax2.set_xlabel('Region')\n\n# Set the y-axis label\nax2.set_ylabel('Coverage (%)')\n\n# Create a third subplot for renewable energy usage\nax3 = fig.add_subplot(212)\nax3.set_title('Renewable Energy Usage')\n\n# Create a bar chart with the data\nax3.bar(['Africa', 'South America', 'North America', 'Asia', 'Europe'], [18, 28, 25, 34, 38], color='orange')\n\n# Set the x-axis label\nax3.set_xlabel('Region')\n\n# Set the y-axis label\nax3.set_ylabel('Usage (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 9))\n\n# Set the title of the graph\nax.set_title('Political Sentiment Analysis')\n\n# Create a bar chart with the data\nax.bar(['Crime Rate', 'Happiness Index', 'Social Security Coverage', 'Political Participation'], [85, 75, 65, 55], color='blue')\nax.bar(['Crime Rate', 'Happiness Index', 'Social Security Coverage', 'Political Participation'], [75, 65, 55, 45], color='red')\nax.bar(['Crime Rate', 'Happiness Index', 'Social Security Coverage', 'Political Participation'], [65, 55, 45, 35], color='yellow')\n\n# Set the x-axis label\nax.set_xlabel('Sentiment')\n\n# Set the y-axis label\nax.set_ylabel('Percentage')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Protocol')\n\n# Create a rectangle for the logo\nlogo = plt.Rectangle((0.45, 0.9), 0.1, 0.1, color='white', fill=False)\nax.add_patch(logo)\n\n# Add text to the logo\nax.text(0.5, 0.95, 'Expert', ha='center', va='center')\nax.text(0.5, 0.85, 'Blind', ha='center', va='center')\nax.text(0.5, 0.75, 'Consultancy', ha='center', va='center')\nax.text(0.5, 0.65, 'Debate', ha='center', va='center')\nax.text(0.5, 0.55, 'Interactive Consultancy', ha='center', va='center')\nax.text(0.5, 0.45, 'Interactive Debate', ha='center', va='center')\n\n# Create a bar chart for the protocol\nax.bar(['GPT-3.5-Turbo', 'Claude 2.1', 'GPT-4-Turbo', 'Human'], [80, 60, 70, 50], color='blue')\n\n# Set the y-axis label\nax.set_ylabel('Judge Accuracy (%)')\n\n# Set the x-axis label\nax.set_xlabel('Judge')\n\n# Set the y-axis limits\nax.set_ylim([0, 100])\n\n# Set the x-axis limits\nax.set_xlim([0, 4])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the graph\nax.set_title('Annual Average Temperature')\n\n# Create a bar chart with the data\nax.bar(['New York', 'London', 'Beijing', 'Tokyo'], [12, 14, 16, 18], color='blue')\n\n# Set the x-axis label\nax.set_xlabel('City')\n\n# Set the y-axis label\nax.set_ylabel('Temperature (\u00b0C)')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the graph\nax.set_title('Total Energy Consumption by Country')\n\n# Create a bar chart with the data\nax.bar(['Germany', 'China', 'USA', 'India', 'Brazil'], [2000, 3000, 4000, 5000, 6000], color='purple')\n\n# Set the x-axis label\nax.set_xlabel('Country')\n\n# Set the y-axis label\nax.set_ylabel('Energy Consumption (Petajoules)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_22.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data\nmodels = ['Standard Model', 'Advanced Model', 'Optimal Model']\nratings = [0.30, 0.25, 0.20]\ncolors = ['red', 'green', 'blue']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Plot the data\nax.bar(models, ratings, color=colors)\n\n# Set the title and labels\nax.set_title('Energy Efficiency Ratings by Appliance Model')\nax.set_xlabel('Appliance Model')\nax.set_ylabel('Energy Efficiency Rating')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_23.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the plot\nax.set_title('Energy Assessment Entity')\n\n# Create a bar chart with the data\nax.bar(['Wind', 'Solar', 'Hydro', 'Nuclear'], [80, 90, 70, 60], color='blue')\nax.bar(['Wind', 'Solar', 'Hydro', 'Nuclear'], [70, 80, 60, 50], color='green')\nax.bar(['Wind', 'Solar', 'Hydro', 'Nuclear'], [60, 70, 50, 40], color='purple')\n\n# Add labels to the x-axis\nax.set_xlabel('Energy Sources')\n\n# Add labels to the y-axis\nax.set_ylabel('Efficiency and Cost Scores')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Educational Metrics by Region')\n\n# Define the regions and their metrics\nregions = ['North America', 'Europe', 'Asia', 'South America', 'Africa', 'Australia', 'Central America', 'Middle East', 'Southeast Asia', 'Scandinavia']\nmetrics = [95, 85, 75, 65, 55, 45, 35, 25, 15, 5]\n\n# Create a bar chart\nax.bar(regions, metrics, color='lightblue')\n\n# Add a horizontal line for the average metric\nax.axhline(y=60, color='black', linestyle='-')\n\n# Add a legend\nlegend_elements = [plt.Line2D([0], [0], marker='o', color='w', label='High School Graduation', markerfacecolor='b', markersize=10),\n                  plt.Line2D([0], [0], marker='o', color='w', label='Higher Education Enrollment', markerfacecolor='y', markersize=10)]\nax.legend(handles=legend_elements)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_25.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the bar chart\nbrands = ['iPhone 13', 'Samsung S21', 'Google Pixel 6', 'OnePlus 9']\nrecall_rates = [46.3, 34.1, 53.8, 19.4]\nmisleading_rates = [30.1, 57.9, 55.7, 20.0]\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Plot the bar chart\nax.bar(brands, recall_rates, color='blue')\nax.bar(brands, misleading_rates, bottom=recall_rates, color='orange')\n\n# Add labels and title\nax.set_xlabel('Mobile Phone Brands')\nax.set_ylabel('Recall Rates (%)')\nax.set_title('Comparison of Recall Rates Across Products')\n\n# Add a legend\nax.legend(['Truthful Recall', 'Misleading Recall'])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_26.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Customer Satisfaction')\n\n# Set the x-axis label\nax.set_xlabel('Complaint Rates')\n\n# Set the y-axis label\nax.set_ylabel('Satisfaction Scores')\n\n# Create a bar chart with the data\nax.bar(['Support', 'Delivery', 'Product Quality', 'Returns', 'Pricing', 'Website Usability', 'Checkout Process'],\n       [15, 18, 20, 12, 17, 10, 8],\n       color=['blue', 'green', 'blue', 'purple', 'pink', 'gray', 'cyan'])\n\n# Set the y-axis limits\nax.set_ylim(0, 100)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_27.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data for the pie charts\nsupport_data = [75, 25]\ndelivery_data = [82, 18]\nproduct_quality_data = [78, 22]\nreturns_data = [85, 15]\npricing_data = [80, 20]\nwebsite_usability_data = [88, 12]\ncheckout_process_data = [90, 10]\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Plot the pie charts\nax.pie(support_data, labels=['Agree', 'Disagree'], autopct='%1.1f%%', startangle=90)\nax.pie(delivery_data, labels=['Agree', 'Disagree'], autopct='%1.1f%%', startangle=90)\nax.pie(product_quality_data, labels=['Agree', 'Disagree'], autopct='%1.1f%%', startangle=90)\nax.pie(returns_data, labels=['Agree', 'Disagree'], autopct='%1.1f%%', startangle=90)\nax.pie(pricing_data, labels=['Agree', 'Disagree'], autopct='%1.1f%%', startangle=90)\nax.pie(website_usability_data, labels=['Agree', 'Disagree'], autopct='%1.1f%%', startangle=90)\nax.pie(checkout_process_data, labels=['Agree', 'Disagree'], autopct='%1.1f%%', startangle=90)\n\n# Set the title of the plot\nax.set_title('Customer Satisfaction')\n\n# Set the x-axis labels\nax.set_xlabel('Support, Delivery, Product Quality, Returns, Pricing, Website Usability, Checkout Process')\n\n# Set the y-axis labels\nax.set_ylabel('Agree rates, Disagree rates')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_28.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the x-axis limits\nax.set_xlim(-0.15, 0.25)\n\n# Set the y-axis limits\nax.set_ylim(0, 1.2)\n\n# Set the x-axis ticks\nax.set_xticks([0, 0.25, 0.5, 0.75, 1])\n\n# Set the y-axis ticks\nax.set_yticks([0, 0.25, 0.5, 0.75, 1])\n\n# Set the x-axis labels\nax.set_xticklabels(['Watering Frequency', 'Planting Density', 'Plant Variety', 'CO2 Levels', 'Pesticides'])\n\n# Set the y-axis labels\nax.set_yticklabels(['Impact on Plant Growth (\u0394 to control)'])\n\n# Set the title of the plot\nax.set_title('Impact of Environmental Factors on Plant Growth')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the text\nax.text(0.5, 0.9, 'Environmental Factors', ha='center', va='center', fontsize=14, color='green')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.1, 0.1), 0.2, 0.2, color='lightgreen'))\nax.add_patch(plt.Rectangle((0.3, 0.1), 0.2, 0.2, color='lightblue'))\nax.add_patch(plt.Rectangle((0.5, 0.1), 0.2, 0.2, color='lightgrey'))\nax.add_patch(plt.Rectangle((0.7, 0.1), 0.2, 0.2, color='lightyellow'))\nax.add_patch(plt.Rectangle((0.9, 0.1), 0.2, 0.2, color='lightpink'))\n\n# Set the color of the text\nax.text(0.1, 0.1, 'Watering Frequency', ha='center', va='center', fontsize=12, color='black')\nax.text(0.3, 0.1, 'Planting Density', ha='center', va='center', fontsize=12, color='black')\nax.text(0.5, 0.1, 'Plant Variety', ha='center', va='center', fontsize=12, color='black')\nax.text(0.7, 0.1, 'CO2 Levels', ha='center', va='center', fontsize=12, color='black')\nax.text(0.9, 0.1, 'Pesticides', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.1, 0.3), 0.2, 0.2, color='lightgreen'))\nax.add_patch(plt.Rectangle((0.3, 0.3), 0.2, 0.2, color='lightblue'))\nax.add_patch(plt.Rectangle((0.5, 0.3), 0.2, 0.2, color='lightgrey'))\nax.add_patch(plt.Rectangle((0.7, 0.3), 0.2, 0.2, color='lightyellow'))\nax.add_patch(plt.Rectangle((0.9, 0.3), 0.2, 0.2, color='lightpink'))\n\n# Set the color of the text\nax.text(0.1, 0.3, 'Temperature', ha='center', va='center', fontsize=12, color='black')\nax.text(0.3, 0.3, 'Fertilizer', ha='center', va='center', fontsize=12, color='black')\nax.text(0.5, 0.3, 'Soil pH', ha='center', va='center', fontsize=12, color='black')\nax.text(0.7, 0.3, 'Water Quality', ha='center', va='center', fontsize=12, color='black')\nax.text(0.9, 0.3, 'Sunlight', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.1, 0.5), 0.2, 0.2, color='lightgreen'))\nax.add_patch(plt.Rectangle((0.3, 0.5), 0.2, 0.2, color='lightblue'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.2, 0.2, color='lightgrey'))\nax.add_patch(plt.Rectangle((0.7, 0.5), 0.2, 0.2, color='lightyellow'))\nax.add_patch(plt.Rectangle((0.9, 0.5), 0.2, 0.2, color='lightpink'))\n\n# Set the color of the text\nax.text(0.1, 0.5, 'Pesticides', ha='center', va='center', fontsize=12, color='black')\nax.text(0.3, 0.5, 'Soil pH', ha='center', va='center', fontsize=12, color='black')\nax.text(0.5, 0.5, 'Water Quality', ha='center', va='center', fontsize=12, color='black')\nax.text(0.7, 0.5, 'Sunlight', ha='center', va='center', fontsize=12, color='black')\nax.text(0.9, 0.5, 'Watering Frequency', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.1, 0.7), 0.2, 0.2, color='lightgreen'))\nax.add_patch(plt.Rectangle((0.3, 0.7), 0.2, 0.2, color='lightblue'))\nax.add_patch(plt.Rectangle((0.5, 0.7), 0.2, 0.2, color='lightgrey'))\nax.add_patch(plt.Rectangle((0.7, 0.7), 0.2, 0.2, color='lightyellow'))\nax.add_patch(plt.Rectangle((0.9, 0.7), 0.2, 0.2, color='lightpink'))\n\n# Set the color of the text\nax.text(0.1, 0.7, 'Temperature', ha='center', va='center', fontsize=12, color='black')\nax.text(0.3, 0.7, 'Fertilizer', ha='center', va='center', fontsize=12, color='black')\nax.text(0.5, 0.7, 'Soil pH', ha='center', va='center', fontsize=12, color='black')\nax.text(0.7, 0.7, 'Water Quality', ha='center', va='center', fontsize=12, color='black')\nax.text(0.9, 0.7, 'Sunlight', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.1, 0.9), 0.2, 0.2, color='lightgreen'))\nax.add_patch(plt.Rectangle((0.3, 0.9), 0.2, 0.2, color='lightblue'))\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.2, 0.2, color='lightgrey'))\nax.add_patch(plt.Rectangle((0.7, 0.9), 0.2, 0.2, color='lightyellow'))\nax.add_patch(plt.Rectangle((0.9, 0.9), 0.2, 0.2, color='lightpink'))\n\n# Set the color of the text\nax.text(0.1, 0.9, 'Pesticides', ha='center', va='center', fontsize=12, color='black')\nax.text(0.3, 0.9, 'Soil pH', ha='center', va='center', fontsize=12, color='black')\nax.text(0.5, 0.9, 'Water Quality', ha='center', va='center', fontsize=12, color='black')\nax.text(0.7, 0.9, 'Sunlight', ha='center', va='center', fontsize=12, color='black')\nax.text(0.9, 0.9, 'Watering Frequency', ha='center', va='center', fontsize=12, color='black')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_29.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the bar chart\ncities = ['New York', 'Los Angeles', 'Chicago']\nmetrics = ['Traffic Volume', 'Public Transit', 'Accident Rate']\nvalues = [[250, 230, 220], [220, 210, 200], [190, 180, 170]]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 4))\n\n# Plot the bar chart\nfor i, city in enumerate(cities):\n    ax.bar(metrics, values[i], label=city)\n\n# Set the title and labels\nax.set_title('City Traffic Metrics')\nax.set_xlabel('Metrics')\nax.set_ylabel('Values')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 10.0))\n\n# Set the title of the plot\nax.set_title('FashionMNIST (NEURAL)')\n\n# Set the x-axis label\nax.set_xlabel('Metric')\n\n# Set the y-axis label\nax.set_ylabel('Value')\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 1)\n\n# Set the x-axis ticks\nax.set_xticks([0, 0.2, 0.4, 0.6, 0.8, 1])\n\n# Set the y-axis ticks\nax.set_yticks([0, 0.2, 0.4, 0.6, 0.8, 1])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top x-axis line\nax.spines['top'].set_color('black')\n\n# Set the color of the right y-axis line\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='"}
{"file": "dataset/ori_500/errorbar_30.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Environmental Impact Scores Across Cities')\n\n# Set the x-axis label\nax.set_xlabel('Cities')\n\n# Set the y-axis label\nax.set_ylabel('Environmental Impact Score')\n\n# Define the data for the bar chart\ncities = ['City A', 'City B', 'City C', 'City D']\nscores = [2.3, 1.7, 3.4, 2.9]\nwater_quality = [0.6, 0.4, 0.8, 0.7]\n\n# Create a bar chart with the data\nbars = ax.bar(cities, scores, color='pink')\n\n# Add a watermark to the plot\nax.text(0.5, 0.5, 'Water Quality Score', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='green', fontsize=12)\n\n# Add a legend to the plot\nax.legend(['Air Quality Score', 'Water Quality Score'])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nroles = ['Wererewolf', 'Seer', 'Witch', 'Hunter', 'Villager']\ndurations = [84.97, 102.67, 78.22, 85.17, 90]\ntokens = [449.33, 780.67, 612.99, 547.39, 618.52]\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 2, figsize=(10, 4))\n\n# Plot the first subplot\naxs[0].bar(roles, durations, color='skyblue')\naxs[0].set_title('a) Speak duration of roles')\naxs[0].set_xlabel('Role')\naxs[0].set_ylabel('Duration (s)')\naxs[0].set_ylim([0, 120])\n\n# Plot the second subplot\naxs[1].bar(roles, tokens, color='lightgreen')\naxs[1].set_title('b) Speak tokens of roles')\naxs[1].set_xlabel('Role')\naxs[1].set_ylabel('Tokens')\naxs[1].set_ylim([0, 800])\n\n# Add a horizontal line at the top of each bar\nfor ax in axs:\n    for i, v in enumerate(tokens):\n        ax.text(i, v + 10, str(v), ha='center', va='bottom')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 7))\n\n# Set the title of the plot\nax.set_title('Size of Data for Training and Validation')\n\n# Set the x-axis label\nax.set_xlabel('Size of Data (samples)')\n\n# Set the y-axis label\nax.set_ylabel('True+ info (%)')\n\n# Define the data points\nx = [5, 10, 20, 30, 40, 50]\ny = [63.77, 64.17, 64.31, 64.98, 65.82, 65.78]\n\n# Plot the data points\nax.plot(x, y, 'o-')\n\n# Add a vertical line at each data point\nfor xi, yi in zip(x, y):\n    ax.axvline(xi, color='k', linestyle='-')\n\n# Add a horizontal line at each data point\nfor xi, yi in zip(x, y):\n    ax.axhline(yi, color='k', linestyle='-')\n\n# Add a rectangle for each data point\nfor xi, yi in zip(x, y):\n    rect = plt.Rectangle((xi - 5, yi - 5), 10, 10, color='blue')\n    ax.add_patch(rect)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the plot\nax.set_title('Out-of-domain accuracy')\n\n# Create a bar chart with the data\nax.bar(['all', 'arg.causal', 'test.0', 'test.1', 'test.2', 'test.3', 'test.4', 'test.5', 'test.6', 'const'], [0.89, 0.87, 0.86, 0.85, 0.84, 0.83, 0.82, 0.81, 0.80, 0.79], color='blue')\n\n# Set the x-axis label\nax.set_xlabel('Test cases')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Mini Crosswords Performance')\n\n# Create a bar chart with the data\nax.bar(['Final Distribution with GPT-4-Turbo', 'Final Distribution with GPT-3.5-Turbo', '0.125 Parameter-Valued Distribution', 'Initial Distribution', 'Best-of-Three'], [0.7, 0.8, 0.6, 0.5, 0.4], color='skyblue')\n\n# Add a vertical line at the current time\nax.axvline(x=0.5, color='black')\n\n# Add a red rectangle to indicate the time of the last update\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.1, 0.1, color='red'))\n\n# Add a text box to indicate the time of the last update\nax.text(0.5, 0.5, 'ToT (0.675)', ha='center', va='center', color='white', bbox=dict(facecolor='red', alpha=0.5))\n\n# Set the x-axis limits\nax.set_xlim([0, 1])\n\n# Set the y-axis limits\nax.set_ylim([0, 1])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 3))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Create a bar chart with the data\nbars = ax.bar(['BERT', 'RoBERTa', 'DistilBERT', 'XLNet', 'Electra', 'Albert', 'BART', 'DeBERTa', 'DeBERTaV', 'Llama2'], [55, 60, 55, 65, 50, 45, 70, 60, 55, 40], color='coral')\nfor bar in bars:\n    yval = bar.get_height()\n    ax.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), va='bottom')\n\n# Add labels and title\nax.set_xlabel('Models')\nax.set_ylabel('Accuracy (%)')\nax.set_title('Model Accuracy Comparison')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the chart\nax.set_title('Your Chart Title Here')\n\n# Set the x-axis label\nax.set_xlabel('A')\n\n# Set the y-axis label\nax.set_ylabel('B')\n\n# Set the x-axis limits\nax.set_xlim(-3.5, 1.5)\n\n# Set the y-axis limits\nax.set_ylim(-2.5, 2.5)\n\n# Set the x-axis ticks\nax.set_xticks([-3.5, -3.0, -2.5, -2.0, -1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5])\n\n# Set the y-axis ticks\nax.set_yticks([-2.5, -2.0, -1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5, 2.0, 2.5])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['-3.5', '-3.0', '-2.5', '-2.0', '-1.5', '-1.0', '-0.5', '0.0', '0.5', '1.0', '1.5'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['-2.5', '-2.0', '-1.5', '-1.0', '-0.5', '0.0', '0.5', '1.0', '1.5', '2.0', '2.5'])\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the font size of the text\nax.set_fontsize(12)\n\n# Set the font weight of the text\nax.set_fontweight('bold')\n\n# Set the font style of the text\nax.set_fontstyle('italic')\n\n# Set the font family of the text\nax.set_fontfamily('serif')\n\n# Set the font variant of the text\nax.set_fontvariant('small-caps')\n\n# Set the font stretch of the text\nax.set_fontstretch('condensed')\n\n# Set the font size of the title\nax.set_title_size(14)\n\n# Set the font weight of the title\nax.set_title_weight('bold')\n\n# Set the font style of the title\nax.set_title_style('italic')\n\n# Set the font family of the title\nax.set_title_family('sans-serif')\n\n# Set the font variant of the title\nax.set_title_variant('normal')\n\n# Set the font stretch of the title\nax.set_title_stretch('expanded')\n\n# Set the color of the title\nax.set_title_color('blue')\n\n# Set the font size of the x-axis label\nax.set_xlabel_size(12)\n\n# Set the font weight of the x-axis label\nax.set_xlabel_weight('bold')\n\n# Set the font style of the x-axis label\nax.set_xlabel_style('italic')\n\n# Set the font family of the x-axis label\nax.set_xlabel_family('serif')\n\n# Set the font variant of the x-axis label\nax.set_xlabel_variant('small-caps')\n\n# Set the font stretch of the x-axis label\nax.set_xlabel_stretch('condensed')\n\n# Set the color of the x-axis label\nax.set_xlabel_color('red')\n\n# Set the font size of the y-axis label\nax.set_ylabel_size(12)\n\n# Set the font weight of the y-axis label\nax.set_ylabel_weight('bold')\n\n# Set the font style of the y-axis label\nax.set_ylabel_style('italic')\n\n# Set the font family of the y-axis label\nax.set_ylabel_family('serif')\n\n# Set the font variant of the y-axis label\nax.set_ylabel_variant('small-caps')\n\n# Set the font stretch of the y-axis label\nax.set_ylabel_stretch('condensed')\n\n# Set the color of the y-axis label\nax.set_ylabel_color('green')\n\n# Set the font size of the x-axis ticks\nax.set_xticklabel_size(10)\n\n# Set the font weight of the x-axis ticks\nax.set_xticklabel_weight('bold')\n\n# Set the font style of the x-axis ticks\nax.set_xticklabel_style('italic')\n\n# Set the font family of the x-axis ticks\nax.set_xticklabel_family('serif')\n\n# Set the font variant of the x-axis ticks\nax.set_xticklabel_variant('small-caps')\n\n# Set the font stretch of the x-axis ticks\nax.set_xticklabel_stretch('condensed')\n\n# Set the color of the x-axis ticks\nax.set_xticklabel_color('purple')\n\n# Set the font size of the y-axis ticks\nax.set_yticklabel_size(10)\n\n# Set the font weight of the y-axis ticks\nax.set_yticklabel_weight('bold')\n\n# Set the font style of the y-axis ticks\nax.set_yticklabel_style('italic')\n\n# Set the font family of the y-axis ticks\nax.set_yticklabel_family('serif')\n\n# Set the font variant of the y-axis ticks\nax.set_yticklabel_variant('small-caps')\n\n# Set the font stretch of the y-axis ticks\nax.set_yticklabel_stretch('condensed')\n\n# Set the color of the y-axis ticks\nax.set_yticklabel_color('orange')\n\n# Set the font size of the legend\nax.legend_size(12)\n\n# Set the font weight of the legend\nax.legend_weight('bold')\n\n# Set the font style of the legend\nax.legend_style('italic')\n\n# Set the font family of the legend\nax.legend_family('serif')\n\n# Set the font variant of the legend\nax.legend_variant('small-caps')\n\n# Set the font stretch of the legend\nax.legend_stretch('condensed')\n\n# Set the color of the legend\nax.legend_color('brown')\n\n# Set the font size of the annotations\nax.annotate_size(12)\n\n# Set the font weight of the annotations\nax.annotate_weight('bold')\n\n# Set the font style of the annotations\nax.annotate_style('italic')\n\n# Set the font family of the annotations\nax.annotate_family('serif')\n\n# Set the font variant of the annotations\nax.annotate_variant('small-caps')\n\n# Set the font stretch of the annotations\nax.annotate_stretch('condensed')\n\n# Set the color of the annotations\nax.annotate_color('pink')\n\n# Set the font size of the text boxes\nax.textbox_size(12)\n\n# Set the font weight of the text boxes\nax.textbox_weight('bold')\n\n# Set the font style of the text boxes\nax.textbox_style('italic')\n\n# Set the font family of the text boxes\nax.textbox_family('serif')\n\n# Set the font variant of the text boxes\nax.textbox_variant('small-caps')\n\n# Set the font stretch of the text boxes\nax.textbox_stretch('condensed')\n\n# Set the color of the text boxes\nax.textbox_color('cyan')\n\n# Set the font size of the tick labels\nax.ticklabel_size(10)\n\n# Set the font weight of the tick labels\nax.ticklabel_weight('bold')\n\n# Set the font style of the tick labels\nax.ticklabel_style('italic')\n\n# Set the font family of the tick labels\nax.ticklabel_family('serif')\n\n# Set the font variant of the tick labels\nax.ticklabel_variant('small-caps')\n\n# Set the font stretch of the tick labels\nax.ticklabel_stretch('condensed')\n\n# Set the color of the tick labels\nax.ticklabel_color('magenta')\n\n# Set the font size of the tick marks\nax.tickmark_size(10)\n\n# Set the font weight of the tick marks\nax.tickmark_weight('bold')\n\n# Set the font style of the tick marks\nax.tickmark_style('italic')\n\n# Set the font family of the tick marks\nax.tickmark_family('serif')\n\n# Set the font variant of the tick marks\nax.tickmark_variant('small-caps')\n\n# Set the font stretch of the tick marks\nax.tickmark_stretch('condensed')\n\n# Set the color of the tick marks\nax.tickmark_color('yellow')\n\n# Set the font size of the grid lines\nax.grid_size(10)\n\n# Set the font weight of the grid lines\nax.grid_weight('bold')\n\n# Set the font style of the grid lines\nax.grid_style('italic')\n\n# Set the font family of the grid lines\nax.grid_family('serif')\n\n# Set the font variant of the grid lines\nax.grid_variant('small-caps')\n\n# Set the font stretch of the grid lines\nax.grid_stretch('condensed')\n\n# Set the color of the grid lines\nax.grid_color('black')\n\n# Set the font size of the background\nax.background_size(10)\n\n# Set the font weight of the background\nax.background_weight('bold')\n\n# Set the font style of the background\nax.background_style('italic')\n\n# Set the font family of the background\nax.background_family('serif')\n\n# Set the font variant of the background\nax.background_variant('small-caps')\n\n# Set the font stretch of the background\nax.background_stretch('condensed')\n\n# Set the color of the background\nax.background_color('white')\n\n# Set the font size of the title\nax.title_size(14)\n\n# Set the font weight of the title\nax.title_weight('bold')\n\n# Set the font style of the title\nax.title_style('italic')\n\n# Set the font family of the title\nax.title_family('sans-serif')\n\n# Set the font variant of the title\nax.title_variant('normal')\n\n# Set the font stretch of the title\nax.title_stretch('expanded')\n\n# Set the color of the title\nax.title_color('blue')\n\n# Set the font size of the x-axis label\nax.xlabel_size(12)\n\n# Set the font weight of the x-axis label\nax.xlabel_weight('bold')\n\n# Set the font style of the x-axis label\nax.xlabel_style('italic')\n\n# Set the font family of the x-axis label\nax.xlabel_family('serif')\n\n# Set the font variant of the x-axis label\nax.xlabel_variant('small-caps')\n\n# Set the font stretch of the x-axis label\nax.xlabel_stretch('condensed')\n\n# Set the color of the x-axis label\nax.xlabel_color('red')\n\n# Set the font size of the y-axis label\nax.ylabel_size(12)\n\n# Set the font weight of the y-axis label\nax.ylabel_weight('bold')\n\n# Set the font style of the y-axis label\nax.ylabel_style('italic')\n\n# Set the font family of the y-axis label\nax.ylabel_family('serif')\n\n# Set the font variant of the y-axis label\nax.ylabel_variant('small-caps')\n\n# Set the font stretch of the y-axis label\nax.ylabel_stretch('condensed')\n\n# Set the color of the y-axis label\nax.ylabel_color('green')\n\n# Set the font size of the x-axis ticks\nax.xticks_size(10)\n\n# Set the font weight of the x-axis ticks\nax.xticks_weight('bold')\n\n# Set the font style of the x-axis ticks\nax.xticks_style('italic')\n\n# Set the font family of the x-axis ticks\nax.xticks_family('serif')\n\n# Set the font variant of the x-axis ticks\nax.xticks_variant('small-caps')\n\n# Set the font stretch of the x-axis ticks\nax.xticks_stretch('condensed')\n\n# Set the color of the x-axis ticks\nax.xticks_color('purple')\n\n# Set the font size of the y-axis ticks\nax.yticks_size(10)\n\n# Set the font weight of the y-axis ticks\nax.yticks_weight('bold')\n\n# Set the font style of the y-axis ticks\nax.yticks_style('italic')\n\n# Set the font family of the y-axis ticks\nax.yticks_family('serif')\n\n# Set the font variant of the y-axis ticks\nax.yticks_variant('small-caps')\n\n# Set the font stretch of the y-axis ticks\nax.yticks_stretch('condensed')\n\n# Set the color of the y-axis ticks\nax.yticks_color('orange')\n\n# Set the font size of the legend\nax.legend_size(12)\n\n# Set the font weight of the legend\nax.legend_weight('bold')\n\n# Set the font style of the legend\nax.legend_style('italic')\n\n# Set the font family of the legend\nax.legend_family('serif')\n\n# Set the font variant of the legend\nax.legend_variant('small-caps')\n\n# Set the font stretch of the legend\nax.legend_stretch('condensed')\n\n# Set the color of the legend\nax.legend_color('brown')\n\n# Set the font size of the annotations\nax.annotate_size(12)\n\n# Set the font weight of the annotations\nax.annotate_weight('bold')\n\n# Set the font style of the annotations\nax.annotate_style('italic')\n\n# Set the font family of the annotations\nax.annotate_family('serif')\n\n# Set the font variant of the annotations\nax.annotate_variant('small-caps')\n\n# Set the font stretch of the annotations\nax.annotate_stretch('condensed')\n\n# Set the color of the annotations\nax.annotate_color('pink')\n\n# Set the font size of the text boxes\nax.textbox_size(12)\n\n# Set the font weight of the text boxes\nax.textbox_weight('bold')\n\n# Set the font style of the text boxes\nax.textbox_style('italic')\n\n# Set the font family of the text boxes\nax.textbox_family('serif')\n\n# Set the font variant of the text boxes\nax.textbox_variant('small-caps')\n\n# Set the font stretch of the text boxes\nax.textbox_stretch('condensed')\n\n# Set the color of the text boxes\nax.textbox_color('cyan')\n\n# Set the font size of the tick labels\nax.ticklabel_size(10)\n\n# Set the font weight of the tick labels\nax.ticklabel_weight('bold')\n\n# Set the font style of the tick labels\nax.ticklabel_style('italic')\n\n# Set the font family of the tick labels\nax.ticklabel_family('serif')\n\n# Set the font variant of the tick labels\nax.ticklabel_variant('small-caps')\n\n# Set the font stretch of the tick labels\nax.ticklabel_stretch('condensed')\n\n# Set the color of the tick labels\nax.ticklabel_color('magenta')\n\n# Set the font size of the tick marks\nax.tickmark_size(10)\n\n# Set the font weight of the tick marks\nax.tickmark_weight('bold')\n\n# Set the font style of the tick marks\nax.tickmark_style('italic')\n\n# Set the font family of the tick marks\nax.tickmark_family('serif')\n\n# Set the font variant of the tick marks\nax.tickmark_variant('small-caps')\n\n# Set the font stretch of the tick marks\nax.tickmark_stretch('condensed')\n\n# Set the color of the tick marks\nax.tickmark_color('yellow')\n\n# Set the font size of the grid lines\nax.grid_size(10)\n\n# Set the font weight of the grid lines\nax.grid_weight('bold')\n\n# Set the font style of the grid lines\nax.grid_style('italic')\n\n# Set the font family of the grid lines\nax.grid_family('serif')\n\n# Set the font variant of the grid lines\nax.grid_variant('small-caps')\n\n# Set the font stretch of the grid lines\nax.grid_stretch('condensed')\n\n# Set the color of the grid lines\nax.grid_color('black')\n\n# Set the font size of the background\nax.background_size(10)\n\n# Set the font weight of the background\nax.background_weight('bold')\n\n# Set the font style of the background\nax.background_style('italic')\n\n# Set the font family of the background\nax.background_family('serif')\n\n# Set the font variant of the background\nax.background_variant('small-caps')\n\n# Set the font stretch of the background\nax.background_stretch('condensed')\n\n# Set the color of the background\nax.background_color('white')\n\n# Set the font size of the title\nax.title_size(14)\n\n# Set the font weight of the title\nax.title_weight('bold')\n\n# Set the font style of the title\nax.title_style('italic')\n\n# Set the font family of the title\nax.title_family('sans-serif')\n\n# Set the font variant of the title\nax.title_variant('normal')\n\n# Set the font stretch of the title\nax.title_stretch('expanded')\n\n# Set the color of the title\nax.title_color('blue')\n\n# Set the font size of the x-axis label\nax.xlabel_size(12)\n\n# Set the font weight of the x-axis label\nax.xlabel_weight('bold')\n\n# Set the font style of the x-axis label\nax.xlabel_style('italic')\n\n# Set the font family of the x-axis label\nax.xlabel_family('serif')\n\n# Set the font variant of the x-axis label\nax.xlabel_variant('small-caps')\n\n# Set the font stretch of the x-axis label\nax.xlabel_stretch('condensed')\n\n# Set the color of the x-axis label\nax.xlabel_color('red')\n\n# Set the font size of the y-axis label\nax.ylabel_size(12)\n\n# Set the font weight of the y-axis label\nax.ylabel_weight('bold')\n\n# Set the font style of the y-axis label\nax.ylabel_style('italic')\n\n# Set the font family of the y-axis label\nax.ylabel_family('serif')\n\n# Set the font variant of the y-axis label\nax.ylabel_variant('small-caps')\n\n# Set the font stretch of the y-axis label\nax.ylabel_stretch('condensed')\n\n# Set the color of the y-axis label\nax.ylabel_color('green')\n\n# Set the font size of the x-axis ticks\nax.xticks_size(10)\n\n# Set the font weight of the x-axis ticks\nax.xticks_weight('bold')\n\n# Set the font style of the x-axis ticks\nax.xticks_style('italic')\n\n# Set the font family of the x-axis ticks\nax.xticks_family('serif')\n\n# Set the font variant of the x-axis ticks\nax.xticks_variant('small-caps')\n\n# Set the font stretch of the x-axis ticks\nax.xticks_stretch('condensed')\n\n# Set the color of the x-axis ticks\nax.xticks_color('purple')\n\n# Set the font size of the y-axis ticks\nax.yticks_size(10)\n\n# Set the font weight of the y-axis ticks\nax.yticks_weight('bold')\n\n# Set the font style of the y-axis ticks\nax.yticks_style('italic')\n\n# Set the font family of the y-axis ticks\nax.yticks_family('serif')\n\n# Set the font variant of the y"}
{"file": "dataset/ori_500/errorpoint_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the x-axis labels\nx_labels = ['Kashmir', 'Religion', 'Crime and Justice', 'CAA', 'Pulwama-Balakot', 'Politics']\n\n# Set the y-axis values\ny_values = [0.12, 0.14, 0.16, 0.18, 0.20, 0.22]\n\n# Plot the data\nax.plot(x_labels, y_values, marker='o')\n\n# Set the title and labels\nax.set_title('Shouting Fraction (Fraction of videos)')\nax.set_xlabel('Category')\nax.set_ylabel('Fraction')\n\n# Add a legend\nax.legend(['Dataset mean', 'Mean'])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorpoint_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 9.0))\n\n# Set the title of the plot\nax.set_title('Variable, Symmetric Error')\n\n# Create a scatter plot with random data\nax.scatter([1, 2, 3, 4, 5], [10, 15, 12, 18, 17], color='blue')\n\n# Set the x-axis label\nax.set_xlabel('X Axis Label')\n\n# Set the y-axis label\nax.set_ylabel('Y Axis Label')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorpoint_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data\ncategories = ['Politics', 'Religion', 'Kashmir', 'CAA', 'Pulwama-Balakot']\nincivility = [0.16, 0.18, 0.20, 0.22, 0.24]\nmean = [0.25, 0.27, 0.29, 0.31, 0.33]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Plot the data\nax.plot(categories, incivility, color='brown')\nax.plot(categories, mean, color='red')\n\n# Set the title and labels\nax.set_title('Incivility and Mean of Videos')\nax.set_xlabel('Categories')\nax.set_ylabel('Incivility (Fraction of Videos)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorpoint_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the x-axis limits\nax.set_xlim(-19.6, -19.0)\n\n# Set the y-axis limits\nax.set_ylim(-19.6, -19.0)\n\n# Set the x-axis label\nax.set_xlabel('M$_B$')\n\n# Set the y-axis label\nax.set_ylabel('M$_A$')\n\n# Set the title of the plot\nax.set_title('Pantheon')\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.5, -19.5), 0.1, 0.1, color='red')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.4, -19.4), 0.1, 0.1, color='blue')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.3, -19.3), 0.1, 0.1, color='green')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.2, -19.2), 0.1, 0.1, color='yellow')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.1, -19.1), 0.1, 0.1, color='cyan')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.0, -19.0), 0.1, 0.1, color='magenta')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.5, -19.5), 0.1, 0.1, color='pink')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.4, -19.4), 0.1, 0.1, color='orange')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.3, -19.3), 0.1, 0.1, color='purple')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.2, -19.2), 0.1, 0.1, color='brown')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.1, -19.1), 0.1, 0.1, color='gray')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.0, -19.0), 0.1, 0.1, color='silver')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.5, -19.5), 0.1, 0.1, color='gold')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.4, -19.4), 0.1, 0.1, color='white')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.3, -19.3), 0.1, 0.1, color='black')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.2, -19.2), 0.1, 0.1, color='red')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.1, -19.1), 0.1, 0.1, color='blue')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.0, -19.0), 0.1, 0.1, color='green')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.5, -19.5), 0.1, 0.1, color='yellow')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.4, -19.4), 0.1, 0.1, color='cyan')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.3, -19.3), 0.1, 0.1, color='magenta')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.2, -19.2), 0.1, 0.1, color='pink')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.1, -19.1), 0.1, 0.1, color='orange')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.0, -19.0), 0.1, 0.1, color='purple')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.5, -19.5), 0.1, 0.1, color='brown')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.4, -19.4), 0.1, 0.1, color='gray')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.3, -19.3), 0.1, 0.1, color='silver')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.2, -19.2), 0.1, 0.1, color='gold')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.1, -19.1), 0.1, 0.1, color='white')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.0, -19.0), 0.1, 0.1, color='black')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.5, -19.5), 0.1, 0.1, color='red')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.4, -19.4), 0.1, 0.1, color='blue')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.3, -19.3), 0.1, 0.1, color='green')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.2, -19.2), 0.1, 0.1, color='yellow')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.1, -19.1), 0.1, 0.1, color='cyan')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.0, -19.0), 0.1, 0.1, color='magenta')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.5, -19.5), 0.1, 0.1, color='pink')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.4, -19.4), 0.1, 0.1, color='orange')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.3, -19.3), 0.1, 0.1, color='purple')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.2, -19.2), 0.1, 0.1, color='brown')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.1, -19.1), 0.1, 0.1, color='gray')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.0, -19.0), 0.1, 0.1, color='silver')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.5, -19.5), 0.1, 0.1, color='gold')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.4, -19.4), 0.1, 0.1, color='white')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.3, -19.3), 0.1, 0.1, color='black')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.2, -19.2), 0.1, 0.1, color='red')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.1, -19.1), 0.1, 0.1, color='blue')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.0, -19.0), 0.1, 0.1, color='green')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.5, -19.5), 0.1, 0.1, color='yellow')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.4, -19.4), 0.1, 0.1, color='cyan')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.3, -19.3), 0.1, 0.1, color='magenta')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.2, -19.2), 0.1, 0.1, color='pink')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.1, -19.1), 0.1, 0.1, color='orange')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.0, -19.0), 0.1, 0.1, color='purple')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.5, -19.5), 0.1, 0.1, color='brown')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.4, -19.4), 0.1, 0.1, color='gray')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.3, -19.3), 0.1, 0.1, color='silver')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.2, -19.2), 0.1, 0.1, color='gold')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.1, -19.1), 0.1, 0.1, color='white')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.0, -19.0), 0.1, 0.1, color='black')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.5, -19.5), 0.1, 0.1, color='red')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.4, -19.4), 0.1, 0.1, color='blue')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.3, -19.3), 0.1, 0.1, color='green')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.2, -19.2), 0.1, 0.1, color='yellow')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.1, -19.1), 0.1, 0.1, color='cyan')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.0, -19.0), 0.1, 0.1, color='magenta')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.5, -19.5), 0.1, 0.1, color='pink')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.4, -19.4), 0.1, 0.1, color='orange')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.3, -19.3), 0.1, 0.1, color='purple')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.2, -19.2), 0.1, 0.1, color='brown')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.1, -19.1), 0.1, 0.1, color='gray')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.0, -19.0), 0.1, 0.1, color='silver')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.5, -19.5), 0.1, 0.1, color='gold')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.4, -19.4), 0.1, 0.1, color='white')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.3, -19.3), 0.1, 0.1, color='black')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.2, -19.2), 0.1, 0.1, color='red')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.1, -19.1), 0.1, 0.1, color='blue')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.0, -19.0), 0.1, 0.1, color='green')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.5, -19.5), 0.1, 0.1, color='yellow')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.4, -19.4), 0.1, 0.1, color='cyan')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.3, -19.3), 0.1, 0.1, color='magenta')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.2, -19.2), 0.1, 0.1, color='pink')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.1, -19.1), 0.1, 0.1, color='orange')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.0, -19.0), 0.1, 0.1, color='purple')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.5, -19.5), 0.1, 0.1, color='brown')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.4, -19.4), 0.1, 0.1, color='gray')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.3, -19.3), 0.1, 0.1, color='silver')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.2, -19.2), 0.1, 0.1, color='gold')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.1, -19.1), 0.1, 0.1, color='white')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.0, -19.0), 0.1, 0.1, color='black')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.5, -19.5), 0.1, 0.1, color='red')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((-19.4, -19.4), 0.1, 0.1, color='blue')\nax.add_patch(rect)\n\n# Add a rectangle to the plot\n"}
{"file": "dataset/ori_500/errorpoint_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Dataset unique shouter count mean')\n\n# Set the x-axis label\nax.set_xlabel('Number of speakers')\n\n# Set the y-axis label\nax.set_ylabel('Unique speaker count mean')\n\n# Create a scatter plot with random data\nax.scatter([1, 2, 3, 4, 5], [10, 12, 14, 16, 18], color='blue')\n\n# Create a line plot with random data\nax.plot([1, 2, 3, 4, 5], [10, 12, 14, 16, 18], color='red')\n\n# Add a legend to the plot\nax.legend(['Unique speaker count mean', 'Unique shouter count mean'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorpoint_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Global News Sentiment Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Date')\n\n# Set the y-axis label\nax.set_ylabel('Sentiment Score')\n\n# Set the y-axis limits\nax.set_ylim(0, 25)\n\n# Set the x-axis ticks\nax.set_xticks([1, 2, 3, 4, 5])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['KASHMIR', 'COVID/LOCKDOWN', 'SPORTS', 'CHINA', 'PULWAMA-BALAKOT'])\n\n# Set the y-axis ticks\nax.set_yticks([0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.5', '1', '1.5', '2', '2.5', '3', '3.5', '4', '4.5', '5'])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the"}
{"file": "dataset/ori_500/errorpoint_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Errorbar upper and lower limits')\n\n# Create a scatter plot with error bars\nx = [1, 2, 3, 4, 5]\ny = [1.5, 2.5, 3.5, 4.5, 5.5]\nyerr = [0.5, 0.5, 0.5, 0.5, 0.5]\nax.errorbar(x, y, yerr=yerr, fmt='o', ecolor='r', capsize=5)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('Time')\nax.set_ylabel('Value')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorpoint_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 2, figsize=(10, 4))\n\n# Plot the first graph\naxs[0].plot([0, 1, 2, 3, 4, 5], [100, 150, 200, 250, 300, 350], 'r-')\naxs[0].set_title('variable, symmetric error')\n\n# Plot the second graph\naxs[1].plot([0, 1, 2, 3, 4, 5], [100, 150, 200, 250, 300, 350], 'g-')\naxs[1].set_title('variable, symmetric error')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorpoint_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 7))\n\n# Set the title of the plot\nax.set_title('variable, asymmetric error')\n\n# Set the x-axis label\nax.set_xlabel('time')\n\n# Set the y-axis label\nax.set_ylabel('value')\n\n# Set the x-axis limits\nax.set_xlim(0, 10)\n\n# Set the y-axis limits\nax.set_ylim(15, 35)\n\n# Set the x-axis ticks\nax.set_xticks(range(0, 11, 2))\n\n# Set the y-axis ticks\nax.set_yticks(range(15, 36, 5))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['15', '20', '25', '30', '35'])\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('green')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('green')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='yellow', linestyle='--')\n\n# Set the color of the error bar\nax.errorbar([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], yerr=[1, 2, 3, 4, 5, 6], fmt='o', ecolor='red')\n\n# Set the color of the scatter plot\nax.scatter([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], color='blue')\n\n# Set the color of the line plot\nax.plot([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], color='green')\n\n# Set the color of the fill_between plot\nax.fill_between([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], [16, 21, 26, 31, 36, 41], color='yellow')\n\n# Set the color of the fill_betweenx plot\nax.fill_betweenx([15, 20, 25, 30, 35, 40], [0, 2, 4, 6, 8, 10], [1, 2, 3, 4, 5, 6], color='green')\n\n# Set the color of the fill_betweeny plot\nax.fill_betweeny([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], [16, 21, 26, 31, 36, 41], color='yellow')\n\n# Set the color of the fill_betweenxy plot\nax.fill_betweenxy([15, 20, 25, 30, 35, 40], [0, 2, 4, 6, 8, 10], [1, 2, 3, 4, 5, 6], color='green')\n\n# Set the color of the fill_betweenxxy plot\nax.fill_betweenxxy([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], [16, 21, 26, 31, 36, 41], color='yellow')\n\n# Set the color of the fill_betweenxyx plot\nax.fill_betweenxyx([15, 20, 25, 30, 35, 40], [0, 2, 4, 6, 8, 10], [1, 2, 3, 4, 5, 6], color='green')\n\n# Set the color of the fill_betweenxxyxx plot\nax.fill_betweenxxyxx([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], [16, 21, 26, 31, 36, 41], color='yellow')\n\n# Set the color of the fill_betweenxyxxx plot\nax.fill_betweenxyxxx([15, 20, 25, 30, 35, 40], [0, 2, 4, 6, 8, 10], [1, 2, 3, 4, 5, 6], color='green')\n\n# Set the color of the fill_betweenxxyxxxx plot\nax.fill_betweenxxyxxxx([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], [16, 21, 26, 31, 36, 41], color='yellow')\n\n# Set the color of the fill_betweenxyxxxxx plot\nax.fill_betweenxyxxxxx([15, 20, 25, 30, 35, 40], [0, 2, 4, 6, 8, 10], [1, 2, 3, 4, 5, 6], color='green')\n\n# Set the color of the fill_betweenxxyxxxxxx plot\nax.fill_betweenxxyxxxxxx([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], [16, 21, 26, 31, 36, 41], color='yellow')\n\n# Set the color of the fill_betweenxyxxxxxxx plot\nax.fill_betweenxyxxxxxxx([15, 20, 25, 30, 35, 40], [0, 2, 4, 6, 8, 10], [1, 2, 3, 4, 5, 6], color='green')\n\n# Set the color of the fill_betweenxxyxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxx([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], [16, 21, 26, 31, 36, 41], color='yellow')\n\n# Set the color of the fill_betweenxyxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxx([15, 20, 25, 30, 35, 40], [0, 2, 4, 6, 8, 10], [1, 2, 3, 4, 5, 6], color='green')\n\n# Set the color of the fill_betweenxxyxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxx([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], [16, 21, 26, 31, 36, 41], color='yellow')\n\n# Set the color of the fill_betweenxyxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxx([15, 20, 25, 30, 35, 40], [0, 2, 4, 6, 8, 10], [1, 2, 3, 4, 5, 6], color='green')\n\n# Set the color of the fill_betweenxxyxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxx([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], [16, 21, 26, 31, 36, 41], color='yellow')\n\n# Set the color of the fill_betweenxyxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxx([15, 20, 25, 30, 35, 40], [0, 2, 4, 6, 8, 10], [1, 2, 3, 4, 5, 6], color='green')\n\n# Set the color of the fill_betweenxxyxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxx([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], [16, 21, 26, 31, 36, 41], color='yellow')\n\n# Set the color of the fill_betweenxyxxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxxx([15, 20, 25, 30, 35, 40], [0, 2, 4, 6, 8, 10], [1, 2, 3, 4, 5, 6], color='green')\n\n# Set the color of the fill_betweenxxyxxxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxxxx([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], [16, 21, 26, 31, 36, 41], color='yellow')\n\n# Set the color of the fill_betweenxyxxxxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxxxxx([15, 20, 25, 30, 35, 40], [0, 2, 4, 6, 8, 10], [1, 2, 3, 4, 5, 6], color='green')\n\n# Set the color of the fill_betweenxxyxxxxxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxxxxxx([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], [16, 21, 26, 31, 36, 41], color='yellow')\n\n# Set the color of the fill_betweenxyxxxxxxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxxxxxxx([15, 20, 25, 30, 35, 40], [0, 2, 4, 6, 8, 10], [1, 2, 3, 4, 5, 6], color='green')\n\n# Set the color of the fill_betweenxxyxxxxxxxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxxxxxxxx([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], [16, 21, 26, 31, 36, 41], color='yellow')\n\n# Set the color of the fill_betweenxyxxxxxxxxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxxxxxxxxx([15, 20, 25, 30, 35, 40], [0, 2, 4, 6, 8, 10], [1, 2, 3, 4, 5, 6], color='green')\n\n# Set the color of the fill_betweenxxyxxxxxxxxxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxxxxxxxxxx([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], [16, 21, 26, 31, 36, 41], color='yellow')\n\n# Set the color of the fill_betweenxyxxxxxxxxxxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxxxxxxxxxxx([15, 20, 25, 30, 35, 40], [0, 2, 4, 6, 8, 10], [1, 2, 3, 4, 5, 6], color='green')\n\n# Set the color of the fill_betweenxxyxxxxxxxxxxxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxxxxxxxxxxxx([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], [16, 21, 26, 31, 36, 41], color='yellow')\n\n# Set the color of the fill_betweenxyxxxxxxxxxxxxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxxxxxxxxxxxxx([15, 20, 25, 30, 35, 40], [0, 2, 4, 6, 8, 10], [1, 2, 3, 4, 5, 6], color='green')\n\n# Set the color of the fill_betweenxxyxxxxxxxxxxxxxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxxxxxxxxxxxxxx([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], [16, 21, 26, 31, 36, 41], color='yellow')\n\n# Set the color of the fill_betweenxyxxxxxxxxxxxxxxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxxxxxxxxxxxxxxx([15, 20, 25, 30, 35, 40], [0, 2, 4, 6, 8, 10], [1, 2, 3, 4, 5, 6], color='green')\n\n# Set the color of the fill_betweenxxyxxxxxxxxxxxxxxxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxxxxxxxxxxxxxxxx([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], [16, 21, 26, 31, 36, 41], color='yellow')\n\n# Set the color of the fill_betweenxyxxxxxxxxxxxxxxxxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxxxxxxxxxxxxxxxxx([15, 20, 25, 30, 35, 40], [0, 2, 4, 6, 8, 10], [1, 2, 3, 4, 5, 6], color='green')\n\n# Set the color of the fill_betweenxxyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], [16, 21, 26, 31, 36, 41], color='yellow')\n\n# Set the color of the fill_betweenxyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx([15, 20, 25, 30, 35, 40], [0, 2, 4, 6, 8, 10], [1, 2, 3, 4, 5, 6], color='green')\n\n# Set the color of the fill_betweenxxyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], [16, 21, 26, 31, 36, 41], color='yellow')\n\n# Set the color of the fill_betweenxyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx([15, 20, 25, 30, 35, 40], [0, 2, 4, 6, 8, 10], [1, 2, 3, 4, 5, 6], color='green')\n\n# Set the color of the fill_betweenxxyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], [16, 21, 26, 31, 36, 41], color='yellow')\n\n# Set the color of the fill_betweenxyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx plot\nax.fill_betweenxxyxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx([15, 20, 25, 30, 35, 40], [0, 2, 4, 6, 8, 10], [1, 2, 3, 4, 5, 6], color='green')\n\n# Set"}
{"file": "dataset/ori_500/errorpoint_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 7))\n\n# Set the title of the plot\nax.set_title('variable, asymmetric error')\n\n# Create a rectangle for the errorbar\nerrorbar = plt.Rectangle((0, 0), 1, 1, fc='purple')\nax.add_patch(errorbar)\n\n# Create a scatter plot with the data points\nx = [0, 5, 10, 15, 20]\ny = [-2.1, -3.0, -2.9, -1.1, -1.0]\nax.scatter(x, y, c='purple')\n\n# Create a line plot with the error bars\nax.errorbar(x, y, yerr=0.5, fmt='-o', ecolor='purple', capsize=5)\n\n# Set the limits of the x-axis\nax.set_xlim(0, 20)\n\n# Set the limits of the y-axis\nax.set_ylim(14, 19)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/graph_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Define the number of points\nn = 10\n\n# Generate random data for the scatter plot\nx = np.random.rand(n)\ny = np.random.rand(n)\n\n# Plot the scatter plot\nax.scatter(x, y)\n\n# Set the title and labels\nax.set_title('Scatter Plot')\nax.set_xlabel('X-axis')\nax.set_ylabel('Y-axis')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/graph_2.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Define the number of nodes and edges\nn_nodes = 10\nn_edges = 20\n\n# Generate random node positions\nnode_positions = np.random.rand(n_nodes, 2)\n\n# Draw the nodes as circles\nfor pos in node_positions:\n    circle = plt.Circle(pos, 0.05, color='pink')\n    ax.add_artist(circle)\n\n# Generate random edge connections\nedges = np.random.randint(0, n_nodes, (n_edges, 2))\nfor edge in edges:\n    ax.plot(node_positions[edge], 'k-')\n\n# Set the limits of the plot\nax.set_xlim(-0.1, 1.1)\nax.set_ylim(-0.1, 1.1)\n\n# Remove the axes\nax.axis('off')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/graph_3.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Define the data for the plot\nx = np.linspace(0, 2*np.pi, 100)\ny = np.sin(x)\n\n# Plot the data\nax.plot(x, y)\n\n# Set the title of the plot\nax.set_title('Sine Wave')\n\n# Set the x and y labels\nax.set_xlabel('Time (s)')\nax.set_ylabel('Amplitude')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/graph_4.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Define the data for the plot\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\n\n# Plot the data\nax.plot(x, y)\n\n# Set the title of the plot\nax.set_title('Sine Wave')\n\n# Set the x and y labels\nax.set_xlabel('Time (s)')\nax.set_ylabel('Amplitude')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/graph_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Define the circle parameters\ncircle_radius = 5\ncircle_center = (5, 5)\n\n# Create a circle\ncircle = plt.Circle(circle_center, circle_radius, color='orange', fill=False)\nax.add_artist(circle)\n\n# Define the triangle parameters\ntriangle_vertices = [(0, 0), (10, 0), (5, 10)]\ntriangle = plt.Polygon(triangle_vertices, color='black')\nax.add_patch(triangle)\n\n# Define the rectangle parameters\nrectangle_vertices = [(0, 0), (10, 0), (10, 5), (0, 5)]\nrectangle = plt.Rectangle((0, 0), 10, 5, color='blue', fill=False)\nax.add_patch(rectangle)\n\n# Set the limits of the plot\nax.set_xlim(-10, 20)\nax.set_ylim(-10, 20)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Stock Market Analysis')\n\n# Set the labels for the x-axis and y-axis\nax.set_xlabel('Time')\nax.set_ylabel('Price')\n\n# Create a bar chart with the data\nax.bar(['CoreNLP', 'Stanza', 'Biaffine', 'StackPointer', 'TowerParse'], [0.61, 0.74, 0.70, 0.70, 0.57], color='orange')\nax.bar(['CoreNLP', 'Stanza', 'Biaffine', 'StackPointer', 'TowerParse'], [0.69, 0.64, 0.67, 0.45, 0.62], color='pink')\nax.bar(['CoreNLP', 'Stanza', 'Biaffine', 'StackPointer', 'TowerParse'], [0.77, 0.88, 0.72, 0.54, 0.69], color='red')\nax.bar(['CoreNLP', 'Stanza', 'Biaffine', 'StackPointer', 'TowerParse'], [1.00, 1.00, 1.00, 1.00, 1.00], color='purple')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Set the title of the plot\nax.set_title('Voting Results')\n\n# Define the data for the pie chart\ndata = [50.8, 28.1, 2.6, 0.5, 4.1, 8.1, 15.5, 17.3, 13.9, 16.3]\n\n# Define the labels for the pie chart\nlabels = ['Wererwolf', 'Seer', 'Witch', 'Hunter', 'Villager', 'Abstain']\n\n# Create a pie chart with the data and labels\nwedges, texts, autotexts = ax.pie(data, labels=labels, autopct='%1.1f%%', startangle=90)\n\n# Set the colors of the wedges\ncolors = ['blue', 'skyblue', 'orange', 'pink', 'lightblue', 'grey']\nfor wedge, color in zip(wedges, colors):\n    wedge.set_facecolor(color)\n\n# Add a color bar which maps values to colors\ncmap = plt.get_cmap(\"OrRd\")\nnorm = plt.Normalize(vmin=min(data), vmax=max(data))\nsm = plt.cm.ScalarMappable(cmap=cmap, norm=norm)\nsm.set_array([])\nfig.colorbar(sm, ax=ax)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Create a grid of rectangles\nfor i in range(10):\n    for j in range(10):\n        ax.add_patch(plt.Rectangle((i*0.5, j*0.5), 0.5, 0.5, color=cmap(np.random.rand())))\n\n# Set the title\nax.set_title('Players')\n\n# Set the x and y labels\nax.set_xlabel('Players')\nax.set_ylabel('Players')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 8))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Set the title of the plot\nax.set_title('Live vs Predicted Category Similarity', fontsize=24)\n\n# Set the x-axis label\nax.set_xlabel('Live Category', fontsize=18)\n\n# Set the y-axis label\nax.set_ylabel('Predicted Category', fontsize=18)\n\n# Set the x-ticks\nax.set_xticks(np.arange(0, 51, 10))\nax.set_xticklabels(['0', '10', '20', '30', '40', '50'])\n\n# Set the y-ticks\nax.set_yticks(np.arange(0, 51, 10))\nax.set_yticklabels(['0', '10', '20', '30', '40', '50'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=14)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black"}
{"file": "dataset/ori_500/heatmap_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('LOH0')\n\n# Create a rectangle for the first column\nrect1 = plt.Rectangle((0, 0), 1, 1, color='grey')\nax.add_patch(rect1)\n\n# Create a rectangle for the second column\nrect2 = plt.Rectangle((1, 0), 1, 1, color='green')\nax.add_patch(rect2)\n\n# Create a rectangle for the third column\nrect3 = plt.Rectangle((2, 0), 1, 1, color='blue')\nax.add_patch(rect3)\n\n# Create a rectangle for the fourth column\nrect4 = plt.Rectangle((3, 0), 1, 1, color='red')\nax.add_patch(rect4)\n\n# Create a rectangle for the fifth column\nrect5 = plt.Rectangle((4, 0), 1, 1, color='yellow')\nax.add_patch(rect5)\n\n# Create a rectangle for the sixth column\nrect6 = plt.Rectangle((5, 0), 1, 1, color='orange')\nax.add_patch(rect6)\n\n# Create a rectangle for the seventh column\nrect7 = plt.Rectangle((6, 0), 1, 1, color='brown')\nax.add_patch(rect7)\n\n# Create a rectangle for the eighth column\nrect8 = plt.Rectangle((7, 0), 1, 1, color='purple')\nax.add_patch(rect8)\n\n# Create a rectangle for the ninth column\nrect9 = plt.Rectangle((8, 0), 1, 1, color='pink')\nax.add_patch(rect9)\n\n# Create a rectangle for the tenth column\nrect10 = plt.Rectangle((9, 0), 1, 1, color='cyan')\nax.add_patch(rect10)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 10.0))\n\n# Set the title of the plot\nax.set_title('Global Economy')\n\n# Create a color map for the world map\nworld_map = np.random.rand(100, 100)\ncmap = plt.get_cmap('coolwarm')\n\n# Display the world map\nim = ax.imshow(world_map, cmap=cmap)\n\n# Add a color bar to the plot\nfig.colorbar(im)\n\n# Set the x-axis labels\nx_labels = ['LLVA', 'BakLiva', 'GeminiProVision', 'GPT4V', 'CODI']\nax.set_xticks(np.arange(len(x_labels)))\nax.set_xticklabels(x_labels)\n\n# Set the y-axis labels\ny_labels = ['Academia', 'Agriculture', 'Construction and Real Estate', 'Corporate', 'Entertainment', 'Finance', 'Government', 'Hospitality', 'Legal Services', 'Life Sciences']\nax.set_yticks(np.arange(len(y_labels)))\nax.set_yticklabels(y_labels)\n\n# Set the grid lines\nax.grid(True)\n\n# Set the aspect ratio of the plot\nax.set_aspect('equal')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Create a rectangle for the logo\nlogo = plt.Rectangle((0, 0), 1, 1, color='black')\nax.add_patch(logo)\n\n# Create a bar chart for the data\nx = np.arange(1, 13)\ny = np.random.randint(1, 10, 12)\nax.bar(x, y, color='purple')\n\n# Add labels and title\nax.set_xlabel('To layer')\nax.set_ylabel('Perplexity')\nax.set_title('BERT Perplexity by Layer')\n\n# Add a watermark\nwatermark = plt.Rectangle((0, 0), 1, 1, color='white', alpha=0.5)\nax.add_patch(watermark)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(4.0, 8.0))\n\n# Set the title of the chart\nax.set_title('Sales Performance Heatmap')\n\n# Create a color map for the heatmap\ncmap = plt.get_cmap('OrRd')\n\n# Create a list of sales data\nsales_data = [\n    [659, 777, 247, 153, 953],\n    [807, 187, 643, 373, 819],\n    [109, 172, 759, 588, 327],\n    [459, 274, 797, 856, 660],\n    [784, 637, 523, 435, 405],\n    [935, 945, 739, 888, 665],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [729, 651, 797, 650, 498],\n    [863, 700, 644, 650, 733],\n    [935, 945, 739, 888, 665],\n    [292, 949, 365, 142, 711],\n    [7"}
{"file": "dataset/ori_500/heatmap_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 3))\n\n# Set the title of the plot\nax.set_title('Time Series Data')\n\n# Create a color map\ncmap = plt.get_cmap('viridis')\n\n# Create a list of colors\ncolors = [cmap(i) for i in np.linspace(0, 1, 10)]\n\n# Create a list of time series data\ntime_series_data = [\n    [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30],\n    [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3.0],\n    [0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3.0, 3.1],\n    # Add more time series data here...\n]\n\n# Plot the time series data\nfor i, data in enumerate(time_series_data):\n    ax.plot(data[0], data[1], label=f'Time Series {i}', color=colors[i])\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(7.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Weather')\n\n# Create a color map for the scatter plot\ncmap = plt.cm.RdYlGn\n\n# Create a scatter plot with random data\nx = np.random.rand(100)\ny = np.random.rand(100)\ncolors = np.random.rand(100)\nsizes = 1000 * np.random.rand(100)\n\n# Plot the scatter plot\nscatter = ax.scatter(x, y, c=colors, s=sizes, cmap=cmap)\n\n# Add a color bar to the plot\ncbar = fig.colorbar(scatter)\n\n# Set the limits of the x-axis and y-axis\nax.set_xlim([96, 720])\nax.set_ylim([96, 720])\n\n# Set the labels of the x-axis and y-axis\nax.set_xlabel('Time')\nax.set_ylabel('Temperature')\n\n# Set the tick marks of the x-axis and y-axis\nax.set_xticks(np.arange(96, 721, 36))\nax.set_yticks(np.arange(96, 721, 36))\n\n# Set the grid lines of the x-axis and y-axis\nax.grid(True)\n\n# Set the aspect ratio of the plot\nax.set_aspect('equal')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(20, 8))\n\n# Set the title of the plot\nax.set_title('a) Role voting in the Werewolf game')\n\n# Create a bar chart\nax.bar(['Villager', 'Hunter', 'Witch', 'Seer', 'Werewolf'], [15.7, 28.1, 9.2, 13.9, 16.3], color='blue')\n\n# Set the x-axis label\nax.set_xlabel('Role')\n\n# Set the y-axis label\nax.set_ylabel('Percentage')\n\n# Create a second subplot\nax2 = fig.add_subplot(122)\n\n# Set the title of the plot\nax2.set_title('b) Final state of roles')\n\n# Create a bar chart\nax2.bar(['Villager', 'Hunter', 'Witch', 'Seer', 'Werewolf'], [31.5, 25.3, 17.4, 26.0, 17.3], color='blue')\n\n# Set the x-axis label\nax2.set_xlabel('Role')\n\n# Set the y-axis label\nax2.set_ylabel('Percentage')\n\n# Add a color bar\ncbar = fig.colorbar(ax2.images[0])\n\n# Set the color bar limits\ncbar.set_clim(0, 100)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Question Type: All three types of questions')\n\n# Set the x-axis label\nax.set_xlabel('Response Action Category')\n\n# Set the y-axis label\nax.set_ylabel('Number of Responses')\n\n# Create a bar chart with the data\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [169, 547, 662, 271, 145], color='blue')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [547, 439, 753, 239, 1355], color='red')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [662, 753, 557, 259, 1269], color='green')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [271, 239, 259, 153, 732], color='orange')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [145, 1355, 141, 1269, 661], color='yellow')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [547, 439, 753, 239, 1355], color='brown')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [662, 753, 557, 259, 1269], color='pink')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [271, 239, 259, 153, 732], color='purple')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [145, 1355, 141, 1269, 661], color='cyan')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3, 4])\nax.set_xticklabels(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'])\n\n# Set the y-ticks\nax.set_yticks(range(0, 1300, 100))\nax.set_yticklabels(range(0, 1300, 100))\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data\nemotion = ['angry', 'sad', 'disgust', 'contempt', 'fear', 'neutral', 'surprise', 'happy']\nscore_original = [0.10, 0.00, 0.30, 0.00, 0.00, 0.50, 0.00, 0.10]\nscore_adjusted = [0.12, 0.00, 0.44, 0.00, 0.00, 0.44, 0.00, 0.00]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Plot the data\nax.bar(emotion, score_original, color='blue', label='Original')\nax.bar(emotion, score_adjusted, color='red', label='Adjusted')\n\n# Add labels and title\nax.set_xlabel('Emotions')\nax.set_ylabel('Score')\nax.set_title('Emotion Recognition Scores')\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Set the title of the plot\nax.set_title('Voting Results')\n\n# Define the data for the pie chart\nvoter_data = [50.3, 28.1, 76.0, 12.3, 50.8, 11.2, 49.2, 70.0, 50.3, 28.1, 76.0, 12.3, 50.8, 11.2, 49.2, 70.0]\nvoter_labels = ['Wererewolf', 'Seer', 'Witch', 'Hunter', 'Villager', 'Abstain']\n\n# Create a pie chart with the data\nax.pie(voter_data, labels=voter_labels, autopct='%1.1f%%', startangle=90)\n\n# Add a color bar which maps values to colors\ncmap = plt.get_cmap(\"Blues\")\nnorm = plt.Normalize(vmin=min(voter_data), vmax=max(voter_data))\nsm = plt.cm.ScalarMappable(cmap=cmap, norm=norm)\nsm.set_array([])\nfig.colorbar(sm)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_22.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 6))\n\n# Set the title of the plot\nax.set_title('LLaMA')\n\n# Create a color map for the heatmap\ncmap = plt.get_cmap('YlOrRd')\n\n# Create a heatmap with the data\nheatmap = ax.imshow(np.random.rand(5, 5), cmap=cmap)\n\n# Add a color bar to the plot\ncbar = fig.colorbar(heatmap)\n\n# Set the labels for the x-axis\nax.set_xticks([0, 1, 2, 3, 4])\nax.set_xticklabels(['Baseline', 'Reversed Order', 'Reversed IDs'])\n\n# Set the labels for the y-axis\nax.set_yticks([0, 1, 2, 3, 4])\nax.set_yticklabels(['#17', '#24', '#3', '#10', '#13'])\n\n# Set the limits for the x-axis\nax.set_xlim(0, 4)\n\n# Set the limits for the y-axis\nax.set_ylim(0, 4)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_23.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Set the title of the plot\nax.set_title('Stock Market Data')\n\n# Set the x-axis label\nax.set_xlabel('Date')\n\n# Set the y-axis label\nax.set_ylabel('Price')\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 1, 2, 3, 4, 5])\nax.set_xticklabels(['Jan 1', 'Feb 1', 'Mar 1', 'Apr 1', 'May 1', 'Jun 1'])\n\n# Set the tick labels for the y-axis\nax.set_yticks([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])\nax.set_yticklabels(['$0.10', '$0.20', '$0.30', '$0.40', '$0.50', '$0.60', '$0.70', '$0.80', '$0.90', '$1.00'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the title\nax.set_title('Stock Market Data', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Date', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Price', color='black')\n\n# Set the color of the tick labels\nax.set_xticklabels(['Jan 1', 'Feb 1', 'Mar 1', 'Apr 1', 'May 1', 'Jun 1'], color='black')\nax.set_yticklabels(['$0.10', '$0.20', '$0.30', '$0.40', '$0.50', '$0.60', '$0.70', '$0.80', '$0.90', '$1.00'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the title\nax.set_title('Stock Market Data', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Date', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Price', color='black')\n\n# Set the color of the tick labels\nax.set_xticklabels(['Jan 1', 'Feb 1', 'Mar 1', 'Apr 1', 'May 1', 'Jun 1'], color='black')\nax.set_yticklabels(['$0.10', '$0.20', '$0.30', '$0.40', '$0.50', '$0.60', '$0.70', '$0.80', '$0.90', '$1.00'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the title\nax.set_title('Stock Market Data', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Date', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Price', color='black')\n\n# Set the color of the tick labels\nax.set_xticklabels(['Jan 1', 'Feb 1', 'Mar 1', 'Apr 1', 'May 1', 'Jun 1'], color='black')\nax.set_yticklabels(['$0.10', '$0.20', '$0.30', '$0.40', '$0.50', '$0.60', '$0.70', '$0.80', '$0.90', '$1.00'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the title\nax.set_title('Stock Market Data', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Date', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Price', color='black')\n\n# Set the color of the tick labels\nax.set_xticklabels(['Jan 1', 'Feb 1', 'Mar 1', 'Apr 1', 'May 1', 'Jun 1'], color='black')\nax.set_yticklabels(['$0.10', '$0.20', '$0.30', '$0.40', '$0.50', '$0.60', '$0.70', '$0.80', '$0.90', '$1.00'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the title\nax.set_title('Stock Market Data', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Date', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Price', color='black')\n\n# Set the color of the tick labels\nax.set_xticklabels(['Jan 1', 'Feb 1', 'Mar 1', 'Apr 1', 'May 1', 'Jun 1'], color='black')\nax.set_yticklabels(['$0.10', '$0.20', '$0.30', '$0.40', '$0.50', '$0.60', '$0.70', '$0.80', '$0.90', '$1.00'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the title\nax.set_title('Stock Market Data', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Date', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Price', color='black')\n\n# Set the color of the tick labels\nax.set_xticklabels(['Jan 1', 'Feb 1', 'Mar 1', 'Apr 1', 'May 1', 'Jun 1'], color='black')\nax.set_yticklabels(['$0.10', '$0.20', '$0.30', '$0.40', '$0.50', '$0.60', '$0.70', '$0.80', '$0.90', '$1.00'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the title\nax.set_title('Stock Market Data', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Date', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Price', color='black')\n\n# Set the color of the tick labels\nax.set_xticklabels(['Jan 1', 'Feb 1', 'Mar 1', 'Apr 1', 'May 1', 'Jun 1'], color='black')\nax.set_yticklabels(['$0.10', '$0.20', '$0.30', '$0.40', '$0.50', '$0.60', '$0.70', '$0.80', '$0.90', '$1.00'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the title\nax.set_title('Stock Market Data', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Date', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Price', color='black')\n\n# Set the color of the tick labels\nax.set_xticklabels(['Jan 1', 'Feb 1', 'Mar 1', 'Apr 1', 'May 1', 'Jun 1'], color='black')\nax.set_yticklabels(['$0.10', '$0.20', '$0.30', '$0.40', '$0.50', '$0.60', '$0.70', '$0.80', '$0.90', '$1.00'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the title\nax.set_title('Stock Market Data', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Date', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Price', color='black')\n\n# Set the color of the tick labels\nax.set_xticklabels(['Jan 1', 'Feb 1', 'Mar 1', 'Apr 1', 'May 1', 'Jun 1'], color='black')\nax.set_yticklabels(['$0.10', '$0.20', '$0.30', '$0.40', '$0.50', '$0.60', '$0.70', '$0.80', '$0.90', '$1.00'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the title\nax.set_title('Stock Market Data', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Date', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Price', color='black')\n\n# Set the color of the tick labels\nax.set_xticklabels(['Jan 1', 'Feb 1', 'Mar 1', 'Apr 1', 'May 1', 'Jun 1'], color='black')\nax.set_yticklabels(['$0.10', '$0.20', '$0.30', '$0.40', '$0.50', '$0.60', '$0.70', '$0.80', '$0.90', '$1.00'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the title\nax.set_title('Stock Market Data', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Date', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Price', color='black')\n\n# Set the color of the tick labels\nax.set_xticklabels(['Jan 1', 'Feb 1', 'Mar 1', 'Apr 1', 'May 1', 'Jun 1'], color='black')\nax.set_yticklabels(['$0.10', '$0.20', '$0.30', '$0.40', '$0.50', '$0.60', '$0.70', '$0.80', '$0.90', '$1.00'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the title\nax.set_title('Stock Market Data', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Date', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Price', color='black')\n\n# Set the color of the tick labels\nax.set_xticklabels(['Jan 1', 'Feb 1', 'Mar 1', 'Apr 1', 'May 1', 'Jun 1'], color='black')\nax.set_yticklabels(['$0.10', '$0.20', '$0.30', '$0.40', '$0.50', '$0.60', '$0.70', '$0.80', '$0.90', '$1.00'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the title\nax.set_title('Stock Market Data', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Date', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Price', color='black')\n\n# Set the color of the tick labels\nax.set_xticklabels(['Jan 1', 'Feb 1', 'Mar 1', 'Apr 1', 'May 1', 'Jun 1'], color='black')\nax.set_yticklabels(['$0.10', '$0.20', '$0.30', '$0.40', '$0.50', '$0.60', '$0.70', '$0.80', '$0.90', '$1.00'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the title\nax.set_title('Stock Market Data', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Date', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Price', color='black')\n\n# Set the color of the tick labels\nax.set_xticklabels(['Jan 1', 'Feb 1', 'Mar 1', 'Apr 1', 'May 1', 'Jun 1'], color='black')\nax.set_yticklabels(['$0.10', '$0.20', '$0.30', '$0.40', '$0.50', '$"}
{"file": "dataset/ori_500/heatmap_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the color map\ncmap = plt.get_cmap('YlGnBu')\n\n# Create a grid of rectangles\nrects = []\nfor i in range(10):\n    for j in range(10):\n        rect = plt.Rectangle((i, j), 1, 1, color=cmap(i*j/100))\n        rects.append(rect)\n        ax.add_patch(rect)\n\n# Set the limits of the plot\nax.set_xlim(0, 10)\nax.set_ylim(0, 10)\n\n# Set the title of the plot\nax.set_title('Harvest [t/year]')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_25.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Crops and their characteristics')\n\n# Create a bar chart with the data\nax.bar(['cucumber', 'tomato', 'lettuce', 'asparagus', 'potato', 'barley'], [0.8, 2.4, 1.1, 0.6, 0.7, 0.1], color='green')\nax.bar(['cucumber', 'tomato', 'lettuce', 'asparagus', 'potato', 'barley'], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], bottom=[0.8, 2.4, 1.1, 0.6, 0.7, 0.1], color='yellow')\nax.bar(['cucumber', 'tomato', 'lettuce', 'asparagus', 'potato', 'barley'], [3.9, 1.0, 0.8, 0.3, 0.6, 0.2], bottom=[0.8, 2.4, 1.1, 0.6, 0.7, 0.1], color='orange')\nax.bar(['cucumber', 'tomato', 'lettuce', 'asparagus', 'potato', 'barley'], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], bottom=[3.9, 1.0, 0.8, 0.3, 0.6, 0.2], color='red')\nax.bar(['cucumber', 'tomato', 'lettuce', 'asparagus', 'potato', 'barley'], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], bottom=[3.9, 1.0, 0.8, 0.3, 0.6, 0.2], color='blue')\nax.bar(['cucumber', 'tomato', 'lettuce', 'asparagus', 'potato', 'barley'], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], bottom=[3.9, 1.0, 0.8, 0.3, 0.6, 0.2], color='purple')\n\n# Set the x-axis label\nax.set_xlabel('Crops')\n\n# Set the y-axis label\nax.set_ylabel('Yield per year')\n\n# Set the y-axis limits\nax.set_ylim(0, 5)\n\n# Set the x-axis limits\nax.set_xlim(-0.5, 5.5)\n\n# Set the x-tick labels\nax.set_xticks(range(6))\nax.set_xticklabels(['cucumber', 'tomato', 'lettuce', 'asparagus', 'potato', 'barley'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_26.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Create a grid of subplots\ngs = fig.add_gridspec(4, 4)\n\n# Add a color bar to the first subplot\nax1 = fig.add_subplot(gs[0, :2])\ncax1 = ax1.imshow(np.random.rand(10, 10), cmap='Blues')\nfig.colorbar(cax1, ax=ax1)\n\n# Add a color bar to the second subplot\nax2 = fig.add_subplot(gs[0, 2:])\ncax2 = ax2.imshow(np.random.rand(10, 10), cmap='Greens')\nfig.colorbar(cax2, ax=ax2)\n\n# Add a color bar to the third subplot\nax3 = fig.add_subplot(gs[1, :2])\ncax3 = ax3.imshow(np.random.rand(10, 10), cmap='Reds')\nfig.colorbar(cax3, ax=ax3)\n\n# Add a color bar to the fourth subplot\nax4 = fig.add_subplot(gs[1, 2:])\ncax4 = ax4.imshow(np.random.rand(10, 10), cmap='Purples')\nfig.colorbar(cax4, ax=ax4)\n\n# Add a color bar to the fifth subplot\nax5 = fig.add_subplot(gs[2, :2])\ncax5 = ax5.imshow(np.random.rand(10, 10), cmap='Greys')\nfig.colorbar(cax5, ax=ax5)\n\n# Add a color bar to the sixth subplot\nax6 = fig.add_subplot(gs[2, 2:])\ncax6 = ax6.imshow(np.random.rand(10, 10), cmap='Oranges')\nfig.colorbar(cax6, ax=ax6)\n\n# Add a color bar to the seventh subplot\nax7 = fig.add_subplot(gs[3, :2])\ncax7 = ax7.imshow(np.random.rand(10, 10), cmap='Greens')\nfig.colorbar(cax7, ax=ax7)\n\n# Add a color bar to the eighth subplot\nax8 = fig.add_subplot(gs[3, 2:])\ncax8 = ax8.imshow(np.random.rand(10, 10), cmap='Blues')\nfig.colorbar(cax8, ax=ax8)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_27.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the graph\nax.set_title('default: no edges')\n\n# Create a grid of subplots\ngs = ax.grid(True)\n\n# Create a color map for the rectangles\ncmap = plt.get_cmap('tab20')\n\n# Create a list of colors for the rectangles\ncolors = cmap(np.linspace(0, 1, 10))\n\n# Create a list of rectangles\nrectangles = [plt.Rectangle((i, i), 1, 1, color=colors[i]) for i in range(10)]\n\n# Add the rectangles to the plot\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Set the limits of the x and y axes\nax.set_xlim(0, 10)\nax.set_ylim(0, 10)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_28.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Create a grid of subplots\ngrid = ax.grid(True)\n\n# Set the title of the plot\nax.set_title('Sales of vendors (in tons/year)')\n\n# Set the labels for the x-axis and y-axis\nax.set_xlabel('Vendors')\nax.set_ylabel('Sales')\n\n# Create a list of vendors\nvendors = ['Vendor A', 'Vendor B', 'Vendor C', 'Vendor D', 'Vendor E', 'Vendor F', 'Vendor G']\n\n# Create a list of sales data\nsales = [1.5, 2.2, 1.8, 3.2, 0.5, 2.2, 0.6]\n\n# Create a list of colors for each vendor\ncolors = ['orange', 'red', 'green', 'blue', 'purple', 'pink', 'brown']\n\n# Create a bar chart\nax.bar(vendors, sales, color=colors)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_29.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Degree of acceptance of a product')\n\n# Create a bar chart with the data\nax.bar(['High', 'Medium', 'Low'], [42, 38, 35], color='blue')\nax.bar(['High', 'Medium', 'Low'], [4, 5, 75], color='green')\nax.bar(['High', 'Medium', 'Low'], [17, 36, 23], color='cyan')\nax.bar(['High', 'Medium', 'Low'], [79, 53, 34], color='lime')\nax.bar(['High', 'Medium', 'Low'], [4, 5, 0], color='yellow')\nax.bar(['High', 'Medium', 'Low'], [0, 0, 0], color='red')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Create a color map for the temperature data\ncmap = plt.get_cmap('coolwarm')\n\n# Create a grid of subplots\ngs = fig.add_gridspec(2, 3)\n\n# Add a subplot for the temperature data\ntemp_ax = fig.add_subplot(gs[0, :])\ntemp_ax.set_title('Bottlebeck Distance')\ntemp_ax.set_xlabel('Time (s)')\ntemp_ax.set_ylabel('Distance (m)')\ntemp_ax.plot(np.linspace(0, 10, 100), np.sin(np.linspace(0, 10, 100)), color='red')\n\n# Add a subplot for the water level data\nwater_ax = fig.add_subplot(gs[1, 0])\nwater_ax.set_title('Wasserstein Distance')\nwater_ax.set_xlabel('Time (s)')\nwater_ax.set_ylabel('Water Level (m)')\nwater_ax.plot(np.linspace(0, 10, 100), np.cos(np.linspace(0, 10, 100)), color='blue')\n\n# Add a subplot for the radar chart\nradar_ax = fig.add_subplot(gs[1, 1:])\nradar_ax.set_title('Radar Chart')\nradar_ax.set_xlabel('Time (s)')\nradar_ax.set_ylabel('Value')\nradar_ax.plot(np.linspace(0, 10, 100), np.tan(np.linspace(0, 10, 100)), color='green')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_30.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('ROC\\'s AUC')\n\n# Create a color bar\ncbar = fig.colorbar(ax.imshow(np.random.rand(10, 10), cmap='hot'), ax=ax)\n\n# Set the ticks for the x-axis\nax.set_xticks(np.arange(0, 13, 2))\nax.set_yticks(np.arange(0, 13, 2))\n\n# Set the labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the labels for the y-axis\nax.set_yticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 3.0))\n\n# Create a color map\ncmap = plt.get_cmap('Greens')\n\n# Create a grid of rectangles\nfor i in range(10):\n    for j in range(10):\n        ax.add_patch(plt.Rectangle((i*2, j*2), 2, 2, color=cmap(np.random.rand())))\n\n# Set the limits of the plot\nax.set_xlim(0, 20)\nax.set_ylim(0, 20)\n\n# Set the title of the plot\nax.set_title('C Subject')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 6))\n\n# Set the color map\ncmap = plt.get_cmap('coolwarm')\n\n# Create a grid of subplots\ngs = fig.add_gridspec(3, 4)\n\n# Add a color bar\ncbar_ax = fig.add_axes([0.91, 0.15, 0.02, 0.7])\n\n# Add a title\nax.set_title('Live Cricket Scores', fontsize=20)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar(cax=cbar_ax, ax=ax)\n\n# Add a color bar\nfig.colorbar"}
{"file": "dataset/ori_500/heatmap_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Create a rectangle for the graph\nrect = plt.Rectangle((0, 0), 1, 1, fc='none', ec='k')\nax.add_patch(rect)\n\n# Set the title of the graph\nax.set_title('BabelStream triad Average Memory Bandwidth (GB/s)', fontsize=20)\n\n# Set the x-axis label\nax.set_xlabel('Programming Model', fontsize=15)\n\n# Set the y-axis label\nax.set_ylabel('Average Memory Bandwidth (GB/s)', fontsize=15)\n\n# Set the x-ticks\nx_ticks = ['Kokkos', 'RAJA', 'OMP', 'OACC', 'SYCL', 'Native Port']\nax.set_xticks(np.arange(len(x_ticks)))\nax.set_xticklabels(x_ticks, rotation=45, ha=\"right\")\n\n# Set the y-ticks\ny_ticks = [200, 400, 600, 800, 1000, 1200, 1400, 1600]\nax.set_yticks(y_ticks)\n\n# Set the y-tick labels\ny_tick_labels = ['200', '400', '600', '800', '1000', '1200', '1400', '1600']\nax.set_yticklabels(y_tick_labels)\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Set the color bar\ncbar = fig.colorbar(rect, ax=ax)\ncbar.set_label('Memory Bandwidth (GB/s)', rotation=270, labelpad=15)\n\n# Set the color map\ncmap = plt.get_c"}
{"file": "dataset/ori_500/heatmap_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Correlation Coefficients')\n\n# Create a color map\ncmap = plt.get_cmap('hot')\n\n# Create a grid of subplots\ngs = ax.grid(True)\n\n# Create a color bar\ncbar = fig.colorbar(cmap, ax=ax)\n\n# Set the color bar label\ncbar.set_label('Correlation Coefficient')\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('Time')\nax.set_ylabel('Frequency')\n\n# Set the x-axis and y-axis ticks\nax.set_xticks(np.arange(0, 10, 1))\nax.set_yticks(np.arange(0, 10, 1))\n\n# Set the x-axis and y-axis tick labels\nax.set_xticklabels(['en', 'fr', 'es', 'pt', 'bn', 'ur', 'hi', 'ar', 'zh'])\nax.set_yticklabels(['en', 'fr', 'es', 'pt', 'bn', 'ur', 'hi', 'ar', 'zh'])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params"}
{"file": "dataset/ori_500/heatmap_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the color map\ncmap = plt.get_cmap('Blues')\n\n# Create a bar chart\nbars = ax.bar(range(10), np.random.rand(10), color=cmap(np.linspace(0, 1, 10)))\n\n# Add labels and title\nax.set_xlabel('Players')\nax.set_ylabel('Scores')\nax.set_title('Player Scores')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nfig, ax = plt.subplots(figsize=(5.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('navy')\n\n# Create a grid of rectangles\nfor i in range(15):\n    for j in range(15):\n        # Create a rectangle with a random color\n        rect = plt.Rectangle((i, j), 1, 1, color=np.random.rand(3,))\n        ax.add_patch(rect)\n\n# Set the x and y limits of the plot\nax.set_xlim([0, 15])\nax.set_ylim([0, 15])\n\n# Set the x and y labels of the plot\nax.set_xlabel('Layers')\nax.set_ylabel('Time')\n\n# Set the title of the plot\nax.set_title('pythia-1b')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 100)\n\n# Set the x-axis label\nax.set_xlabel('Test Winning Distance')\n\n# Set the y-axis label\nax.set_ylabel('Number of Pairs')\n\n# Set the title\nax.set_title('Tennis Pairing Analysis')\n\n# Create a bar chart\nax.bar([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], [20, 40, 60, 80, 100, 80, 60, 40, 20], color='blue')\n\n# Create a scatter plot\nax.scatter([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], [20, 40, 60, 80, 100, 80, 60, 40, 20], color='red')\n\n# Create a line plot\nax.plot([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], [20, 40, 60, 80, 100, 80, 60, 40, 20], color='green')\n\n# Create a pie chart\nax.pie([20, 40, 60, 80, 100, 80, 60, 40, 20], colors=['blue', 'red', 'green', 'yellow', 'purple', 'orange', 'cyan', 'magenta', 'brown'])\n\n# Create a histogram\nax.hist([20, 40, 60, 80, 100, 80, 60, 40, 20], bins=10, color='blue')\n\n# Create a box plot\nax.boxplot([20, 40, 60, 80, 100, 80, 60, 40, 20], vert=False, patch_artist=True, boxprops=dict(facecolor='blue'))\n\n# Create a violin plot\nax.violinplot([20, 40, 60, 80, 100, 80, 60, 40, 20], showmeans=True, showmedians=True, showextrema=True)\n\n# Create a heatmap\nax.imshow([[20, 40, 60, 80, 100, 80, 60, 40, 20]], cmap='hot', interpolation='nearest')\n\n# Create a contour plot\nx = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]\ny = [20, 40, 60, 80, 100, 80, 60, 40, 20]\nz = [[20, 40, 60, 80, 100, 80, 60, 40, 20]]\nax.contourf(x, y, z, cmap='hot')\n\n# Create a stream plot\nx = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]\ny = [20, 40, 60, 80, 100, 80, 60, 40, 20]\nu = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nv = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nax.streamplot(x, y, u, v, color='blue')\n\n# Create a quiver plot\nx = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]\ny = [20, 40, 60, 80, 100, 80, 60, 40, 20]\nu = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nv = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nax.quiver(x, y, u, v, color='blue')\n\n# Create a polar plot\nax.polar([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], [20, 40, 60, 80, 100, 80, 60, 40, 20], color='blue')\n\n# Create a 3D plot\nfrom mpl_toolkits.mplot3d import Axes3D\nax = fig.add_subplot(111, projection='3d')\nx = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]\ny = [20, 40, 60, 80, 100, 80, 60, 40, 20]\nz = [20, 40, 60, 80, 100, 80, 60, 40, 20]\nax.plot_trisurf(x, y, z, cmap='hot', linewidth=0)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 2, figsize=(10, 3))\n\n# Define the data for the plots\nx = np.linspace(-1, 1, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\n\n# Plot the data\naxs[0].plot(x, y1, 'b-', label='Inter Class')\naxs[0].plot(x, y2, 'g-', label='Intra Class')\naxs[0].set_xlabel('Cosine Similarity')\naxs[0].set_ylabel('Frequency')\naxs[0].legend()\n\n# Repeat the process for the second subplot\naxs[1].plot(x, y1, 'b-', label='Inter Class')\naxs[1].plot(x, y2, 'g-', label='Intra Class')\naxs[1].set_xlabel('Cosine Similarity')\naxs[1].set_ylabel('Frequency')\naxs[1].legend()\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the plot\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Baseline')\n\n# Create a scatter plot with random data\nx = np.random.rand(50)\ny = np.random.rand(50)\nax.scatter(x, y, c='blue')\n\n# Set the x-axis label\nax.set_xlabel('Euclidean Distance')\n\n# Set the y-axis label\nax.set_ylabel('Density')\n\n# Set the x-axis limits\nax.set_xlim([0, 2.5])\n\n# Set the y-axis limits\nax.set_ylim([0, 1.5])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(7.0, 8.0))\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Set the title of the plot\nax.set_title('MATHWELL')\n\n# Set the x and y labels\nax.set_xlabel('FKGL')\nax.set_ylabel('Density')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Desert Animals in the Wild')\n\n# Set the x-axis label\nax.set_xlabel('Animal Weight (Tons)')\n\n# Set the y-axis label\nax.set_ylabel('Frequency')\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 1000)\n\n# Set the x-axis ticks\nax.set_xticks([0, 0.02, 0.04, 0.06, 0.08])\n\n# Set the y-axis ticks\nax.set_yticks([0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000])\n\n# Set the color of the x-axis labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors"}
{"file": "dataset/ori_500/hist_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 6))\n\n# Set the title of the plot\nax.set_title('Comparison of Uniform and Normal Distributions')\n\n# Set the x-axis label\nax.set_xlabel('Time (in hours)')\n\n# Set the y-axis label\nax.set_ylabel('Frequency')\n\n# Create a bar chart with the data\nax.bar([0, 2, 4, 6, 8], [50, 70, 90, 80, 60], color='blue', label='Uniform Data')\nax.bar([1, 3, 5, 7, 9], [40, 60, 80, 70, 50], color='red', label='Normal Data')\n\n# Add a legend to the plot\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Histogram of Wind Speed Measurements')\n\n# Set the x-axis label\nax.set_xlabel('Wind Speed (km/h)')\n\n# Set the y-axis label\nax.set_ylabel('Frequency')\n\n# Create a histogram with 10 bins\nax.hist([2, 3, 4, 5, 6, 7, 8, 9, 10, 11], bins=10, color='blue', edgecolor='black')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nx = [0.0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0]\ny1 = [10, 20, 30, 40, 50, 60, 70]\ny2 = [80, 90, 100, 110, 120, 130, 140]\ny3 = [150, 140, 130, 120, 110, 100, 90]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 4.0))\n\n# Plot the data\nax.plot(x, y1, color='blue', label='Baguette')\nax.plot(x, y2, color='orange', label='Youtiao')\n\n# Set the title and labels\nax.set_title('Baking Accuracy Analysis')\nax.set_xlabel('Distance to Threshold')\nax.set_ylabel('Frequency')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(16.0, 7.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 140)\n\n# Set the x-axis label\nax.set_xlabel('Test Winning Distance')\n\n# Set the y-axis label\nax.set_ylabel('Number of Pairs')\n\n# Set the title\nax.set_title('Tennis Player Performance')\n\n# Create a bar chart\nax.bar([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], [100, 110, 120, 130, 140, 150, 160, 170, 180], color='blue')\n\n# Create a scatter plot\nax.scatter([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], [10, 20, 30, 40, 50, 60, 70, 80, 90], color='red')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\n\n# Set the x-axis limits\nax.set_xlim([0, 300])\n\n# Set the y-axis limits\nax.set_ylim([0, 25])\n\n# Set the x-axis label\nax.set_xlabel('Number of Nominations')\n\n# Set the y-axis label\nax.set_ylabel('Grammy Points')\n\n# Set the title\nax.set_title('Histogram of Grammy Nominations Across Expanded Categories 2019-2023')\n\n# Create a bar chart with the data\nax.bar(range(1, 10), [10, 15, 20, 25, 30, 35, 40, 45, 50], color='orange')\nax.bar(range(1, 10), [12, 17, 22, 27, 32, 37, 42, 47, 52], color='yellow')\nax.bar(range(1, 10), [14, 19, 24, 29, 34, 39, 44, 49, 54], color='pink')\nax.bar(range(1, 10), [16, 21, 26, 31, 36, 41, 46, 51, 56], color='gold')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 7))\n\n# Set the title of the plot\nax.set_title('MNIST - Defect Detection')\n\n# Create a color bar for the plot\ncbar = fig.colorbar(ax)\n\n# Create a scatter plot with random data\nx = np.random.rand(100)\ny = np.random.rand(100)\ncolors = np.random.rand(100)\nsizes = 1000 * np.random.rand(100)\nscatter = ax.scatter(x, y, c=colors, s=sizes, alpha=0.5)\n\n# Set the limits of the x and y axes\nax.set_xlim([0, 1])\nax.set_ylim([0, 1])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(0.4, 1.0)\n\n# Set the y-axis limits\nax.set_ylim(0, 70)\n\n# Set the x-axis label\nax.set_xlabel('TM-score')\n\n# Set the y-axis label\nax.set_ylabel('Frequency')\n\n# Set the title of the plot\nax.set_title('TM-score vs Frequency')\n\n# Create a list of colors for the bars\ncolors = ['skyblue', 'lightgreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'palegreen', 'lightseagreen', 'darkseagreen', 'olivedrab', 'darkkhaki', 'pale"}
{"file": "dataset/ori_500/hist_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(2, 2, figsize=(10, 8))\n\n# Plot the first subplot\naxs[0, 0].imshow(np.random.rand(10, 10), cmap='Blues')\naxs[0, 0].set_title('a) Milk Chocolate')\naxs[0, 0].set_xlabel('Sweetness')\naxs[0, 0].set_ylabel('Density')\n\n# Plot the second subplot\naxs[0, 1].imshow(np.random.rand(10, 10), cmap='Oranges')\naxs[0, 1].set_title('b) Dark Chocolate')\naxs[0, 1].set_xlabel('Sweetness')\naxs[0, 1].set_ylabel('Density')\n\n# Plot the third subplot\naxs[1, 0].imshow(np.random.rand(10, 10), cmap='Greens')\naxs[1, 0].set_title('c) White Chocolate')\naxs[1, 0].set_xlabel('Sweetness')\naxs[1, 0].set_ylabel('Density')\n\n# Plot the fourth subplot\naxs[1, 1].imshow(np.random.rand(10, 10), cmap='Reds')\naxs[1, 1].set_title('d) Ruby Chocolate')\naxs[1, 1].set_xlabel('Sweetness')\naxs[1, 1].set_ylabel('Density')\n\n# Add colorbar to the first subplot\nfig.colorbar(axs[0, 0].images[0], ax=axs[0, 0])\n\n# Add colorbar to the second subplot\nfig.colorbar(axs[0, 1].images[0], ax=axs[0, 1])\n\n# Add colorbar to the third subplot\nfig.colorbar(axs[1, 0].images[0], ax=axs[1, 0])\n\n# Add colorbar to the fourth subplot\nfig.colorbar(axs[1, 1].images[0], ax=axs[1, 1])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(5.0, 4.0))\n\n# Set the title of the plot\nax.set_title('CIFAR100 \\'Desert\\' Concept')\n\n# Set the x-axis label\nax.set_xlabel('Concept Weight')\n\n# Set the y-axis label\nax.set_ylabel('Count')\n\n# Define the data for the plot\nx = [0.00, 0.05, 0.10, 0.15]\ny = [1000, 2000, 3000, 4000]\n\n# Plot the data\nax.plot(x, y)\n\n# Add a legend\nax.legend(['Class', 'Camel', 'Kangaroo'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_4.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Create a colormap for the histogram\ncmap = plt.get_cmap('viridis')\n\n# Create a histogram of the data\nax.hist(data, bins=20, color=cmap(0.7), edgecolor='black')\n\n# Set the title and labels\nax.set_title('Histogram of Data')\nax.set_xlabel('Data Values')\nax.set_ylabel('Frequency')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/hist_5.pdf", "response": "import matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(4.0, 3.0))\n\n# Set the background color of the plot\nax.set_facecolor('black')\n\n# Set the title of the plot\nax.set_title('Number of Clusters vs Number of Repetition', color='white')\n\n# Set the x-axis label\nax.set_xlabel('Number of Repetition', color='white')\n\n# Set the y-axis label\nax.set_ylabel('Number of Clusters', color='white')\n\n# Set the tick labels color\nax.tick_params(axis='both', colors='white')\n\n# Set the grid lines color\nax.grid(color='white')\n\n# Create a scatter plot\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000], color='orange')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/hist_6.pdf", "response": "import matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 3.0))\n\n# Set the title of the plot\nax.set_title('Classification Accuracy')\n\n# Set the x-axis label\nax.set_xlabel('Distance to threshold')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Create a bar chart\nax.bar([0, 1, 2, 3, 4], [0.9, 0.8, 0.7, 0.6, 0.5], color='blue', label='Correctly classified')\nax.bar([0, 1, 2, 3, 4], [0.1, 0.2, 0.3, 0.4, 0.5], bottom=[0.9, 0.8, 0.7, 0.6, 0.5], color='orange', label='Misclassified')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/hist_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Casade')\n\n# Set the x-axis label\nax.set_xlabel('Confidence in bin')\n\n# Set the y-axis label\nax.set_ylabel('Calibration Error')\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 1)\n\n# Create a scatter plot with a diagonal line\nx = np.linspace(0, 1, 100)\ny = x\nax.plot(x, y, 'k--')\n\n# Create a rectangle patch for the calibration error\nrect = plt.Rectangle((0.2, 0.3), 0.6, 0.4, color='tan', alpha=0.5)\nax.add_patch(rect)\n\n# Create a rectangle patch for the confidence in bin\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.4, color='saddlebrown', alpha=0.5)\nax.add_patch(rect)\n\n# Create a rectangle patch for the calibration error\nrect = plt.Rectangle((0.4, 0.4), 0.6, 0.4, color='tan', alpha=0.5)\nax.add_patch(rect)\n\n# Create a rectangle patch for the confidence in bin\nrect = plt.Rectangle((0.4, 0.4), 0.6, 0.4, color='saddlebrown', alpha=0.5)\nax.add_patch(rect)\n\n# Create a rectangle patch for the calibration error\nrect = plt.Rectangle((0.6, 0.6), 0.6, 0.4, color='tan', alpha=0.5)\nax.add_patch(rect)\n\n# Create a rectangle patch for the confidence in bin\nrect = plt.Rectangle((0.6, 0.6), 0.6, 0.4, color='saddlebrown', alpha=0.5)\nax.add_patch(rect)\n\n# Create a rectangle patch for the calibration error\nrect = plt.Rectangle((0.8, 0.8), 0.6, 0.4, color='tan', alpha=0.5)\nax.add_patch(rect)\n\n# Create a rectangle patch for the confidence in bin\nrect = plt.Rectangle((0.8, 0.8), 0.6, 0.4, color='saddlebrown', alpha=0.5)\nax.add_patch(rect)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Number of Queries Overlap')\n\n# Set the x-axis label\nax.set_xlabel('% images overlap')\n\n# Set the y-axis label\nax.set_ylabel('Number of queries')\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 6000)\n\n# Set the x-axis ticks\nax.set_xticks([0, 0.2, 0.4, 0.6, 0.8, 1])\n\n# Set the y-axis ticks\nax.set_yticks([0, 1000, 2000, 3000, 4000, 5000, 6000])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0%', '20%', '40%', '60%', '80%', '100%'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000'])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightblue')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the line\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], color='blue')\n\n# Set the color of the markers\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], marker='o', color='red')\n\n# Set the color of the legend\nax.legend(['Query overlap'], loc='upper left')\n\n# Set the color of the title\nax.set_title('Number of Queries Overlap', color='green')\n\n# Set the color of the x-axis label\nax.set_xlabel('% images overlap', color='purple')\n\n# Set the color of the y-axis label\nax.set_ylabel('Number of queries', color='orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightblue')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the line\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], color='blue')\n\n# Set the color of the markers\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], marker='o', color='red')\n\n# Set the color of the legend\nax.legend(['Query overlap'], loc='upper left')\n\n# Set the color of the title\nax.set_title('Number of Queries Overlap', color='green')\n\n# Set the color of the x-axis label\nax.set_xlabel('% images overlap', color='purple')\n\n# Set the color of the y-axis label\nax.set_ylabel('Number of queries', color='orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightblue')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the line\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], color='blue')\n\n# Set the color of the markers\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], marker='o', color='red')\n\n# Set the color of the legend\nax.legend(['Query overlap'], loc='upper left')\n\n# Set the color of the title\nax.set_title('Number of Queries Overlap', color='green')\n\n# Set the color of the x-axis label\nax.set_xlabel('% images overlap', color='purple')\n\n# Set the color of the y-axis label\nax.set_ylabel('Number of queries', color='orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightblue')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the line\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], color='blue')\n\n# Set the color of the markers\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], marker='o', color='red')\n\n# Set the color of the legend\nax.legend(['Query overlap'], loc='upper left')\n\n# Set the color of the title\nax.set_title('Number of Queries Overlap', color='green')\n\n# Set the color of the x-axis label\nax.set_xlabel('% images overlap', color='purple')\n\n# Set the color of the y-axis label\nax.set_ylabel('Number of queries', color='orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightblue')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the line\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], color='blue')\n\n# Set the color of the markers\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], marker='o', color='red')\n\n# Set the color of the legend\nax.legend(['Query overlap'], loc='upper left')\n\n# Set the color of the title\nax.set_title('Number of Queries Overlap', color='green')\n\n# Set the color of the x-axis label\nax.set_xlabel('% images overlap', color='purple')\n\n# Set the color of the y-axis label\nax.set_ylabel('Number of queries', color='orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightblue')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the line\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], color='blue')\n\n# Set the color of the markers\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], marker='o', color='red')\n\n# Set the color of the legend\nax.legend(['Query overlap'], loc='upper left')\n\n# Set the color of the title\nax.set_title('Number of Queries Overlap', color='green')\n\n# Set the color of the x-axis label\nax.set_xlabel('% images overlap', color='purple')\n\n# Set the color of the y-axis label\nax.set_ylabel('Number of queries', color='orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightblue')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the line\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], color='blue')\n\n# Set the color of the markers\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], marker='o', color='red')\n\n# Set the color of the legend\nax.legend(['Query overlap'], loc='upper left')\n\n# Set the color of the title\nax.set_title('Number of Queries Overlap', color='green')\n\n# Set the color of the x-axis label\nax.set_xlabel('% images overlap', color='purple')\n\n# Set the color of the y-axis label\nax.set_ylabel('Number of queries', color='orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightblue')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the line\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], color='blue')\n\n# Set the color of the markers\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], marker='o', color='red')\n\n# Set the color of the legend\nax.legend(['Query overlap'], loc='upper left')\n\n# Set the color of the title\nax.set_title('Number of Queries Overlap', color='green')\n\n# Set the color of the x-axis label\nax.set_xlabel('% images overlap', color='purple')\n\n# Set the color of the y-axis label\nax.set_ylabel('Number of queries', color='orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightblue')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the line\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], color='blue')\n\n# Set the color of the markers\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], marker='o', color='red')\n\n# Set the color of the legend\nax.legend(['Query overlap'], loc='upper left')\n\n# Set the color of the title\nax.set_title('Number of Queries Overlap', color='green')\n\n# Set the color of the x-axis label\nax.set_xlabel('% images overlap', color='purple')\n\n# Set the color of the y-axis label\nax.set_ylabel('Number of queries', color='orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightblue')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the line\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], color='blue')\n\n# Set the color of the markers\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], marker='o', color='red')\n\n# Set the color of the legend\nax.legend(['Query overlap'], loc='upper left')\n\n# Set the color of the title\nax.set_title('Number of Queries Overlap', color='green')\n\n# Set the color of the x-axis label\nax.set_xlabel('% images overlap', color='purple')\n\n# Set the color of the y-axis label\nax.set_ylabel('Number of queries', color='orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightblue')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the line\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], color='blue')\n\n# Set the color of the markers\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], marker='o', color='red')\n\n# Set the color of the legend\nax.legend(['Query overlap'], loc='upper left')\n\n# Set the color of the title\nax.set_title('Number of Queries Overlap', color='green')\n\n# Set the color of the x-axis label\nax.set_xlabel('% images overlap', color='purple')\n\n# Set the color of the y-axis label\nax.set_ylabel('Number of queries', color='orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightblue')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the line\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], color='blue')\n\n# Set the color of the markers\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], marker='o', color='red')\n\n# Set the color of the legend\nax.legend(['Query overlap'], loc='upper left')\n\n# Set the color of the title\nax.set_title('Number of Queries Overlap', color='green')\n\n# Set the color of the x-axis label\nax.set_xlabel('% images overlap', color='purple')\n\n# Set the color of the y-axis label\nax.set_ylabel('Number of queries', color='orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightblue')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the line\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], color='blue')\n\n# Set the color of the markers\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], marker='o', color='red')\n\n# Set the color of the legend\nax.legend(['Query overlap'], loc='upper left')\n\n# Set the color of the title\nax.set_title('Number of Queries Overlap', color='green')\n\n# Set the color of the x-axis label\nax.set_xlabel('% images overlap', color='purple')\n\n# Set the color of the y-axis label\nax.set_ylabel('Number of queries', color='orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightblue')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the line\nax.plot([0, 0.2, 0.4, 0.6, 0.8, 1], [0, 1000, 2000, 3000, 4000, 5000], color='blue')\n\n# Set the"}
{"file": "dataset/ori_500/hist_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 7))\n\n# Set the title of the plot\nax.set_title('MNIST')\n\n# Create a scatter plot with random data\nx = np.random.rand(50)\ny = np.random.rand(50)\nax.scatter(x, y)\n\n# Set the x and y limits\nax.set_xlim([0, 1])\nax.set_ylim([0, 1])\n\n# Set the x and y labels\nax.set_xlabel('X-axis')\nax.set_ylabel('Y-axis')\n\n# Set the color of the plot\nax.set_facecolor('blue')\n\n# Save the plot as an image file\nplt.savefig('mnist.png')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Deepfake Detection Accuracy')\n\n# Set the x-axis label\nax.set_xlabel('SNR')\n\n# Set the y-axis label\nax.set_ylabel('Classification Accuracy (%)')\n\n# Set the x-ticks\nax.set_xticks([5, 10, 15, 20])\n\n# Set the y-ticks\nax.set_yticks([0, 20, 40, 60, 80, 100])\n\n# Plot the data\nax.plot([5, 10, 15, 20], [90, 80, 70, 60], 'r-', label='JPEG+LDPC')\nax.plot([5, 10, 15, 20], [85, 75, 65, 55], 'o-', label='DEEPJSCC w/o ofdm')\nax.plot([5, 10, 15, 20], [80, 70, 60, 50], 'g-', label='DEEPJSCC w/ ofdm')\nax.plot([5, 10, 15, 20], [75, 65, 55, 45], 'b-', label='OURS')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the graph\nax.set_title('Performance Metrics')\n\n# Set the x-axis label\nax.set_xlabel('Time (n)')\n\n# Set the y-axis label\nax.set_ylabel('Performance Gain (%)')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3, 4, 5, 6, 7])\n\n# Set the y-ticks\nax.set_yticks([0, 1, 2, 3, 4, 5, 6])\n\n# Draw a rectangle for each performance metric\nax.add_patch(plt.Rectangle((0, 0), 1, 6, color='blue'))\nax.add_patch(plt.Rectangle((1, 0), 1, 4, color='orange'))\nax.add_patch(plt.Rectangle((2, 0), 1, 2, color='green'))\nax.add_patch(plt.Rectangle((3, 0), 1, 1, color='red'))\n\n# Draw a line for each performance metric\nax.plot([0, 1, 2, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 6, 7], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 6, 7], 'o-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 6, 7], 'g-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7], [0, 1, 2, 3, 4, 5, 6, 7], 'r-')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Effect of Vocab on Zero Shot Accuracy')\n\n# Set the x-axis label\nax.set_xlabel('Decomposition IO Norm')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Set the x-axis limits\nax.set_xlim(0, 80)\n\n# Set the y-axis limits\nax.set_ylim(0.55, 0.75)\n\n# Set the x-axis ticks\nax.set_xticks([0, 20, 40, 60, 80])\n\n# Set the y-axis ticks\nax.set_yticks([0.55, 0.60, 0.65, 0.70, 0.75])\n\n# Draw a horizontal line at the top of the plot\nax.axhline(y=0.75, color='black', linestyle='-')\n\n# Draw a horizontal line at the bottom of the plot\nax.axhline(y=0.55, color='black', linestyle='-')\n\n# Draw a vertical line at the left of the plot\nax.axvline(x=0, color='black', linestyle='-')\n\n# Draw a vertical line at the right of the plot\nax.axvline(x=80, color='black', linestyle='-')\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((0, 0), 10, 10, color='red')\nax.add_patch(rect)\n\n# Add a circle to the plot\ncircle = plt.Circle((50, 50), 10, color='blue')\nax.add_patch(circle)\n\n# Add a triangle to the plot\ntriangle = plt.Polygon([[0, 0], [10, 10], [0, 10]], color='green')\nax.add_patch(triangle)\n\n# Add a star to the plot\nstar = plt.Polygon([[0, 0], [10, 0], [5, 10], [0, 5], [5, 5]], color='yellow')\nax.add_patch(star)\n\n# Add a diamond to the plot\ndiamond = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10]], color='orange')\nax.add_patch(diamond)\n\n# Add a square to the plot\nsquare = plt.Rectangle((0, 0), 10, 10, color='purple')\nax.add_patch(square)\n\n# Add a pentagon to the plot\npentagon = plt.Polygon([[0, 0], [10, 0], [5, 10], [0, 5], [5, 5]], color='pink')\nax.add_patch(pentagon)\n\n# Add a hexagon to the plot\nhexagon = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5]], color='brown')\nax.add_patch(hexagon)\n\n# Add a heptagon to the plot\nheptagon = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0]], color='cyan')\nax.add_patch(heptagon)\n\n# Add an octagon to the plot\noctagon = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0], [0, 0]], color='magenta')\nax.add_patch(octagon)\n\n# Add a nonagon to the plot\nnonagon = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0], [0, 0], [5, 0]], color='gray')\nax.add_patch(nonagon)\n\n# Add a decagon to the plot\ndecagon = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0], [0, 0], [5, 0], [5, 10]], color='silver')\nax.add_patch(decagon)\n\n# Add a dodecagon to the plot\ndodecagon = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0], [0, 0], [5, 0], [5, 10], [0, 10], [0, 5]], color='gold')\nax.add_patch(dodecagon)\n\n# Add a trapezoid to the plot\ntrapezoid = plt.Polygon([[0, 0], [10, 0], [10, 10], [5, 10]], color='lime')\nax.add_patch(trapezoid)\n\n# Add a parallelogram to the plot\nparallelogram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10]], color='olive')\nax.add_patch(parallelogram)\n\n# Add a rhombus to the plot\nrhombus = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10]], color='navy')\nax.add_patch(rhombus)\n\n# Add a kite to the plot\nkite = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10]], color='maroon')\nax.add_patch(kite)\n\n# Add a pentagram to the plot\npentagram = plt.Polygon([[0, 0], [10, 0], [5, 10], [0, 5], [5, 5]], color='silver')\nax.add_patch(pentagram)\n\n# Add a hexagram to the plot\nhexagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5]], color='gold')\nax.add_patch(hexagram)\n\n# Add a heptagram to the plot\nheptagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0]], color='lime')\nax.add_patch(heptagram)\n\n# Add an octagram to the plot\noctagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0], [0, 0]], color='olive')\nax.add_patch(octagram)\n\n# Add a nonagram to the plot\nnonagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0], [0, 0], [5, 0]], color='navy')\nax.add_patch(nonagram)\n\n# Add a decagram to the plot\ndecagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0], [0, 0], [5, 0], [5, 10]], color='maroon')\nax.add_patch(decagram)\n\n# Add a dodecagram to the plot\ndodecagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0], [0, 0], [5, 0], [5, 10], [0, 10], [0, 5]], color='silver')\nax.add_patch(dodecagram)\n\n# Add a trapezoid to the plot\ntrapezoid = plt.Polygon([[0, 0], [10, 0], [10, 10], [5, 10]], color='gold')\nax.add_patch(trapezoid)\n\n# Add a parallelogram to the plot\nparallelogram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10]], color='lime')\nax.add_patch(parallelogram)\n\n# Add a rhombus to the plot\nrhombus = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10]], color='olive')\nax.add_patch(rhombus)\n\n# Add a kite to the plot\nkite = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10]], color='navy')\nax.add_patch(kite)\n\n# Add a pentagram to the plot\npentagram = plt.Polygon([[0, 0], [10, 0], [5, 10], [0, 5], [5, 5]], color='maroon')\nax.add_patch(pentagram)\n\n# Add a hexagram to the plot\nhexagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5]], color='silver')\nax.add_patch(hexagram)\n\n# Add a heptagram to the plot\nheptagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0]], color='gold')\nax.add_patch(heptagram)\n\n# Add an octagram to the plot\noctagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0], [0, 0]], color='lime')\nax.add_patch(octagram)\n\n# Add a nonagram to the plot\nnonagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0], [0, 0], [5, 0]], color='olive')\nax.add_patch(nonagram)\n\n# Add a decagram to the plot\ndecagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0], [0, 0], [5, 0], [5, 10]], color='navy')\nax.add_patch(decagram)\n\n# Add a dodecagram to the plot\ndodecagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0], [0, 0], [5, 0], [5, 10], [0, 10], [0, 5]], color='maroon')\nax.add_patch(dodecagram)\n\n# Add a trapezoid to the plot\ntrapezoid = plt.Polygon([[0, 0], [10, 0], [10, 10], [5, 10]], color='silver')\nax.add_patch(trapezoid)\n\n# Add a parallelogram to the plot\nparallelogram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10]], color='gold')\nax.add_patch(parallelogram)\n\n# Add a rhombus to the plot\nrhombus = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10]], color='lime')\nax.add_patch(rhombus)\n\n# Add a kite to the plot\nkite = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10]], color='olive')\nax.add_patch(kite)\n\n# Add a pentagram to the plot\npentagram = plt.Polygon([[0, 0], [10, 0], [5, 10], [0, 5], [5, 5]], color='navy')\nax.add_patch(pentagram)\n\n# Add a hexagram to the plot\nhexagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5]], color='maroon')\nax.add_patch(hexagram)\n\n# Add a heptagram to the plot\nheptagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0]], color='silver')\nax.add_patch(heptagram)\n\n# Add an octagram to the plot\noctagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0], [0, 0]], color='gold')\nax.add_patch(octagram)\n\n# Add a nonagram to the plot\nnonagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0], [0, 0], [5, 0]], color='lime')\nax.add_patch(nonagram)\n\n# Add a decagram to the plot\ndecagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0], [0, 0], [5, 0], [5, 10]], color='olive')\nax.add_patch(decagram)\n\n# Add a dodecagram to the plot\ndodecagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0], [0, 0], [5, 0], [5, 10], [0, 10], [0, 5]], color='navy')\nax.add_patch(dodecagram)\n\n# Add a trapezoid to the plot\ntrapezoid = plt.Polygon([[0, 0], [10, 0], [10, 10], [5, 10]], color='maroon')\nax.add_patch(trapezoid)\n\n# Add a parallelogram to the plot\nparallelogram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10]], color='silver')\nax.add_patch(parallelogram)\n\n# Add a rhombus to the plot\nrhombus = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10]], color='gold')\nax.add_patch(rhombus)\n\n# Add a kite to the plot\nkite = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10]], color='lime')\nax.add_patch(kite)\n\n# Add a pentagram to the plot\npentagram = plt.Polygon([[0, 0], [10, 0], [5, 10], [0, 5], [5, 5]], color='olive')\nax.add_patch(pentagram)\n\n# Add a hexagram to the plot\nhexagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5]], color='navy')\nax.add_patch(hexagram)\n\n# Add a heptagram to the plot\nheptagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0]], color='maroon')\nax.add_patch(heptagram)\n\n# Add an octagram to the plot\noctagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0], [0, 0]], color='silver')\nax.add_patch(octagram)\n\n# Add a nonagram to the plot\nnonagram = plt.Polygon([[0, 0], [10, 0], [10, 10], [0, 10], [0, 5], [5, 5], [5, 0], [0, 0], [5, 0]], color='gold')\nax.add_patch(nonagram)\n\n# Add a decagram to the plot\ndecagram = plt.Polygon([[0, 0"}
{"file": "dataset/ori_500/line_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Stock Price Prediction')\n\n# Set the x-axis label\nax.set_xlabel('Sample Ratio')\n\n# Set the y-axis label\nax.set_ylabel('Stock Price')\n\n# Set the x-axis limits\nax.set_xlim(0.25, 1.0)\n\n# Set the y-axis limits\nax.set_ylim(0.0, 0.75)\n\n# Add a scatter plot with a red marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='red', marker='^')\n\n# Add a line plot with a green line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='green')\n\n# Add a scatter plot with a blue marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='blue', marker='^')\n\n# Add a line plot with a red line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='red')\n\n# Add a scatter plot with a green marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='green', marker='^')\n\n# Add a line plot with a blue line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='blue')\n\n# Add a scatter plot with a red marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='red', marker='^')\n\n# Add a line plot with a green line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='green')\n\n# Add a scatter plot with a blue marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='blue', marker='^')\n\n# Add a line plot with a red line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='red')\n\n# Add a scatter plot with a green marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='green', marker='^')\n\n# Add a line plot with a blue line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='blue')\n\n# Add a scatter plot with a red marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='red', marker='^')\n\n# Add a line plot with a green line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='green')\n\n# Add a scatter plot with a blue marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='blue', marker='^')\n\n# Add a line plot with a red line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='red')\n\n# Add a scatter plot with a green marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='green', marker='^')\n\n# Add a line plot with a blue line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='blue')\n\n# Add a scatter plot with a red marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='red', marker='^')\n\n# Add a line plot with a green line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='green')\n\n# Add a scatter plot with a blue marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='blue', marker='^')\n\n# Add a line plot with a red line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='red')\n\n# Add a scatter plot with a green marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='green', marker='^')\n\n# Add a line plot with a blue line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='blue')\n\n# Add a scatter plot with a red marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='red', marker='^')\n\n# Add a line plot with a green line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='green')\n\n# Add a scatter plot with a blue marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='blue', marker='^')\n\n# Add a line plot with a red line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='red')\n\n# Add a scatter plot with a green marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='green', marker='^')\n\n# Add a line plot with a blue line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='blue')\n\n# Add a scatter plot with a red marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='red', marker='^')\n\n# Add a line plot with a green line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='green')\n\n# Add a scatter plot with a blue marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='blue', marker='^')\n\n# Add a line plot with a red line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='red')\n\n# Add a scatter plot with a green marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='green', marker='^')\n\n# Add a line plot with a blue line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='blue')\n\n# Add a scatter plot with a red marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='red', marker='^')\n\n# Add a line plot with a green line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='green')\n\n# Add a scatter plot with a blue marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='blue', marker='^')\n\n# Add a line plot with a red line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='red')\n\n# Add a scatter plot with a green marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='green', marker='^')\n\n# Add a line plot with a blue line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='blue')\n\n# Add a scatter plot with a red marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='red', marker='^')\n\n# Add a line plot with a green line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='green')\n\n# Add a scatter plot with a blue marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='blue', marker='^')\n\n# Add a line plot with a red line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='red')\n\n# Add a scatter plot with a green marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='green', marker='^')\n\n# Add a line plot with a blue line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='blue')\n\n# Add a scatter plot with a red marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='red', marker='^')\n\n# Add a line plot with a green line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='green')\n\n# Add a scatter plot with a blue marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='blue', marker='^')\n\n# Add a line plot with a red line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='red')\n\n# Add a scatter plot with a green marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='green', marker='^')\n\n# Add a line plot with a blue line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='blue')\n\n# Add a scatter plot with a red marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='red', marker='^')\n\n# Add a line plot with a green line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='green')\n\n# Add a scatter plot with a blue marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='blue', marker='^')\n\n# Add a line plot with a red line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='red')\n\n# Add a scatter plot with a green marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='green', marker='^')\n\n# Add a line plot with a blue line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='blue')\n\n# Add a scatter plot with a red marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='red', marker='^')\n\n# Add a line plot with a green line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='green')\n\n# Add a scatter plot with a blue marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='blue', marker='^')\n\n# Add a line plot with a red line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='red')\n\n# Add a scatter plot with a green marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='green', marker='^')\n\n# Add a line plot with a blue line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='blue')\n\n# Add a scatter plot with a red marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='red', marker='^')\n\n# Add a line plot with a green line\nax.plot([0.25, 0.5, 0.75, 1.0], [0.03, 0.04, 0.05, 0.06], color='green')\n\n# Add a scatter plot with a blue marker\nax.scatter([0.3, 0.4, 0.5], [0.05, 0.06, 0.07], color='blue', marker='^')\n\n# Add a line plot with a red line\nax.plot([0"}
{"file": "dataset/ori_500/line_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 10.0))\n\n# Set the title of the plot\nax.set_title('Training Metrics')\n\n# Set the x-axis label\nax.set_xlabel('Training iterations')\n\n# Set the y-axis label\nax.set_ylabel('Metrics')\n\n# Plot the data\nax.plot([0, 25, 50, 75, 100, 125, 150, 175, 200], [0.5, 0.4, 0.3, 0.2, 0.1, 0.2, 0.3, 0.4, 0.5], 'b-', label='base')\nax.plot([0, 25, 50, 75, 100, 125, 150, 175, 200], [0.6, 0.5, 0.4, 0.3, 0.2, 0.3, 0.4, 0.5, 0.6], 'y-', label='ours')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the x-axis values\nx = np.arange(1, 30)\n\n# Set the y-axis values for each product\ny1 = np.sin(x)\ny2 = np.cos(x)\ny3 = np.tan(x)\ny4 = np.exp(x)\ny5 = np.log(x)\n\n# Plot the data\nax.plot(x, y1, 'b-', label='Auto-profiled')\nax.plot(x, y2, 'g-', label='Manually-analyzed')\nax.plot(x, y3, 'r-', label='Release new product')\nax.plot(x, y4, 'c-', label='Realize the trend')\nax.plot(x, y5, 'm-', label='Competitor analysis')\n\n# Add a legend\nax.legend()\n\n# Set the title of the plot\nax.set_title('Product Performance Over Time')\n\n# Set the labels for the x and y axes\nax.set_xlabel('Week')\nax.set_ylabel('Normalized Value')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nx = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\ny1 = [80, 85, 90, 95, 98, 95, 90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25]\ny2 = [75, 80, 85, 90, 95, 90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20]\ny3 = [70, 75, 80, 85, 90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15]\ny4 = [65, 70, 75, 80, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10]\ny5 = [60, 65, 70, 75, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10, 5]\n\n# Plot\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\nax.plot(x, y1, 'b-', label='BaCE')\nax.plot(x, y2, 'r-', label='LWF')\nax.plot(x, y3, 'm-', label='EWC')\nax.plot(x, y4, 'p-', label='SEQ')\nax.plot(x, y5, 'c-', label='Average Accuracy')\n\n# Legend\nax.legend()\n\n# X-axis\nax.set_xlabel('Task')\nax.set_xticks([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\nax.set_xticklabels(['Task 1', 'Task 2', 'Task 3', 'Task 4', 'Task 5', 'Task 6', 'Task 7', 'Task 8', 'Task 9', 'Task 10', 'Task 11', 'Task 12', 'Task 13', 'Task 14', 'Task 15', 'Task 16', 'Task 17', 'Task 18', 'Task 19', 'Task 20'])\n\n# Y-axis\nax.set_ylabel('Accuracy (%)')\nax.set_yticks([0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100])\n\n# Show plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Model Performance')\n\n# Set the x-axis label\nax.set_xlabel('Unertainty threshold')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Define the data for the plots\nx = [0.0, 0.2, 0.4, 0.6, 0.8, 1.0]\ny1 = [0.99, 0.98, 0.97, 0.96, 0.95, 0.94]\ny2 = [0.99, 0.98, 0.97, 0.96, 0.95, 0.94]\ny3 = [0.99, 0.98, 0.97, 0.96, 0.95, 0.94]\n\n# Plot the data\nax.plot(x, y1, 'b-', label='Oesense')\nax.plot(x, y2, 'r-', label='KWS')\nax.plot(x, y3, 'g-', label='ECG5000')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Log KL Divergence')\n\n# Set the x-axis label\nax.set_xlabel('Number of Parameters')\n\n# Set the y-axis label\nax.set_ylabel('Log KL Divergence')\n\n# Generate some data\nx = np.linspace(0, 120, 100)\ny = np.log(x + 1)\n\n# Plot the data\nax.plot(x, y, 'b-')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 4.0))\n\n# Set the title of the graph\nax.set_title('GPT-4 Evaluation')\n\n# Create a line plot with a blue color\nax.plot([0, 500, 1000, 1500, 2000], [0.5, 0.8, 0.6, 0.7, 0.9], 'b-')\n\n# Create a shaded region with a pink color\nax.fill_between([0, 500, 1000, 1500, 2000], [0.5, 0.8, 0.6, 0.7, 0.9], [0.3, 0.6, 0.4, 0.5, 0.7], color='pink')\n\n# Create a scatter plot with a purple color\nax.scatter([0, 500, 1000, 1500, 2000], [0.5, 0.8, 0.6, 0.7, 0.9], color='purple')\n\n# Create a second subplot\nax2 = fig.add_subplot(122)\n\n# Set the title of the second graph\nax2.set_title('Llama Guard Evaluation')\n\n# Create a line plot with a blue color\nax2.plot([0, 500, 1000, 1500, 2000], [0.5, 0.8, 0.6, 0.7, 0.9], 'b-')\n\n# Create a shaded region with a light blue color\nax2.fill_between([0, 500, 1000, 1500, 2000], [0.5, 0.8, 0.6, 0.7, 0.9], [0.3, 0.6, 0.4, 0.5, 0.7], color='lightblue')\n\n# Create a scatter plot with a pink color\nax2.scatter([0, 500, 1000, 1500, 2000], [0.5, 0.8, 0.6, 0.7, 0.9], color='pink')\n\n# Add a legend to the second subplot\nax2.legend(['7B', '7B (Fine-tuned)'], loc='upper left')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(5.0, 4.0))\n\n# Plot the data\nax.plot([1, 2, 3, 4, 5], [60, 70, 80, 90, 100], 'g-')\nax.plot([1, 2, 3, 4, 5], [50, 60, 70, 80, 90], 'r-')\nax.plot([1, 2, 3, 4, 5], [40, 50, 60, 70, 80], 'b-')\n\n# Add markers\nax.plot(1, 60, 'go')\nax.plot(2, 70, 'ro')\nax.plot(3, 80, 'bo')\nax.plot(4, 90, 'go')\nax.plot(5, 100, 'ro')\n\n# Set the title and labels\nax.set_title('Test Accuracy vs Fraction of Training Data')\nax.set_xlabel('Fraction of training data (log scale)')\nax.set_ylabel('Test accuracy (%)')\n\n# Add legend\nlegend_elements = [Line2D([0], [0], marker='o', color='w', label='Full', markerfacecolor='g', markersize=10),\n                    Line2D([0], [0], marker='o', color='w', label='SPT', markerfacecolor='r', markersize=10),\n                    Line2D([0], [0], marker='o', color='w', label='VPT', markerfacecolor='b', markersize=10)]\nax.legend(handles=legend_elements)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_2.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(4.0, 3.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Create a gradient effect for the background\ngradient = np.linspace(0, 1, 256)\ngradient = np.vstack((gradient, gradient))\nax.imshow(gradient, aspect='auto', cmap=plt.cm.Greys)\n\n# Create a scatter plot with a blue color\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y, c='blue')\n\n# Add a title to the plot\nax.set_title('Gradient Effect Scatter Plot')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/line_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(16.0, 8.0))\n\n# Set the title of the graph\nax.set_title('Performance Metrics')\n\n# Set the x-axis label\nax.set_xlabel('Ratio r')\n\n# Set the y-axis label\nax.set_ylabel('Performance')\n\n# Create a scatter plot with a color map\nscatter = ax.scatter(np.random.rand(50), np.random.rand(50), c=np.random.rand(50), cmap='viridis')\n\n# Add a color bar which maps values to colors\ncbar = fig.colorbar(scatter)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nx = [120, 90, 60, 30, 10, 1, 1/30, 1/60, 1/90, 1/120]\ny1 = [85, 87, 88, 89, 90, 91, 92, 93, 94, 95]\ny2 = [80, 82, 83, 84, 85, 86, 87, 88, 89, 90]\n\n# Plot\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\nax.plot(x, y1, 'b-', label='Ours')\nax.plot(x, y2, 'g-', label='ACR')\n\n# Legend\nax.legend()\n\n# Title and labels\nax.set_title('Top-1 Acc (%)')\nax.set_xlabel('Imbalance Ratio of Unlabeled Data')\nax.set_ylabel('Top-1 Acc (%)')\n\n# Markers\nfor i in range(len(x)):\n    ax.plot(x[i], y1[i], 'bo', markersize=10)\n    ax.plot(x[i], y2[i], 'go', markersize=10)\n\n# Show plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_22.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the graph\nx = [40, 50, 60, 70, 80, 90, 100]\ny = [2.91, 3.11, 3.32, 3.53, 3.63, 3.74, 3.94]\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(5.0, 4.0))\n\n# Plot the data\nax.plot(x, y, 'b-')\n\n# Set the title and labels\nax.set_title('Perplexity vs. Ratio of 4-bit Utilization')\nax.set_xlabel('Ratio of 4-bit Utilization (%)')\nax.set_ylabel('Perplexity (PPL)')\n\n# Add a legend\nax.legend(['APTQ', 'LLaMa-7B (FP16): 5.22', 'OWQ-4bit: 5.56', 'GPTQ-4bit: 5.62', 'LLM-QAT-4bit: 7.4', 'LMM-QAT-4bit: 7.4'], loc='upper right')\n\n# Add a grid\nax.grid(True)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_23.pdf", "response": "import matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(5.0, 2.0))\n\n# Set the x-axis values\nx = [2**1, 2**2, 2**3, 2**4, 2**5, 2**6, 2**7]\n\n# Set the y-axis values\ny = [67.32, 82.98, 89.53, 90.47, 92.47, 93.7, 96.75]\n\n# Plot the data\nax.plot(x, y, 'o-')\n\n# Set the title and labels\nax.set_title('Coverage Ratio vs Number of Training Objects')\nax.set_xlabel('Number of Training Objects')\nax.set_ylabel('Coverage Ratio (%)')\n\n# Set the x-ticks\nax.set_xticks(x)\n\n# Set the y-limits\nax.set_ylim(60, 100)\n\n# Set the y-tick labels\nax.set_yticks(range(60, 101, 10))\n\n# Set the grid\nax.grid(True)\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/line_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 10)\n\n# Set the y-axis limits\nax.set_ylim(600, 800)\n\n# Set the x-axis ticks\nax.set_xticks([0, 2, 4, 6, 8, 10])\n\n# Set the y-axis ticks\nax.set_yticks([600, 700, 800])\n\n# Set the x-axis label\nax.set_xlabel('Iterations')\n\n# Set the y-axis label\nax.set_ylabel('N-ELBO')\n\n# Set the title\nax.set_title('Variational Autoencoder Training')\n\n# Plot the data\nax.plot(np.linspace(0, 10, 100), np.linspace(600, 800, 100), 'b-')\n\n# Add a legend\nax.legend(['Average', 'Standard Deviation'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_25.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('IQM Human Normalized Score')\n\n# Set the x-axis label\nax.set_xlabel('Number of experts')\n\n# Set the y-axis label\nax.set_ylabel('DoN')\n\n# Create a list of dates\ndates = ['1', '2', '3', '4', '5', '6', '7', '8']\n\n# Create a list of DoN values\ndoN_values = [3.2, 3.1, 3.0, 2.9, 2.8, 2.7, 2.6, 2.5]\n\n# Create a list of DoR values\ndoR_values = [2.5, 2.4, 2.3, 2.2, 2.1, 2.0, 1.9, 1.8]\n\n# Plot the DoN values\nax.plot(dates, doN_values, color='blue')\n\n# Plot the DoR values\nax.plot(dates, doR_values, color='red')\n\n# Add a legend\nax.legend(['DoN', 'DoR'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_26.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Test set TPR | FPR = $10^{-4}$')\n\n# Set the x-axis label\nax.set_xlabel('Vocabulary size')\n\n# Set the y-axis label\nax.set_ylabel('TPR')\n\n# Define the data points for each curve\nx = [256, 512, 1024, 2048, 4096, 8192, 16384]\ny1 = [0.2, 0.4, 0.6, 0.8, 0.9, 0.95, 0.98]\ny2 = [0.3, 0.5, 0.7, 0.9, 0.95, 0.98, 0.99]\ny3 = [0.4, 0.6, 0.8, 0.95, 0.98, 0.99, 0.995]\ny4 = [0.5, 0.7, 0.9, 0.95, 0.98, 0.99, 0.995]\ny5 = [0.6, 0.8, 0.95, 0.98, 0.99, 0.995, 0.998]\n\n# Plot the curves\nax.plot(x, y1, 'b-', label='BPE')\nax.plot(x, y2, 'o-', label='Wordpunct')\nax.plot(x, y3, 'g-', label='Whitespace')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_27.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Word Error Rate vs Compression Rate')\n\n# Set the x-axis label\nax.set_xlabel('Compression Rate')\n\n# Set the y-axis label\nax.set_ylabel('Word Error Rate (%)')\n\n# Create a list of dates for the x-axis\ndates = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30]\n\n# Create a list of word error rates for CNN\ncnn_word_error_rates = [26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0]\n\n# Create a list of word error rates for CIF\ncif_word_error_rates = [30.2, 31.2, 32.2, 33.2, 34.2, 35.2, 36.2, 37.2, 38.2, 39.2, 40.2, 41.2, 42.2, 43.2, 44.2, 45.2, 46.2, 47.2, 48.2, 49.2, 50.2, 51.2, 52.2, 53.2, 54.2, 55.2, 56.2, 57.2, 58.2, 59.2, 60.2]\n\n# Create a list of word error rates for STAR\nstar_word_error_rates = [24.7, 25.7, 26.7, 27.7, 28.7, 29.7, 30.7, 31.7, 32.7, 33.7, 34.7, 35.7, 36.7, 37.7, 38.7, 39.7, 40.7, 41.7, 42.7, 43.7, 44.7, 45.7, 46.7, 47.7, 48.7, 49.7, 50.7, 51.7, 52.7, 53.7, 54.7, 55.7]\n\n# Plot the word error rates for CNN\nax.plot(dates, cnn_word_error_rates, 'o-', color='lightblue', label='CNN')\n\n# Plot the word error rates for CIF\nax.plot(dates, cif_word_error_rates, 's-', color='purple', label='CIF')\n\n# Plot the word error rates for STAR\nax.plot(dates, star_word_error_rates, '^-', color='brown', label='STAR')\n\n# Add a legend to the plot\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_28.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Plot the data\nax.plot([25, 50, 75, 100, 125, 150, 175, 200], [80, 85, 90, 95, 90, 85, 80, 75], 'b-')\nax.plot([25, 50, 75, 100, 125, 150, 175, 200], [82, 87, 92, 97, 92, 87, 82, 77], 'r-')\nax.plot([25, 50, 75, 100, 125, 150, 175, 200], [84, 89, 94, 99, 94, 89, 84, 79], 'g-')\n\n# Add markers for each point\nfor x, y in zip([25, 50, 75, 100, 125, 150, 175, 200], [80, 85, 90, 95, 90, 85, 80, 75]):\n    ax.plot(x, y, 'ro')\nfor x, y in zip([25, 50, 75, 100, 125, 150, 175, 200], [82, 87, 92, 97, 92, 87, 82, 77]):\n    ax.plot(x, y, 'bo')\nfor x, y in zip([25, 50, 75, 100, 125, 150, 175, 200], [84, 89, 94, 99, 94, 89, 84, 79]):\n    ax.plot(x, y, 'go')\n\n# Add labels and title\nax.set_xlabel('Number of exemplars in class \\'Run\\'')\nax.set_ylabel('Avg. accuracy of five rounds')\nax.set_title('Comparison of different models')\n\n# Add legends\nax.legend(['PILOTE', 'Re-trained model', 'Pre-trained model accuracy'])\n\n# Add horizontal lines\nax.axhline(y=85, color='g', linestyle='-')\nax.axhline(y=80, color='r', linestyle='-')\nax.axhline(y=75, color='b', linestyle='-')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_29.pdf", "response": "import matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(4.0, 3.0))\n\n# Set the title of the plot\nax.set_title('Average Fidelity Over Time')\n\n# Set the x-axis label\nax.set_xlabel('# of Steps')\n\n# Set the y-axis label\nax.set_ylabel('Average Fidelity')\n\n# Create a scatter plot with blue dots for the data points\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0], color='blue')\n\n# Create a line plot with red line for the trend line\nax.plot([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0], color='red')\n\n# Add a legend to the plot\nax.legend(['xLLM', 'Single-Pass LLM'])\n\n# Set the y-axis limits\nax.set_ylim(0, 2)\n\n# Set the x-axis limits\nax.set_xlim(0, 20)\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/line_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the plot\nax.set_title('Player Performance')\n\n# Set the x-axis labels\nx_labels = ['All', 'MLP', 'GNC', 'NCN', 'NEC', 'SEAL', 'Node2Vec']\nax.set_xticks(range(len(x_labels)))\nax.set_xticklabels(x_labels)\n\n# Set the y-axis label\nax.set_ylabel('Hits @50')\n\n# Set the y-axis limits\nax.set_ylim(40, 80)\n\n# Set the y-axis ticks\nax.set_yticks(range(40, 81, 10))\n\n# Set the y-axis tick labels\ny_tick_labels = ['40', '50', '60', '70', '80']\nax.set_yticklabels(y_tick_labels)\n\n# Set the y-axis grid lines\nax.grid(True)\n\n# Set the y-axis color\nax.spines['left'].set_color('orange')\n\n# Set the y-axis line width\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line style\nax.spines['left'].set_linestyle('--')\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left'].set_hatch('/')\n\n# Set the y-axis line linestyle\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line linewidth\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line alpha\nax.spines['left'].set_alpha(0.5)\n\n# Set the y-axis line hatch\nax.spines['left"}
{"file": "dataset/ori_500/line_30.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Android')\n\n# Set the x-axis label\nax.set_xlabel('Layer')\n\n# Set the y-axis label\nax.set_ylabel('Value')\n\n# Create a scatter plot with blue dots for 'outside-code-diff' and orange dots for 'inside-code-diff'\nax.scatter([2, 4, 6, 8, 10, 12], [0.05, 0.05, 0.05, 0.05, 0.05, 0.05], color='blue', label='outside-code-diff')\nax.scatter([2, 4, 6, 8, 10, 12], [0.04, 0.04, 0.04, 0.04, 0.04, 0.04], color='orange', label='inside-code-diff')\n\n# Create a line plot with orange lines for 'outside-code-diff' and blue lines for 'inside-code-diff'\nax.plot([2, 4, 6, 8, 10, 12], [0.05, 0.05, 0.05, 0.05, 0.05, 0.05], color='orange')\nax.plot([2, 4, 6, 8, 10, 12], [0.04, 0.04, 0.04, 0.04, 0.04, 0.04], color='blue')\n\n# Add a legend to the plot\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_31.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(6, 9)\n\n# Set the y-axis limits\nax.set_ylim(0.3, 10)\n\n# Set the x-axis label\nax.set_xlabel('Digit Length')\n\n# Set the y-axis label\nax.set_ylabel('Digit Accuracy')\n\n# Plot the data\nax.plot([6, 7, 8, 9], [0.5, 0.7, 0.8, 0.9], 'b-')\nax.plot([6, 7, 8, 9], [0.4, 0.6, 0.7, 0.8], 'g-')\nax.plot([6, 7, 8, 9], [0.3, 0.5, 0.6, 0.7], 'r-')\n\n# Add a legend\nax.legend(['Direct (100 samples)', 'RFFT (100 samples)', 'Scratchpad (100 samples)'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_32.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('CIFAR100 States Zero Shot Accuracy')\n\n# Set the x-axis label\nax.set_xlabel('Decomposition IO Norm')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Set the x-axis limits\nax.set_xlim(0, 80)\n\n# Set the y-axis limits\nax.set_ylim(0.2, 0.4)\n\n# Set the x-axis ticks\nax.set_xticks([0, 20, 40, 60, 80])\n\n# Set the y-axis ticks\nax.set_yticks([0.2, 0.3, 0.4])\n\n# Draw a horizontal line at y=0.35\nax.axhline(y=0.35, color='k', linestyle='-')\n\n# Draw a vertical line at x=40\nax.axvline(x=40, color='k', linestyle='-')\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a circle with a red center\nax.add_patch(plt.Circle((40, 0.3), 10, color='r'))\n\n# Draw a triangle with a blue center\nax.add_patch(plt.Polygon([[0, 0], [40, 0.4], [80, 0]], color='b'))\n\n# Draw a star with a green center\nax.add_patch(plt.Polygon([[0, 0], [40, 0.4], [80, 0], [40, 0.2], [20, 0.4], [40, 0.6], [60, 0.4]], color='g'))\n\n# Draw a rectangle with a yellow border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='y'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='k'))\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0"}
{"file": "dataset/ori_500/line_33.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Define the data for the plots\nx = [20, 40, 60, 80, 100]\ny1 = [0.55, 0.65, 0.75, 0.85, 0.95]\ny2 = [0.50, 0.60, 0.70, 0.80, 0.90]\ny3 = [0.45, 0.55, 0.65, 0.75, 0.85]\n\n# Plot the data\nax.plot(x, y1, 'r-', label='CNN')\nax.plot(x, y2, 'g-', label='CNN+HMM')\nax.plot(x, y3, 'b-', label='RF')\n\n# Add a legend\nax.legend()\n\n# Set the title and labels\nax.set_title('Comparison of CNN, CNN+HMM, and RF')\nax.set_xlabel('No. of Users in Development Set')\nax.set_ylabel('F1')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_34.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nx = [2, 3, 4, 5, 6, 7, 8]\ny1 = [27.44, 24.75, 23.38, 22.77, 22.32, 21.47, 21.51]\ny2 = [6.74, 4.54, 3.96, 3.71, 3.49, 3.34, 3.15]\n\n# Plot\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\nax.plot(x, y1, 'r-', label='WER (%)')\nax.plot(x, y2, 'b-', label='AMI WER (%)')\n\n# Markers\nfor i, j in zip(x, y1):\n    ax.annotate('\u25b3', xy=(i, j), xytext=(i+0.5, j+0.5),\n                arrowprops=dict(facecolor='black', shrink=0.05))\n\nfor i, j in zip(x, y2):\n    ax.annotate('\u25cf', xy=(i, j), xytext=(i+0.5, j+0.5),\n                arrowprops=dict(facecolor='black', shrink=0.05))\n\n# Legend\nax.legend()\n\n# Title and labels\nax.set_title('Microphone Performance')\nax.set_xlabel('Number of microphones')\nax.set_ylabel('WER (%)')\n\n# Grid\nax.grid(True)\n\n# Show plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_35.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Quantization error')\n\n# Set the x-axis label\nax.set_xlabel('Time (s)')\n\n# Set the y-axis label\nax.set_ylabel('Quantization error')\n\n# Define the time array\ntime = np.logspace(-7, -4, 100)\n\n# Define the quantization error array\nquantization_error = np.sin(time) + np.cos(2*time) + np.tan(3*time)\n\n# Plot the quantization error\nax.plot(time, quantization_error, 'b-')\n\n# Add rectangles to represent the quantization error\nfor i in range(len(time)):\n    if quantization_error[i] > 5:\n        ax.add_patch(plt.Rectangle((time[i], 5), 0.1, 0.1, color='red'))\n    elif quantization_error[i] > 4:\n        ax.add_patch(plt.Rectangle((time[i], 4), 0.1, 0.1, color='green'))\n    elif quantization_error[i] > 3:\n        ax.add_patch(plt.Rectangle((time[i], 3), 0.1, 0.1, color='blue'))\n    elif quantization_error[i] > 2:\n        ax.add_patch(plt.Rectangle((time[i], 2), 0.1, 0.1, color='orange'))\n    elif quantization_error[i] > 1:\n        ax.add_patch(plt.Rectangle((time[i], 1), 0.1, 0.1, color='purple'))\n\n# Add text to represent the quantization error\nax.text(10**-7, 6, 'M-LVQ-4x8-10', color='orange')\nax.text(10**-7, 5, 'M-LVQ-4x8-100', color='green')\nax.text(10**-7, 4, 'M-LVQ-4x8-256', color='blue')\nax.text(10**-7, 3, 'M-LVQ-4x8', color='purple')\nax.text(10**-7, 2, 'empirical relat. (B2=8.0)', color='orange')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_36.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(3, 3, figsize=(15, 5))\n\n# Set the color of the rectangles\ncolors = ['purple', 'orange']\n\n# Plot the data\nfor i in range(3):\n    for j in range(3):\n        # Create a rectangle with a random color\n        rect = plt.Rectangle((0.1, 0.1), 0.8, 0.8, color=colors[i%2])\n        # Add the rectangle to the subplot\n        axs[i, j].add_patch(rect)\n        # Set the title of the subplot\n        axs[i, j].set_title('SPMotif-' + str(i*3+j+1))\n        # Set the x-axis and y-axis labels\n        axs[i, j].set_xlabel('Ratio r')\n        axs[i, j].set_ylabel('Performance')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_37.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the plot\nax.set_title('Model Accuracy')\n\n# Set the x-axis label\nax.set_xlabel('Ensemble Size')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Create a scatter plot with the data\nax.scatter([6, 9, 12, 18, 24, 30], [75.5, 76.5, 77.5, 78.5, 79.5, 80.5], color='blue')\n\n# Create a line plot with the data\nax.plot([6, 9, 12, 18, 24, 30], [75.5, 76.5, 77.5, 78.5, 79.5, 80.5], color='red')\n\n# Set the x-axis limits\nax.set_xlim(5, 35)\n\n# Set the y-axis limits\nax.set_ylim(74, 81)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_38.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 3.0))\n\n# Set the title of the plot\nax.set_title('GPT-Neo Performance Over Time')\n\n# Set the x-axis label\nax.set_xlabel('# Epochs')\n\n# Set the y-axis label\nax.set_ylabel('MAE')\n\n# Define the data for the plots\nx = [3, 5, 10, 30, 100]\ny1 = [0.8, 0.7, 0.6, 0.5, 0.4]\ny2 = [0.9, 0.8, 0.7, 0.6, 0.5]\ny3 = [0.7, 0.6, 0.5, 0.4, 0.3]\n\n# Plot the data\nax.plot(x, y1, 'r-', label='GPT-Neo')\nax.plot(x, y2, 'g-', label='GPT-Neo')\nax.plot(x, y3, 'b-', label='GPT-Neo')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_39.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(15, 4))\n\n# Set the title of the graph\nax.set_title('Stock Market')\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Price')\n\n# Set the x-axis ticks\nax.set_xticks([96, 192, 336, 512, 720])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['pred_length=96', 'pred_length=192', 'pred_length=336', 'pred_length=512', 'pred_length=720'])\n\n# Set the y-axis limits\nax.set_ylim(0.06, 0.45)\n\n# Set the y-axis tick labels\nax.set_yticks([0.08, 0.12, 0.16, 0.20, 0.24, 0.28, 0.32, 0.36, 0.40, 0.44])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.08', '0.12', '0.16', '0.20', '0.24', '0.28', '0.32', '0.36', '0.40', '0.44'])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax"}
{"file": "dataset/ori_500/line_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(9, 4))\n\n# Set the title of the plot\nax.set_title('Serial (n=8, m=1)')\n\n# Create a scatter plot with orange dots\nax.scatter([224, 128, 64, 32], [70, 60, 50, 40], color='orange')\n\n# Create a line plot with orange line\nax.plot([224, 128, 64, 32], [70, 60, 50, 40], color='orange')\n\n# Add a red rectangle at the bottom left corner\nax.add_patch(plt.Rectangle((0, 0), 10, 10, color='red'))\n\n# Add a blue rectangle at the top right corner\nax.add_patch(plt.Rectangle((80, 80), 10, 10, color='blue'))\n\n# Add a green rectangle at the bottom right corner\nax.add_patch(plt.Rectangle((80, 0), 10, 10, color='green'))\n\n# Add a yellow rectangle at the top left corner\nax.add_patch(plt.Rectangle((0, 80), 10, 10, color='yellow'))\n\n# Add a text label at the bottom left corner\nax.text(0, 0, 'ImageNet-1k', color='black')\n\n# Add a text label at the top right corner\nax.text(80, 80, 'Fog', color='black')\n\n# Add a text label at the bottom right corner\nax.text(80, 0, 'ImageNet-C/P', color='black')\n\n# Add a text label at the top left corner\nax.text(0, 80, 'ImageNet-1k', color='black')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_40.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(5.0, 25.0)\n\n# Set the y-axis limits\nax.set_ylim(0.0, 100.0)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(5.0, 26.0, 5.0))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0.0, 101.0, 10.0))\n\n# Set the x-axis label\nax.set_xlabel('SNR')\n\n# Set the y-axis label\nax.set_ylabel('Classification Accuracy (%)')\n\n# Set the title of the plot\nax.set_title('Deep Learning Model Performance')\n\n# Add a rectangle for the logo\nax.add_patch(plt.Rectangle((0.05, 0.9), 0.1, 0.1, color='red'))\n\n# Add a rectangle for the model name\nax.text(0.15, 0.95, 'DEEPJSCC w/o OFDM', fontsize=12, color='orange')\n\n# Add a rectangle for the model description\nax.text(0.15, 0.9, 'Deep Learning Model for OFDM', fontsize=10, color='green')\n\n# Add a rectangle for the model performance\nax.add_patch(plt.Rectangle((0.15, 0.85), 0.1, 0.1, color='blue'))\n\n# Add a rectangle for the model accuracy\nax.text(0.15, 0.8, '90%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, 0.75, '10 minutes', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, 0.7), 0.1, 0.1, color='red'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, 0.65, '85%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, 0.6, '5 minutes', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, 0.55), 0.1, 0.1, color='blue'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, 0.5, '80%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, 0.45, '3 minutes', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, 0.4), 0.1, 0.1, color='red'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, 0.35, '75%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, 0.3, '2 minutes', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, 0.25), 0.1, 0.1, color='blue'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, 0.2, '70%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, 0.15, '1 minute', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, 0.1), 0.1, 0.1, color='red'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, 0.05, '65%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, 0.0, '30 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -0.05), 0.1, 0.1, color='blue'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -0.1, '60%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -0.15, '15 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -0.2), 0.1, 0.1, color='red'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -0.25, '55%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -0.3, '10 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -0.35), 0.1, 0.1, color='blue'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -0.4, '50%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -0.45, '5 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -0.5), 0.1, 0.1, color='red'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -0.55, '45%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -0.6, '3 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -0.65), 0.1, 0.1, color='blue'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -0.7, '40%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -0.75, '2 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -0.8), 0.1, 0.1, color='red'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -0.85, '35%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -0.9, '1 second', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -0.95), 0.1, 0.1, color='blue'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -1.0, '30%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -1.05, '0.5 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -1.1), 0.1, 0.1, color='red'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -1.15, '25%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -1.2, '0.2 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -1.25), 0.1, 0.1, color='blue'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -1.3, '20%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -1.35, '0.1 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -1.4), 0.1, 0.1, color='red'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -1.45, '15%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -1.5, '0.05 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -1.55), 0.1, 0.1, color='blue'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -1.6, '10%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -1.65, '0.02 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -1.7), 0.1, 0.1, color='red'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -1.75, '5%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -1.8, '0.01 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -1.85), 0.1, 0.1, color='blue'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -1.9, '2%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -1.95, '0.005 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -2.0), 0.1, 0.1, color='red'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -2.05, '1%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -2.1, '0.002 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -2.15), 0.1, 0.1, color='blue'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -2.2, '0.5%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -2.25, '0.001 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -2.3), 0.1, 0.1, color='red'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -2.35, '0.25%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -2.4, '0.0005 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -2.45), 0.1, 0.1, color='blue'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -2.5, '0.125%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -2.55, '0.00025 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -2.6), 0.1, 0.1, color='red'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -2.65, '0.0625%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -2.7, '0.000125 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -2.75), 0.1, 0.1, color='blue'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -2.8, '0.03125%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -2.85, '0.0000625 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -2.9), 0.1, 0.1, color='red'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -2.95, '0.015625%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -3.0, '0.00003125 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -3.05), 0.1, 0.1, color='blue'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -3.1, '0.0078125%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -3.15, '0.000015625 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -3.2), 0.1, 0.1, color='red'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -3.25, '0.00390625%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -3.3, '0.0000078125 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -3.35), 0.1, 0.1, color='blue'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -3.4, '0.001953125%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -3.45, '0.00000390625 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -3.5), 0.1, 0.1, color='red'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -3.55, '0.0009765625%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -3.6, '0.000001953125 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -3.65), 0.1, 0.1, color='blue'))\n\n# Add a rectangle for the model testing accuracy\nax.text(0.15, -3.7, '0.00048828125%', fontsize=12, color='orange')\n\n# Add a rectangle for the model training time\nax.text(0.15, -3.75, '0.0000009765625 seconds', fontsize=10, color='green')\n\n# Add a rectangle for the model testing time\nax.add_patch(plt.Rectangle((0.15, -3.8), 0.1, 0.1, color='red'))\n\n# Add a rectangle for the model testing accuracy\n"}
{"file": "dataset/ori_500/line_41.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Performance Metrics')\n\n# Set the x-axis label\nax.set_xlabel('Gradient Steps (x62.5K)')\n\n# Set the y-axis label\nax.set_ylabel('Performance Value')\n\n# Plot the data\nax.plot([0, 100, 200], [1, 2, 3], 'r-')\nax.plot([0, 100, 200], [2, 3, 4], 'g-')\nax.plot([0, 100, 200], [3, 4, 5], 'b-')\nax.plot([0, 100, 200], [4, 5, 6], 'y-')\n\n# Add a legend\nax.legend(['Line 1 (Sinusoidal)', 'Line 2 (Quadratic)', 'Line 3 (Random Noise)', 'Line 4 (Exponential Focus)'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_42.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Define the data\nx = np.linspace(0, 200, 100)\ny1 = np.sin(x/10)\ny2 = np.cos(x/10)\ny3 = np.tan(x/10)\n\n# Plot the data\nax.plot(x, y1, 'r-', label='Line 1')\nax.plot(x, y2, 'b-', label='Line 2')\nax.plot(x, y3, 'g-', label='Line 3')\n\n# Add a legend\nax.legend()\n\n# Set the title and labels\nax.set_title('My Graph')\nax.set_xlabel('Gradient Steps (x 62.5K)')\nax.set_ylabel('Polynomial Value')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_43.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 5))\n\n# Set the title of the graph\nax.set_title('ogbl-collab Results')\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Results')\n\n# Set the x-axis ticks\nax.set_xticks([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['All', 'MLP', 'GCN', 'NCN', 'NEOGNN-BUDDY', 'SEAL', 'Node2Vec'])\n\n# Set the y-axis limits\nax.set_ylim(50, 80)\n\n# Set the y-axis ticks\nax.set_yticks([50, 60, 70, 80])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['50', '60', '70', '80'])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['bottom'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='x', colors='blue')\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', labelcolor='blue')\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab Results', transform=ax.transAxes, fontsize=15, verticalalignment='center')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'ogbl-collab"}
{"file": "dataset/ori_500/line_44.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the grid lines\nax.grid(True)\n\n# Set the x-axis and y-axis limits\nax.set_xlim(10, 60)\nax.set_ylim(10**-14, 10**-12)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('N')\nax.set_ylabel('Precision')\n\n# Plot the data\nax.plot([10, 20, 30, 40, 50, 60], [10**-12, 10**-10, 10**-8, 10**-6, 10**-4, 10**-2], 'b-')\nax.plot([10, 20, 30, 40, 50, 60], [10**-12, 10**-10, 10**-8, 10**-6, 10**-4, 10**-2], 'g-')\nax.plot([10, 20, 30, 40, 50, 60], [10**-12, 10**-10, 10**-8, 10**-6, 10**-4, 10**-2], 'r-')\nax.plot([10, 20, 30, 40, 50, 60], [10**-12, 10**-10, 10**-8, 10**-6, 10**-4, 10**-2], 'm-')\n\n# Add a legend\nax.legend(['Standard', 'Constrained', 'Experimental', 'Hypothetical'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_45.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the first graph\nfig1, ax1 = plt.subplots(figsize=(12, 8))\nax1.plot([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 'b-')\nax1.set_title('Graph Variation 1')\nax1.set_xlabel('N')\nax1.set_ylabel('Peak Performance')\n\n# Create a figure and axis for the second graph\nfig2, ax2 = plt.subplots(figsize=(12, 8))\nax2.plot([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 'r-')\nax2.set_title('Graph Variation 2')\nax2.set_xlabel('N')\nax2.set_ylabel('Peak Performance')\n\n# Create a figure and axis for the third graph\nfig3, ax3 = plt.subplots(figsize=(12, 8))\nax3.plot([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 'g-')\nax3.set_title('Graph Variation 3')\nax3.set_xlabel('N')\nax3.set_ylabel('Peak Performance')\n\n# Create a figure and axis for the fourth graph\nfig4, ax4 = plt.subplots(figsize=(12, 8))\nax4.plot([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 'y-')\nax4.set_title('Graph Variation 4')\nax4.set_xlabel('N')\nax4.set_ylabel('Peak Performance')\n\n# Display the plots\nplt.show()\n```"}
{"file": "dataset/ori_500/line_46.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the first graph\nfig, ax = plt.subplots(figsize=(6.0, 10.0))\nax.plot(np.linspace(0, 25, 100), np.sin(np.linspace(0, 25, 100)), color='blue')\nax.set_title('Daytime Activity Monitoring')\nax.set_xlabel('Time (Hours)')\nax.set_ylabel('Activity Level')\n\n# Create a second figure and axis for the second graph\nfig, ax = plt.subplots(figsize=(6.0, 10.0))\nax.plot(np.linspace(0, 25, 100), np.cos(np.linspace(0, 25, 100)), color='red')\nax.set_title('Nighttime Activity Monitoring')\nax.set_xlabel('Time (Hours)')\nax.set_ylabel('Activity Level')\n```"}
{"file": "dataset/ori_500/line_47.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Comparative Performance Analysis Over Time')\n\n# Create a color bar for the legend\ncbar = fig.colorbar(ax.imshow(np.random.rand(10, 10), cmap='Blues'))\n\n# Add a color bar to the plot\ncbar.set_label('Performance Index')\n\n# Add a legend to the plot\nlegend_elements = [Line2D([0], [0], marker='o', color='w', label='Standard Performance', markerfacecolor='blue', markersize=10),\n                  Line2D([0], [0], marker='o', color='w', label='Innovative Performance', markerfacecolor='red', markersize=10)]\nax.legend(handles=legend_elements, loc='upper right')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_48.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Sales and Temperature Correlation Over a Year')\n\n# Create a line graph with a red line\nax.plot([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='red')\n\n# Create a scatter plot with blue dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='blue')\n\n# Create a scatter plot with red dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='red')\n\n# Create a scatter plot with green dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='green')\n\n# Create a scatter plot with black dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='black')\n\n# Create a scatter plot with white dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='white')\n\n# Create a scatter plot with yellow dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='yellow')\n\n# Create a scatter plot with cyan dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='cyan')\n\n# Create a scatter plot with magenta dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='magenta')\n\n# Create a scatter plot with brown dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='brown')\n\n# Create a scatter plot with gray dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='gray')\n\n# Create a scatter plot with silver dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='silver')\n\n# Create a scatter plot with gold dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='gold')\n\n# Create a scatter plot with bronze dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='bronze')\n\n# Create a scatter plot with copper dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='copper')\n\n# Create a scatter plot with tin dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='tin')\n\n# Create a scatter plot with zinc dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='zinc')\n\n# Create a scatter plot with lead dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='lead')\n\n# Create a scatter plot with mercury dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='mercury')\n\n# Create a scatter plot with gold dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='gold')\n\n# Create a scatter plot with silver dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='silver')\n\n# Create a scatter plot with bronze dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='bronze')\n\n# Create a scatter plot with copper dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='copper')\n\n# Create a scatter plot with tin dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='tin')\n\n# Create a scatter plot with zinc dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='zinc')\n\n# Create a scatter plot with lead dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='lead')\n\n# Create a scatter plot with mercury dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='mercury')\n\n# Create a scatter plot with gold dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='gold')\n\n# Create a scatter plot with silver dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='silver')\n\n# Create a scatter plot with bronze dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='bronze')\n\n# Create a scatter plot with copper dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='copper')\n\n# Create a scatter plot with tin dots\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100], color='tin"}
{"file": "dataset/ori_500/line_49.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data for each graph\ngrowth_data = [1.3, 1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1]\ndecay_data = [1.3, 1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1]\noscillation_data = [1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 9.0))\n\n# Plot the data\nax.plot(growth_data, label='Growth')\nax.plot(decay_data, label='Decay', color='red')\nax.plot(oscillation_data, label='Oscillation', color='blue')\n\n# Set the title and labels\nax.set_title('Exponential Growth Over Time')\nax.set_xlabel('Time')\nax.set_ylabel('Value')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Define the data for the plots\nx = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\ny1 = [0.5, 0.6, 0.7, 0.8, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4]\ny2 = [0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.8, 0.7, 0.6]\ny3 = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.8]\n\n# Plot the data\nax.plot(x, y1, 'b--', label='5-shot direct')\nax.plot(x, y2, 'o-', label='5-shot scratchpad')\nax.plot(x, y3, '^:', label='5-shot rule-following')\n\n# Add labels and title\nax.set_xlabel('Digit Length')\nax.set_ylabel('Accuracy')\nax.set_title('Comparison of 5-shot methods')\n\n# Add legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_50.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(5, 10))\n\n# Set the title of the graph\nax.set_title('Smoothed Representation')\n\n# Create a list of dates\ndates = ['2', '4', '6', '8', '10', '12', '14', '16', '18', '20']\n\n# Create a list of values\nvalues = [0.3, 0.2, 0.1, -0.1, -0.2, -0.3, -0.4, -0.5, -0.6, -0.7]\n\n# Plot the values\nax.plot(dates, values, 'o-', color='purple')\n\n# Add a rectangle annotation\nax.annotate('Smoothed Data', xy=(0.5, 0.5), xytext=(0.5, 0.5),\n            arrowprops=dict(facecolor='black', shrink=0.05))\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Value')\n\n# Set the y-axis limits\nax.set_ylim(-1, 1)\n\n# Set the x-axis limits\nax.set_xlim(0, 20)\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(-1, 1.1, 0.1))\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 21, 2))\n\n# Set the y-axis tick labels\nax.set_yticklabels(['-1.0', '-0.9', '-0.8', '-0.7', '-0.6', '-0.5', '-0.4', '-0.3', '-0.2', '-0.1', '0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1.0'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0.0', '2.5', '5.0', '7.5', '10.0', '12.5', '15.0', '17.5', '20.0'])\n\n# Set the y-axis grid\nax.grid(axis='y')\n\n# Set the x-axis grid\nax.grid(axis='x')\n\n# Set the y-axis color\nax.spines['left'].set_color('blue')\n\n# Set the x-axis color\nax.spines['bottom'].set_color('red')\n\n# Set the y-axis width\nax.spines['left'].set_linewidth(2)\n\n# Set the x-axis width\nax.spines['bottom'].set_linewidth(2)\n\n# Set the y-axis position\nax.spines['left'].set_position(('outward', 10))\n\n# Set the x-axis position\nax.spines['bottom'].set_position(('outward', 10))\n\n# Set the y-axis label color\nax.yaxis.label.set_color('green')\n\n# Set the x-axis label color\nax.xaxis.label.set_color('orange')\n\n# Set the y-axis label font size\nax.yaxis.label.set_fontsize(14)\n\n# Set the x-axis label font size\nax.xaxis.label.set_fontsize(14)\n\n# Set the y-axis label font weight\nax.yaxis.label.set_fontweight('bold')\n\n# Set the x-axis label font weight\nax.xaxis.label.set_fontweight('bold')\n\n# Set the y-axis label font style\nax.yaxis.label.set_fontstyle('italic')\n\n# Set the x-axis label font style\nax.xaxis.label.set_fontstyle('italic')\n\n# Set the y-axis label rotation\nax.yaxis.label.set_rotation(0)\n\n# Set the x-axis label rotation\nax.xaxis.label.set_rotation(0)\n\n# Set the y-axis label horizontal alignment\nax.yaxis.label.set_horizontalalignment('center')\n\n# Set the x-axis label horizontal alignment\nax.xaxis.label.set_horizontalalignment('center')\n\n# Set the y-axis label vertical alignment\nax.yaxis.label.set_verticalalignment('center')\n\n# Set the x-axis label vertical alignment\nax.xaxis.label.set_verticalalignment('center')\n\n# Set the y-axis label background color\nax.yaxis.label.set_facecolor('yellow')\n\n# Set the x-axis label background color\nax.xaxis.label.set_facecolor('cyan')\n\n# Set the y-axis label border color\nax.yaxis.label.set_edgecolor('magenta')\n\n# Set the x-axis label border color\nax.xaxis.label.set_edgecolor('lime')\n\n# Set the y-axis label border width\nax.yaxis.label.set_linewidth(2)\n\n# Set the x-axis label border width\nax.xaxis.label.set_linewidth(2)\n\n# Set the y-axis label border style\nax.yaxis.label.set_linestyle('-')\n\n# Set the x-axis label border style\nax.xaxis.label.set_linestyle('-')\n\n# Set the y-axis label border capstyle\nax.yaxis.label.set_capstyle('round')\n\n# Set the x-axis label border capstyle\nax.xaxis.label.set_capstyle('round')\n\n# Set the y-axis label border joinstyle\nax.yaxis.label.set_joinstyle('bevel')\n\n# Set the x-axis label border joinstyle\nax.xaxis.label.set_joinstyle('bevel')\n\n# Set the y-axis label border hatch\nax.yaxis.label.set_hatch('/')\n\n# Set the x-axis label border hatch\nax.xaxis.label.set_hatch('/')\n\n# Set the y-axis label border antialiased\nax.yaxis.label.set_antialiased(True)\n\n# Set the x-axis label border antialiased\nax.xaxis.label.set_antialiased(True)\n\n# Set the y-axis label border zorder\nax.yaxis.label.set_zorder(10)\n\n# Set the x-axis label border zorder\nax.xaxis.label.set_zorder(10)\n\n# Set the y-axis label border visible\nax.yaxis.label.set_visible(True)\n\n# Set the x-axis label border visible\nax.xaxis.label.set_visible(True)\n\n# Set the y-axis label border transform\nax.yaxis.label.set_transform(ax.transAxes)\n\n# Set the x-axis label border transform\nax.xaxis.label.set_transform(ax.transAxes)\n\n# Set the y-axis label border rotation_mode\nax.yaxis.label.set_rotation_mode('anchor')\n\n# Set the x-axis label border rotation_mode\nax.xaxis.label.set_rotation_mode('anchor')\n\n# Set the y-axis label border path_effects\nax.yaxis.label.set_path_effects([PathPatchEffect(path, lw=2)])\n\n# Set the x-axis label border path_effects\nax.xaxis.label.set_path_effects([PathPatchEffect(path, lw=2)])\n\n# Set the y-axis label border text_props\nax.yaxis.label.set_text_props(color='red', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='yellow', bordercolor='cyan', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the x-axis label border text_props\nax.xaxis.label.set_text_props(color='green', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='cyan', bordercolor='lime', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the y-axis label border text_props\nax.yaxis.label.set_text_props(color='blue', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='yellow', bordercolor='cyan', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the x-axis label border text_props\nax.xaxis.label.set_text_props(color='orange', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='cyan', bordercolor='lime', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the y-axis label border text_props\nax.yaxis.label.set_text_props(color='green', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='yellow', bordercolor='cyan', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the x-axis label border text_props\nax.xaxis.label.set_text_props(color='blue', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='yellow', bordercolor='cyan', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the y-axis label border text_props\nax.yaxis.label.set_text_props(color='orange', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='cyan', bordercolor='lime', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the x-axis label border text_props\nax.xaxis.label.set_text_props(color='green', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='yellow', bordercolor='cyan', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the y-axis label border text_props\nax.yaxis.label.set_text_props(color='blue', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='yellow', bordercolor='cyan', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the x-axis label border text_props\nax.xaxis.label.set_text_props(color='orange', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='cyan', bordercolor='lime', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the y-axis label border text_props\nax.yaxis.label.set_text_props(color='green', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='yellow', bordercolor='cyan', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the x-axis label border text_props\nax.xaxis.label.set_text_props(color='blue', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='yellow', bordercolor='cyan', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the y-axis label border text_props\nax.yaxis.label.set_text_props(color='orange', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='cyan', bordercolor='lime', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the x-axis label border text_props\nax.xaxis.label.set_text_props(color='green', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='yellow', bordercolor='cyan', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the y-axis label border text_props\nax.yaxis.label.set_text_props(color='blue', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='yellow', bordercolor='cyan', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the x-axis label border text_props\nax.xaxis.label.set_text_props(color='orange', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='cyan', bordercolor='lime', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the y-axis label border text_props\nax.yaxis.label.set_text_props(color='green', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='yellow', bordercolor='cyan', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the x-axis label border text_props\nax.xaxis.label.set_text_props(color='blue', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='yellow', bordercolor='cyan', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the y-axis label border text_props\nax.yaxis.label.set_text_props(color='orange', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='cyan', bordercolor='lime', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the x-axis label border text_props\nax.xaxis.label.set_text_props(color='green', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='yellow', bordercolor='cyan', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the y-axis label border text_props\nax.yaxis.label.set_text_props(color='blue', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='yellow', bordercolor='cyan', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the x-axis label border text_props\nax.xaxis.label.set_text_props(color='orange', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='cyan', bordercolor='lime', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the y-axis label border text_props\nax.yaxis.label.set_text_props(color='green', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='yellow', bordercolor='cyan', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the x-axis label border text_props\nax.xaxis.label.set_text_props(color='blue', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='yellow', bordercolor='cyan', borderwidth=2, borderstyle='-', bordercapstyle='round', borderjoinstyle='bevel', borderhatch='/', antialiased=True, zorder=10, visible=True, transform=ax.transAxes, rotation_mode='anchor')\n\n# Set the y-axis label border text_props\nax.yaxis.label.set_text_props(color='orange', fontsize=12, fontweight='bold', fontstyle='italic', rotation=0, ha='center', va='center', backgroundcolor='cyan', bordercolor='lime', borderwidth=2, borderstyle='-', bordercapstyle"}
{"file": "dataset/ori_500/line_51.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 12.0))\n\n# Set the title of the plot\nax.set_title('Sinusoidal Pattern')\n\n# Create a sine wave with a frequency of 1 Hz and amplitude of 1\nt = np.linspace(0, 10, 100)\ny_sin = np.sin(t)\nax.plot(t, y_sin, 'm-', label='Sin Wave')\n\n# Set the x-axis and y-axis limits\nax.set_xlim([0, 10])\nax.set_ylim([-1.5, 1.5])\n\n# Add a legend to the plot\nax.legend()\n\n# Repeat for other patterns\nfig, ax = plt.subplots(figsize=(6.0, 12.0))\nax.set_title('Cosine Pattern')\ny_cos = np.cos(t)\nax.plot(t, y_cos, 'g-', label='Cos Wave')\nax.set_xlim([0, 10])\nax.set_ylim([-1.5, 1.5])\nax.legend()\n\nfig, ax = plt.subplots(figsize=(6.0, 12.0))\nax.set_title('Exponential Decay')\ny_exp = np.exp(-t)\nax.plot(t, y_exp, 'b-', label='Exp Decay')\nax.set_xlim([0, 10])\nax.set_ylim([0.2, 1.2])\nax.legend()\n\nfig, ax = plt.subplots(figsize=(6.0, 12.0))\nax.set_title('Logarithmic Growth')\ny_log = np.log(t + 1)\nax.plot(t, y_log, 'r-', label='Log Growth')\nax.set_xlim([0, 10])\nax.set_ylim([0.5, 2.5])\nax.legend()\n```"}
{"file": "dataset/ori_500/line_52.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Plot the data\nax.plot([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], [75, 76, 77, 78, 79, 80, 81, 82, 83, 84], 'b-')\nax.plot([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], [75, 76, 77, 78, 79, 80, 81, 82, 83, 84], 'ro')\n\n# Set the title and labels\nax.set_title('Positive bound')\nax.set_xlabel('Time (s)')\nax.set_ylabel('Weight (kg)')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_53.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(12, 8))\n\n# Set the title of the plot\nax.set_title('Fuzzy Logic Model')\n\n# Set the x-axis label\nax.set_xlabel('Time (s)')\n\n# Set the y-axis label\nax.set_ylabel('Temperature (\u00b0C)')\n\n# Plot the data\nax.plot([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], [75, 76, 77, 78, 79, 80, 81, 82, 83], 'r-')\nax.plot([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], [75, 76, 77, 78, 79, 80, 81, 82, 83], 'g-')\nax.plot([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], [75, 76, 77, 78, 79, 80, 81, 82, 83], 'b-')\nax.plot([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], [75, 76, 77, 78, 79, 80, 81, 82, 83], 'c-')\nax.plot([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], [75, 76, 77, 78, 79, 80, 81, 82, 83], 'm-')\nax.plot([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], [75, 76, 77, 78, 79, 80, 81, 82, 83], 'y-')\n\n# Add a legend\nax.legend(['Positive Bound', 'Negative Bound', 'Contrastive Loss Weight', 'Fuzzy Coefficient', 'Additional Metric 1', 'Additional Metric 2'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_54.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 3, figsize=(12, 4))\n\n# Define the data for each subplot\ndata = [\n    {'x': [1, 2, 3, 4, 5], 'y': [1.2, 1.1, 1.0, 0.9, 0.8], 'label': 'Passive'},\n    {'x': [1, 2, 3, 4, 5], 'y': [1.4, 1.3, 1.2, 1.1, 1.0], 'label': 'Rain'},\n    {'x': [1, 2, 3, 4, 5], 'y': [1.6, 1.5, 1.4, 1.3, 1.2], 'label': 'Snow'},\n    {'x': [1, 2, 3, 4, 5], 'y': [1.8, 1.7, 1.6, 1.5, 1.4], 'label': 'Fog'},\n    {'x': [1, 2, 3, 4, 5], 'y': [2.0, 1.9, 1.8, 1.7, 1.6], 'label': 'Sportive'},\n    {'x': [1, 2, 3, 4, 5], 'y': [2.2, 2.1, 2.0, 1.9, 1.8], 'label': 'Replay'}\n]\n\n# Plot the data in each subplot\nfor i, ax in enumerate(axs):\n    ax.plot([d['x'] for d in data if d['label'] == ['Passive', 'Rain', 'Snow'][i]], \n            [d['y'] for d in data if d['label'] == ['Passive', 'Rain', 'Snow'][i]], \n            label=data[i]['label'])\n    ax.set_xlabel('Driving Style')\n    ax.set_ylabel('Relaxation Level')\n    ax.legend()\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_55.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 3.0))\n\n# Set the title of the plot\nax.set_title('Dynamic Performance Gain Across Different n_aug Levels')\n\n# Set the x-axis label\nax.set_xlabel('n_aug')\n\n# Set the y-axis label\nax.set_ylabel('Performance Gain (%)')\n\n# Create a list of n_aug values\nn_aug_values = [0, 1, 2, 3, 4, 5, 6, 7, 8]\n\n# Create a list of performance gain values\nperformance_gain_values = [2, 4, 6, 8, 7, 5, 3, 1, 0]\n\n# Plot the data\nax.plot(n_aug_values, performance_gain_values, 'b-')\n\n# Add markers at each data point\nfor i, v in enumerate(performance_gain_values):\n    ax.text(i, v, str(v), color='blue', ha='center', va='bottom')\n\n# Create a list of content values\ncontent_values = [2, 4, 6, 8, 7, 5, 3, 1, 0]\n\n# Plot the data\nax.plot(n_aug_values, content_values, 'r-')\n\n# Add markers at each data point\nfor i, v in enumerate(content_values):\n    ax.text(i, v, str(v), color='red', ha='center', va='bottom')\n\n# Create a list of organization values\norganization_values = [2, 4, 6, 8, 7, 5, 3, 1, 0]\n\n# Plot the data\nax.plot(n_aug_values, organization_values, 'g-')\n\n# Add markers at each data point\nfor i, v in enumerate(organization_values):\n    ax.text(i, v, str(v), color='green', ha='center', va='bottom')\n\n# Create a list of language values\nlanguage_values = [2, 4, 6, 8, 7, 5, 3, 1, 0]\n\n# Plot the data\nax.plot(n_aug_values, language_values, 'y-')\n\n# Add markers at each data point\nfor i, v in enumerate(language_values):\n    ax.text(i, v, str(v), color='yellow', ha='center', va='bottom')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_56.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\ndecomp = [0, 20, 40, 60, 80]\naccuracy = [0.65, 0.70, 0.75, 0.80, 0.85]\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 3, figsize=(9.0, 3.0))\n\n# Plot the first subplot\naxs[0].plot(decomp, accuracy, 'r-o')\naxs[0].set_title('COCO 10K')\naxs[0].set_xlabel('Decomposition IO Norm')\naxs[0].set_ylabel('Accuracy')\naxs[0].text(0, 0.65, 'COCO (10k)', color='red')\n\n# Plot the second subplot\naxs[1].plot(decomp, accuracy, 'b-o')\naxs[1].set_title('LAION 10K')\naxs[1].set_xlabel('Decomposition IO Norm')\naxs[1].set_ylabel('Accuracy')\naxs[1].text(0, 0.65, 'LAION (10k)', color='blue')\n\n# Plot the third subplot\naxs[2].plot(decomp, accuracy, 'g-o')\naxs[2].set_title('COCO & LAION 5K')\naxs[2].set_xlabel('Decomposition IO Norm')\naxs[2].set_ylabel('Accuracy')\naxs[2].text(0, 0.65, 'COCO (5k)', color='green')\naxs[2].text(0, 0.60, 'LAION (5k)', color='orange')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_57.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(12, 9))\n\n# Set the title of the plot\nax.set_title('Error Rate vs. Learning Rate')\n\n# Plot the data\nax.plot([0.025, 0.05, 0.075, 0.1, 0.125, 0.15, 0.175, 0.2], [0.18, 0.16, 0.14, 0.12, 0.1, 0.08, 0.06, 0.04], 'b-')\nax.plot([0.025, 0.05, 0.075, 0.1, 0.125, 0.15, 0.175, 0.2], [0.18, 0.16, 0.14, 0.12, 0.1, 0.08, 0.06, 0.04], 'ro')\n\n# Set the x-axis label\nax.set_xlabel('Parameter Rate')\n\n# Set the y-axis label\nax.set_ylabel('Error Rate')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_58.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 4))\n\n# Plot the data\nax.plot([0, 25, 50, 75, 100, 125, 150, 175, 200], [0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.05, 0.02, 0.01], 'b-')\nax.plot([0, 25, 50, 75, 100, 125, 150, 175, 200], [0.6, 0.55, 0.5, 0.45, 0.4, 0.35, 0.3, 0.25, 0.2], 'r-')\n\n# Set the title and labels\nax.set_title('Metric 1')\nax.set_xlabel('Training Iterations')\nax.set_ylabel('Metric Value')\n\n# Add a legend\nax.legend(['Base Model', 'Our Model'])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_59.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(5.0, 3.0))\n\n# Set the title of the plot\nax.set_title('Accuracy')\n\n# Create a line plot for the base model\nax.plot([0, 100, 200], [0.8, 0.6, 0.4], 'o-', label='Base Model', color='cyan')\n\n# Create a line plot for the our model\nax.plot([0, 100, 200], [0.7, 0.5, 0.3], 'o-', label='Our Model', color='cyan')\n\n# Add a legend to the plot\nax.legend()\n\n# Set the x-axis label\nax.set_xlabel('Training Iterations')\n\n# Set the y-axis label\nax.set_ylabel('Metric Value')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(9, 6))\n\n# Set the x-axis limits\nax.set_xlim(10**1, 10**10)\n\n# Set the y-axis limits\nax.set_ylim(10**-10, 10**1)\n\n# Set the x-axis ticks\nax.set_xticks([10**1, 2*10**1, 3*10**1, 4*10**1, 5*10**1, 6*10**1])\n\n# Set the y-axis ticks\nax.set_yticks([10**-10, 10**-7, 10**-4, 10**-1])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['10^1', '2*10^1', '3*10^1', '4*10^1', '5*10^1', '6*10^1'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['10^-10', '10^-7', '10^-4', '10^-1'])\n\n# Set the title of the plot\nax.set_title('Stock Price Prediction')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='gray')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('gray')\nax.spines['top'].set_color('gray')\nax.spines['right'].set_color('gray')\nax.spines['left'].set_color('gray')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the background\n"}
{"file": "dataset/ori_500/line_60.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Performance and Efficiency Over Weeks')\n\n# Set the x-axis label\nax.set_xlabel('Weeks')\n\n# Set the y-axis label\nax.set_ylabel('Efficiency')\n\n# Set the x-axis limits\nax.set_xlim(0, 25)\n\n# Set the y-axis limits\nax.set_ylim(-1.5, 1.5)\n\n# Set the x-axis ticks\nax.set_xticks([0, 5, 10, 15, 20, 25])\n\n# Set the y-axis ticks\nax.set_yticks([-1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '5', '10', '15', '20', '25'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['-1.5', '-1.0', '-0.5', '0.0', '0.5', '1.0', '1.5'])\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=0)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=0)\n\n# Set the color of the y-axis tick marks\nax"}
{"file": "dataset/ori_500/line_61.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Performance and Efficiency Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Weeks')\n\n# Set the y-axis label\nax.set_ylabel('Values')\n\n# Create a list of weeks\nweeks = np.arange(0, 30, 1)\n\n# Create a list of values for performance\nperformance_values = [0.5, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3.0, 3.1, 3.2, 3.3, 3.4, 3.5]\n\n# Create a list of values for efficiency\nefficiency_values = [0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3.0, 3.1, 3.2, 3.3, 3.4, 3.5]\n\n# Create a scatter plot for performance\nax.scatter(weeks, performance_values, color='blue', label='Performance')\n\n# Create a scatter plot for efficiency\nax.scatter(weeks, efficiency_values, color='red', label='Efficiency')\n\n# Add a legend to the plot\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_62.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the background color of the plot\nax.set_facecolor('#ADD8E6')\n\n# Set the title of the plot\nax.set_title('Detailed Performance and Efficiency Analysis Over Weeks', fontsize=20)\n\n# Set the x-axis label\nax.set_xlabel('Weeks', fontsize=14)\n\n# Set the y-axis label\nax.set_ylabel('Efficiency', fontsize=14)\n\n# Set the x-axis limits\nax.set_xlim(0, 30)\n\n# Set the y-axis limits\nax.set_ylim(0, 12)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 31, 5))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 13, 1))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '5', '10', '15', '20', '25', '30'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the performance data\nperformance_data = [1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]\n\n# Set the efficiency data\nefficiency_data = [1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]\n\n# Plot the performance data\nax.plot(performance_data, 'b-', label='Performance')\n\n# Plot the efficiency data\nax.plot(efficiency_data, 'r-', label='Efficiency')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_63.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(12, 8))\n\n# Set the background color of the plot\nax.set_facecolor('bisque')\n\n# Set the title of the plot\nax.set_title('Dynamic Data Presentation Across Weeks', fontsize=24)\n\n# Set the x-axis label\nax.set_xlabel('Weeks', fontsize=16)\n\n# Set the y-axis label\nax.set_ylabel('Normalized Value', fontsize=16)\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 5, 10, 15, 20, 25])\n\n# Set the tick labels for the y-axis\nax.set_yticks([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n\n# Set the grid lines\nax.grid(True)\n\n# Plot the data series\nax.plot([0, 5, 10, 15, 20, 25], [10, 8, 6, 4, 2, 0], 'b-', label='Data Series 1')\nax.plot([0, 5, 10, 15, 20, 25], [9, 7, 5, 3, 1, -1], 'g--', label='Data Series 2 with Gradient')\nax.plot([0, 5, 10, 15, 20, 25], [8, 6, 4, 2, 0, -2], 'm-.', label='Data Series 3')\n\n# Add a legend\nax.legend()\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_64.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nx = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\ny1 = [90, 85, 80, 75, 70, 65, 60, 55, 50, 45]\ny2 = [85, 80, 75, 70, 65, 60, 55, 50, 45, 40]\ny3 = [80, 75, 70, 65, 60, 55, 50, 45, 40, 35]\ny4 = [75, 70, 65, 60, 55, 50, 45, 40, 35, 30]\ny5 = [70, 65, 60, 55, 50, 45, 40, 35, 30, 25]\ny6 = [65, 60, 55, 50, 45, 40, 35, 30, 25, 20]\n\n# Plot\nfig, ax = plt.subplots(figsize=(12, 6))\nax.plot(x, y1, 'b-', label='BaCE')\nax.plot(x, y2, 'c-', label='LWF')\nax.plot(x, y3, 'g-', label='EWC')\nax.plot(x, y4, 'm-', label='SEQ')\nax.plot(x, y5, 'y-', label='SEW')\nax.plot(x, y6, 'k-', label='SWE')\n\n# Legend\nax.legend()\n\n# Title and labels\nax.set_title('Average Accuracy (%)')\nax.set_xlabel('Task')\nax.set_ylabel('Accuracy (%)')\n\n# Show plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_65.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nx = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\ny1 = [80, 85, 90, 95, 92, 88, 85, 82, 79, 76]\ny2 = [70, 75, 80, 85, 82, 78, 75, 72, 69, 66]\ny3 = [60, 65, 70, 75, 72, 68, 65, 62, 59, 56]\ny4 = [50, 55, 60, 65, 62, 58, 55, 52, 49, 46]\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 2, figsize=(8.0, 3.0))\n\n# Plot the data on the first subplot\naxs[0].plot(x, y1, 'b-', label='BaCE')\naxs[0].plot(x, y2, 'c-', label='EWC')\naxs[0].set_title('Performance Comparison: BaCE vs EWC')\naxs[0].set_xlabel('Task')\naxs[0].set_ylabel('Performance (%)')\naxs[0].legend()\n\n# Plot the data on the second subplot\naxs[1].plot(x, y3, 'r^', label='LWF')\naxs[1].plot(x, y4, 'm^', label='SEQ')\naxs[1].set_title('Performance Comparison: LWF vs SEQ')\naxs[1].set_xlabel('Task')\naxs[1].set_ylabel('Performance (%)')\naxs[1].legend()\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_66.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(9.0, 7.0))\n\n# Set the title of the plot\nax.set_title('model1 Performance')\n\n# Set the x-axis label\nax.set_xlabel('Iterations')\n\n# Set the y-axis label\nax.set_ylabel('Success Rate')\n\n# Create a scatter plot with the data\nax.scatter([0, 250, 500, 750, 1000, 1250, 1500, 1750, 2000], [0.2, 0.4, 0.6, 0.8, 1.0, 0.8, 0.6, 0.4, 0.2], color='blue')\n\n# Add a legend to the plot\nax.legend(['model1 Series 1', 'model1 Series 2'])\n\n# Add a grid to the plot\nax.grid(True)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_67.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Microphone Sales Data')\n\n# Set the x-axis label\nax.set_xlabel('Number of microphones')\n\n# Set the y-axis label\nax.set_ylabel('Sales (in millions)')\n\n# Set the x-ticks\nax.set_xticks([2, 3, 4, 5, 6, 7, 8])\n\n# Set the y-ticks\nax.set_yticks([2, 3, 4, 5, 6, 7, 8, 9, 10])\n\n# Set the grid\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('purple')\n\n# Set the color of the title\nax.title.set_color('orange')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='blue')\n\n# Set the color of the tick marks"}
{"file": "dataset/ori_500/line_68.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Set the title of the plot\nax.set_title('Trend Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Number of microphones')\n\n# Set the y-axis label\nax.set_ylabel('WER (%)')\n\n# Set the y-axis limits\nax.set_ylim(2, 30)\n\n# Set the x-axis limits\nax.set_xlim(2, 10)\n\n# Set the y-axis ticks\nax.set_yticks([2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30])\n\n# Set the x-axis ticks\nax.set_xticks([2, 3, 4, 5, 6, 7, 8, 9, 10])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['2', '4', '6', '8', '10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='grey')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='"}
{"file": "dataset/ori_500/line_69.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Set the title of the plot\nax.set_title('Highlight Performance Over Time')\n\n# Set the x-axis label\nax.set_xlabel('Number of Microphones')\n\n# Set the y-axis label\nax.set_ylabel('WER (%)')\n\n# Set the x-axis limits\nax.set_xlim(2, 8)\n\n# Set the y-axis limits\nax.set_ylim(0.2, 1.0)\n\n# Set the x-axis ticks\nax.set_xticks([2, 3, 4, 5, 6, 7, 8])\n\n# Set the y-axis ticks\nax.set_yticks([0.2, 0.4, 0.6, 0.8, 1.0])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Highlight 1', 'Highlight 2', 'Highlight 3', 'Highlight 4', 'Highlight 5', 'Highlight 6', 'Highlight 7'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the line color\nax.plot([2, 3, 4, 5, 6, 7, 8], [0.2, 0.4, 0.6, 0.8, 0.9, 0.7, 0.5], color='orange')\n\n# Set the marker color\nax.plot([2, 3, 4, 5, 6, 7, 8], [0.2, 0.4, 0.6, 0.8, 0.9, 0.7, 0.5], 'o', color='red')\n\n# Set the legend\nax.legend(['LibriCSS WER', 'AMI WER', 'Threshold'], loc='upper left')\n\n# Set the grid\nax.grid(True)\n\n# Set the rectangle\nax.add_patch(plt.Rectangle((2, 0.2), 1, 0.8, color='blue'))\n\n# Set the circle\nax.add_patch(plt.Circle((2, 0.2), 0.1, color='red'))\n\n# Set the rectangle\nax.add_patch(plt.Rectangle((3, 0.4), 1, 0.6, color='green'))\n\n# Set the circle\nax.add_patch(plt.Circle((3, 0.4), 0.1, color='blue'))\n\n# Set the rectangle\nax.add_patch(plt.Rectangle((4, 0.6), 1, 0.4, color='yellow'))\n\n# Set the circle\nax.add_patch(plt.Circle((4, 0.6), 0.1, color='red'))\n\n# Set the rectangle\nax.add_patch(plt.Rectangle((5, 0.8), 1, 0.2, color='orange'))\n\n# Set the circle\nax.add_patch(plt.Circle((5, 0.8), 0.1, color='blue'))\n\n# Set the rectangle\nax.add_patch(plt.Rectangle((6, 0.9), 1, 0.1, color='red'))\n\n# Set the circle\nax.add_patch(plt.Circle((6, 0.9), 0.1, color='blue'))\n\n# Set the rectangle\nax.add_patch(plt.Rectangle((7, 0.7), 1, 0.3, color='green'))\n\n# Set the circle\nax.add_patch(plt.Circle((7, 0.7), 0.1, color='red'))\n\n# Set the rectangle\nax.add_patch(plt.Rectangle((8, 0.5), 1, 0.5, color='yellow'))\n\n# Set the circle\nax.add_patch(plt.Circle((8, 0.5), 0.1, color='blue'))\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(2, 2, figsize=(12, 6))\n\n# Plot the first subplot\nx = np.linspace(0.7, 1, 100)\ny = np.sin(x)\naxs[0, 0].plot(x, y, 'b-')\naxs[0, 0].set_title('a) Positive bound.')\naxs[0, 0].fill_between(x, y, where=(y > 0), color='lightblue')\n\n# Plot the second subplot\nx = np.linspace(0.1, 0.4, 100)\ny = np.cos(x)\naxs[0, 1].plot(x, y, 'r-')\naxs[0, 1].set_title('b) Negative bound.')\naxs[0, 1].fill_between(x, y, where=(y < 0), color='lightgreen')\n\n# Plot the third subplot\nx = np.linspace(0, 1, 100)\ny = np.tan(x)\naxs[1, 0].plot(x, y, 'g-')\naxs[1, 0].set_title('c) Fuzzy coefficient.')\naxs[1, 0].fill_between(x, y, where=(y > 0), color='lightgrey')\n\n# Plot the fourth subplot\nx = np.linspace(0, 1, 100)\ny = np.exp(x)\naxs[1, 1].plot(x, y, 'k-')\naxs[1, 1].set_title('d) Contrastive loss weight.')\naxs[1, 1].fill_between(x, y, where=(y > 0), color='lightsalmon')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_70.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 5))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the title of the plot\nax.set_title('Microphone Sales Data')\n\n# Set the x-axis label\nax.set_xlabel('Number of Microphones')\n\n# Set the y-axis label\nax.set_ylabel('Sales ($ millions)')\n\n# Set the x-ticks\nax.set_xticks([2, 3, 4, 5, 6, 7, 8])\n\n# Set the y-ticks\nax.set_yticks([0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the line width\nax.spines['top'].set_linewidth(2)\nax.spines['bottom'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\n\n# Set the line color\nax.spines['top'].set_color('red')\nax.spines['bottom'].set_color('red')\nax.spines['left'].set_color('red')\nax.spines['right'].set_color('red')\n\n# Set the line style\nax.spines['top'].set_linestyle('-')\nax.spines['bottom'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\n\n# Set the line cap\nax.spines['top'].set_capstyle('round')\nax.spines['bottom'].set_capstyle('round')\nax.spines['left'].set_capstyle('round')\nax.spines['right'].set_capstyle('round')\n\n# Set the line join\nax.spines['top'].set_joinstyle('round')\nax.spines['bottom'].set_joinstyle('round')\nax.spines['left'].set_joinstyle('round')\nax.spines['right'].set_joinstyle('round')\n\n# Set the line width\nax.spines['top'].set_linewidth(2)\nax.spines['bottom'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\n\n# Set the line color\nax.spines['top'].set_color('red')\nax.spines['bottom'].set_color('red')\nax.spines['left'].set_color('red')\nax.spines['right'].set_color('red')\n\n# Set the line style\nax.spines['top'].set_linestyle('-')\nax.spines['bottom'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\n\n# Set the line cap\nax.spines['top'].set_capstyle('round')\nax.spines['bottom'].set_capstyle('round')\nax.spines['left'].set_capstyle('round')\nax.spines['right'].set_capstyle('round')\n\n# Set the line join\nax.spines['top'].set_joinstyle('round')\nax.spines['bottom'].set_joinstyle('round')\nax.spines['left'].set_joinstyle('round')\nax.spines['right'].set_joinstyle('round')\n\n# Set the line width\nax.spines['top'].set_linewidth(2)\nax.spines['bottom'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\n\n# Set the line color\nax.spines['top'].set_color('red')\nax.spines['bottom'].set_color('red')\nax.spines['left'].set_color('red')\nax.spines['right'].set_color('red')\n\n# Set the line style\nax.spines['top'].set_linestyle('-')\nax.spines['bottom'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\n\n# Set the line cap\nax.spines['top'].set_capstyle('round')\nax.spines['bottom'].set_capstyle('round')\nax.spines['left'].set_capstyle('round')\nax.spines['right'].set_capstyle('round')\n\n# Set the line join\nax.spines['top'].set_joinstyle('round')\nax.spines['bottom'].set_joinstyle('round')\nax.spines['left'].set_joinstyle('round')\nax.spines['right'].set_joinstyle('round')\n\n# Set the line width\nax.spines['top'].set_linewidth(2)\nax.spines['bottom'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\n\n# Set the line color\nax.spines['top'].set_color('red')\nax.spines['bottom'].set_color('red')\nax.spines['left'].set_color('red')\nax.spines['right'].set_color('red')\n\n# Set the line style\nax.spines['top'].set_linestyle('-')\nax.spines['bottom'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\n\n# Set the line cap\nax.spines['top'].set_capstyle('round')\nax.spines['bottom'].set_capstyle('round')\nax.spines['left'].set_capstyle('round')\nax.spines['right'].set_capstyle('round')\n\n# Set the line join\nax.spines['top'].set_joinstyle('round')\nax.spines['bottom'].set_joinstyle('round')\nax.spines['left'].set_joinstyle('round')\nax.spines['right'].set_joinstyle('round')\n\n# Set the line width\nax.spines['top'].set_linewidth(2)\nax.spines['bottom'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\n\n# Set the line color\nax.spines['top'].set_color('red')\nax.spines['bottom'].set_color('red')\nax.spines['left'].set_color('red')\nax.spines['right'].set_color('red')\n\n# Set the line style\nax.spines['top'].set_linestyle('-')\nax.spines['bottom'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\n\n# Set the line cap\nax.spines['top'].set_capstyle('round')\nax.spines['bottom'].set_capstyle('round')\nax.spines['left'].set_capstyle('round')\nax.spines['right'].set_capstyle('round')\n\n# Set the line join\nax.spines['top'].set_joinstyle('round')\nax.spines['bottom'].set_joinstyle('round')\nax.spines['left'].set_joinstyle('round')\nax.spines['right'].set_joinstyle('round')\n\n# Set the line width\nax.spines['top'].set_linewidth(2)\nax.spines['bottom'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\n\n# Set the line color\nax.spines['top'].set_color('red')\nax.spines['bottom'].set_color('red')\nax.spines['left'].set_color('red')\nax.spines['right'].set_color('red')\n\n# Set the line style\nax.spines['top'].set_linestyle('-')\nax.spines['bottom'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\n\n# Set the line cap\nax.spines['top'].set_capstyle('round')\nax.spines['bottom'].set_capstyle('round')\nax.spines['left'].set_capstyle('round')\nax.spines['right'].set_capstyle('round')\n\n# Set the line join\nax.spines['top'].set_joinstyle('round')\nax.spines['bottom'].set_joinstyle('round')\nax.spines['left'].set_joinstyle('round')\nax.spines['right'].set_joinstyle('round')\n\n# Set the line width\nax.spines['top'].set_linewidth(2)\nax.spines['bottom'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\n\n# Set the line color\nax.spines['top'].set_color('red')\nax.spines['bottom'].set_color('red')\nax.spines['left'].set_color('red')\nax.spines['right'].set_color('red')\n\n# Set the line style\nax.spines['top'].set_linestyle('-')\nax.spines['bottom'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\n\n# Set the line cap\nax.spines['top'].set_capstyle('round')\nax.spines['bottom'].set_capstyle('round')\nax.spines['left'].set_capstyle('round')\nax.spines['right'].set_capstyle('round')\n\n# Set the line join\nax.spines['top'].set_joinstyle('round')\nax.spines['bottom'].set_joinstyle('round')\nax.spines['left'].set_joinstyle('round')\nax.spines['right'].set_joinstyle('round')\n\n# Set the line width\nax.spines['top'].set_linewidth(2)\nax.spines['bottom'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\n\n# Set the line color\nax.spines['top'].set_color('red')\nax.spines['bottom'].set_color('red')\nax.spines['left'].set_color('red')\nax.spines['right'].set_color('red')\n\n# Set the line style\nax.spines['top'].set_linestyle('-')\nax.spines['bottom'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\n\n# Set the line cap\nax.spines['top'].set_capstyle('round')\nax.spines['bottom'].set_capstyle('round')\nax.spines['left'].set_capstyle('round')\nax.spines['right'].set_capstyle('round')\n\n# Set the line join\nax.spines['top'].set_joinstyle('round')\nax.spines['bottom'].set_joinstyle('round')\nax.spines['left'].set_joinstyle('round')\nax.spines['right'].set_joinstyle('round')\n\n# Set the line width\nax.spines['top'].set_linewidth(2)\nax.spines['bottom'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\n\n# Set the line color\nax.spines['top'].set_color('red')\nax.spines['bottom'].set_color('red')\nax.spines['left'].set_color('red')\nax.spines['right'].set_color('red')\n\n# Set the line style\nax.spines['top'].set_linestyle('-')\nax.spines['bottom'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\n\n# Set the line cap\nax.spines['top'].set_capstyle('round')\nax.spines['bottom'].set_capstyle('round')\nax.spines['left'].set_capstyle('round')\nax.spines['right'].set_capstyle('round')\n\n# Set the line join\nax.spines['top'].set_joinstyle('round')\nax.spines['bottom'].set_joinstyle('round')\nax.spines['left'].set_joinstyle('round')\nax.spines['right'].set_joinstyle('round')\n\n# Set the line width\nax.spines['top'].set_linewidth(2)\nax.spines['bottom'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\n\n# Set the line color\nax.spines['top'].set_color('red')\nax.spines['bottom'].set_color('red')\nax.spines['left'].set_color('red')\nax.spines['right'].set_color('red')\n\n# Set the line style\nax.spines['top'].set_linestyle('-')\nax.spines['bottom'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\n\n# Set the line cap\nax.spines['top'].set_capstyle('round')\nax.spines['bottom'].set_capstyle('round')\nax.spines['left'].set_capstyle('round')\nax.spines['right'].set_capstyle('round')\n\n# Set the line join\nax.spines['top'].set_joinstyle('round')\nax.spines['bottom'].set_joinstyle('round')\nax.spines['left'].set_joinstyle('round')\nax.spines['right'].set_joinstyle('round')\n\n# Set the line width\nax.spines['top'].set_linewidth(2)\nax.spines['bottom'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\n\n# Set the line color\nax.spines['top'].set_color('red')\nax.spines['bottom'].set_color('red')\nax.spines['left'].set_color('red')\nax.spines['right'].set_color('red')\n\n# Set the line style\nax.spines['top'].set_linestyle('-')\nax.spines['bottom'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\n\n# Set the line cap\nax.spines['top'].set_capstyle('round')\nax.spines['bottom'].set_capstyle('round')\nax.spines['left'].set_capstyle('round')\nax.spines['right'].set_capstyle('round')\n\n# Set the line join\nax.spines['top'].set_joinstyle('round')\nax.spines['bottom'].set_joinstyle('round')\nax.spines['left'].set_joinstyle('round')\nax.spines['right'].set_joinstyle('round')\n\n# Set the line width\nax.spines['top'].set_linewidth(2)\nax.spines['bottom'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\n\n# Set the line color\nax.spines['top'].set_color('red')\nax.spines['bottom'].set_color('red')\nax.spines['left'].set_color('red')\nax.spines['right'].set_color('red')\n\n# Set the line style\nax.spines['top'].set_linestyle('-')\nax.spines['bottom'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\n\n# Set the line cap\nax.spines['top'].set_capstyle('round')\nax.spines['bottom'].set_capstyle('round')\nax.spines['left'].set_capstyle('round')\nax.spines['right'].set_capstyle('round')\n\n# Set the line join\nax.spines['top'].set_joinstyle('round')\nax.spines['bottom'].set_joinstyle('round')\nax.spines['left'].set_joinstyle('round')\nax.spines['right'].set_joinstyle('round')\n\n# Set the line width\nax.spines['top'].set_linewidth(2)\nax.spines['bottom'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\n\n# Set the line color\nax.spines['top'].set_color('red')\nax.spines['bottom'].set_color('red')\nax.spines['left'].set_color('red')\nax.spines['right'].set_color('red')\n\n# Set the line style\nax.spines['top'].set_linestyle('-')\nax.spines['bottom'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\n\n# Set the line cap\nax.spines['top'].set_capstyle('round')\nax.spines['bottom'].set_capstyle('round')\nax.spines['left'].set_capstyle('round')\nax.spines['right'].set_capstyle('round')\n\n# Set the line join\nax.spines['top'].set_joinstyle('round')\nax.spines['bottom'].set_joinstyle('round')\nax.spines['left'].set_joinstyle('round')\nax.spines['right'].set_joinstyle('round')\n\n# Set the line width\nax.spines['top'].set_linewidth(2)\nax.spines['bottom'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\n\n# Set the line color\nax.spines['top'].set_color('red')\nax.spines['bottom'].set_color('red')\nax.spines['left'].set_color('red')\nax.spines['right'].set_color('red')\n\n# Set the line style\nax.spines['top'].set_linestyle('-')\nax.spines['bottom'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\n\n# Set the line cap\nax.spines['top'].set_capstyle('round')\nax.spines['bottom'].set_capstyle('round')\nax.spines['left'].set_capstyle('round')\nax.spines['right'].set_capstyle('round')\n\n# Set the line join\nax.spines['top'].set_joinstyle('round')\nax.spines['bottom'].set_joinstyle('round')\nax.spines['left'].set_joinstyle('round')\nax.spines['right'].set_joinstyle('round')\n\n# Set the line width\nax.spines['top'].set_linewidth(2)\nax.spines['bottom'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\n\n# Set the line color\nax.spines['top'].set_color('red')\nax.spines['bottom'].set_color('red')\nax.spines['left'].set_color('red')\nax.spines['right'].set_color('red')\n\n# Set the line style\nax.spines['top'].set_linestyle('-')\nax.spines['bottom'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\n\n# Set the line cap\nax.spines['top'].set_capstyle('round')\nax.spines['bottom'].set_capstyle('round')\nax.spines['left'].set_capstyle('round')\nax.spines['right'].set_capstyle('round')\n\n# Set the line join\nax.spines['top'].set_joinstyle('round')\nax.spines"}
{"file": "dataset/ori_500/line_71.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 12.0))\n\n# Set the title of the plot\nax.set_title('SPMotif-0.5')\n\n# Create a list of colors for the lines\ncolors = ['blue', 'green']\n\n# Create a list of labels for the lines\nlabels = ['PNA', 'GIN']\n\n# Create a list of ratios\nratios = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]\n\n# Create a list of performance values\nperformance_values = [0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 0.9, 0.8, 0.7, 0.6]\n\n# Create a list of PNA values\npna_values = [0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 0.9, 0.8, 0.7, 0.6]\n\n# Create a list of GIN values\ngin_values = [0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 0.9, 0.8, 0.7, 0.6]\n\n# Plot the data\nfor i in range(len(colors)):\n    ax.plot(ratios, performance_values, color=colors[i], label=labels[i])\n    ax.plot(ratios, pna_values, color=colors[i], label=labels[i])\n    ax.plot(ratios, gin_values, color=colors[i], label=labels[i])\n\n# Add a legend to the plot\nax.legend()\n\n# Set the x-axis and y-axis limits\nax.set_xlim(0.1, 1.0)\nax.set_ylim(0.4, 1.0)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('Ratio r')\nax.set_ylabel('Performance')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Save the plot as a PNG file\nplt.savefig('spmotif-0.5.png')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_72.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the plot\nax.set_title('Dynamic Performance Trends')\n\n# Set the x-axis label\nax.set_xlabel('Ratio r')\n\n# Set the y-axis label\nax.set_ylabel('Performance')\n\n# Set the x-axis limits\nax.set_xlim(0.1, 1)\n\n# Set the y-axis limits\nax.set_ylim(-80, 20)\n\n# Set the grid lines\nax.grid(True)\n\n# Set the tick marks\nax.set_xticks([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1])\nax.set_yticks([-80, -60, -40, -20, 0, 20])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color"}
{"file": "dataset/ori_500/line_73.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Modern Linear Performance Evaluation')\n\n# Set the x-axis label\nax.set_xlabel('Ratio r')\n\n# Set the y-axis label\nax.set_ylabel('Performance')\n\n# Set the x-axis limits\nax.set_xlim(0.1, 1.0)\n\n# Set the y-axis limits\nax.set_ylim(0.1, 1.5)\n\n# Create a scatter plot with a specific color\nax.scatter([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], color='blue')\n\n# Create a line plot with a specific color\nax.plot([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], color='orange')\n\n# Create a bar chart with a specific color\nax.bar([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], color='purple')\n\n# Create a pie chart with a specific color\nax.pie([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], colors=['red', 'green', 'blue', 'yellow', 'cyan', 'magenta', 'black', 'white', 'gray', 'brown'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_74.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Dynamic Model Performance')\n\n# Set the x-axis label\nax.set_xlabel('Ratio r')\n\n# Set the y-axis label\nax.set_ylabel('Performance')\n\n# Create a scatter plot with a blue color for each point\nax.scatter([0.2, 0.4, 0.6, 0.8, 1.0], [0.5, 0.7, 0.9, 1.1, 1.3], color='blue')\n\n# Create a line plot with a red color for each line\nax.plot([0.2, 0.4, 0.6, 0.8, 1.0], [0.5, 0.7, 0.9, 1.1, 1.3], color='red')\n\n# Add a legend to the plot\nax.legend(['Model 1', 'Model 2'])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_75.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Comparison of Model Accuracies')\n\n# Set the x-axis label\nax.set_xlabel('Ensemble Size')\n\n# Set the y-axis label\nax.set_ylabel('Model Accuracy')\n\n# Set the x-ticks\nax.set_xticks([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29])\n\n# Set the y-ticks\nax.set_yticks(range(60, 86, 5))\n\n# Set the grid\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'orange', 'purple'])\n\n# Set the color of the line\nax.plot([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], 'o-')\n\n# Set the color of the fill\nax.fill_between([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], [75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99], alpha=0.5)\n\n# Set the color of the legend\nax.legend(['Model 1 Mean Accuracy', 'Model 2 Mean Accuracy'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Ensemble Size')\nax.set_ylabel('Model Accuracy')\n\n# Set the color of the title\nax.set_title('Comparison of Model Accuracies')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'orange', 'purple'])\n\n# Set the color of the line\nax.plot([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], 'o-')\n\n# Set the color of the fill\nax.fill_between([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], [75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99], alpha=0.5)\n\n# Set the color of the legend\nax.legend(['Model 1 Mean Accuracy', 'Model 2 Mean Accuracy'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Ensemble Size')\nax.set_ylabel('Model Accuracy')\n\n# Set the color of the title\nax.set_title('Comparison of Model Accuracies')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'orange', 'purple'])\n\n# Set the color of the line\nax.plot([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], 'o-')\n\n# Set the color of the fill\nax.fill_between([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], [75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99], alpha=0.5)\n\n# Set the color of the legend\nax.legend(['Model 1 Mean Accuracy', 'Model 2 Mean Accuracy'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Ensemble Size')\nax.set_ylabel('Model Accuracy')\n\n# Set the color of the title\nax.set_title('Comparison of Model Accuracies')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'orange', 'purple'])\n\n# Set the color of the line\nax.plot([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], 'o-')\n\n# Set the color of the fill\nax.fill_between([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], [75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99], alpha=0.5)\n\n# Set the color of the legend\nax.legend(['Model 1 Mean Accuracy', 'Model 2 Mean Accuracy'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Ensemble Size')\nax.set_ylabel('Model Accuracy')\n\n# Set the color of the title\nax.set_title('Comparison of Model Accuracies')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'orange', 'purple'])\n\n# Set the color of the line\nax.plot([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], 'o-')\n\n# Set the color of the fill\nax.fill_between([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], [75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99], alpha=0.5)\n\n# Set the color of the legend\nax.legend(['Model 1 Mean Accuracy', 'Model 2 Mean Accuracy'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Ensemble Size')\nax.set_ylabel('Model Accuracy')\n\n# Set the color of the title\nax.set_title('Comparison of Model Accuracies')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'orange', 'purple'])\n\n# Set the color of the line\nax.plot([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], 'o-')\n\n# Set the color of the fill\nax.fill_between([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], [75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99], alpha=0.5)\n\n# Set the color of the legend\nax.legend(['Model 1 Mean Accuracy', 'Model 2 Mean Accuracy'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Ensemble Size')\nax.set_ylabel('Model Accuracy')\n\n# Set the color of the title\nax.set_title('Comparison of Model Accuracies')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'orange', 'purple'])\n\n# Set the color of the line\nax.plot([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], 'o-')\n\n# Set the color of the fill\nax.fill_between([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], [75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99], alpha=0.5)\n\n# Set the color of the legend\nax.legend(['Model 1 Mean Accuracy', 'Model 2 Mean Accuracy'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Ensemble Size')\nax.set_ylabel('Model Accuracy')\n\n# Set the color of the title\nax.set_title('Comparison of Model Accuracies')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'orange', 'purple'])\n\n# Set the color of the line\nax.plot([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], 'o-')\n\n# Set the color of the fill\nax.fill_between([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], [75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99], alpha=0.5)\n\n# Set the color of the legend\nax.legend(['Model 1 Mean Accuracy', 'Model 2 Mean Accuracy'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Ensemble Size')\nax.set_ylabel('Model Accuracy')\n\n# Set the color of the title\nax.set_title('Comparison of Model Accuracies')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'orange', 'purple'])\n\n# Set the color of the line\nax.plot([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], 'o-')\n\n# Set the color of the fill\nax.fill_between([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], [75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99], alpha=0.5)\n\n# Set the color of the legend\nax.legend(['Model 1 Mean Accuracy', 'Model 2 Mean Accuracy'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Ensemble Size')\nax.set_ylabel('Model Accuracy')\n\n# Set the color of the title\nax.set_title('Comparison of Model Accuracies')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'orange', 'purple'])\n\n#"}
{"file": "dataset/ori_500/line_76.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 12.0))\n\n# Set the title of the plot\nax.set_title('Performance of Model X')\n\n# Create a scatter plot with red circles for the data points\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9], [90, 85, 80, 75, 70, 65, 60, 55, 50], color='red', marker='o')\n\n# Add a legend to the plot\nax.legend(['Config A - Model X', 'Config B - Model X', 'Config C - Model X'])\n\n# Set the x-axis label\nax.set_xlabel('Iteration')\n\n# Set the y-axis label\nax.set_ylabel('Score')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_77.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 12.0))\n\n# Set the title of the plot\nax.set_title('Performance of Llama')\n\n# Create a scatter plot with the data\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [85, 87, 88, 89, 90, 91, 92, 93, 94, 95], color='pink')\nax.plot([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [85, 87, 88, 89, 90, 91, 92, 93, 94, 95], color='blue')\n\n# Add a legend to the plot\nax.legend(['Llama'])\n\n# Set the x-axis label\nax.set_xlabel('Iteration')\n\n# Set the y-axis label\nax.set_ylabel('Score')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_78.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 10))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the title of the plot\nax.set_title('Sales Growth Over Time')\n\n# Set the x-axis label\nax.set_xlabel('Quarter')\n\n# Set the y-axis label\nax.set_ylabel('Sales Growth')\n\n# Create a scatter plot with red dots for each data point\nax.scatter(range(1, 5), [2.3, 2.1, 2.4, 2.6], c='red', marker='o')\n\n# Add a legend to the plot\nax.legend(['Brand A Sales Growth'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_79.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(2, 3, figsize=(18, 6))\n\n# Set the title for each subplot\naxs[0, 0].set_title('Traffic Performance')\naxs[0, 1].set_title('ETMm2 Performance')\naxs[0, 2].set_title('ETTh2 Performance')\naxs[1, 0].set_title('ECL Performance')\naxs[1, 1].set_title('ECL Performance')\naxs[1, 2].set_title('ECL Performance')\n\n# Create a scatter plot for each subplot\naxs[0, 0].scatter([100, 300, 500, 700], [1.2, 1.1, 1.0, 0.9], color='blue')\naxs[0, 1].scatter([100, 300, 500, 700], [1.2, 1.1, 1.0, 0.9], color='orange')\naxs[0, 2].scatter([100, 300, 500, 700], [1.2, 1.1, 1.0, 0.9], color='blue')\naxs[1, 0].scatter([100, 300, 500, 700], [1.2, 1.1, 1.0, 0.9], color='orange')\naxs[1, 1].scatter([100, 300, 500, 700], [1.2, 1.1, 1.0, 0.9], color='blue')\naxs[1, 2].scatter([100, 300, 500, 700], [1.2, 1.1, 1.0, 0.9], color='orange')\n\n# Add a legend to the first subplot\naxs[0, 0].legend(['ECL Run 1', 'ECL Run 2'], loc='upper left')\n\n# Add a grid to the subplots\nfor ax in axs.flat:\n    ax.grid(True)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Relaxation Level')\n\n# Set the x-axis label\nax.set_xlabel('Driving Style')\n\n# Set the y-axis label\nax.set_ylabel('Relaxation Level')\n\n# Define the data for the plot\ndriving_styles = ['Passive', 'Racing', 'Recovery', 'Sportive']\nrelaxation_levels = [14, 12, 10, 8]\n\n# Plot the data\nax.plot(driving_styles, relaxation_levels, 'ro-')\n\n# Add a legend\nax.legend(['Weather', 'Dry', 'Rain'])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_80.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the plot\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('pink')\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Add a title to the plot\nax.set_title('Category A Growth')\n\n# Add labels to the x and y axes\nax.set_xlabel('Phase')\nax.set_ylabel('Cumulative Value')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(4, 30)\n\n# Set the y-axis limits\nax.set_ylim(10, 15)\n\n# Set the x-axis ticks\nax.set_xticks([4, 6, 10, 20, 30])\n\n# Set the y-axis ticks\nax.set_yticks([10, 12, 14, 15])\n\n# Set the x-axis labels\nax.set_xticklabels(['4\u00d710^0', '6\u00d710^0', '10^1', '2\u00d710^1', '3\u00d710^1'])\n\n# Set the y-axis labels\nax.set_yticklabels(['10^1', '12^1', '14^1', '15^1'])\n\n# Set the title of the plot\nax.set_title('Stock Price Prediction')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', labelcolor='blue')\n\n# Set the color of the plot area\nax.set_facecolor('lightgray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('green')\nax.spines['top'].set_color('green')\nax.spines['right'].set_color('green')\nax.spines['left'].set_color('green')\n\n# Set the color of the plot title\nax.title.set_color('purple')\n\n# Set the color of the plot legend\nax.legend().get_texts()[0].set_color('orange')\n\n# Set the color of the plot annotations\nax.annotate('Annotation 1', xy=(10, 12), xytext=(15, 14),\n            arrowprops=dict(facecolor='black', shrink=0.05))\n\n# Set the color of the plot text\nax.text(15, 13, 'Text 1', fontsize=12, color='brown')\n\n# Set the color of the plot line\nax.plot([4, 6, 10, 20, 30], [10, 12, 14, 15, 16], 'r-')\n\n# Set the color of the plot markers\nax.plot([4, 6, 10, 20, 30], [10, 12, 14, 15, 16], 'ro')\n\n# Set the color of the plot fill\nax.fill_between([4, 6, 10, 20, 30], [10, 12, 14, 15, 16], [11, 13, 15, 16, 17], color='yellow')\n\n# Set the color of the plot scatter\nax.scatter([4, 6, 10, 20, 30], [10, 12, 14, 15, 16], color='cyan')\n\n# Set the color of the plot bar\nax.bar([4, 6, 10, 20, 30], [10, 12, 14, 15, 16], color='magenta')\n\n# Set the color of the plot pie\nax.pie([10, 12, 14, 15, 16], colors=['red', 'green', 'blue', 'yellow', 'cyan'], startangle=90)\n\n# Set the color of the plot histogram\nax.hist([10, 12, 14, 15, 16], bins=5, color='orange')\n\n# Set the color of the plot boxplot\nax.boxplot([10, 12, 14, 15, 16], vert=False, patch_artist=True, boxprops=dict(facecolor='blue'))\n\n# Set the color of the plot violin plot\nax.violinplot([10, 12, 14, 15, 16], showmeans=True, showmedians=True, showextrema=True)\n\n# Set the color of the plot heatmap\nax.imshow([[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]], cmap='hot', interpolation='nearest')\n\n# Set the color of the plot contour plot\nax.contourf([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]], cmap='coolwarm')\n\n# Set the color of the plot stream plot\nax.streamplot([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot quiver plot\nax.quiver([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot polar plot\nax.polar([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot 3D plot\nax.plot_surface([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot 3D scatter plot\nax.scatter3D([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot 3D bar plot\nax.bar3d([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot 3D pie plot\nax.pie3D([10, 12, 14, 15, 16], colors=['red', 'green', 'blue', 'yellow', 'cyan'], startangle=90)\n\n# Set the color of the plot 3D histogram\nax.hist3D([10, 12, 14, 15, 16], bins=5, color='orange')\n\n# Set the color of the plot 3D contour plot\nax.contour3D([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]], cmap='coolwarm')\n\n# Set the color of the plot 3D stream plot\nax.streamplot3D([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot 3D quiver plot\nax.quiver3D([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot 3D polar plot\nax.polar3D([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot 3D 3D plot\nax.plot_surface3D([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot 3D 3D scatter plot\nax.scatter3D([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot 3D 3D bar plot\nax.bar3D([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot 3D 3D pie plot\nax.pie3D([10, 12, 14, 15, 16], colors=['red', 'green', 'blue', 'yellow', 'cyan'], startangle=90)\n\n# Set the color of the plot 3D 3D histogram\nax.hist3D([10, 12, 14, 15, 16], bins=5, color='orange')\n\n# Set the color of the plot 3D 3D contour plot\nax.contour3D([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]], cmap='coolwarm')\n\n# Set the color of the plot 3D 3D stream plot\nax.streamplot3D([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot 3D 3D quiver plot\nax.quiver3D([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot 3D 3D polar plot\nax.polar3D([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot 3D 3D 3D plot\nax.plot_surface3D([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot 3D 3D 3D scatter plot\nax.scatter3D([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot 3D 3D 3D bar plot\nax.bar3D([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot 3D 3D 3D pie plot\nax.pie3D([10, 12, 14, 15, 16], colors=['red', 'green', 'blue', 'yellow', 'cyan'], startangle=90)\n\n# Set the color of the plot 3D 3D 3D histogram\nax.hist3D([10, 12, 14, 15, 16], bins=5, color='orange')\n\n# Set the color of the plot 3D 3D 3D contour plot\nax.contour3D([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]], cmap='coolwarm')\n\n# Set the color of the plot 3D 3D 3D stream plot\nax.streamplot3D([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot 3D 3D 3D quiver plot\nax.quiver3D([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot 3D 3D 3D polar plot\nax.polar3D([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot 3D 3D 3D 3D plot\nax.plot_surface3D([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot 3D 3D 3D 3D scatter plot\nax.scatter3D([10, 12, 14, 15, 16], [11, 13, 15, 16, 17], [[10, 12, 14, 15, 16], [11, 13, 15, 16, 17]])\n\n# Set the color of the plot 3D 3D 3D 3D bar plot\nax.bar3D([10, 12"}
{"file": "dataset/ori_500/multidiff_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis for the map\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Create a rectangle for the map\nax.add_patch(plt.Rectangle((0, 0), 1, 1, color='lightblue'))\n\n# Add text to the map\nax.text(0.5, 0.5, 'Map', ha='center', va='center')\n\n# Create a pie chart for the literacy rate by region\nfig, ax = plt.subplots(figsize=(5, 5))\nlabels = ['North', 'East', 'South', 'West']\nsizes = [35, 25, 20, 15]\ncolors = ['cyan', 'yellow', 'magenta', 'green']\nexplode = (0.1, 0, 0, 0)  # explode 1st slice\n\nax.pie(sizes, explode=explode, labels=labels, colors=colors,\nautopct='%1.1f%%', shadow=True, startangle=140)\n\nax.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\n# Add text to the pie chart\nax.text(0.5, 0.5, 'Literacy Rate by Region', ha='center', va='center')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 2.0))\n\n# Set the title of the plot\nax.set_title('Beauty Product Ratings')\n\n# Create a bar chart with the data\nax.bar(['PaleSkin', 'OvalFace', 'Smiling', 'BrownHair', 'Attractive'], [1.5, 1.3, 1.2, 1.1, 1.0], color='blue')\n\n# Set the x-axis label\nax.set_xlabel('Product')\n\n# Set the y-axis label\nax.set_ylabel('Rating')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nengr = [44.15, 44.05, 41.55, 40.90, 40.65, 39.45, 36.70]\nzhang = [44.15, 44.05, 41.55, 40.90, 40.65, 39.45, 36.70]\nrice = [44.15, 44.05, 41.55, 40.90, 40.65, 39.45, 36.70]\nrade = [44.15, 44.05, 41.55, 40.90, 40.65, 39.45, 36.70]\nhendry = [44.15, 44.05, 41.55, 40.90, 40.65, 39.45, 36.70]\naddep = [44.15, 44.05, 41.55, 40.90, 40.65, 39.45, 36.70]\ncarmon = [44.15, 44.05, 41.55, 40.90, 40.65, 39.45, 36.70]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Plot the data\nax.plot(engr, label='Engstrom (M1)')\nax.plot(zhang, label='Zhang (M2)')\nax.plot(rice, label='Rice (M3)')\nax.plot(rade, label='Rade (M4)')\nax.plot(hendry, label='Hendryks (M5)')\nax.plot(addep, label='Addep. (M6)')\nax.plot(carmon, label='Carmon (M7)')\n\n# Set the title and labels\nax.set_title('Robust Error (%)')\nax.set_xlabel('Time (s)')\nax.set_ylabel('Error (%)')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\ndata = {\n    'VGG16': [0.551, 0.538, 0.744, 0.762],\n    'Resnet101': [0.744, 0.394, 0.477, 0.662],\n    'Rotation Invariance': [0.8, 0.85, 0.9, 0.95, 1.0]\n}\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 3, figsize=(10, 4))\n\n# Plot the data\nfor i, (key, value) in enumerate(data.items()):\n    axs[i].plot(value, label=key)\n    axs[i].legend()\n    axs[i].set_xlabel('Time')\n    axs[i].set_ylabel('Accuracy')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the colorbar\ncmap = plt.get_cmap('coolwarm')\nnorm = plt.Normalize(vmin=-0.5, vmax=1.5)\nsm = plt.cm.ScalarMappable(cmap=cmap, norm=norm)\nsm.set_array([])\n\n# Add the colorbar to the figure\nfig.colorbar(sm, ax=ax)\n\n# Set the title of the plot\nax.set_title('Color Palette')\n\n# Set the x-axis label\nax.set_xlabel('Attribute')\n\n# Set the y-axis label\nax.set_ylabel('Intensity')\n\n# Set the x-ticks\nax.set_xticks(np.arange(-0.5, 1.5, 0.5))\nax.set_yticks(np.arange(-0.5, 1.5, 0.5))\n\n# Set the x-tick labels\nax.set_xticklabels(['PaleSkin', 'OvalFace', 'Smiling', 'BrownHair', 'Attractive', 'Male', 'BigLips', 'PointyNose', 'White', 'BigNose', 'NoBeard', 'HeavyMakeup'])\n\n# Set the y-tick labels\nax.set_yticklabels(['Light', 'Medium', 'Dark'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 6.0))\n\n# Set the title of the plot\nax.set_title('a')\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Create a line plot with random data\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\nax.plot(x, y)\n\n# Create a bar chart with random data\nx = ['A', 'B', 'C', 'D', 'E']\ny = [1, 2, 3, 4, 5]\nax.bar(x, y)\n\n# Create a histogram with random data\nx = np.random.randn(1000)\nax.hist(x, bins=30)\n\n# Create a pie chart with random data\nx = [1, 2, 3, 4, 5]\nlabels = ['A', 'B', 'C', 'D', 'E']\nax.pie(x, labels=labels)\n\n# Create a heatmap with random data\nx = np.random.rand(10, 10)\nax.imshow(x, cmap='hot', interpolation='nearest')\n\n# Create a contour plot with random data\nx = np.linspace(-10, 10, 100)\ny = np.linspace(-10, 10, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nCS = ax.contourf(X, Y, Z)\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Create a line plot with random data\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\nax.plot(x, y)\n\n# Create a bar chart with random data\nx = ['A', 'B', 'C', 'D', 'E']\ny = [1, 2, 3, 4, 5]\nax.bar(x, y)\n\n# Create a histogram with random data\nx = np.random.randn(1000)\nax.hist(x, bins=30)\n\n# Create a pie chart with random data\nx = [1, 2, 3, 4, 5]\nlabels = ['A', 'B', 'C', 'D', 'E']\nax.pie(x, labels=labels)\n\n# Create a heatmap with random data\nx = np.random.rand(10, 10)\nax.imshow(x, cmap='hot', interpolation='nearest')\n\n# Create a contour plot with random data\nx = np.linspace(-10, 10, 100)\ny = np.linspace(-10, 10, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nCS = ax.contourf(X, Y, Z)\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Create a line plot with random data\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\nax.plot(x, y)\n\n# Create a bar chart with random data\nx = ['A', 'B', 'C', 'D', 'E']\ny = [1, 2, 3, 4, 5]\nax.bar(x, y)\n\n# Create a histogram with random data\nx = np.random.randn(1000)\nax.hist(x, bins=30)\n\n# Create a pie chart with random data\nx = [1, 2, 3, 4, 5]\nlabels = ['A', 'B', 'C', 'D', 'E']\nax.pie(x, labels=labels)\n\n# Create a heatmap with random data\nx = np.random.rand(10, 10)\nax.imshow(x, cmap='hot', interpolation='nearest')\n\n# Create a contour plot with random data\nx = np.linspace(-10, 10, 100)\ny = np.linspace(-10, 10, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nCS = ax.contourf(X, Y, Z)\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Create a line plot with random data\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\nax.plot(x, y)\n\n# Create a bar chart with random data\nx = ['A', 'B', 'C', 'D', 'E']\ny = [1, 2, 3, 4, 5]\nax.bar(x, y)\n\n# Create a histogram with random data\nx = np.random.randn(1000)\nax.hist(x, bins=30)\n\n# Create a pie chart with random data\nx = [1, 2, 3, 4, 5]\nlabels = ['A', 'B', 'C', 'D', 'E']\nax.pie(x, labels=labels)\n\n# Create a heatmap with random data\nx = np.random.rand(10, 10)\nax.imshow(x, cmap='hot', interpolation='nearest')\n\n# Create a contour plot with random data\nx = np.linspace(-10, 10, 100)\ny = np.linspace(-10, 10, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nCS = ax.contourf(X, Y, Z)\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Create a line plot with random data\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\nax.plot(x, y)\n\n# Create a bar chart with random data\nx = ['A', 'B', 'C', 'D', 'E']\ny = [1, 2, 3, 4, 5]\nax.bar(x, y)\n\n# Create a histogram with random data\nx = np.random.randn(1000)\nax.hist(x, bins=30)\n\n# Create a pie chart with random data\nx = [1, 2, 3, 4, 5]\nlabels = ['A', 'B', 'C', 'D', 'E']\nax.pie(x, labels=labels)\n\n# Create a heatmap with random data\nx = np.random.rand(10, 10)\nax.imshow(x, cmap='hot', interpolation='nearest')\n\n# Create a contour plot with random data\nx = np.linspace(-10, 10, 100)\ny = np.linspace(-10, 10, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nCS = ax.contourf(X, Y, Z)\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Create a line plot with random data\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\nax.plot(x, y)\n\n# Create a bar chart with random data\nx = ['A', 'B', 'C', 'D', 'E']\ny = [1, 2, 3, 4, 5]\nax.bar(x, y)\n\n# Create a histogram with random data\nx = np.random.randn(1000)\nax.hist(x, bins=30)\n\n# Create a pie chart with random data\nx = [1, 2, 3, 4, 5]\nlabels = ['A', 'B', 'C', 'D', 'E']\nax.pie(x, labels=labels)\n\n# Create a heatmap with random data\nx = np.random.rand(10, 10)\nax.imshow(x, cmap='hot', interpolation='nearest')\n\n# Create a contour plot with random data\nx = np.linspace(-10, 10, 100)\ny = np.linspace(-10, 10, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nCS = ax.contourf(X, Y, Z)\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Create a line plot with random data\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\nax.plot(x, y)\n\n# Create a bar chart with random data\nx = ['A', 'B', 'C', 'D', 'E']\ny = [1, 2, 3, 4, 5]\nax.bar(x, y)\n\n# Create a histogram with random data\nx = np.random.randn(1000)\nax.hist(x, bins=30)\n\n# Create a pie chart with random data\nx = [1, 2, 3, 4, 5]\nlabels = ['A', 'B', 'C', 'D', 'E']\nax.pie(x, labels=labels)\n\n# Create a heatmap with random data\nx = np.random.rand(10, 10)\nax.imshow(x, cmap='hot', interpolation='nearest')\n\n# Create a contour plot with random data\nx = np.linspace(-10, 10, 100)\ny = np.linspace(-10, 10, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nCS = ax.contourf(X, Y, Z)\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Create a line plot with random data\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\nax.plot(x, y)\n\n# Create a bar chart with random data\nx = ['A', 'B', 'C', 'D', 'E']\ny = [1, 2, 3, 4, 5]\nax.bar(x, y)\n\n# Create a histogram with random data\nx = np.random.randn(1000)\nax.hist(x, bins=30)\n\n# Create a pie chart with random data\nx = [1, 2, 3, 4, 5]\nlabels = ['A', 'B', 'C', 'D', 'E']\nax.pie(x, labels=labels)\n\n# Create a heatmap with random data\nx = np.random.rand(10, 10)\nax.imshow(x, cmap='hot', interpolation='nearest')\n\n# Create a contour plot with random data\nx = np.linspace(-10, 10, 100)\ny = np.linspace(-10, 10, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nCS = ax.contourf(X, Y, Z)\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Create a line plot with random data\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\nax.plot(x, y)\n\n# Create a bar chart with random data\nx = ['A', 'B', 'C', 'D', 'E']\ny = [1, 2, 3, 4, 5]\nax.bar(x, y)\n\n# Create a histogram with random data\nx = np.random.randn(1000)\nax.hist(x, bins=30)\n\n# Create a pie chart with random data\nx = [1, 2, 3, 4, 5]\nlabels = ['A', 'B', 'C', 'D', 'E']\nax.pie(x, labels=labels)\n\n# Create a heatmap with random data\nx = np.random.rand(10, 10)\nax.imshow(x, cmap='hot', interpolation='nearest')\n\n# Create a contour plot with random data\nx = np.linspace(-10, 10, 100)\ny = np.linspace(-10, 10, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nCS = ax.contourf(X, Y, Z)\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Create a line plot with random data\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\nax.plot(x, y)\n\n# Create a bar chart with random data\nx = ['A', 'B', 'C', 'D', 'E']\ny = [1, 2, 3, 4, 5]\nax.bar(x, y)\n\n# Create a histogram with random data\nx = np.random.randn(1000)\nax.hist(x, bins=30)\n\n# Create a pie chart with random data\nx = [1, 2, 3, 4, 5]\nlabels = ['A', 'B', 'C', 'D', 'E']\nax.pie(x, labels=labels)\n\n# Create a heatmap with random data\nx = np.random.rand(10, 10)\nax.imshow(x, cmap='hot', interpolation='nearest')\n\n# Create a contour plot with random data\nx = np.linspace(-10, 10, 100)\ny = np.linspace(-10, 10, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nCS = ax.contourf(X, Y, Z)\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Create a line plot with random data\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\nax.plot(x, y)\n\n# Create a bar chart with random data\nx = ['A', 'B', 'C', 'D', 'E']\ny = [1, 2, 3, 4, 5]\nax.bar(x, y)\n\n# Create a histogram with random data\nx = np.random.randn(1000)\nax.hist(x, bins=30)\n\n# Create a pie chart with random data\nx = [1, 2, 3, 4, 5]\nlabels = ['A', 'B', 'C', 'D', 'E']\nax.pie(x, labels=labels)\n\n# Create a heatmap with random data\nx = np.random.rand(10, 10)\nax.imshow(x, cmap='hot', interpolation='nearest')\n\n# Create a contour plot with random data\nx = np.linspace(-10, 10, 100)\ny = np.linspace(-10, 10, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nCS = ax.contourf(X, Y, Z)\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Create a line plot with random data\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\nax.plot(x, y)\n\n# Create a bar chart with random data\nx = ['A', 'B', 'C', 'D', 'E']\ny = [1, 2, 3, 4, 5]\nax.bar(x, y)\n\n# Create a histogram with random data\nx = np.random.randn(1000)\nax.hist(x, bins=30)\n\n# Create a pie chart with random data\nx = [1, 2, 3, 4, 5]\nlabels = ['A', 'B', 'C', 'D', 'E']\nax.pie(x, labels=labels)\n\n# Create a heatmap with random data\nx = np.random.rand(10, 10)\nax.imshow(x, cmap='hot', interpolation='nearest')\n\n# Create a contour plot with random data\nx = np.linspace(-10, 10, 100)\ny = np.linspace(-10, 10, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nCS = ax.contourf(X, Y, Z)\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Create a line plot with random data\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\nax.plot(x, y)\n\n# Create a bar chart with random data\nx = ['A', 'B', 'C', 'D', 'E']\ny = [1, 2, 3, 4, 5]\nax.bar(x, y)\n\n# Create a histogram with random data\nx = np.random.randn(1000)\nax.hist(x, bins=30)\n\n# Create a pie chart with random data\nx = [1, 2, 3, 4, 5]\nlabels = ['A', 'B', 'C', 'D', 'E']\nax.pie(x, labels=labels)\n\n# Create a heatmap with random data\nx = np.random.rand(10, 10)\nax.imshow(x, cmap='hot', interpolation='nearest')\n\n# Create a contour plot with random data\nx = np.linspace(-10, 10, 100)\ny = np.linspace(-10, 10, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\n"}
{"file": "dataset/ori_500/multidiff_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 4))\n\n# Set the color of the background\nax.set_facecolor('lightblue')\n\n# Set the title of the graph\nax.set_title('Sentiment Analysis of News Articles')\n\n# Set the x-axis label\nax.set_xlabel('News Article')\n\n# Set the y-axis label\nax.set_ylabel('Sentiment Score')\n\n# Create a bar chart\nx = ['Sentiment', 'Toxicity', 'News']\ny = [0.35, 0.25, 0.25]\nax.bar(x, y, color='darkblue')\n\n# Add a color bar\ncmap = plt.get_cmap('coolwarm')\nnorm = plt.Normalize(vmin=-1, vmax=1)\nsm = plt.cm.ScalarMappable(cmap=cmap, norm=norm)\nsm.set_array([])\nfig.colorbar(sm)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 8))\n\n# Set the title of the plot\nax.set_title('Success Rate of Adversarial Circuits')\n\n# Set the x-axis label\nax.set_xlabel('Year')\n\n# Set the y-axis label\nax.set_ylabel('# Successful adv. circuits')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3])\nax.set_xticklabels(['c1355', 'c1908', 'c2670', 'c3540'])\n\n# Set the y-ticks\nax.set_yticks([0, 10, 20, 30, 40, 50, 60])\n\n# Set the y-limits\nax.set_ylim(0, 60)\n\n# Set the x-limits\nax.set_xlim(-1, 4)\n\n# Draw a rectangle for each year\nrects = [ax.bar(i, 50, color='blue') for i in range(4)]\n\n# Draw a horizontal line for the upper success threshold\nax.axhline(y=55, color='r', linestyle='-')\n\n# Draw a horizontal line for the lower success threshold\nax.axhline(y=45, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.5, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.35, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.45, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.4, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.55, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.65, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.75, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.85, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.95, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.9, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.8, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.7, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.6, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.5, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.4, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.35, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.45, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.55, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.65, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.75, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.85, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.95, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.9, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.8, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.7, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.6, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.5, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.4, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.35, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.45, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.55, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.65, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.75, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.85, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.95, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.9, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.8, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.7, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.6, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.5, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.4, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.35, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.45, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.55, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.65, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.75, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.85, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.95, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.9, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.8, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.7, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.6, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.5, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.4, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.35, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.45, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.55, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.65, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.75, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.85, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.95, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.9, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.8, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.7, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.6, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.5, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.4, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.35, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.45, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.55, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.65, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.75, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.85, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.95, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.9, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.8, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.7, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.6, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.5, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.4, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.35, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.45, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.55, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.65, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.75, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.85, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.95, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.9, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.8, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.7, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.6, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.5, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.4, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.35, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.45, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.55, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.65, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.75, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.85, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.95, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.9, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.8, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.7, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.6, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.5, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.4, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.35, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.45, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.55, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.65, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.75, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.85, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.95, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.9, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.8, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.7, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.6, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.5, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.4, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.35, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.45, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.55, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.65, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axhline(y=0.75, color='r', linestyle='-')\n\n# Draw a horizontal line for the OMLA KPA\nax.axh"}
{"file": "dataset/ori_500/multidiff_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the first plot\nfig, ax = plt.subplots(figsize=(10, 4))\n\n# Create a bar chart with the data\nax.bar(['Education', 'Law', 'Technology', 'History', 'Geography', 'Humanities', 'Finance'], [250, 180, 300, 120, 150, 170, 220], color='blue')\n\n# Set the title of the plot\nax.set_title('Number of Publications by Domain')\n\n# Create a second figure and axis for the second plot\nfig2, ax2 = plt.subplots(figsize=(10, 4))\n\n# Create a line chart with the data\nx = np.linspace(0, 5, 100)\ny = np.sin(x)\nax2.plot(x, y, color='orange')\n\n# Set the title of the plot\nax2.set_title('Cumulative Knowledge Increase by Subject Area')\n\n# Create a third figure and axis for the third plot\nfig3, ax3 = plt.subplots(figsize=(10, 4))\n\n# Create a scatter plot with the data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax3.scatter(x, y, color='yellow')\n\n# Set the title of the plot\nax3.set_title('Study Level')\n\n# Display the plots\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 10.0))\n\n# Set the title of the graph\nax.set_title('Technological Advancements')\n\n# Set the x-axis label\nax.set_xlabel('Year')\n\n# Set the y-axis label\nax.set_ylabel('Progress (%)')\n\n# Set the x-ticks\nax.set_xticks([2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022])\n\n# Set the y-ticks\nax.set_yticks([0, 20, 40, 60, 80, 100, 120])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the legend\nax.legend().get_texts()[0].set_color('blue')\n\n# Set the color of the bars\nax.bar([2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022], [10, 20, 30, 40, 50, 60, 70, 80], color='blue')\n\n# Set the color of the line\nax.plot([2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022], [10, 20, 30, 40, 50, 60, 70, 80], color='orange')\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2015, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2016, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2017, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2018, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2019, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2020, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2021, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2022, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2015, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2016, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2017, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2018, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2019, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2020, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2021, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2022, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2015, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2016, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2017, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2018, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2019, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2020, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2021, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2022, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2015, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2016, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2017, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2018, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2019, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2020, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2021, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2022, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2015, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2016, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2017, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2018, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2019, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2020, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2021, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2022, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2015, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2016, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2017, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2018, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2019, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2020, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2021, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2022, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2015, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2016, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2017, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2018, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2019, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2020, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2021, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2022, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2015, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2016, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2017, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2018, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2019, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2020, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2021, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2022, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2015, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2016, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2017, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2018, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2019, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2020, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2021, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2022, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2015, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2016, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2017, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2018, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2019, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2020, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2021, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2022, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2015, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2016, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2017, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2018, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2019, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2020, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2021, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2022, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2015, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2016, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2017, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2018, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2019, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2020, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2021, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2022, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2015, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2016, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2017, 0), 1, 100, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2018, 0), 1, 100, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2019, 0), 1, 100, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2020"}
{"file": "dataset/ori_500/multidiff_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 10.0))\n\n# Set the title of the graph\nax.set_title('Average Legal Crime Rates by Country')\n\n# Create a bar chart with the data\nax.bar(['USA', 'UK', 'Germany', 'France', 'Italy', 'Spain'], [3.2, 2.9, 2.5, 2.7, 2.4, 2.6], color='orange')\n\n# Set the x-axis label\nax.set_xlabel('Country')\n\n# Set the y-axis label\nax.set_ylabel('Crime Rate per 100,000 Inhabitants')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis for the bar chart\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the chart\nax.set_title('Student Performance in Schools')\n\n# Create a bar chart with the data\nax.bar(['Public School', 'Private School'], [80, 60], color='blue')\n\n# Create a second bar chart with the data\nax.bar(['Public School', 'Private School'], [70, 50], color='orange')\n\n# Create a third bar chart with the data\nax.bar(['Public School', 'Private School'], [60, 40], color='red')\n\n# Create a fourth bar chart with the data\nax.bar(['Public School', 'Private School'], [50, 30], color='green')\n\n# Create a fifth bar chart with the data\nax.bar(['Public School', 'Private School'], [40, 20], color='purple')\n\n# Create a sixth bar chart with the data\nax.bar(['Public School', 'Private School'], [30, 10], color='brown')\n\n# Create a seventh bar chart with the data\nax.bar(['Public School', 'Private School'], [20, 0], color='pink')\n\n# Create a pie chart with the data\nfig, ax = plt.subplots(figsize=(10, 5))\nax.pie([20, 10, 15, 10, 5, 5, 5], labels=['Books', 'Staff', 'Extracurricular', 'Facilities', 'Technology', 'Sports', 'Food'], autopct='%1.1f%%', startangle=90)\nax.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the map\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Create a scatter plot for the map\nax.scatter([100, 200, 300], [100, 200, 300], c='blue')\n\n# Set the title of the map\nax.set_title('Geographical Elevation Distribution')\n\n# Set the x and y labels\nax.set_xlabel('Elevation (m)')\nax.set_ylabel('Density')\n\n# Create a figure and axis for the temperature graph\nfig2, ax2 = plt.subplots(figsize=(10, 5))\n\n# Create a bar chart for the temperature graph\nax2.bar(['Region 1', 'Region 2'], [20, 25], color='lightblue')\n\n# Set the title of the temperature graph\nax2.set_title('Average Annual Temperature')\n\n# Set the x and y labels\nax2.set_xlabel('Region')\nax2.set_ylabel('Temperature (\u00b0C)')\n\n# Display the plots\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data for the graph\nyears = ['2019', '2020', '2021', '2022']\naccounts = [400, 350, 300, 250]\nproducts = ['Savings', 'CDs', 'Stocks', 'Bonds', 'Real Estate', 'Mutual Funds', 'ETFs']\namounts = [200, 175, 150, 125, 100, 75, 50]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Plot the data\nax.plot(years, accounts, color='blue')\nax.bar(products, amounts, color='green')\n\n# Set the title and labels\nax.set_title('Investment Growth Over Time')\nax.set_xlabel('Year')\nax.set_ylabel('Number of Accounts (%)')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_22.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis for the first plot\nfig, ax = plt.subplots(figsize=(10, 10))\nax.set_title('AI Task Success Rates')\nax.set_xlabel('Algorithms')\nax.set_ylabel('Success Rate (%)')\n\n# Create a bar chart with rectangles\nrects = ax.bar(['Image Recog.', 'Speech Recog.', 'Language Proc.', 'Game AI'], [85, 90, 95, 92], color='skyblue')\n\n# Add text labels above each bar\nfor rect in rects:\n    height = rect.get_height()\n    ax.annotate('{}'.format(height),\n                xy=(rect.get_x() + rect.get_width() / 2, height),\n                xytext=(0, 3),  # 3 points vertical offset\n                textcoords=\"offset points\",\n                ha='center', va='bottom')\n\n# Create a second figure and axis for the second plot\nfig, ax = plt.subplots(figsize=(10, 10))\nax.set_title('Algorithm Efficiency Scores')\nax.set_xlabel('Algorithms')\nax.set_ylabel('Efficiency (%)')\n\n# Create a scatter plot with circles\ncircles = ax.scatter(['Alg1', 'Alg2', 'Alg3', 'Alg4'], [90, 85, 95, 92], color='pink')\n\n# Add text labels above each circle\nfor i, txt in enumerate(['Alg1', 'Alg2', 'Alg3', 'Alg4']):\n    ax.annotate(txt,\n                xy=(i, 95),\n                xytext=(0, 3),  # 3 points vertical offset\n                textcoords=\"offset points\",\n                ha='center', va='bottom')\n\n# Create a third figure and axis for the third plot\nfig, ax = plt.subplots(figsize=(10, 10))\nax.set_title('AI Model Adaptability')\nax.set_xlabel('Models')\nax.set_ylabel('Adaptability Score (%)')\n\n# Create a line graph with lines\nlines = ax.plot(['Model A', 'Model B', 'Model C', 'Model D'], [95, 90, 85, 80], color='green')\n\n# Add text labels above each line\nfor i, txt in enumerate(['Model A', 'Model B', 'Model C', 'Model D']):\n    ax.annotate(txt,\n                xy=(i, 95),\n                xytext=(0, 3),  # 3 points vertical offset\n                textcoords=\"offset points\",\n                ha='center', va='bottom')\n\n# Create a fourth figure and axis for the conditions\nfig, ax = plt.subplots(figsize=(10, 10))\nax.set_title('Conditions')\nax.set_xlabel('Conditions')\nax.set_ylabel('Score (%)')\n\n# Create a bar chart with rectangles\nrects = ax.bar(['Dry Conditions', 'Wet Conditions'], [90, 85], color='green')\n\n# Add text labels above each bar\nfor rect in rects:\n    height = rect.get_height()\n    ax.annotate('{}'.format(height),\n                xy=(rect.get_x() + rect.get_width() / 2, height),\n                xytext=(0, 3),  # 3 points vertical offset\n                textcoords=\"offset points\",\n                ha='center', va='bottom')\n\n# Display the plots\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_23.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the map\nfig, ax = plt.subplots(figsize=(10, 10))\n\n# Define the locations and their coordinates\nlocations = ['Urban', 'Highway']\nx = [20, 80]\ny = [50, 50]\n\n# Plot the locations on the map\nfor i in range(len(locations)):\n    ax.plot(x[i], y[i], 'bo')\n    ax.annotate(locations[i], (x[i], y[i]), textcoords=\"offset points\", xytext=(0,10), ha='center')\n\n# Draw a line between the locations\nax.plot([x[0], x[1]], [y[0], y[1]], 'k-')\n\n# Set the limits of the axes\nax.set_xlim(0, 100)\nax.set_ylim(0, 100)\n\n# Set the title of the map\nax.set_title('Traffic Volume by Time of Day')\n\n# Add a color bar to the map\ncbar = fig.colorbar(ax.imshow(np.random.rand(10, 10), cmap='viridis'))\n\n# Display the map\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis for the pie chart\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Define the data for the pie chart\narts = ['Literature', 'Performing Arts', 'Visual Arts']\npercentages = [10, 30, 25]\n\n# Create a pie chart with the data\nwedges, texts, autotexts = ax.pie(percentages, labels=arts, autopct='%1.1f%%', startangle=90)\n\n# Set the title of the pie chart\nax.set_title('Distribution of Arts Education Programs')\n\n# Display the pie chart\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_25.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the sales graph\nfig, ax = plt.subplots(figsize=(10, 5))\nax.set_xlabel('Sale Probability')\nax.set_ylabel('Number of Sales')\nax.set_title('Sales Graph')\n\n# Create a bar chart for the sales data\nsales_data = [25000, 20000, 15000, 10000, 5000]\nsales_probabilities = [0.0, 0.1, 0.2, 0.3, 0.4, 0.5]\nax.bar(sales_probabilities, sales_data, color='green')\n\n# Create a rectangle for the legend\nrect = plt.Rectangle((0, 0), 1, 1, fc=\"yellow\")\nax.text(0.1, 0.9, 'Known Sales', transform=ax.transAxes)\nrect = plt.Rectangle((0, 0), 1, 1, fc=\"blue\")\nax.text(0.1, 0.8, 'Unknown Sales', transform=ax.transAxes)\n\n# Create a figure and axis for the regions graph\nfig, ax = plt.subplots(figsize=(10, 5))\nax.set_xlabel('Region')\nax.set_ylabel('User Ratings')\nax.set_title('Regions Graph')\n\n# Create a bar chart for the regions data\nregions_data = [70, 60, 50, 40, 30]\nregions = ['Region 1', 'Region 2', 'Region 3', 'Region 4', 'Region 5']\nax.bar(regions, regions_data, color='red')\n\n# Create a rectangle for the legend\nrect = plt.Rectangle((0, 0), 1, 1, fc=\"blue\")\nax.text(0.1, 0.9, 'Product A', transform=ax.transAxes)\nrect = plt.Rectangle((0, 0), 1, 1, fc=\"green\")\nax.text(0.1, 0.8, 'Product B', transform=ax.transAxes)\nrect = plt.Rectangle((0, 0), 1, 1, fc=\"orange\")\nax.text(0.1, 0.7, 'Product C', transform=ax.transAxes)\nrect = plt.Rectangle((0, 0), 1, 1, fc=\"gray\")\nax.text(0.1, 0.6, 'Product D', transform=ax.transAxes)\nrect = plt.Rectangle((0, 0), 1, 1, fc=\"cyan\")\nax.text(0.1, 0.5, 'Product E', transform=ax.transAxes)\nrect = plt.Rectangle((0, 0), 1, 1, fc=\"magenta\")\nax.text(0.1, 0.4, 'Product F', transform=ax.transAxes)\n\n# Create a figure and axis for the products graph\nfig, ax = plt.subplots(figsize=(10, 5))\nax.set_xlabel('Product')\nax.set_ylabel('User Ratings')\nax.set_title('Products Graph')\n\n# Create a bar chart for the products data\nproducts_data = [80, 70, 60, 50, 40, 30]\nproducts = ['Product A', 'Product B', 'Product C', 'Product D', 'Product E', 'Product F']\nax.bar(products, products_data, color='blue')\n\n# Create a rectangle for the legend\nrect = plt.Rectangle((0, 0), 1, 1, fc=\"green\")\nax.text(0.1, 0.9, 'Technology Products', transform=ax.transAxes)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the histogram\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Create a rectangle for the histogram\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='green')\nax.add_patch(rect)\n\n# Create a rectangle for the pie chart\ncircle = plt.Circle((0.5, 0.5), 0.4, color='red')\nax.add_artist(circle)\n\n# Set the limits of the x-axis and y-axis\nax.set_xlim(-0.6, 1.6)\nax.set_ylim(-0.1, 1.1)\n\n# Add a title to the histogram\nax.set_title('Histogram of Stock Returns')\n\n# Add a legend to the histogram\nax.legend(['Gains', 'Losses'], loc='upper right')\n\n# Create a second subplot for the investment clusters\nax2 = fig.add_subplot(122)\n\n# Create a scatter plot for the investment clusters\nx = np.random.rand(100)\ny = np.random.rand(100)\nax2.scatter(x, y, c='yellow')\n\n# Set the limits of the x-axis and y-axis\nax2.set_xlim(-0.1, 1.1)\nax2.set_ylim(-0.1, 1.1)\n\n# Add a title to the investment clusters\nax2.set_title('Investment Clusters')\n\n# Add a legend to the investment clusters\nax2.legend(['Tech Stocks', 'Energy Stocks'], loc='upper right')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the first plot\nfig, ax = plt.subplots(figsize=(8, 6))\nax.plot([0, 1, 2, 3, 4], [10, 9, 8, 7, 6], 'b-')\nax.set_xlabel('Relative Year')\nax.set_ylabel('Energy Consumption (GWh)')\nax.set_title('Energy Consumption Over Time')\n\n# Create a scatter plot with blue dots\nax.scatter([0, 1, 2, 3, 4], [10, 9, 8, 7, 6], color='blue')\n\n# Create a second figure and axis for the second plot\nfig2, ax2 = plt.subplots(figsize=(8, 6))\nax2.plot([0, 1, 2, 3, 4], [0.5, 0.6, 0.7, 0.8, 0.9], 'r-')\nax2.set_xlabel('Relative Month')\nax2.set_ylabel('Renewable Energy Ratio (%)')\nax2.set_title('Renewable Energy Ratio Over Time')\n\n# Create a scatter plot with red dots\nax2.scatter([0, 1, 2, 3, 4], [0.5, 0.6, 0.7, 0.8, 0.9], color='red')\n\n# Create a 3D plot\nfig3 = plt.figure(figsize=(8, 6))\nax3 = fig3.add_subplot(111, projection='3d')\nx = np.linspace(-4, 4, 100)\ny = np.linspace(-4, 4, 100)\nx, y = np.meshgrid(x, y)\nz = np.sin(np.sqrt(x**2 + y**2))\nax3.plot_surface(x, y, z, cmap='Blues')\nax3.set_xlabel('Relative Year')\nax3.set_ylabel('Relative Month')\nax3.set_zlabel('Renewable Energy Ratio (%)')\nax3.set_title('3D Renewable Energy Ratio')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the pie chart\nfig, ax = plt.subplots(figsize=(8, 8))\n\n# Data for the pie chart\nlabels = ['Ancient Scripts', 'Modern Records', 'Medieval Texts', 'Renaissance Literature']\nsizes = [15, 35, 30, 20]\ncolors = ['#ff9999','#66b3ff','#99ff99','#ffcc99']\n\n# Plot the pie chart\nwedges, texts, autotexts = ax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\n\n# Equal aspect ratio ensures that pie is drawn as a circle.\nax.axis('equal')  \n\n# Create a scatter plot for the document count over time\nfig, ax = plt.subplots(figsize=(10, 5))\nx = np.arange(400, 2001, 100)\ny = np.random.randint(100, 400, size=len(x))\nax.scatter(x, y, c='r')\n\n# Add labels to the scatter plot\nfor i, txt in enumerate(labels):\n    ax.annotate(txt, (x[i], y[i]))\n\n# Set the title of the scatter plot\nax.set_title('Document Count Over Historical Periods')\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('Year')\nax.set_ylabel('Number of Documents')\n\n# Set the x-axis and y-axis limits\nax.set_xlim([400, 2000])\nax.set_ylim([0, 450])\n\n# Show the plots\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the scatter plot\nx = [2000, 2005, 2010, 2015, 2020]\ny = [9.25, 9.00, 8.75, 8.50, 8.25]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Plot the data\nax.scatter(x, y)\n\n# Set the title and labels\nax.set_title('Luxury Brand Popularity vs Price')\nax.set_xlabel('Average Price ($)')\nax.set_ylabel('Popularity Index')\n\n# Add a legend\nlegend_elements = [plt.Line2D([0], [0], marker='o', color='w', label='Louis Vuitton', markerfacecolor='g', markersize=10),\n                    plt.Line2D([0], [0], marker='o', color='w', label='Chanel', markerfacecolor='c', markersize=10),\n                    plt.Line2D([0], [0], marker='o', color='w', label='Gucci', markerfacecolor='m', markersize=10),\n                    plt.Line2D([0], [0], marker='o', color='w', label='Dior', markerfacecolor='y', markersize=10),\n                    plt.Line2D([0], [0], marker='o', color='w', label='Prada', markerfacecolor='b', markersize=10)]\nax.legend(handles=legend_elements, loc='upper left')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data for the first graph\naccuracy = [75.32, 77.11, 77.03, 76.86, 75.34, 74.52]\nyears = [2020, 2021, 2022, 2023, 2024, 2025]\n\n# Data for the second graph\nrobustness = [60.5, 59.3, 58.35, 55.95, 55.5, 55.1, 54.7, 54.3, 53.9, 53.5, 53.1, 52.7, 52.3, 51.9, 51.5, 51.1, 50.7, 50.3, 50.0, 49.6, 49.2, 48.8, 48.4, 48.0, 47.6, 47.2, 46.8, 46.4, 46.0, 45.6, 45.2, 44.8, 44.4, 44.0, 43.6, 43.2, 42.8, 42.4, 42.0, 41.6, 41.2, 40.8, 40.4, 40.0, 39.6, 39.2, 38.8, 38.4, 38.0, 37.6, 37.2, 36.8, 36.4, 36.0, 35.6, 35.2, 34.8, 34.4, 34.0, 33.6, 33.2, 32.8, 32.4, 32.0, 31.6, 31.2, 30.8, 30.4, 30.0, 29.6, 29.2, 28.8, 28.4, 28.0, 27.6, 27.2, 26.8, 26.4, 26.0, 25.6, 25.2, 24.8, 24.4, 24.0, 23.6, 23.2, 22.8, 22.4, 22.0, 21.6, 21.2, 20.8, 20.4, 20.0, 19.6, 19.2, 18.8, 18.4, 18.0, 17.6, 17.2, 16.8, 16.4, 16.0, 15.6, 15.2, 14.8, 14.4, 14.0, 13.6, 13.2, 12.8, 12.4, 12.0, 11.6, 11.2, 10.8, 10.4, 10.0, 9.6, 9.2, 8.8, 8.4, 8.0, 7.6, 7.2, 6.8, 6.4, 6.0, 5.6, 5.2, 4.8, 4.4, 4.0, 3.6, 3.2, 2.8, 2.4, 2.0, 1.6, 1.2, 0.8, 0.4, 0.0]\nyears_robustness = [2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 7.0))\n\n# Plot the data\nax.plot(years, accuracy, 'r-', label='Accuracy (%)')\nax.plot(years_robustness, robustness, 'b-', label='Robustness (%)')\n\n# Set the title and labels\nax.set_title('Machine Learning Model Performance Over Time')\nax.set_xlabel('Year')\nax.set_ylabel('Performance (%)')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nx = [0, 5, 10, 15, 20, 25]\ny1 = [0.1, 0.3, 0.4, 0.6, 0.8, 0.9]\ny2 = [0.2, 0.4, 0.5, 0.7, 0.9, 1.0]\ny3 = [0.3, 0.5, 0.6, 0.8, 1.0, 1.1]\ny4 = [0.4, 0.6, 0.7, 0.9, 1.1, 1.2]\ny5 = [0.5, 0.7, 0.8, 1.0, 1.2, 1.3]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 9.0))\n\n# Plot the data\nax.plot(x, y1, 'b-', label='Random')\nax.plot(x, y2, 'g-', label='Sobol')\nax.plot(x, y3, 'r-', label='HCube')\nax.plot(x, y4, 'm-', label='No Context')\nax.plot(x, y5, 'c-', label='Partial Context')\n\n# Set the title and labels\nax.set_title('Monte Carlo Simulation Results')\nax.set_xlabel('Number of Trials')\nax.set_ylabel('Generalized Variance')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 3, figsize=(10, 4))\n\n# Set the title for the first subplot\naxs[0].set_title('Debater')\n# Add a colored rectangle to the first subplot\naxs[0].add_patch(plt.Rectangle((0, 0), 1, 1, color='blue'))\n# Add a colored rectangle to the second subplot\naxs[1].add_patch(plt.Rectangle((0, 0), 1, 1, color='orange'))\n# Add a colored rectangle to the third subplot\naxs[2].add_patch(plt.Rectangle((0, 0), 1, 1, color='green'))\n\n# Set the title for the second subplot\naxs[1].set_title('Aggregates')\n# Add a scatter plot to the second subplot\naxs[1].scatter(np.random.rand(10), np.random.rand(10), color='red')\n\n# Set the title for the third subplot\naxs[2].set_title('Judges')\n# Add a line plot to the third subplot\naxs[2].plot(np.linspace(-100, 100, 10), np.linspace(-100, 100, 10), color='black')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\n\n# Define the data for the pie chart\nsizes = [4.6, 10.6, 11.3, 13.2, 29.8, 30.5]\nlabels = ['Red', 'Blue', 'Green', 'Yellow', 'Purple', 'Cyan']\n\n# Create a pie chart\nwedges, texts, autotexts = ax.pie(sizes, labels=labels, autopct='%1.1f%%', startangle=90)\n\n# Set the aspect ratio of the plot to be equal so that pie is drawn as a circle.\nax.axis('equal')  \n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Matplotlib bakery: A donut')\n\n# Create a donut chart\nwedges, texts, autotexts = ax.pie([10, 20, 30, 40], radius=1.5, startangle=90, wedgeprops=dict(width=0.5), textprops={'color':'w'})\n\n# Add labels to the wedges\nax.text(0, 0, '1 egg', ha='center', va='center', fontsize=12, color='white')\nax.text(0, -0.5, '60 g butter', ha='center', va='center', fontsize=12, color='white')\nax.text(0, -1, '90 g sugar', ha='center', va='center', fontsize=12, color='white')\nax.text(0, -1.5, '225 g flour', ha='center', va='center', fontsize=12, color='white')\nax.text(0, -2, '1/2 package of yeast', ha='center', va='center', fontsize=12, color='white')\nax.text(0, -2.5, '100 ml milk', ha='center', va='center', fontsize=12, color='white')\n\n# Set the aspect ratio to be equal so that pie is drawn as a circle.\nax.axis('equal')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Define the data for each category\ncategories = ['Entertainment', 'Utilities', 'Transport', 'Food', 'Others']\nvalues = [16.7, 20.0, 37.5, 41.7, 10.0]\ncolors = ['#FFD700', '#90EE90', '#ADD8E6', '#FF6347', '#FFA500']\n\n# Create a pie chart\nwedges, texts, autotexts = ax.pie(values, labels=categories, colors=colors, autopct='%1.1f%%', startangle=90)\n\n# Add a title\nax.set_title('Expenses - Company vs. Project')\n\n# Add a legend\nax.legend(wedges, categories, title=\"Categories\", loc=\"center left\", bbox_to_anchor=(1, 0, 0.5, 1))\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for LoRA\nlora_data = [31.4, 15.7, 19.9, 33.0]\nlora_labels = ['Unused', 'Model', 'Optimizer', 'Gradient']\n\n# Data for QLoRA\nqlora_data = [54.8, 10.5, 6.3, 28.4]\nqlora_labels = ['Unused', 'Model', 'Optimizer', 'Gradient']\n\nfig, axs = plt.subplots(1, 2, figsize=(10.0, 4.0))\n\n# Plotting LoRA\naxs[0].pie(lora_data, labels=lora_labels, autopct='%1.1f%%', startangle=90)\naxs[0].set_title('LoRA')\n\n# Plotting QLoRA\naxs[1].pie(qlora_data, labels=qlora_labels, autopct='%1.1f%%', startangle=90)\naxs[1].set_title('QLoRA')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the first chart\ndata1 = [25.1, 26.4, 12.6, 15.9]\nlabels1 = ['Model', 'Optimizer', 'Gradient+Activations+Other', 'Unused']\n\n# Data for the second chart\ndata2 = [46.2, 4.6, 5.3, 23.9]\nlabels2 = ['Model', 'Optimizer', 'Gradient+Activations+Other', 'Unused']\n\nfig, axs = plt.subplots(2, 1, figsize=(5.0, 8.0))\n\n# Create the first chart\naxs[0].pie(data1, labels=labels1, colors=['yellow', 'green', 'gray', 'orange'], autopct='%1.1f%%')\naxs[0].set_title('Full Finetuning')\n\n# Create the second chart\naxs[1].pie(data2, labels=labels2, colors=['yellow', 'green', 'gray', 'orange'], autopct='%1.1f%%')\naxs[1].set_title('QLoRA')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Create a pie chart with the data\nax.pie([25, 10, 10, 20, 35], labels=[\"Fruits\", \"Dairy\", \"Grains\", \"Vegetables\", \"Proteins\"], autopct='%1.1f%%', startangle=90)\n\n# Set the title of the chart\nax.set_title('Nutritional Distribution')\n\n# Display the chart\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Market Share by Sector - External vs. Internal')\n\n# Define the data for the pie chart\nlabels = ['E-commerce', 'Education', 'Entertainment', 'Technology']\nsizes = [31.2, 28.6, 35.7, 37.5]\ncolors = ['#FFD700', '#FFA500', '#ADD8E6', '#90EE90']\n\n# Plot the pie chart\nwedges, texts, autotexts = ax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\n\n# Add a legend\nax.legend(wedges, labels,\n          title=\"Sector\",\n          loc=\"center left\",\n          bbox_to_anchor=(1, 0, 0.5, 1))\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Create a pie chart with the data\nax.pie([20, 33.3, 16.7, 40], labels=[\"Dogs\", \"Cats\", \"Birds\", \"Fish\"], autopct='%1.1f%%', startangle=90)\n\n# Set the title of the chart\nax.set_title('Pet Ownership')\n\n# Display the chart\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data\nlabels = ['David', 'John', 'Marry', 'Peter']\nsizes = [11.0, 29.0, 40.0, 20.0]\ncolors = ['blue', 'orange', 'green', 'red']\n\n# Create a pie chart\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\nwedges, texts, autotexts = ax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\n\n# Equal aspect ratio ensures that pie is drawn as a circle.\nax.axis('equal')  \n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\n\n# Create a pie chart with a color map\ncmap = plt.get_cmap('tab20')\ncolors = cmap(range(10))\nax.pie([18, 12, 28], colors=colors, startangle=90)\n\n# Add a title\nax.set_title('Countries in Europe')\n\n# Add labels\nlabels = ['France', 'Germany', 'Italy']\nax.legend(labels, loc='upper right')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the pie chart\nsizes = [26.2, 13.4, 21.4, 19.0, 14.3, 10.7]\nlabels = ['Category 1', 'Category 2', 'Category 3', 'Category 4', 'Category 5', 'Category 6']\ncolors = ['#f8d7da', '#f8bbd0', '#e53935', '#d32f2f', '#b71c1c', '#880e4f']\n\n# Create a pie chart\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\nwedges, texts, autotexts = ax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=140)\n\n# Set the title of the chart\nax.set_title('Slice of a pie chart')\n\n# Equal aspect ratio ensures that pie is drawn as a circle.\nax.axis('equal')  \n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data for the pie chart\nlabels = ['Psychological', 'Others', 'Market', 'Satisfactory', 'Social']\nsizes = [12.4, 35.4, 17.2, 24.7, 10.3]\ncolors = ['blue', 'green', 'skyblue', 'orange', 'pink']\n\n# Create a pie chart\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\nwedges, texts, autotexts = ax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\n\n# Equal aspect ratio ensures that pie is drawn as a circle.\nax.axis('equal')  \n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data for the pie chart\nlabels = ['Youtube', 'Facebook', 'Instagram', 'Twitter', 'LinkedIn']\nsizes = [25, 15, 10, 10, 35]\ncolors = ['lightblue', 'skyblue', 'lightskyblue', 'lightgreen', 'lightcoral']\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Create a pie chart\nwedges, texts, autotexts = ax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\n\n# Set the aspect ratio of the pie chart to be equal so that it appears as a circle.\nax.axis('equal')\n\n# Add a title to the chart\nax.set_title('Social Media Usage')\n\n# Display the chart\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Define the data for the pie chart\nsizes = [34.7, 12.2, 25.4, 20.3, 7.4, 10.1]\nlabels = ['ACL', 'COLING', 'EACL', 'NAACL', 'EMNLP', 'PUBMED']\ncolors = ['#FFD700', '#800080', '#CD5C5C', '#ADD8E6', '#40E0D0', '#4B0082']\n\n# Create a pie chart\nwedges, texts, autotexts = ax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\n\n# Set the title of the chart\nax.set_title('NLP Conference Influence')\n\n# Add a legend\nax.legend(wedges, labels, title=\"Conferences\", loc=\"center left\", bbox_to_anchor=(1, 0, 0.5, 1))\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Create a pie chart with the data\nax.pie([25.0, 37.5, 15.0, 12.5, 25.0, 30.0], labels=[\"Coal\", \"Hydro\", \"Wind\", \"Solar\", \"Other\"], autopct='%1.1f%%', startangle=90)\n\n# Set the title of the chart\nax.set_title('Energy Consumption - National vs. Project')\n\n# Display the chart\nplt.show()\n```"}
{"file": "dataset/ori_500/quiver_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Global Stock Market')\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Stock Price')\n\n# Create a scatter plot\nax.scatter(np.random.rand(10), np.random.rand(10), color='red')\n\n# Create a line plot\nax.plot(np.random.rand(10), np.random.rand(10), color='blue')\n\n# Add a legend\nax.legend(['Out-group bias (Collectivism)', 'In-group bias (Individualism)'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/quiver_2.pdf", "response": "import matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(5.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Language Sentiment Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Sentiment Score')\n\n# Create a scatter plot with a red color for the points\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9], [4, 3, 2, 1, 0, -1, -2, -3, -4], color='red')\n\n# Add a legend to the plot\nax.legend(['English', 'French', 'German'])\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/quiver_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x and y limits\nax.set_xlim(0, 1)\nax.set_ylim(0, 1)\n\n# Draw the scatter plot\nsc = ax.scatter(np.random.rand(50), np.random.rand(50), c=np.random.rand(50), cmap='viridis')\n\n# Add a color bar which maps values to colors\ncbar = fig.colorbar(sc)\n\n# Set the title of the plot\nax.set_title('My Scatter Plot')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/quiver_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(5.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Vector Field: -F + \u03c1\u2207FF (Small \u03c1)')\n\n# Create a grid of points\nx = np.linspace(-1, 1, 100)\ny = np.linspace(-1, 1, 100)\nX, Y = np.meshgrid(x, y)\n\n# Define the vector field\nU = -X**2 - Y**2\nV = X**2 + Y**2\n\n# Plot the vector field\nQ = ax.quiver(X, Y, U, V, color='b')\n\n# Set the limits of the plot\nax.set_xlim(-1, 1)\nax.set_ylim(-1, 1)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/quiver_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Magnetic Field $\\mathbf{B}$ in Tesla units')\n\n# Set the x and y limits\nax.set_xlim(-2.0, 2.0)\nax.set_ylim(-2.0, 2.0)\n\n# Draw the grid\nax.grid(True)\n\n# Draw the arrows\nfor i in np.linspace(-2.0, 2.0, 10):\n    for j in np.linspace(-2.0, 2.0, 10):\n        ax.arrow(i, j, 0.1, 0.1, head_width=0.05, head_length=0.05, fc='g', ec='g')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Set the title of the plot\nax.set_title('TextVQA')\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.4, color='blue')\nax.add_artist(circle)\n\n# Create a rectangle patch\nrectangle = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='red')\nax.add_patch(rectangle)\n\n# Create a polygon patch\npolygon = plt.Polygon([[0.1, 0.1], [0.3, 0.9], [0.9, 0.3]], color='green')\nax.add_patch(polygon)\n\n# Create a scatter plot\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y, color='purple')\n\n# Create a bar chart\nheights = [10, 20, 30, 40, 50]\nbars = ax.bar(range(len(heights)), heights, color='orange')\n\n# Create a pie chart\nsizes = [10, 20, 30, 40, 50]\nwedges, texts, autotexts = ax.pie(sizes, colors=['cyan', 'magenta', 'yellow', 'black', 'white'])\n\n# Add text annotations\nfor i, bar in enumerate(bars):\n    height = bar.get_height()\n    ax.annotate('Text(0.1, 100.0, \\'TextVQA\\')',\n                xy=(bar.get_x() + bar.get_width() / 2, height),\n                xytext=(0, 3),  # 3 points vertical offset\n                textcoords=\"offset points\",\n                ha='center', va='bottom')\n\n# Add text annotations for the pie chart\nfor wedge, text in zip(wedges, texts):\n    ax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n                xy=wedge,\n                xytext=(0, 0),\n                textcoords=\"offset points\",\n                ha='center', va='center')\n\n# Add text annotations for the scatter plot\nfor i, txt in enumerate(['Text(0.06427876096865, \\'SQA-I\\')']):\n    ax.annotate(txt, (x[i], y[i]))\n\n# Add text annotations for the rectangle\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.2, 0.2),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the circle\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.5, 0.5),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the polygon\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.1, 0.1),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the bar chart\nfor i, bar in enumerate(bars):\n    height = bar.get_height()\n    ax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n                xy=(bar.get_x() + bar.get_width() / 2, height),\n                xytext=(0, 3),  # 3 points vertical offset\n                textcoords=\"offset points\",\n                ha='center', va='bottom')\n\n# Add text annotations for the pie chart\nfor wedge, text in zip(wedges, texts):\n    ax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n                xy=wedge,\n                xytext=(0, 0),\n                textcoords=\"offset points\",\n                ha='center', va='center')\n\n# Add text annotations for the scatter plot\nfor i, txt in enumerate(['Text(0.06427876096865, \\'SQA-I\\')']):\n    ax.annotate(txt, (x[i], y[i]))\n\n# Add text annotations for the rectangle\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.2, 0.2),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the circle\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.5, 0.5),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the polygon\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.1, 0.1),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the bar chart\nfor i, bar in enumerate(bars):\n    height = bar.get_height()\n    ax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n                xy=(bar.get_x() + bar.get_width() / 2, height),\n                xytext=(0, 3),  # 3 points vertical offset\n                textcoords=\"offset points\",\n                ha='center', va='bottom')\n\n# Add text annotations for the pie chart\nfor wedge, text in zip(wedges, texts):\n    ax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n                xy=wedge,\n                xytext=(0, 0),\n                textcoords=\"offset points\",\n                ha='center', va='center')\n\n# Add text annotations for the scatter plot\nfor i, txt in enumerate(['Text(0.06427876096865, \\'SQA-I\\')']):\n    ax.annotate(txt, (x[i], y[i]))\n\n# Add text annotations for the rectangle\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.2, 0.2),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the circle\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.5, 0.5),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the polygon\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.1, 0.1),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the bar chart\nfor i, bar in enumerate(bars):\n    height = bar.get_height()\n    ax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n                xy=(bar.get_x() + bar.get_width() / 2, height),\n                xytext=(0, 3),  # 3 points vertical offset\n                textcoords=\"offset points\",\n                ha='center', va='bottom')\n\n# Add text annotations for the pie chart\nfor wedge, text in zip(wedges, texts):\n    ax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n                xy=wedge,\n                xytext=(0, 0),\n                textcoords=\"offset points\",\n                ha='center', va='center')\n\n# Add text annotations for the scatter plot\nfor i, txt in enumerate(['Text(0.06427876096865, \\'SQA-I\\')']):\n    ax.annotate(txt, (x[i], y[i]))\n\n# Add text annotations for the rectangle\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.2, 0.2),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the circle\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.5, 0.5),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the polygon\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.1, 0.1),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the bar chart\nfor i, bar in enumerate(bars):\n    height = bar.get_height()\n    ax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n                xy=(bar.get_x() + bar.get_width() / 2, height),\n                xytext=(0, 3),  # 3 points vertical offset\n                textcoords=\"offset points\",\n                ha='center', va='bottom')\n\n# Add text annotations for the pie chart\nfor wedge, text in zip(wedges, texts):\n    ax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n                xy=wedge,\n                xytext=(0, 0),\n                textcoords=\"offset points\",\n                ha='center', va='center')\n\n# Add text annotations for the scatter plot\nfor i, txt in enumerate(['Text(0.06427876096865, \\'SQA-I\\')']):\n    ax.annotate(txt, (x[i], y[i]))\n\n# Add text annotations for the rectangle\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.2, 0.2),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the circle\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.5, 0.5),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the polygon\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.1, 0.1),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the bar chart\nfor i, bar in enumerate(bars):\n    height = bar.get_height()\n    ax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n                xy=(bar.get_x() + bar.get_width() / 2, height),\n                xytext=(0, 3),  # 3 points vertical offset\n                textcoords=\"offset points\",\n                ha='center', va='bottom')\n\n# Add text annotations for the pie chart\nfor wedge, text in zip(wedges, texts):\n    ax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n                xy=wedge,\n                xytext=(0, 0),\n                textcoords=\"offset points\",\n                ha='center', va='center')\n\n# Add text annotations for the scatter plot\nfor i, txt in enumerate(['Text(0.06427876096865, \\'SQA-I\\')']):\n    ax.annotate(txt, (x[i], y[i]))\n\n# Add text annotations for the rectangle\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.2, 0.2),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the circle\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.5, 0.5),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the polygon\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.1, 0.1),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the bar chart\nfor i, bar in enumerate(bars):\n    height = bar.get_height()\n    ax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n                xy=(bar.get_x() + bar.get_width() / 2, height),\n                xytext=(0, 3),  # 3 points vertical offset\n                textcoords=\"offset points\",\n                ha='center', va='bottom')\n\n# Add text annotations for the pie chart\nfor wedge, text in zip(wedges, texts):\n    ax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n                xy=wedge,\n                xytext=(0, 0),\n                textcoords=\"offset points\",\n                ha='center', va='center')\n\n# Add text annotations for the scatter plot\nfor i, txt in enumerate(['Text(0.06427876096865, \\'SQA-I\\')']):\n    ax.annotate(txt, (x[i], y[i]))\n\n# Add text annotations for the rectangle\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.2, 0.2),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the circle\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.5, 0.5),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the polygon\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.1, 0.1),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the bar chart\nfor i, bar in enumerate(bars):\n    height = bar.get_height()\n    ax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n                xy=(bar.get_x() + bar.get_width() / 2, height),\n                xytext=(0, 3),  # 3 points vertical offset\n                textcoords=\"offset points\",\n                ha='center', va='bottom')\n\n# Add text annotations for the pie chart\nfor wedge, text in zip(wedges, texts):\n    ax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n                xy=wedge,\n                xytext=(0, 0),\n                textcoords=\"offset points\",\n                ha='center', va='center')\n\n# Add text annotations for the scatter plot\nfor i, txt in enumerate(['Text(0.06427876096865, \\'SQA-I\\')']):\n    ax.annotate(txt, (x[i], y[i]))\n\n# Add text annotations for the rectangle\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.2, 0.2),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the circle\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.5, 0.5),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the polygon\nax.annotate('Text(0.7747361451096296, \\'SQA-I\\')',\n            xy=(0.1, 0.1),\n            xytext=(0, 0),\n            textcoords=\"offset points\",\n            ha='center', va='center')\n\n# Add text annotations for the bar chart\nfor i, bar in"}
{"file": "dataset/ori_500/radar_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\n\n# Set the title of the plot\nax.set_title('XNLI (speed-up ratio: 4)')\n\n# Define the colors for each region\ncolors = ['pink', 'green', 'blue', 'cyan']\n\n# Define the labels for each region\nlabels = ['fr', 'es', 'en', 'el', 'de', 'bg', 'sw', 'ar', 'ur', 'th', 'hi', 'ru', 'tr', 'vi', 'zh']\n\n# Define the radii for each region\nradii = [20, 40, 60, 80]\n\n# Draw the regions\nfor i, label in enumerate(labels):\n    ax.add_artist(plt.Circle((0, 0), radii[i % len(radii)], color=colors[i % len(colors)], label=label))\n\n# Draw the speed-up ratio\nax.add_artist(plt.Circle((0, 0), 10, color='black'))\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(4.0, 4.0))\n\n# Draw a circle\ncircle = plt.Circle((0.5, 0.5), 0.4, color='lightgrey')\nax.add_artist(circle)\n\n# Draw a polygon\npolygon = plt.Polygon([[0.2, 0.2], [0.8, 0.2], [0.5, 0.8]], color='lightgreen')\nax.add_artist(polygon)\n\n# Draw a rectangle\nrectangle = plt.Rectangle([0.1, 0.6], 0.8, 0.2, color='lightblue')\nax.add_artist(rectangle)\n\n# Draw a line\nline = plt.Line2D([0.1, 0.9], [0.1, 0.9], color='lightyellow')\nax.add_artist(line)\n\n# Set the limits of the plot\nax.set_xlim(0, 1)\nax.set_ylim(0, 1)\n\n# Set the title of the plot\nax.set_title('Reflection')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('black')\n\n# Set the title of the plot\nax.set_title('My Plot', color='white')\n\n# Set the x-axis label\nax.set_xlabel('X Axis Label', color='white')\n\n# Set the y-axis label\nax.set_ylabel('Y Axis Label', color='white')\n\n# Set the grid lines\nax.grid(True)\n\n# Set the tick labels\nax.set_xticklabels(['Label 1', 'Label 2', 'Label 3'], color='white')\nax.set_yticklabels(['Label 4', 'Label 5', 'Label 6'], color='white')\n\n# Set the tick colors\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', length=10, width=2, bottom=True, top=False, left=True, right=False)\n\n# Set the tick mark labels\nax.set_xticks([0.1, 0.2, 0.3])\nax.set_yticks([0.4, 0.5, 0.6])\n\n# Set the tick mark colors\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the tick mark widths\nax.spines['bottom'].set_linewidth(2)\nax.spines['top'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\n\n# Set the tick mark styles\nax.spines['bottom'].set_linestyle('-')\nax.spines['top'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\n\n# Set the tick mark positions\nax.spines['bottom'].set_position('zero')\nax.spines['top'].set_position('zero')\nax.spines['right'].set_position('zero')\nax.spines['left'].set_position('zero')\n\n# Set the tick mark limits\nax.set_xlim(-0.1, 0.7)\nax.set_ylim(-0.1, 0.7)\n\n# Set the tick mark ticks\nax.set_xticks(np.arange(0, 0.8, 0.1))\nax.set_yticks(np.arange(0, 0.8, 0.1))\n\n# Set the tick mark labels\nax.set_xticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7'])\nax.set_yticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7'])\n\n# Set the tick mark colors\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the tick mark widths\nax.spines['bottom'].set_linewidth(2)\nax.spines['top'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\n\n# Set the tick mark styles\nax.spines['bottom'].set_linestyle('-')\nax.spines['top'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\n\n# Set the tick mark positions\nax.spines['bottom'].set_position('zero')\nax.spines['top'].set_position('zero')\nax.spines['right'].set_position('zero')\nax.spines['left'].set_position('zero')\n\n# Set the tick mark limits\nax.set_xlim(-0.1, 0.7)\nax.set_ylim(-0.1, 0.7)\n\n# Set the tick mark ticks\nax.set_xticks(np.arange(0, 0.8, 0.1))\nax.set_yticks(np.arange(0, 0.8, 0.1))\n\n# Set the tick mark labels\nax.set_xticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7'])\nax.set_yticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7'])\n\n# Set the tick mark colors\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the tick mark widths\nax.spines['bottom'].set_linewidth(2)\nax.spines['top'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\n\n# Set the tick mark styles\nax.spines['bottom'].set_linestyle('-')\nax.spines['top'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\n\n# Set the tick mark positions\nax.spines['bottom'].set_position('zero')\nax.spines['top'].set_position('zero')\nax.spines['right'].set_position('zero')\nax.spines['left'].set_position('zero')\n\n# Set the tick mark limits\nax.set_xlim(-0.1, 0.7)\nax.set_ylim(-0.1, 0.7)\n\n# Set the tick mark ticks\nax.set_xticks(np.arange(0, 0.8, 0.1))\nax.set_yticks(np.arange(0, 0.8, 0.1))\n\n# Set the tick mark labels\nax.set_xticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7'])\nax.set_yticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7'])\n\n# Set the tick mark colors\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the tick mark widths\nax.spines['bottom'].set_linewidth(2)\nax.spines['top'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\n\n# Set the tick mark styles\nax.spines['bottom'].set_linestyle('-')\nax.spines['top'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\n\n# Set the tick mark positions\nax.spines['bottom'].set_position('zero')\nax.spines['top'].set_position('zero')\nax.spines['right'].set_position('zero')\nax.spines['left'].set_position('zero')\n\n# Set the tick mark limits\nax.set_xlim(-0.1, 0.7)\nax.set_ylim(-0.1, 0.7)\n\n# Set the tick mark ticks\nax.set_xticks(np.arange(0, 0.8, 0.1))\nax.set_yticks(np.arange(0, 0.8, 0.1))\n\n# Set the tick mark labels\nax.set_xticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7'])\nax.set_yticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7'])\n\n# Set the tick mark colors\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the tick mark widths\nax.spines['bottom'].set_linewidth(2)\nax.spines['top'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\n\n# Set the tick mark styles\nax.spines['bottom'].set_linestyle('-')\nax.spines['top'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\n\n# Set the tick mark positions\nax.spines['bottom'].set_position('zero')\nax.spines['top'].set_position('zero')\nax.spines['right'].set_position('zero')\nax.spines['left'].set_position('zero')\n\n# Set the tick mark limits\nax.set_xlim(-0.1, 0.7)\nax.set_ylim(-0.1, 0.7)\n\n# Set the tick mark ticks\nax.set_xticks(np.arange(0, 0.8, 0.1))\nax.set_yticks(np.arange(0, 0.8, 0.1))\n\n# Set the tick mark labels\nax.set_xticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7'])\nax.set_yticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7'])\n\n# Set the tick mark colors\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the tick mark widths\nax.spines['bottom'].set_linewidth(2)\nax.spines['top'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\n\n# Set the tick mark styles\nax.spines['bottom'].set_linestyle('-')\nax.spines['top'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\n\n# Set the tick mark positions\nax.spines['bottom'].set_position('zero')\nax.spines['top'].set_position('zero')\nax.spines['right'].set_position('zero')\nax.spines['left'].set_position('zero')\n\n# Set the tick mark limits\nax.set_xlim(-0.1, 0.7)\nax.set_ylim(-0.1, 0.7)\n\n# Set the tick mark ticks\nax.set_xticks(np.arange(0, 0.8, 0.1))\nax.set_yticks(np.arange(0, 0.8, 0.1))\n\n# Set the tick mark labels\nax.set_xticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7'])\nax.set_yticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7'])\n\n# Set the tick mark colors\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the tick mark widths\nax.spines['bottom'].set_linewidth(2)\nax.spines['top'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\n\n# Set the tick mark styles\nax.spines['bottom'].set_linestyle('-')\nax.spines['top'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\n\n# Set the tick mark positions\nax.spines['bottom'].set_position('zero')\nax.spines['top'].set_position('zero')\nax.spines['right'].set_position('zero')\nax.spines['left'].set_position('zero')\n\n# Set the tick mark limits\nax.set_xlim(-0.1, 0.7)\nax.set_ylim(-0.1, 0.7)\n\n# Set the tick mark ticks\nax.set_xticks(np.arange(0, 0.8, 0.1))\nax.set_yticks(np.arange(0, 0.8, 0.1))\n\n# Set the tick mark labels\nax.set_xticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7'])\nax.set_yticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7'])\n\n# Set the tick mark colors\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the tick mark widths\nax.spines['bottom'].set_linewidth(2)\nax.spines['top'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\n\n# Set the tick mark styles\nax.spines['bottom'].set_linestyle('-')\nax.spines['top'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\n\n# Set the tick mark positions\nax.spines['bottom'].set_position('zero')\nax.spines['top'].set_position('zero')\nax.spines['right'].set_position('zero')\nax.spines['left'].set_position('zero')\n\n# Set the tick mark limits\nax.set_xlim(-0.1, 0.7)\nax.set_ylim(-0.1, 0.7)\n\n# Set the tick mark ticks\nax.set_xticks(np.arange(0, 0.8, 0.1))\nax.set_yticks(np.arange(0, 0.8, 0.1))\n\n# Set the tick mark labels\nax.set_xticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7'])\nax.set_yticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7'])\n\n# Set the tick mark colors\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the tick mark widths\nax.spines['bottom'].set_linewidth(2)\nax.spines['top'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\n\n# Set the tick mark styles\nax.spines['bottom'].set_linestyle('-')\nax.spines['top'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\n\n# Set the tick mark positions\nax.spines['bottom'].set_position('zero')\nax.spines['top'].set_position('zero')\nax.spines['right'].set_position('zero')\nax.spines['left'].set_position('zero')\n\n# Set the tick mark limits\nax.set_xlim(-0.1, 0.7)\nax.set_ylim(-0.1, 0.7)\n\n# Set the tick mark ticks\nax.set_xticks(np.arange(0, 0.8, 0.1))\nax.set_yticks(np.arange(0, 0.8, 0.1))\n\n# Set the tick mark labels\nax.set_xticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7'])\nax.set_yticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7'])\n\n# Set the tick mark colors\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the tick mark widths\nax.spines['bottom'].set_linewidth(2)\nax.spines['top'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\n\n# Set the tick mark styles\nax.spines['bottom'].set_linestyle('-')\nax.spines['top'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\n\n# Set the tick mark positions\nax.spines['bottom'].set_position('zero')\nax.spines['top'].set_position('zero')\nax.spines['right'].set_position('zero')\nax.spines['left'].set_position('zero')\n\n# Set the tick mark limits\nax.set_xlim(-0.1, 0.7)\nax.set_ylim(-0.1, 0.7)\n\n# Set the tick mark ticks\nax.set_xticks(np.arange(0, 0.8, 0.1))\nax.set_yticks(np.arange(0, 0.8, 0.1))\n\n# Set the tick mark labels\nax.set_xticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7'])\nax.set_yticklabels(['0.0', '0.1', '0.2', '0.3',"}
{"file": "dataset/ori_500/radar_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('My Favorite Places')\n\n# Define the categories and their colors\ncategories = ['video game', 'programming world', 'universe', 'fairy tale', 'country', 'special place', 'cultural event']\ncolors = ['blue', 'green', 'red', 'purple', 'orange', 'cyan', 'magenta']\n\n# Define the angles for each category\nangles = np.linspace(0, 2 * np.pi, len(categories), endpoint=False).tolist()\nangles += angles[:1]  # repeat the first angle to close the circle\n\n# Define the values for each category\nvalues = [0.8, 0.6, 0.4, 0.2, 0.6, 0.8, 0.2]\nvalues += values[:1]  # repeat the first value to close the circle\n\n# Plot the radar chart\nax.plot(angles, values, 'o-', linewidth=2, markersize=10)\nax.fill(angles, values, alpha=0.25)\n\n# Set the category labels\nax.set_xticks(angles[:-1])\nax.set_xticklabels(categories)\n\n# Add a legend\nax.legend(categories, loc='upper right', bbox_to_anchor=(0.1, 0.1))\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Roleplay')\n\n# Define the colors for each subject\ncolors = ['blue', 'orange', 'green', 'red']\n\n# Define the subjects\nsubjects = ['Reasoning', 'Writing', 'Math', 'Coding', 'Extraction', 'Humanities', 'STEM']\n\n# Draw the circle\ncircle = plt.Circle((0.5, 0.5), 0.4, color='black')\nax.add_artist(circle)\n\n# Draw the lines\nfor i in range(len(subjects)):\n    angle = 2 * np.pi * i / len(subjects)\n    x1, y1 = 0.5 + 0.3 * np.cos(angle), 0.5 + 0.3 * np.sin(angle)\n    x2, y2 = 0.5 + 0.4 * np.cos(angle), 0.5 + 0.4 * np.sin(angle)\n    ax.plot([x1, x2], [y1, y2], color=colors[i % len(colors)])\n\n# Draw the rectangles\nfor i in range(len(subjects)):\n    angle = 2 * np.pi * i / len(subjects)\n    x1, y1 = 0.5 + 0.3 * np.cos(angle), 0.5 + 0.3 * np.sin(angle)\n    x2, y2 = 0.5 + 0.4 * np.cos(angle), 0.5 + 0.4 * np.sin(angle)\n    ax.add_patch(plt.Rectangle((x1, y1), 0.1, 0.1, color=colors[i % len(colors)]))\n\n# Draw the text\nfor i in range(len(subjects)):\n    angle = 2 * np.pi * i / len(subjects)\n    x, y = 0.5 + 0.45 * np.cos(angle), 0.5 + 0.45 * np.sin(angle)\n    ax.text(x, y, subjects[i], ha='center', va='center', rotation=angle * 180 / np.pi)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('MUJI vs Nestle in Food Safety')\n\n# Draw a circle around the plot\ncircle = plt.Circle((0.5, 0.5), 0.4, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle for the nutrition section\nnutrition = plt.Rectangle((0.2, 0.6), 0.1, 0.2, color='orange')\nax.add_artist(nutrition)\n\n# Draw a rectangle for the labeling section\nlabeling = plt.Rectangle((0.7, 0.6), 0.1, 0.2, color='red')\nax.add_artist(labeling)\n\n# Draw a rectangle for the material section\nmaterial = plt.Rectangle((0.3, 0.3), 0.4, 0.4, color='green')\nax.add_artist(material)\n\n# Draw a rectangle for the storage section\nstorage = plt.Rectangle((0.7, 0.3), 0.1, 0.2, color='blue')\nax.add_artist(storage)\n\n# Draw a rectangle for the purity section\npurity = plt.Rectangle((0.2, 0.3), 0.1, 0.2, color='pink')\nax.add_artist(purity)\n\n# Draw a rectangle for the allergen section\nallergen = plt.Rectangle((0.7, 0.3), 0.1, 0.2, color='purple')\nax.add_artist(allergen)\n\n# Draw a rectangle for the pollution section\npollution = plt.Rectangle((0.2, 0.1), 0.1, 0.2, color='yellow')\nax.add_artist(pollution)\n\n# Draw a rectangle for the recall section\nrecall = plt.Rectangle((0.7, 0.1), 0.1, 0.2, color='brown')\nax.add_artist(recall)\n\n# Draw a rectangle for the compliance section\ncompliance = plt.Rectangle((0.3, 0.1), 0.4, 0.2, color='grey')\nax.add_artist(compliance)\n\n# Add a legend\nlegend_elements = [plt.Line2D([0], [0], marker='o', color='w', label='Nestle', markerfacecolor='r', markersize=10),\n                    plt.Line2D([0], [0], marker='s', color='w', label='MUJI', markerfacecolor='g', markersize=10)]\nax.legend(handles=legend_elements, loc='upper right')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Set the background color of the plot\nax.set_facecolor('black')\n\n# Set the title of the plot\nax.set_title('Global Stock Market', color='white')\n\n# Set the labels for the x-axis and y-axis\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Stock Price', color='white')\n\n# Set the tick parameters\nax.tick_params(axis='both', colors='white')\n\n# Set the grid\nax.grid(True)\n\n# Set the data for the plot\nx = np.arange(1, 11)\ny = np.random.randint(50, 100, 10)\n\n# Plot the data\nax.plot(x, y, 'o-', color='orange')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Define the data for the radar chart\ncategories = ['Extrusion', 'Injection', 'Blow Molding', 'Compression', 'Rotational']\nvalues = [1, 2, 3, 4, 5]\nN = len(categories)\nangles = np.linspace(0, 2 * np.pi, N, endpoint=False).tolist()\nangles += angles[:1]  # To close the loop\nvalues += values[:1]\n\n# Plot the radar chart\nax.plot(angles, values, linewidth=1, linestyle='solid')\nax.fill(angles, values, 'b', alpha=0.1)\n\n# Set the category labels\nax.set_xticks(angles[:-1])\nax.set_xticklabels(categories)\n\n# Set the title\nax.set_title('Radar Chart')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Amusement Park Comparison: Disney vs Universal Studios')\n\n# Create a circle for the park map\ncircle = plt.Circle((0.5, 0.5), 0.4, color='orange')\nax.add_artist(circle)\n\n# Add labels for the different areas\nax.text(0.5, 0.6, 'Food Quality', ha='center', va='center')\nax.text(0.5, 0.4, 'Shows', ha='center', va='center')\nax.text(0.5, 0.2, 'Staff', ha='center', va='center')\nax.text(0.5, 0.8, 'Cleanliness', ha='center', va='center')\nax.text(0.5, 0.1, 'Wait Times', ha='center', va='center')\nax.text(0.5, 0.9, 'Ticket Price', ha='center', va='center')\nax.text(0.3, 0.5, 'Family Rides', ha='center', va='center')\nax.text(0.7, 0.5, 'Thrill Rides', ha='center', va='center')\nax.text(0.1, 0.5, 'Parking', ha='center', va='center')\nax.text(0.9, 0.5, 'Souvenirs', ha='center', va='center')\n\n# Add a legend with the park names\nlegend_elements = [plt.Line2D([0], [0], marker='o', color='w', label='Disney', markerfacecolor='orange', markersize=10),\n                  plt.Line2D([0], [0], marker='o', color='w', label='Universal Studios', markerfacecolor='purple', markersize=10)]\nax.legend(handles=legend_elements, loc='upper right')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Fashion Brand Popularity')\n\n# Define the colors for each brand\ncolors = ['yellow', 'silver', 'gray', 'green']\n\n# Define the labels for each brand\nlabels = ['Chanel', 'Dior', 'Gucci']\n\n# Define the sizes of the pie chart slices\nsizes = [30, 25, 45]\n\n# Draw the pie chart\nwedges, texts, autotexts = ax.pie(sizes, colors=colors, labels=labels, autopct='%1.1f%%', startangle=90)\n\n# Add a legend\nax.legend(wedges, labels,\n          title=\"Brands\",\n          loc=\"center left\",\n          bbox_to_anchor=(1, 0, 0.5, 1))\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Set the title of the plot\nax.set_title('POPE')\n\n# Create a circle patch for the center of the plot\ncircle = plt.Circle((0.5, 0.5), 0.4, color='blue')\nax.add_artist(circle)\n\n# Create a rectangle patch for the left side of the plot\nrect = plt.Rectangle((0.1, 0.1), 0.2, 0.8, color='red')\nax.add_patch(rect)\n\n# Create a triangle patch for the right side of the plot\ntriangle = plt.Polygon([[0.9, 0.1], [0.9, 0.9], [0.1, 0.5]], color='green')\nax.add_patch(triangle)\n\n# Create a hexagon patch for the bottom of the plot\nhexagon = plt.Polygon([[0.1, 0.1], [0.3, 0.1], [0.4, 0.3], [0.3, 0.5], [0.1, 0.5], [0.2, 0.3]], color='purple')\nax.add_patch(hexagon)\n\n# Create a star patch for the top of the plot\nstar = plt.Polygon([[0.5, 0.9], [0.6, 0.7], [0.7, 0.8], [0.6, 0.9], [0.5, 0.7], [0.4, 0.8], [0.3, 0.9]], color='orange')\nax.add_patch(star)\n\n# Add text annotations for each patch\nax.text(0.5, 0.5, 'MM-Vet', ha='center', va='center', color='white')\nax.text(0.1, 0.1, 'GQA', ha='center', va='center', color='white')\nax.text(0.9, 0.1, 'VQAav2', ha='center', va='center', color='white')\nax.text(0.1, 0.9, 'LlavaW', ha='center', va='center', color='white')\n\n# Add a legend with colored rectangles\nlegend_elements = [plt.Line2D([0], [0], marker='o', color='w', label='TinyLaMA', markerfacecolor='r', markersize=10),\n                  plt.Line2D([0], [0], marker='o', color='w', label='StableLM', markerfacecolor='b', markersize=10),\n                  plt.Line2D([0], [0], marker='o', color='w', label='Phi-2', markerfacecolor='g', markersize=10)]\nax.legend(handles=legend_elements, loc='upper right')\n\n# Set the aspect ratio of the plot to be equal\nax.set_aspect('equal')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(18, 6))\n\n# Set the title of the plot\nax.set_title('Perfume Brand Comparison')\n\n# Create a list of brands\nbrands = ['Chanel', 'Dior', 'Gucci']\n\n# Create a list of colors for each brand\ncolors = ['blue', 'green', 'red']\n\n# Create a list of values for each brand\nvalues = [5, 3, 7]\n\n# Create a list of labels for each brand\nlabels = ['Versatility', 'Longevity', 'Sillage']\n\n# Create a list of sizes for each brand\nsizes = [20, 40, 60]\n\n# Create a list of colors for each label\nlabel_colors = ['yellow', 'blue', 'green']\n\n# Create a list of sizes for each label\nlabel_sizes = [10, 20, 30]\n\n# Create a list of colors for each value\nvalue_colors = ['orange', 'cyan', 'magenta']\n\n# Create a list of sizes for each value\nvalue_sizes = [10, 20, 30]\n\n# Create a list of colors for each package\npackage_colors = ['purple', 'pink', 'brown']\n\n# Create a list of sizes for each package\npackage_sizes = [10, 20, 30]\n\n# Create a list of colors for each popularity\npopularity_colors = ['gray', 'silver', 'gold']\n\n# Create a list of sizes for each popularity\npopularity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each projection\nprojection_colors = ['blue', 'green', 'red']\n\n# Create a list of sizes for each projection\nprojection_sizes = [10, 20, 30]\n\n# Create a list of colors for each packaging\npackaging_colors = ['purple', 'pink', 'brown']\n\n# Create a list of sizes for each packaging\npackaging_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white', 'silver']\n\n# Create a list of sizes for each creativity\ncreativity_sizes = [10, 20, 30]\n\n# Create a list of colors for each creativity\ncreativity_colors = ['black', 'white"}
{"file": "dataset/ori_500/radar_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the aspect ratio of the plot to be equal\nax.set_aspect('equal')\n\n# Draw a circle with a radius of 100\ncircle = plt.Circle((0, 0), 100, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 200 and a height of 150\nrectangle = plt.Rectangle((-100, -75), 200, 150, color='gray')\nax.add_artist(rectangle)\n\n# Draw a polygon with 6 sides\npolygon = plt.Polygon([[0, 0], [50, 50], [100, 0], [50, -50], [0, 0]], color='red')\nax.add_artist(polygon)\n\n# Draw a star with 5 points\nstar = plt.Polygon([[0, 0], [50, 50], [100, 0], [50, -50], [0, 0]], color='blue')\nax.add_artist(star)\n\n# Draw a circle with a radius of 50\ncircle = plt.Circle((0, 0), 50, color='pink')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 100 and a height of 75\nrectangle = plt.Rectangle((-50, -37.5), 100, 75, color='orange')\nax.add_artist(rectangle)\n\n# Draw a polygon with 8 sides\npolygon = plt.Polygon([[0, 0], [25, 25], [50, 0], [25, -25], [0, 0], [-25, -25], [-50, 0], [-25, 25]], color='green')\nax.add_artist(polygon)\n\n# Draw a star with 5 points\nstar = plt.Polygon([[0, 0], [25, 25], [50, 0], [25, -25], [0, 0], [-25, -25], [-50, 0], [-25, 25]], color='yellow')\nax.add_artist(star)\n\n# Draw a circle with a radius of 25\ncircle = plt.Circle((0, 0), 25, color='purple')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 50 and a height of 37.5\nrectangle = plt.Rectangle((-25, -18.75), 50, 37.5, color='brown')\nax.add_artist(rectangle)\n\n# Draw a polygon with 10 sides\npolygon = plt.Polygon([[0, 0], [12.5, 12.5], [25, 0], [12.5, -12.5], [0, 0], [-12.5, -12.5], [-25, 0], [-12.5, 12.5]], color='cyan')\nax.add_artist(polygon)\n\n# Draw a star with 5 points\nstar = plt.Polygon([[0, 0], [12.5, 12.5], [25, 0], [12.5, -12.5], [0, 0], [-12.5, -12.5], [-25, 0], [-12.5, 12.5]], color='magenta')\nax.add_artist(star)\n\n# Draw a circle with a radius of 12.5\ncircle = plt.Circle((0, 0), 12.5, color='silver')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 25 and a height of 18.75\nrectangle = plt.Rectangle((-12.5, -9.375), 25, 18.75, color='gold')\nax.add_artist(rectangle)\n\n# Draw a polygon with 12 sides\npolygon = plt.Polygon([[0, 0], [10, 10], [20, 0], [10, -10], [0, 0], [-10, -10], [-20, 0], [-10, 10]], color='lime')\nax.add_artist(polygon)\n\n# Draw a star with 5 points\nstar = plt.Polygon([[0, 0], [10, 10], [20, 0], [10, -10], [0, 0], [-10, -10], [-20, 0], [-10, 10]], color='teal')\nax.add_artist(star)\n\n# Draw a circle with a radius of 6.25\ncircle = plt.Circle((0, 0), 6.25, color='navy')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 12.5 and a height of 9.375\nrectangle = plt.Rectangle((-6.25, -4.6875), 12.5, 9.375, color='olive')\nax.add_artist(rectangle)\n\n# Draw a polygon with 14 sides\npolygon = plt.Polygon([[0, 0], [7.5, 7.5], [15, 0], [7.5, -7.5], [0, 0], [-7.5, -7.5], [-15, 0], [-7.5, 7.5]], color='coral')\nax.add_artist(polygon)\n\n# Draw a star with 5 points\nstar = plt.Polygon([[0, 0], [7.5, 7.5], [15, 0], [7.5, -7.5], [0, 0], [-7.5, -7.5], [-15, 0], [-7.5, 7.5]], color='crimson')\nax.add_artist(star)\n\n# Draw a circle with a radius of 3.125\ncircle = plt.Circle((0, 0), 3.125, color='indigo')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 15 and a height of 7.5\nrectangle = plt.Rectangle((-7.5, -3.75), 15, 7.5, color='silver')\nax.add_artist(rectangle)\n\n# Draw a polygon with 16 sides\npolygon = plt.Polygon([[0, 0], [6.25, 6.25], [12.5, 0], [6.25, -6.25], [0, 0], [-6.25, -6.25], [-12.5, 0], [-6.25, 6.25]], color='gold')\nax.add_artist(polygon)\n\n# Draw a star with 5 points\nstar = plt.Polygon([[0, 0], [6.25, 6.25], [12.5, 0], [6.25, -6.25], [0, 0], [-6.25, -6.25], [-12.5, 0], [-6.25, 6.25]], color='lime')\nax.add_artist(star)\n\n# Draw a circle with a radius of 1.5625\ncircle = plt.Circle((0, 0), 1.5625, color='teal')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 15 and a height of 7.5\nrectangle = plt.Rectangle((-7.5, -3.75), 15, 7.5, color='crimson')\nax.add_artist(rectangle)\n\n# Draw a polygon with 18 sides\npolygon = plt.Polygon([[0, 0], [5, 5], [10, 0], [5, -5], [0, 0], [-5, -5], [-10, 0], [-5, 5]], color='indigo')\nax.add_artist(polygon)\n\n# Draw a star with 5 points\nstar = plt.Polygon([[0, 0], [5, 5], [10, 0], [5, -5], [0, 0], [-5, -5], [-10, 0], [-5, 5]], color='silver')\nax.add_artist(star)\n\n# Draw a circle with a radius of 0.78125\ncircle = plt.Circle((0, 0), 0.78125, color='gold')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 10 and a height of 5\nrectangle = plt.Rectangle((-5, -2.5), 10, 5, color='lime')\nax.add_artist(rectangle)\n\n# Draw a polygon with 20 sides\npolygon = plt.Polygon([[0, 0], [4, 4], [8, 0], [4, -4], [0, 0], [-4, -4], [-8, 0], [-4, 4]], color='teal')\nax.add_artist(polygon)\n\n# Draw a star with 5 points\nstar = plt.Polygon([[0, 0], [4, 4], [8, 0], [4, -4], [0, 0], [-4, -4], [-8, 0], [-4, 4]], color='crimson')\nax.add_artist(star)\n\n# Draw a circle with a radius of 0.390625\ncircle = plt.Circle((0, 0), 0.390625, color='indigo')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 10 and a height of 5\nrectangle = plt.Rectangle((-5, -2.5), 10, 5, color='silver')\nax.add_artist(rectangle)\n\n# Draw a polygon with 22 sides\npolygon = plt.Polygon([[0, 0], [3, 3], [6, 0], [3, -3], [0, 0], [-3, -3], [-6, 0], [-3, 3]], color='gold')\nax.add_artist(polygon)\n\n# Draw a star with 5 points\nstar = plt.Polygon([[0, 0], [3, 3], [6, 0], [3, -3], [0, 0], [-3, -3], [-6, 0], [-3, 3]], color='lime')\nax.add_artist(star)\n\n# Draw a circle with a radius of 0.1953125\ncircle = plt.Circle((0, 0), 0.1953125, color='teal')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 10 and a height of 5\nrectangle = plt.Rectangle((-5, -2.5), 10, 5, color='crimson')\nax.add_artist(rectangle)\n\n# Draw a polygon with 24 sides\npolygon = plt.Polygon([[0, 0], [2.5, 2.5], [5, 0], [2.5, -2.5], [0, 0], [-2.5, -2.5], [-5, 0], [-2.5, 2.5]], color='indigo')\nax.add_artist(polygon)\n\n# Draw a star with 5 points\nstar = plt.Polygon([[0, 0], [2.5, 2.5], [5, 0], [2.5, -2.5], [0, 0], [-2.5, -2.5], [-5, 0], [-2.5, 2.5]], color='silver')\nax.add_artist(star)\n\n# Draw a circle with a radius of 0.09765625\ncircle = plt.Circle((0, 0), 0.09765625, color='gold')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 10 and a height of 5\nrectangle = plt.Rectangle((-5, -2.5), 10, 5, color='lime')\nax.add_artist(rectangle)\n\n# Draw a polygon with 26 sides\npolygon = plt.Polygon([[0, 0], [2, 2], [4, 0], [2, -2], [0, 0], [-2, -2], [-4, 0], [-2, 2]], color='teal')\nax.add_artist(polygon)\n\n# Draw a star with 5 points\nstar = plt.Polygon([[0, 0], [2, 2], [4, 0], [2, -2], [0, 0], [-2, -2], [-4, 0], [-2, 2]], color='crimson')\nax.add_artist(star)\n\n# Draw a circle with a radius of 0.048828125\ncircle = plt.Circle((0, 0), 0.048828125, color='indigo')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 10 and a height of 5\nrectangle = plt.Rectangle((-5, -2.5), 10, 5, color='silver')\nax.add_artist(rectangle)\n\n# Draw a polygon with 28 sides\npolygon = plt.Polygon([[0, 0], [1.5, 1.5], [3, 0], [1.5, -1.5], [0, 0], [-1.5, -1.5], [-3, 0], [-1.5, 1.5]], color='gold')\nax.add_artist(polygon)\n\n# Draw a star with 5 points\nstar = plt.Polygon([[0, 0], [1.5, 1.5], [3, 0], [1.5, -1.5], [0, 0], [-1.5, -1.5], [-3, 0], [-1.5, 1.5]], color='lime')\nax.add_artist(star)\n\n# Draw a circle with a radius of 0.0244140625\ncircle = plt.Circle((0, 0), 0.0244140625, color='teal')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 10 and a height of 5\nrectangle = plt.Rectangle((-5, -2.5), 10, 5, color='crimson')\nax.add_artist(rectangle)\n\n# Draw a polygon with 30 sides\npolygon = plt.Polygon([[0, 0], [1.25, 1.25], [2.5, 0], [1.25, -1.25], [0, 0], [-1.25, -1.25], [-2.5, 0], [-1.25, 1.25]], color='indigo')\nax.add_artist(polygon)\n\n# Draw a star with 5 points\nstar = plt.Polygon([[0, 0], [1.25, 1.25], [2.5, 0], [1.25, -1.25], [0, 0], [-1.25, -1.25], [-2.5, 0], [-1.25, 1.25]], color='silver')\nax.add_artist(star)\n\n# Draw a circle with a radius of 0.01220703125\ncircle = plt.Circle((0, 0), 0.01220703125, color='gold')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 10 and a height of 5\nrectangle = plt.Rectangle((-5, -2.5), 10, 5, color='lime')\nax.add_artist(rectangle)\n\n# Draw a polygon with 32 sides\npolygon = plt.Polygon([[0, 0], [1, 1], [2, 0], [1, -1], [0, 0], [-1, -1], [-2, 0], [-1, 1]], color='teal')\nax.add_artist(polygon)\n\n# Draw a star with 5 points\nstar = plt.Polygon([[0, 0], [1, 1], [2, 0], [1, -1], [0, 0], [-1, -1], [-2, 0], [-1, 1]], color='crimson')\nax.add_artist(star)\n\n# Draw a circle with a radius of 0.006103515625\ncircle = plt.Circle((0, 0), 0.006103515625, color='indigo')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 10 and a height of 5\nrectangle = plt.Rectangle((-5, -2.5), 10, 5, color='silver')\nax.add_artist(rectangle)\n\n# Draw a polygon with 34 sides\npolygon = plt.Polygon([[0, 0], [0.75, 0.75], [1.5, 0], [0.75, -0.75], [0, 0], [-0.75, -0.75], [-1.5, 0], [-0.75, 0.75]], color='gold')\nax.add_artist(polygon)\n\n# Draw a star with 5 points\nstar = plt.Polygon([[0, 0], [0.75, 0.75], [1.5, 0], [0.75, -0.75], [0, 0], [-0.75, -0.75], [-1.5, 0], [-0.75, 0.75]], color='lime')\nax.add_artist(star)\n\n# Draw a circle with a radius of 0.0030517578125\ncircle = plt.Circle((0, 0), 0.003"}
{"file": "dataset/ori_500/radar_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 3, figsize=(10, 6))\n\n# Define the data for each subplot\ndata1 = [1, 2, 3, 4, 5]\ndata2 = [1, 2, 3, 4, 5]\ndata3 = [1, 2, 3, 4, 5]\n\n# Plot the data in each subplot\naxs[0].plot(data1)\naxs[1].plot(data2)\naxs[2].plot(data3)\n\n# Set the title of each subplot\naxs[0].set_title('Fidelity(D_train)')\naxs[1].set_title('Fidelity(D_test)')\naxs[2].set_title('Fidelity(D_train)')\n\n# Set the x-axis label of each subplot\naxs[0].set_xlabel('MLA')\naxs[1].set_xlabel('MLA')\naxs[2].set_xlabel('MLA')\n\n# Set the y-axis label of each subplot\naxs[0].set_ylabel('Query Error')\naxs[1].set_ylabel('Query Error')\naxs[2].set_ylabel('Query Error')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Heterocycle formation')\n\n# Create a circle\ncircle = plt.Circle((0.5, 0.5), 0.4, color='blue')\nax.add_artist(circle)\n\n# Create a rectangle\nrectangle = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='orange')\nax.add_artist(rectangle)\n\n# Create a polygon\npolygon = plt.Polygon([[0.1, 0.1], [0.3, 0.9], [0.9, 0.7], [0.7, 0.3]], color='green')\nax.add_artist(polygon)\n\n# Create a line\nline = plt.Line2D([0.1, 0.9], [0.1, 0.9], color='red')\nax.add_artist(line)\n\n# Create a scatter plot\nscatter = plt.scatter([0.1, 0.3, 0.7, 0.9], [0.1, 0.3, 0.7, 0.9], color='purple')\nax.add_artist(scatter)\n\n# Create a bar chart\nbar = plt.bar(['A', 'B', 'C'], [10, 20, 30], color='yellow')\nax.add_artist(bar)\n\n# Create a pie chart\npie = plt.pie([10, 20, 30], colors=['cyan', 'magenta', 'yellow'])\nax.add_artist(pie)\n\n# Create a histogram\nhist = plt.hist([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], bins=5, color='black')\nax.add_artist(hist)\n\n# Create a heatmap\nheatmap = plt.imshow(np.random.rand(10, 10), cmap='hot', interpolation='nearest')\nax.add_artist(heatmap)\n\n# Create a contour plot\ncontour = plt.contourf(np.random.rand(10, 10), cmap='coolwarm')\nax.add_artist(contour)\n\n# Create a streamplot\nstream = plt.streamplot(np.random.rand(10, 10), np.random.rand(10, 10), color='brown')\nax.add_artist(stream)\n\n# Create a quiver plot\nquiver = plt.quiver(np.random.rand(10, 10), np.random.rand(10, 10), color='pink')\nax.add_artist(quiver)\n\n# Create a polar plot\npolar = plt.polar(np.linspace(0, 2*np.pi, 100), np.random.rand(100), color='grey')\nax.add_artist(polar)\n\n# Create a 3D plot\nfrom mpl_toolkits.mplot3d import Axes3D\nax3d = fig.add_subplot(111, projection='3d')\nax3d.plot_surface(np.random.rand(10, 10), np.random.rand(10, 10), np.random.rand(10, 10), color='silver')\n\n# Add legends\nax.legend(['Baseline', 'Retro(Syn)_2'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the aspect ratio of the plot to be equal\nax.set_aspect('equal')\n\n# Draw a circle at the center of the plot\ncircle = plt.Circle((0.5, 0.5), 0.4, color='lightgrey')\nax.add_artist(circle)\n\n# Define the data for the radar chart\ndata = [\n    [0.07, 0.03, 0.03, 0.07],\n    [0.07, 0.03, 0.03, 0.07],\n    [0.07, 0.03, 0.03, 0.07],\n    [0.07, 0.03, 0.03, 0.07],\n    [0.07, 0.03, 0.03, 0.07],\n    [0.07, 0.03, 0.03, 0.07]\n]\n\n# Define the labels for the radar chart\nlabels = ['Model A', 'Model B', 'Model C', 'Model D', 'Model E', 'Model F']\n\n# Define the colors for the radar chart\ncolors = ['red', 'blue', 'green', 'orange', 'purple', 'cyan']\n\n# Plot the radar chart\nfor i in range(len(data)):\n    ax.plot([0.5, data[i][0]], [0.5, data[i][1]], color=colors[i])\n    ax.plot([0.5, data[i][2]], [0.5, data[i][3]], color=colors[i])\n\n# Add the labels to the radar chart\nfor i, label in enumerate(labels):\n    ax.text(data[i][0], data[i][1], label, color=colors[i])\n\n# Add the legend to the plot\nlegend_elements = [plt.Line2D([0], [0], marker='o', color='w', label='predicted score', markerfacecolor='g', markersize=10),\n                    plt.Line2D([0], [0], marker='o', color='w', label='helpful score', markerfacecolor='y', markersize=10),\n                    plt.Line2D([0], [0], marker='o', color='w', label='result score', markerfacecolor='b', markersize=10),\n                    plt.Line2D([0], [0], marker='o', color='w', label='rating score', markerfacecolor='r', markersize=10)]\nax.legend(handles=legend_elements, loc='upper right')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('3D-bar')\n\n# Create a circle for the radar chart\ncircle = plt.Circle((0.5, 0.5), 0.4, color='white')\nax.add_artist(circle)\n\n# Add a legend\nlegend_elements = [plt.Line2D([0], [0], marker='o', color='w', label='line_num', markerfacecolor='blue', markersize=10),\n                  plt.Line2D([0], [0], marker='o', color='w', label='pie', markerfacecolor='orange', markersize=10),\n                  plt.Line2D([0], [0], marker='o', color='w', label='radar', markerfacecolor='green', markersize=10),\n                  plt.Line2D([0], [0], marker='o', color='w', label='bubble', markerfacecolor='red', markersize=10)]\nax.legend(handles=legend_elements, loc='upper right')\n\n# Set the aspect ratio of the plot\nax.set_aspect('equal')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Imputation')\n\n# Create a circle for the center of the plot\ncircle = plt.Circle((0.5, 0.5), 0.4, color='black')\nax.add_artist(circle)\n\n# Create a rectangle for the left side of the plot\nrect = plt.Rectangle((0.1, 0.1), 0.2, 0.8, color='blue')\nax.add_artist(rect)\n\n# Create a rectangle for the right side of the plot\nrect = plt.Rectangle((0.7, 0.1), 0.2, 0.8, color='red')\nax.add_artist(rect)\n\n# Create a rectangle for the top of the plot\nrect = plt.Rectangle((0.3, 0.9), 0.4, 0.1, color='green')\nax.add_artist(rect)\n\n# Create a rectangle for the bottom of the plot\nrect = plt.Rectangle((0.3, 0.1), 0.4, 0.1, color='yellow')\nax.add_artist(rect)\n\n# Create a rectangle for the middle of the plot\nrect = plt.Rectangle((0.3, 0.4), 0.4, 0.2, color='purple')\nax.add_artist(rect)\n\n# Create a rectangle for the left side of the plot\nrect = plt.Rectangle((0.1, 0.4), 0.2, 0.2, color='orange')\nax.add_artist(rect)\n\n# Create a rectangle for the right side of the plot\nrect = plt.Rectangle((0.7, 0.4), 0.2, 0.2, color='cyan')\nax.add_artist(rect)\n\n# Create a rectangle for the top of the plot\nrect = plt.Rectangle((0.3, 0.6), 0.4, 0.2, color='magenta')\nax.add_artist(rect)\n\n# Create a rectangle for the bottom of the plot\nrect = plt.Rectangle((0.3, 0.2), 0.4, 0.2, color='brown')\nax.add_artist(rect)\n\n# Create a rectangle for the middle of the plot\nrect = plt.Rectangle((0.3, 0.5), 0.4, 0.2, color='pink')\nax.add_artist(rect)\n\n# Create a rectangle for the left side of the plot\nrect = plt.Rectangle((0.1, 0.5), 0.2, 0.2, color='grey')\nax.add_artist(rect)\n\n# Create a rectangle for the right side of the plot\nrect = plt.Rectangle((0.7, 0.5), 0.2, 0.2, color='silver')\nax.add_artist(rect)\n\n# Create a rectangle for the top of the plot\nrect = plt.Rectangle((0.3, 0.7), 0.4, 0.2, color='gold')\nax.add_artist(rect)\n\n# Create a rectangle for the bottom of the plot\nrect = plt.Rectangle((0.3, 0.3), 0.4, 0.2, color='lime')\nax.add_artist(rect)\n\n# Create a rectangle for the middle of the plot\nrect = plt.Rectangle((0.3, 0.6), 0.4, 0.2, color='navy')\nax.add_artist(rect)\n\n# Create a rectangle for the left side of the plot\nrect = plt.Rectangle((0.1, 0.6), 0.2, 0.2, color='olive')\nax.add_artist(rect)\n\n# Create a rectangle for the right side of the plot\nrect = plt.Rectangle((0.7, 0.6), 0.2, 0.2, color='maroon')\nax.add_artist(rect)\n\n# Create a rectangle for the top of the plot\nrect = plt.Rectangle((0.3, 0.8), 0.4, 0.2, color='aqua')\nax.add_artist(rect)\n\n# Create a rectangle for the bottom of the plot\nrect = plt.Rectangle((0.3, 0.4), 0.4, 0.2, color='silver')\nax.add_artist(rect)\n\n# Create a rectangle for the middle of the plot\nrect = plt.Rectangle((0.3, 0.7), 0.4, 0.2, color='gold')\nax.add_artist(rect)\n\n# Create a rectangle for the left side of the plot\nrect = plt.Rectangle((0.1, 0.7), 0.2, 0.2, color='lime')\nax.add_artist(rect)\n\n# Create a rectangle for the right side of the plot\nrect = plt.Rectangle((0.7, 0.7), 0.2, 0.2, color='navy')\nax.add_artist(rect)\n\n# Create a rectangle for the top of the plot\nrect = plt.Rectangle((0.3, 0.9), 0.4, 0.2, color='olive')\nax.add_artist(rect)\n\n# Create a rectangle for the bottom of the plot\nrect = plt.Rectangle((0.3, 0.5), 0.4, 0.2, color='maroon')\nax.add_artist(rect)\n\n# Create a rectangle for the middle of the plot\nrect = plt.Rectangle((0.3, 0.8), 0.4, 0.2, color='aqua')\nax.add_artist(rect)\n\n# Create a rectangle for the left side of the plot\nrect = plt.Rectangle((0.1, 0.8), 0.2, 0.2, color='silver')\nax.add_artist(rect)\n\n# Create a rectangle for the right side of the plot\nrect = plt.Rectangle((0.7, 0.8), 0.2, 0.2, color='gold')\nax.add_artist(rect)\n\n# Create a rectangle for the top of the plot\nrect = plt.Rectangle((0.3, 0.1), 0.4, 0.2, color='lime')\nax.add_artist(rect)\n\n# Create a rectangle for the bottom of the plot\nrect = plt.Rectangle((0.3, 0.7), 0.4, 0.2, color='navy')\nax.add_artist(rect)\n\n# Create a rectangle for the middle of the plot\nrect = plt.Rectangle((0.3, 0.2), 0.4, 0.2, color='olive')\nax.add_artist(rect)\n\n# Create a rectangle for the left side of the plot\nrect = plt.Rectangle((0.1, 0.2), 0.2, 0.2, color='maroon')\nax.add_artist(rect)\n\n# Create a rectangle for the right side of the plot\nrect = plt.Rectangle((0.7, 0.2), 0.2, 0.2, color='aqua')\nax.add_artist(rect)\n\n# Create a rectangle for the top of the plot\nrect = plt.Rectangle((0.3, 0.3), 0.4, 0.2, color='silver')\nax.add_artist(rect)\n\n# Create a rectangle for the bottom of the plot\nrect = plt.Rectangle((0.3, 0.9), 0.4, 0.2, color='gold')\nax.add_artist(rect)\n\n# Create a rectangle for the middle of the plot\nrect = plt.Rectangle((0.3, 0.4), 0.4, 0.2, color='lime')\nax.add_artist(rect)\n\n# Create a rectangle for the left side of the plot\nrect = plt.Rectangle((0.1, 0.4), 0.2, 0.2, color='navy')\nax.add_artist(rect)\n\n# Create a rectangle for the right side of the plot\nrect = plt.Rectangle((0.7, 0.4), 0.2, 0.2, color='olive')\nax.add_artist(rect)\n\n# Create a rectangle for the top of the plot\nrect = plt.Rectangle((0.3, 0.5), 0.4, 0.2, color='maroon')\nax.add_artist(rect)\n\n# Create a rectangle for the bottom of the plot\nrect = plt.Rectangle((0.3, 0.1), 0.4, 0.2, color='aqua')\nax.add_artist(rect)\n\n# Create a rectangle for the middle of the plot\nrect = plt.Rectangle((0.3, 0.6), 0.4, 0.2, color='silver')\nax.add_artist(rect)\n\n# Create a rectangle for the left side of the plot\nrect = plt.Rectangle((0.1, 0.6), 0.2, 0.2, color='gold')\nax.add_artist(rect)\n\n# Create a rectangle for the right side of the plot\nrect = plt.Rectangle((0.7, 0.6), 0.2, 0.2, color='lime')\nax.add_artist(rect)\n\n# Create a rectangle for the top of the plot\nrect = plt.Rectangle((0.3, 0.7), 0.4, 0.2, color='navy')\nax.add_artist(rect)\n\n# Create a rectangle for the bottom of the plot\nrect = plt.Rectangle((0.3, 0.3), 0.4, 0.2, color='olive')\nax.add_artist(rect)\n\n# Create a rectangle for the middle of the plot\nrect = plt.Rectangle((0.3, 0.8), 0.4, 0.2, color='maroon')\nax.add_artist(rect)\n\n# Create a rectangle for the left side of the plot\nrect = plt.Rectangle((0.1, 0.8), 0.2, 0.2, color='aqua')\nax.add_artist(rect)\n\n# Create a rectangle for the right side of the plot\nrect = plt.Rectangle((0.7, 0.8), 0.2, 0.2, color='silver')\nax.add_artist(rect)\n\n# Create a rectangle for the top of the plot\nrect = plt.Rectangle((0.3, 0.9), 0.4, 0.2, color='gold')\nax.add_artist(rect)\n\n# Create a rectangle for the bottom of the plot\nrect = plt.Rectangle((0.3, 0.5), 0.4, 0.2, color='lime')\nax.add_artist(rect)\n\n# Create a rectangle for the middle of the plot\nrect = plt.Rectangle((0.3, 0.8), 0.4, 0.2, color='navy')\nax.add_artist(rect)\n\n# Create a rectangle for the left side of the plot\nrect = plt.Rectangle((0.1, 0.8), 0.2, 0.2, color='olive')\nax.add_artist(rect)\n\n# Create a rectangle for the right side of the plot\nrect = plt.Rectangle((0.7, 0.8), 0.2, 0.2, color='maroon')\nax.add_artist(rect)\n\n# Create a rectangle for the top of the plot\nrect = plt.Rectangle((0.3, 0.1), 0.4, 0.2, color='aqua')\nax.add_artist(rect)\n\n# Create a rectangle for the bottom of the plot\nrect = plt.Rectangle((0.3, 0.7), 0.4, 0.2, color='silver')\nax.add_artist(rect)\n\n# Create a rectangle for the middle of the plot\nrect = plt.Rectangle((0.3, 0.2), 0.4, 0.2, color='gold')\nax.add_artist(rect)\n\n# Create a rectangle for the left side of the plot\nrect = plt.Rectangle((0.1, 0.2), 0.2, 0.2, color='lime')\nax.add_artist(rect)\n\n# Create a rectangle for the right side of the plot\nrect = plt.Rectangle((0.7, 0.2), 0.2, 0.2, color='navy')\nax.add_artist(rect)\n\n# Create a rectangle for the top of the plot\nrect = plt.Rectangle((0.3, 0.3), 0.4, 0.2, color='olive')\nax.add_artist(rect)\n\n# Create a rectangle for the bottom of the plot\nrect = plt.Rectangle((0.3, 0.9), 0.4, 0.2, color='maroon')\nax.add_artist(rect)\n\n# Create a rectangle for the middle of the plot\nrect = plt.Rectangle((0.3, 0.4), 0.4, 0.2, color='aqua')\nax.add_artist(rect)\n\n# Create a rectangle for the left side of the plot\nrect = plt.Rectangle((0.1, 0.4), 0.2, 0.2, color='silver')\nax.add_artist(rect)\n\n# Create a rectangle for the right side of the plot\nrect = plt.Rectangle((0.7, 0.4), 0.2, 0.2, color='gold')\nax.add_artist(rect)\n\n# Create a rectangle for the top of the plot\nrect = plt.Rectangle((0.3, 0.5), 0.4, 0.2, color='lime')\nax.add_artist(rect)\n\n# Create a rectangle for the bottom of the plot\nrect = plt.Rectangle((0.3, 0.1), 0.4, 0.2, color='navy')\nax.add_artist(rect)\n\n# Create a rectangle for the middle of the plot\nrect = plt.Rectangle((0.3, 0.6), 0.4, 0.2, color='olive')\nax.add_artist(rect)\n\n# Create a rectangle for the left side of the plot\nrect = plt.Rectangle((0.1, 0.6), 0.2, 0.2, color='maroon')\nax.add_artist(rect)\n\n# Create a rectangle for the right side of the plot\nrect = plt.Rectangle((0.7, 0.6), 0.2, 0.2, color='aqua')\nax.add_artist(rect)\n\n# Create a rectangle for the top of the plot\nrect = plt.Rectangle((0.3, 0.7), 0.4, 0.2, color='silver')\nax.add_artist(rect)\n\n# Create a rectangle for the bottom of the plot\nrect = plt.Rectangle((0.3, 0.3), 0.4, 0.2, color='gold')\nax.add_artist(rect)\n\n# Create a rectangle for the middle of the plot\nrect = plt.Rectangle((0.3, 0.8), 0.4, 0.2, color='lime')\nax.add_artist(rect)\n\n# Create a rectangle for the left side of the plot\nrect = plt.Rectangle((0.1, 0.8), 0.2, 0.2, color='navy')\nax.add_artist(rect)\n\n# Create a rectangle for the right side of the plot\nrect = plt.Rectangle((0.7, 0.8), 0.2, 0.2, color='olive')\nax.add_artist(rect)\n\n# Create a rectangle for the top of the plot\nrect = plt.Rectangle((0.3, 0.9), 0.4, 0.2, color='maroon')\nax.add_artist(rect)\n\n# Create a rectangle for the bottom of the plot\nrect = plt.Rectangle((0.3, 0.5), 0.4, 0.2, color='aqua')\nax.add_artist(rect)\n\n# Create a rectangle for the middle of the plot\nrect = plt.Rectangle((0.3, 0.8), 0.4, 0.2, color='silver')\nax.add_artist(rect)\n\n# Create a rectangle for the left side of the plot\nrect = plt.Rectangle((0.1, 0.8), 0.2, 0.2, color='gold')\nax.add_artist(rect)\n\n# Create a rectangle for the right side of the plot\nrect = plt.Rectangle((0.7, 0.8), 0.2, 0.2, color='lime')\nax.add_artist(rect)\n\n# Create a rectangle for the top of the plot\nrect = plt.Rectangle((0.3, 0.1), 0.4, 0.2, color='navy')\nax.add_artist(rect)\n\n# Create a rectangle for the bottom of the plot\nrect = plt.Rectangle((0.3, 0.7), 0.4, 0.2, color='olive')\nax.add_artist(rect)\n\n# Create a rectangle for the middle of the plot\nrect = plt.Rectangle((0.3, 0.2), 0.4, 0.2, color='maroon')\nax.add_artist(rect)\n\n# Create a rectangle for the left side of the plot\nrect = plt.Rectangle((0.1, 0.2), 0.2, 0.2, color='aqua')\nax.add_artist(rect)\n\n# Create a rectangle for the right side of the plot\nrect = plt.Rectangle((0.7, 0.2), 0.2, 0.2, color='silver')\nax.add_artist(rect)\n\n# Create a rectangle for the top of the plot\nrect = plt.Rectangle((0.3, 0.3), 0.4, 0.2, color='gold')\nax.add_artist(rect)\n\n# Create a rectangle for the bottom of the plot\nrect = plt.Rectangle((0.3, 0.9), 0.4, 0.2, color='lime')\nax.add_artist(rect)\n\n# Create a rectangle for the middle of the plot\nrect = plt.Rectangle((0.3, 0.4), 0.4, 0.2, color='navy')\nax.add_artist(rect)\n\n# Create a rectangle for the left side of the plot\nrect = plt.Rectangle((0.1, 0.4), 0.2, 0.2, color='olive')\nax.add_artist(rect)\n\n# Create a rectangle for the right side of the plot\nrect = plt.Rectangle((0.7, 0.4), 0.2, 0.2, color='maroon')\nax.add_artist(rect)\n\n# Create a rectangle for the top of the plot\nrect = plt.Rectangle((0.3, 0.5), 0.4, 0.2, color='aqua')\nax.add_artist(rect)\n\n# Create a rectangle for the bottom of the plot\nrect = plt.Rectangle((0.3, 0.1), 0.4, 0.2, color='silver')\nax.add_artist(rect)\n\n# Create a rectangle for the middle"}
{"file": "dataset/ori_500/radar_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Set the background color of the plot\nax.set_facecolor('black')\n\n# Set the title of the plot\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the labels for the x-axis and y-axis\nax.set_xlabel('Time')\nax.set_ylabel('Price')\n\n# Set the tick labels for the x-axis and y-axis\nax.set_xticks(np.arange(0, 100, 10))\nax.set_yticks(np.arange(0, 100, 10))\n\n# Set the tick label color\nax.tick_params(axis='both', colors='white')\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Price', color='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('gray')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the plot title\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the color of the plot labels\nax.set_xlabel('Time',"}
{"file": "dataset/ori_500/scatter_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 4))\n\n# Set the title of the plot\nax.set_title('Model-Basedness')\n\n# Create a scatter plot\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\nax.scatter(x, y, color='blue')\n\n# Add a legend\nax.legend(['Model-Basedness'])\n\n# Set the x-axis label\nax.set_xlabel('Value')\n\n# Set the y-axis label\nax.set_ylabel('Score')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the title of the plot\nax.set_title('ImageNet-1K Linear Probing')\n\n# Set the x-axis label\nax.set_xlabel('Pre-training GPU Hours')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy [%]')\n\n# Set the x-axis limits\nax.set_xlim(0, 4000)\n\n# Set the y-axis limits\nax.set_ylim(75, 90)\n\n# Create a scatter plot\nax.scatter([100, 2000, 3000], [85, 83, 81], color='black')\n\n# Create a line plot\nax.plot([100, 2000, 3000], [85, 83, 81], color='green')\n\n# Add a legend\nax.legend(['iBOT', 'MoCo v3', 'MAE'])\n\n# Add a text annotation\nax.annotate('D2V2-Refined', xy=(3000, 85), xytext=(3500, 80),\n            arrowprops=dict(facecolor='orange', shrink=0.05))\n\n# Add a text annotation\nax.annotate('D2V2-Refined', xy=(3000, 83), xytext=(3500, 78),\n            arrowprops=dict(facecolor='orange', shrink=0.05))\n\n# Add a text annotation\nax.annotate('D2V2-Refined', xy=(3000, 81), xytext=(3500, 76),\n            arrowprops=dict(facecolor='orange', shrink=0.05))\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Bubble Size: Number of Anomalies Detected')\n\n# Set the x-axis label\nax.set_xlabel('Infernece Time (seconds)')\n\n# Set the y-axis label\nax.set_ylabel('Average Score')\n\n# Set the tick labels for the x-axis\nax.set_xticks([10, 20, 30, 40, 50, 60])\n\n# Set the tick labels for the y-axis\nax.set_yticks([0.5, 0.6, 0.7, 0.8, 0.9])\n\n# Draw a rectangle at the center of the plot\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='blue'))\n\n# Draw a circle at the center of the plot\nax.add_patch(plt.Circle((0.5, 0.5), 0.2, color='red'))\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Number of parameters')\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Set the x and y limits\nax.set_xlim([0, 1])\nax.set_ylim([0, 1])\n\n# Set the x and y labels\nax.set_xlabel('EgoSchema VQA accuracy')\nax.set_ylabel('Perception Test VQA accuracy')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Average Relative Error, u')\n\n# Set the x-axis label\nax.set_xlabel('Test Case Index')\n\n# Set the y-axis label\nax.set_ylabel('Average Relative Error, u')\n\n# Set the x-ticks\nax.set_xticks([1, 2, 3, 4, 5])\n\n# Set the y-ticks\nax.set_yticks([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])\n\n# Add a rectangle for each test case\nrects = []\nfor i in range(1, 6):\n    rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='blue')\n    rects.append(rect)\n    ax.add_patch(rect)\n\n# Add a circle for each test case\ncircles = []\nfor i in range(1, 6):\n    circle = plt.Circle((i-1, 0.5), 0.1, color='black')\n    circles.append(circle)\n    ax.add_patch(circle)\n\n# Add a triangle for each test case\ntriangles = []\nfor i in range(1, 6):\n    triangle = plt.Polygon([(i-1, 0.9), (i-1-0.1, 0.8), (i-1+0.1, 0.8)], color='green')\n    triangles.append(triangle)\n    ax.add_patch(triangle)\n\n# Add a green rectangle for each test case\ngreen_rects = []\nfor i in range(1, 6):\n    green_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='green')\n    green_rects.append(green_rect)\n    ax.add_patch(green_rect)\n\n# Add a blue rectangle for each test case\nblue_rects = []\nfor i in range(1, 6):\n    blue_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='blue')\n    blue_rects.append(blue_rect)\n    ax.add_patch(blue_rect)\n\n# Add a red rectangle for each test case\nred_rects = []\nfor i in range(1, 6):\n    red_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='red')\n    red_rects.append(red_rect)\n    ax.add_patch(red_rect)\n\n# Add a black rectangle for each test case\nblack_rects = []\nfor i in range(1, 6):\n    black_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='black')\n    black_rects.append(black_rect)\n    ax.add_patch(black_rect)\n\n# Add a green rectangle for each test case\ngreen_rects = []\nfor i in range(1, 6):\n    green_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='green')\n    green_rects.append(green_rect)\n    ax.add_patch(green_rect)\n\n# Add a blue rectangle for each test case\nblue_rects = []\nfor i in range(1, 6):\n    blue_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='blue')\n    blue_rects.append(blue_rect)\n    ax.add_patch(blue_rect)\n\n# Add a red rectangle for each test case\nred_rects = []\nfor i in range(1, 6):\n    red_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='red')\n    red_rects.append(red_rect)\n    ax.add_patch(red_rect)\n\n# Add a black rectangle for each test case\nblack_rects = []\nfor i in range(1, 6):\n    black_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='black')\n    black_rects.append(black_rect)\n    ax.add_patch(black_rect)\n\n# Add a green rectangle for each test case\ngreen_rects = []\nfor i in range(1, 6):\n    green_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='green')\n    green_rects.append(green_rect)\n    ax.add_patch(green_rect)\n\n# Add a blue rectangle for each test case\nblue_rects = []\nfor i in range(1, 6):\n    blue_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='blue')\n    blue_rects.append(blue_rect)\n    ax.add_patch(blue_rect)\n\n# Add a red rectangle for each test case\nred_rects = []\nfor i in range(1, 6):\n    red_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='red')\n    red_rects.append(red_rect)\n    ax.add_patch(red_rect)\n\n# Add a black rectangle for each test case\nblack_rects = []\nfor i in range(1, 6):\n    black_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='black')\n    black_rects.append(black_rect)\n    ax.add_patch(black_rect)\n\n# Add a green rectangle for each test case\ngreen_rects = []\nfor i in range(1, 6):\n    green_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='green')\n    green_rects.append(green_rect)\n    ax.add_patch(green_rect)\n\n# Add a blue rectangle for each test case\nblue_rects = []\nfor i in range(1, 6):\n    blue_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='blue')\n    blue_rects.append(blue_rect)\n    ax.add_patch(blue_rect)\n\n# Add a red rectangle for each test case\nred_rects = []\nfor i in range(1, 6):\n    red_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='red')\n    red_rects.append(red_rect)\n    ax.add_patch(red_rect)\n\n# Add a black rectangle for each test case\nblack_rects = []\nfor i in range(1, 6):\n    black_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='black')\n    black_rects.append(black_rect)\n    ax.add_patch(black_rect)\n\n# Add a green rectangle for each test case\ngreen_rects = []\nfor i in range(1, 6):\n    green_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='green')\n    green_rects.append(green_rect)\n    ax.add_patch(green_rect)\n\n# Add a blue rectangle for each test case\nblue_rects = []\nfor i in range(1, 6):\n    blue_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='blue')\n    blue_rects.append(blue_rect)\n    ax.add_patch(blue_rect)\n\n# Add a red rectangle for each test case\nred_rects = []\nfor i in range(1, 6):\n    red_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='red')\n    red_rects.append(red_rect)\n    ax.add_patch(red_rect)\n\n# Add a black rectangle for each test case\nblack_rects = []\nfor i in range(1, 6):\n    black_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='black')\n    black_rects.append(black_rect)\n    ax.add_patch(black_rect)\n\n# Add a green rectangle for each test case\ngreen_rects = []\nfor i in range(1, 6):\n    green_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='green')\n    green_rects.append(green_rect)\n    ax.add_patch(green_rect)\n\n# Add a blue rectangle for each test case\nblue_rects = []\nfor i in range(1, 6):\n    blue_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='blue')\n    blue_rects.append(blue_rect)\n    ax.add_patch(blue_rect)\n\n# Add a red rectangle for each test case\nred_rects = []\nfor i in range(1, 6):\n    red_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='red')\n    red_rects.append(red_rect)\n    ax.add_patch(red_rect)\n\n# Add a black rectangle for each test case\nblack_rects = []\nfor i in range(1, 6):\n    black_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='black')\n    black_rects.append(black_rect)\n    ax.add_patch(black_rect)\n\n# Add a green rectangle for each test case\ngreen_rects = []\nfor i in range(1, 6):\n    green_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='green')\n    green_rects.append(green_rect)\n    ax.add_patch(green_rect)\n\n# Add a blue rectangle for each test case\nblue_rects = []\nfor i in range(1, 6):\n    blue_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='blue')\n    blue_rects.append(blue_rect)\n    ax.add_patch(blue_rect)\n\n# Add a red rectangle for each test case\nred_rects = []\nfor i in range(1, 6):\n    red_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='red')\n    red_rects.append(red_rect)\n    ax.add_patch(red_rect)\n\n# Add a black rectangle for each test case\nblack_rects = []\nfor i in range(1, 6):\n    black_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='black')\n    black_rects.append(black_rect)\n    ax.add_patch(black_rect)\n\n# Add a green rectangle for each test case\ngreen_rects = []\nfor i in range(1, 6):\n    green_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='green')\n    green_rects.append(green_rect)\n    ax.add_patch(green_rect)\n\n# Add a blue rectangle for each test case\nblue_rects = []\nfor i in range(1, 6):\n    blue_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='blue')\n    blue_rects.append(blue_rect)\n    ax.add_patch(blue_rect)\n\n# Add a red rectangle for each test case\nred_rects = []\nfor i in range(1, 6):\n    red_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='red')\n    red_rects.append(red_rect)\n    ax.add_patch(red_rect)\n\n# Add a black rectangle for each test case\nblack_rects = []\nfor i in range(1, 6):\n    black_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='black')\n    black_rects.append(black_rect)\n    ax.add_patch(black_rect)\n\n# Add a green rectangle for each test case\ngreen_rects = []\nfor i in range(1, 6):\n    green_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='green')\n    green_rects.append(green_rect)\n    ax.add_patch(green_rect)\n\n# Add a blue rectangle for each test case\nblue_rects = []\nfor i in range(1, 6):\n    blue_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='blue')\n    blue_rects.append(blue_rect)\n    ax.add_patch(blue_rect)\n\n# Add a red rectangle for each test case\nred_rects = []\nfor i in range(1, 6):\n    red_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='red')\n    red_rects.append(red_rect)\n    ax.add_patch(red_rect)\n\n# Add a black rectangle for each test case\nblack_rects = []\nfor i in range(1, 6):\n    black_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='black')\n    black_rects.append(black_rect)\n    ax.add_patch(black_rect)\n\n# Add a green rectangle for each test case\ngreen_rects = []\nfor i in range(1, 6):\n    green_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='green')\n    green_rects.append(green_rect)\n    ax.add_patch(green_rect)\n\n# Add a blue rectangle for each test case\nblue_rects = []\nfor i in range(1, 6):\n    blue_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='blue')\n    blue_rects.append(blue_rect)\n    ax.add_patch(blue_rect)\n\n# Add a red rectangle for each test case\nred_rects = []\nfor i in range(1, 6):\n    red_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='red')\n    red_rects.append(red_rect)\n    ax.add_patch(red_rect)\n\n# Add a black rectangle for each test case\nblack_rects = []\nfor i in range(1, 6):\n    black_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='black')\n    black_rects.append(black_rect)\n    ax.add_patch(black_rect)\n\n# Add a green rectangle for each test case\ngreen_rects = []\nfor i in range(1, 6):\n    green_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='green')\n    green_rects.append(green_rect)\n    ax.add_patch(green_rect)\n\n# Add a blue rectangle for each test case\nblue_rects = []\nfor i in range(1, 6):\n    blue_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='blue')\n    blue_rects.append(blue_rect)\n    ax.add_patch(blue_rect)\n\n# Add a red rectangle for each test case\nred_rects = []\nfor i in range(1, 6):\n    red_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='red')\n    red_rects.append(red_rect)\n    ax.add_patch(red_rect)\n\n# Add a black rectangle for each test case\nblack_rects = []\nfor i in range(1, 6):\n    black_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='black')\n    black_rects.append(black_rect)\n    ax.add_patch(black_rect)\n\n# Add a green rectangle for each test case\ngreen_rects = []\nfor i in range(1, 6):\n    green_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='green')\n    green_rects.append(green_rect)\n    ax.add_patch(green_rect)\n\n# Add a blue rectangle for each test case\nblue_rects = []\nfor i in range(1, 6):\n    blue_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='blue')\n    blue_rects.append(blue_rect)\n    ax.add_patch(blue_rect)\n\n# Add a red rectangle for each test case\nred_rects = []\nfor i in range(1, 6):\n    red_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='red')\n    red_rects.append(red_rect)\n    ax.add_patch(red_rect)\n\n# Add a black rectangle for each test case\nblack_rects = []\nfor i in range(1, 6):\n    black_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='black')\n    black_rects.append(black_rect)\n    ax.add_patch(black_rect)\n\n# Add a green rectangle for each test case\ngreen_rects = []\nfor i in range(1, 6):\n    green_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='green')\n    green_rects.append(green_rect)\n    ax.add_patch(green_rect)\n\n# Add a blue rectangle for each test case\nblue_rects = []\nfor i in range(1, 6):\n    blue_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='blue')\n    blue_rects.append(blue_rect)\n    ax.add_patch(blue_rect)\n\n# Add a red rectangle for each test case\nred_rects = []\nfor i in range(1, 6):\n    red_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='red')\n    red_rects.append(red_rect)\n    ax.add_patch(red_rect)\n\n# Add a black rectangle for each test case\nblack_rects = []\nfor i in range(1, 6):\n    black_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='black')\n    black_rects.append(black_rect)\n    ax.add_patch(black_rect)\n\n# Add a green rectangle for each test case\ngreen_rects = []\nfor i in range(1, 6):\n    green_rect = plt.Rectangle((i-1, 0.1), 1, 0.9, color='green')\n    green_rects.append(green_rect)\n    ax.add_patch(green_rect)\n\n# Add a blue rectangle for each test case\nblue_rects = []\nfor i in range(1, 6):\n    blue_rect = plt.Rectangle((i-1, 0.1), 1,"}
{"file": "dataset/ori_500/scatter_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 3.0))\n\n# Set the title of the plot\nax.set_title('Accuracies for the ImageNet Classes (ClarifAI)')\n\n# Set the x-axis label\nax.set_xlabel('Classes')\n\n# Set the y-axis label\nax.set_ylabel('Accuracies')\n\n# Define the classes and their accuracies\nclasses = ['spotlight', 'sliding', 'wool', 'weasel', 'space', 'partridge', 'mushroom', 'bighorn']\naccuracies = [0.95, 0.85, 0.75, 0.65, 0.55, 0.45, 0.35, 0.25]\n\n# Plot the data\nax.plot(classes, accuracies, 'ro-')\n\n# Add a legend\nax.legend(['Majority', 'Minority'], loc='upper left')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data for the plots\nx = [50, 40, 30, 20, 10, 0]\ny1 = [68, 66, 64, 62, 60, 58]\ny2 = [68, 66, 64, 62, 60, 58]\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 2, figsize=(10, 4))\n\n# Plot the first subplot\naxs[0].plot(x, y1, 'ro-')\naxs[0].set_title('Logic Grid Puzzle(Accuracy versus token cost)')\naxs[0].set_xlabel('Token cost($)')\naxs[0].set_ylabel('Accuracy(%)')\n\n# Plot the second subplot\naxs[1].plot(x, y2, 'bo-')\naxs[1].set_title('Logic Grid Puzzle(Accuracy versus TFLOPS)')\naxs[1].set_xlabel('TFLOPS')\naxs[1].set_ylabel('Accuracy(%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Energy Efficiency')\n\n# Set the x-axis label\nax.set_xlabel('Efficiency (%)')\n\n# Set the y-axis label\nax.set_ylabel('Carbon Reduction (%)')\n\n# Create a scatter plot with random data\nax.scatter([15, 20, 25, 30, 35, 40, 45, 50], [10, 20, 30, 40, 50, 60, 70, 80], color='blue')\n\n# Add a legend\nax.legend(['Solar', 'Wind', 'Hydro', 'Geothermal', 'Biomass', 'Nuclear', 'Tidal', 'Wave'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the x-axis and y-axis limits\nax.set_xlim(-30, 10)\nax.set_ylim(-10, 30)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('\u0394 Robust Accuracy (%)')\nax.set_ylabel('\u0394 RNFR (%)')\n\n# Create a scatter plot with random data\nx = np.random.rand(50) * 40 - 20\ny = np.random.rand(50) * 40 - 10\nax.scatter(x, y, c='blue', s=100)\n\n# Add a title to the plot\nax.set_title('Scatter Plot of \u0394 Robust Accuracy and \u0394 RNFR')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(2, 16)\n\n# Set the y-axis limits\nax.set_ylim(80, 110)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(2, 17, 2))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(80, 111, 5))\n\n# Set the x-axis labels\nax.set_xticklabels(['2', '4', '6', '8', '10', '12', '14', '16'])\n\n# Set the y-axis labels\nax.set_yticklabels(['80', '85', '90', '95', '100', '105', '110'])\n\n# Draw a rectangle\nrect = plt.Rectangle((2, 80), 14, 30, color='blue')\nax.add_patch(rect)\n\n# Draw a circle\ncircle = plt.Circle((4, 90), 5, color='orange')\nax.add_artist(circle)\n\n# Draw a line\nline = plt.Line2D([2, 16], [80, 110], color='red')\nax.add_line(line)\n\n# Draw a scatter plot\nx = np.random.randint(2, 17, 10)\ny = np.random.randint(80, 111, 10)\nax.scatter(x, y, color='green')\n\n# Draw a bar chart\nx = np.arange(2, 17, 2)\ny = np.random.randint(80, 111, 8)\nax.bar(x, y, color='purple')\n\n# Draw a pie chart\nx = np.array([10, 20, 30, 40])\ny = np.array([10, 20, 30, 40])\nax.pie(y, startangle=90, colors=['cyan', 'magenta', 'yellow', 'black'])\n\n# Draw a histogram\nx = np.random.normal(10, 5, 100)\nax.hist(x, bins=10, color='brown')\n\n# Draw a box plot\nx = np.random.normal(10, 5, 100)\nax.boxplot(x, vert=False, patch_artist=True, boxprops=dict(facecolor='gray'))\n\n# Draw a violin plot\nx = np.random.normal(10, 5, 100)\nax.violinplot(x, showmeans=True, showmedians=True)\n\n# Draw a heatmap\nx = np.random.rand(10, 10)\nax.imshow(x, cmap='hot', interpolation='nearest')\n\n# Draw a contour plot\nx = np.linspace(-10, 10, 100)\ny = np.linspace(-10, 10, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nCS = ax.contourf(X, Y, Z, locator=plt.LogLocator(), cmap='coolwarm')\n\n# Draw a stream plot\nx = np.linspace(-10, 10, 100)\ny = np.linspace(-10, 10, 100)\nX, Y = np.meshgrid(x, y)\nU = np.cos(np.sqrt(X**2 + Y**2))\nV = np.sin(np.sqrt(X**2 + Y**2))\nax.streamplot(X, Y, U, V, color='green')\n\n# Draw a polar plot\ntheta = np.linspace(0, 2*np.pi, 100)\nr = np.linspace(0, 1, 100)\ntheta, r = np.meshgrid(theta, r)\nax.polar(theta, r, color='blue')\n\n# Draw a 3D plot\nfrom mpl_toolkits.mplot3d import Axes3D\nfig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\nx = np.linspace(-10, 10, 100)\ny = np.linspace(-10, 10, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nax.plot_surface(X, Y, Z, cmap='hot')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the x-axis and y-axis limits\nax.set_xlim(2, 16)\nax.set_ylim(80, 110)\n\n# Draw a rectangle for each data point\nax.add_patch(plt.Rectangle((2, 95), 4, 5, color='blue'))\nax.add_patch(plt.Rectangle((6, 90), 4, 5, color='green'))\nax.add_patch(plt.Rectangle((10, 85), 4, 5, color='red'))\nax.add_patch(plt.Rectangle((14, 80), 4, 5, color='yellow'))\n\n# Draw a line graph for each data point\nax.plot([2, 6, 10, 14], [95, 90, 85, 80], 'ro-')\n\n# Add a color bar\ncbar = fig.colorbar(ax.imshow([[0, 100], [100, 0]], cmap='coolwarm'), ax=ax)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(4.0, 8.0))\n\n# Set the title of the graph\nax.set_title('Energy Production Trends')\n\n# Create a list of energy sources\nenergy_sources = ['Solar Energy', 'Wind Energy', 'Hydropower']\n\n# Create a list of colors for each energy source\ncolors = ['cyan', 'red', 'gray']\n\n# Create a list of energy output values\nenergy_output = [220, 210, 200]\n\n# Create a list of installed capacity values\ninstalled_capacity = [175, 200, 225, 250, 275, 300]\n\n# Plot the data\nfor i in range(len(energy_sources)):\n    ax.plot(installed_capacity, energy_output[i], color=colors[i], label=energy_sources[i])\n\n# Add a legend\nax.legend()\n\n# Set the x-axis label\nax.set_xlabel('Installed Capacity (GW)')\n\n# Set the y-axis label\nax.set_ylabel('Energy Output (TWh)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Scatter plot with colorbar\nscatter = ax.scatter([10, 20, 30, 40, 50, 60, 70, 80, 90], [10, 20, 30, 40, 50, 60, 70, 80, 90], c=[10, 20, 30, 40, 50, 60, 70, 80, 90], cmap='coolwarm')\n\n# Add a colorbar\ncbar = fig.colorbar(scatter)\ncbar.set_label('Colorbar label')\n\n# Set the title of the scatter plot\nax.set_title('Scatter plot with colorbar')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the plot\nax.set_title('LibriCSS vs Additional Data 1')\n\n# Create a scatter plot with random data\nx = [2, 3, 4, 5, 6, 7, 8]\ny = [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3]\nax.scatter(x, y, color='blue')\n\n# Add a legend to the plot\nax.legend(['LibriCSS WER', 'Additional Data 1'])\n\n# Set the x-axis label\nax.set_xlabel('Number of Microphones')\n\n# Set the y-axis label\nax.set_ylabel('WER (%)')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_22.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 6))\n\n# Set the title of the plot\nax.set_title('Performance Comparison')\n\n# Create a scatter plot\nax.scatter([0.5, 0.7, 0.9], [0.3, 0.4, 0.5], color='blue', label='Model-Basedness')\nax.scatter([0.3, 0.5, 0.7], [0.2, 0.3, 0.4], color='orange', label='Meta-Cognition')\n\n# Add labels to the axes\nax.set_xlabel('Value')\nax.set_ylabel('Performance')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_23.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Model-Basedness')\n\n# Create a scatter plot with blue dots\nax.scatter([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], color='blue')\n\n# Set the x-axis label\nax.set_xlabel('Models')\n\n# Set the y-axis label\nax.set_ylabel('Score')\n\n# Add a rectangle annotation\nrect = plt.Rectangle((0.5, 0.5), 0.2, 0.2, color='blue')\nax.add_patch(rect)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(2, 2, figsize=(15, 5))\n\n# Scatter plot for the first subplot\naxs[0, 0].scatter([70, 80, 90], [40, 50, 60], color='blue')\naxs[0, 0].set_title('Scatter Plot - deepskyblue')\n\n# Scatter plot for the second subplot\naxs[0, 1].scatter([70, 80, 90], [30, 40, 50], color='magenta')\naxs[0, 1].set_title('Scatter Plot - magenta')\n\n# Scatter plot for the third subplot\naxs[1, 0].scatter([70, 80, 90], [20, 30, 40], color='limegreen')\naxs[1, 0].set_title('Scatter Plot - limegreen')\n\n# Scatter plot for the fourth subplot\naxs[1, 1].scatter([70, 80, 90], [10, 20, 30], color='cyan')\naxs[1, 1].set_title('Scatter Plot - cyan')\n\n# Set the x-axis and y-axis limits for all subplots\nfor ax in axs.flat:\n    ax.set_xlim(70, 90)\n    ax.set_ylim(10, 60)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_25.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nx = [70, 72, 74, 76, 78, 80, 82, 84, 86, 88]\ny1 = [30, 32, 35, 37, 39, 41, 43, 45, 47, 49]\ny2 = [35, 37, 39, 41, 43, 45, 47, 49, 51, 53]\ny3 = [40, 42, 44, 46, 48, 50, 52, 54, 56, 58]\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Plot the data\naxs[0].plot(x, y1, 'b-')\naxs[1].plot(x, y2, 'r-')\naxs[2].plot(x, y3, 'g-')\n\n# Add a legend\naxs[0].legend(['ViTPose (sc) Performance'])\naxs[1].legend(['ViTPose (ft) Performance'])\naxs[2].legend(['VLPose Performance'])\n\n# Set the title of each subplot\naxs[0].set_title('ViTPose (sc) Performance')\naxs[1].set_title('ViTPose (ft) Performance')\naxs[2].set_title('VLPose Performance')\n\n# Set the x-axis label\naxs[0].set_xlabel('Average Precision on HumanArt (%)')\naxs[1].set_xlabel('Average Precision on HumanArt (%)')\naxs[2].set_xlabel('Average Precision on HumanArt (%)')\n\n# Set the y-axis label\naxs[0].set_ylabel('Average Precision on MSCOCO (%)')\naxs[1].set_ylabel('Average Precision on MSCOCO (%)')\naxs[2].set_ylabel('Average Precision on MSCOCO (%)')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='pink')\naxs[1].plot(x, y2, 'o', color='pink')\naxs[2].plot(x, y3, 'o', color='pink')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='orange')\naxs[1].plot(x, y2, 'o', color='orange')\naxs[2].plot(x, y3, 'o', color='orange')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='green')\naxs[1].plot(x, y2, 'o', color='green')\naxs[2].plot(x, y3, 'o', color='green')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='yellow')\naxs[1].plot(x, y2, 'o', color='yellow')\naxs[2].plot(x, y3, 'o', color='yellow')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='cyan')\naxs[1].plot(x, y2, 'o', color='cyan')\naxs[2].plot(x, y3, 'o', color='cyan')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='magenta')\naxs[1].plot(x, y2, 'o', color='magenta')\naxs[2].plot(x, y3, 'o', color='magenta')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='black')\naxs[1].plot(x, y2, 'o', color='black')\naxs[2].plot(x, y3, 'o', color='black')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='white')\naxs[1].plot(x, y2, 'o', color='white')\naxs[2].plot(x, y3, 'o', color='white')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='gray')\naxs[1].plot(x, y2, 'o', color='gray')\naxs[2].plot(x, y3, 'o', color='gray')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='silver')\naxs[1].plot(x, y2, 'o', color='silver')\naxs[2].plot(x, y3, 'o', color='silver')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='gold')\naxs[1].plot(x, y2, 'o', color='gold')\naxs[2].plot(x, y3, 'o', color='gold')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='brown')\naxs[1].plot(x, y2, 'o', color='brown')\naxs[2].plot(x, y3, 'o', color='brown')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='purple')\naxs[1].plot(x, y2, 'o', color='purple')\naxs[2].plot(x, y3, 'o', color='purple')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='orange')\naxs[1].plot(x, y2, 'o', color='orange')\naxs[2].plot(x, y3, 'o', color='orange')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='cyan')\naxs[1].plot(x, y2, 'o', color='cyan')\naxs[2].plot(x, y3, 'o', color='cyan')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='magenta')\naxs[1].plot(x, y2, 'o', color='magenta')\naxs[2].plot(x, y3, 'o', color='magenta')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='black')\naxs[1].plot(x, y2, 'o', color='black')\naxs[2].plot(x, y3, 'o', color='black')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='white')\naxs[1].plot(x, y2, 'o', color='white')\naxs[2].plot(x, y3, 'o', color='white')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='gray')\naxs[1].plot(x, y2, 'o', color='gray')\naxs[2].plot(x, y3, 'o', color='gray')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='silver')\naxs[1].plot(x, y2, 'o', color='silver')\naxs[2].plot(x, y3, 'o', color='silver')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='gold')\naxs[1].plot(x, y2, 'o', color='gold')\naxs[2].plot(x, y3, 'o', color='gold')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='brown')\naxs[1].plot(x, y2, 'o', color='brown')\naxs[2].plot(x, y3, 'o', color='brown')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='purple')\naxs[1].plot(x, y2, 'o', color='purple')\naxs[2].plot(x, y3, 'o', color='purple')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='orange')\naxs[1].plot(x, y2, 'o', color='orange')\naxs[2].plot(x, y3, 'o', color='orange')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='cyan')\naxs[1].plot(x, y2, 'o', color='cyan')\naxs[2].plot(x, y3, 'o', color='cyan')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='magenta')\naxs[1].plot(x, y2, 'o', color='magenta')\naxs[2].plot(x, y3, 'o', color='magenta')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='black')\naxs[1].plot(x, y2, 'o', color='black')\naxs[2].plot(x, y3, 'o', color='black')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='white')\naxs[1].plot(x, y2, 'o', color='white')\naxs[2].plot(x, y3, 'o', color='white')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='gray')\naxs[1].plot(x, y2, 'o', color='gray')\naxs[2].plot(x, y3, 'o', color='gray')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='silver')\naxs[1].plot(x, y2, 'o', color='silver')\naxs[2].plot(x, y3, 'o', color='silver')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='gold')\naxs[1].plot(x, y2, 'o', color='gold')\naxs[2].plot(x, y3, 'o', color='gold')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='brown')\naxs[1].plot(x, y2, 'o', color='brown')\naxs[2].plot(x, y3, 'o', color='brown')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='purple')\naxs[1].plot(x, y2, 'o', color='purple')\naxs[2].plot(x, y3, 'o', color='purple')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='orange')\naxs[1].plot(x, y2, 'o', color='orange')\naxs[2].plot(x, y3, 'o', color='orange')\n\n# Set the color of the legend\naxs[0].legend(handlelength=0)\naxs[1].legend(handlelength=0)\naxs[2].legend(handlelength=0)\n\n# Set the color of the plot\naxs[0].plot(x, y1, 'o', color='cyan')\naxs[1].plot(x, y2, 'o', color='cyan')\naxs[2].plot(x, y3, 'o', color='cyan')\n\n# Set the color of the legend\naxs"}
{"file": "dataset/ori_500/scatter_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Token Accuracy')\n\n# Set the x-axis label\nax.set_xlabel('Token')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy (%)')\n\n# Define the data for the plot\nx = ['CoT', 'DefInt', 'SPP', 'Self-refine', 'ToT', 'MAD+judge', 'SPR', 'Self-refine']\ny = [50, 70, 40, 30, 20, 80, 90, 100]\n\n# Plot the data\nax.plot(x, y, 'ro-')\n\n# Set the x-ticks\nax.set_xticks(range(len(x)))\nax.set_xticklabels(x)\n\n# Set the y-ticks\nax.set_yticks(range(0, 101, 10))\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_4.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Create a scatter plot with random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\ncolors = np.random.rand(100)\nsizes = 1000 * np.random.rand(100)\nscatter = ax.scatter(x, y, c=colors, s=sizes, alpha=0.5)\n\n# Set the title of the plot\nax.set_title('Random Scatter Plot')\n\n# Set the x and y labels\nax.set_xlabel('X-axis')\nax.set_ylabel('Y-axis')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/scatter_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Scatter Plot of WRMSE vs BPP')\n\n# Set the x-axis label\nax.set_xlabel('Bit per pixel (BPP)')\n\n# Set the y-axis label\nax.set_ylabel('WRMSE')\n\n# Set the x-axis limits\nax.set_xlim(0.06, 0.2)\n\n# Set the y-axis limits\nax.set_ylim(200, 800)\n\n# Set the x-axis ticks\nax.set_xticks([0.06, 0.08, 0.1, 0.12, 0.14, 0.16, 0.18, 0.2])\n\n# Set the y-axis ticks\nax.set_yticks([200, 400, 600, 800])\n\n# Add a legend\nax.legend(['SIREN', 'WIRE', 'FFN', 'SZ3', 'NNComp', 'Ours'], loc='upper right')\n\n# Add scatter plots\nax.scatter([0.06, 0.08, 0.1, 0.12, 0.14, 0.16, 0.18, 0.2], [200, 400, 600, 800, 700, 650, 600, 550], color='blue')\nax.scatter([0.06, 0.08, 0.1, 0.12, 0.14, 0.16, 0.18, 0.2], [250, 450, 650, 850, 750, 700, 650, 600], color='green')\nax.scatter([0.06, 0.08, 0.1, 0.12, 0.14, 0.16, 0.18, 0.2], [300, 500, 700, 900, 800, 750, 700, 650], color='red')\nax.scatter([0.06, 0.08, 0.1, 0.12, 0.14, 0.16, 0.18, 0.2], [350, 550, 750, 950, 850, 800, 750, 700], color='purple')\nax.scatter([0.06, 0.08, 0.1, 0.12, 0.14, 0.16, 0.18, 0.2], [400, 600, 800, 1000, 900, 850, 800, 750], color='orange')\nax.scatter([0.06, 0.08, 0.1, 0.12, 0.14, 0.16, 0.18, 0.2], [450, 650, 850, 1050, 950, 900, 850, 800], color='cyan')\nax.scatter([0.06, 0.08, 0.1, 0.12, 0.14, 0.16, 0.18, 0.2], [500, 700, 900, 1100, 1000, 950, 900, 850], color='magenta')\nax.scatter([0.06, 0.08, 0.1, 0.12, 0.14, 0.16, 0.18, 0.2], [550, 750, 950, 1150, 1050, 1000, 950, 900], color='yellow')\nax.scatter([0.06, 0.08, 0.1, 0.12, 0.14, 0.16, 0.18, 0.2], [600, 800, 1000, 1200, 1100, 1050, 1000, 950], color='black')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Create a scatter plot with orange dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='orange')\n\n# Create a scatter plot with blue dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='blue')\n\n# Create a scatter plot with green dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='green')\n\n# Create a scatter plot with red dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='red')\n\n# Create a scatter plot with black dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='black')\n\n# Create a scatter plot with yellow dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='yellow')\n\n# Create a scatter plot with purple dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='purple')\n\n# Create a scatter plot with pink dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='pink')\n\n# Create a scatter plot with brown dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='brown')\n\n# Create a scatter plot with gray dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='gray')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with cyan dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='cyan')\n\n# Create a scatter plot with magenta dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='magenta')\n\n# Create a scatter plot with lime dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='lime')\n\n# Create a scatter plot with olive dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='olive')\n\n# Create a scatter plot with silver dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='silver')\n\n# Create a scatter plot with gold dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='gold')\n\n# Create a scatter plot with maroon dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='maroon')\n\n# Create a scatter plot with navy dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='navy')\n\n# Create a scatter plot with teal dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='teal')\n\n# Create a scatter plot with aqua dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='aqua')\n\n# Create a scatter plot with fuchsia dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='fuchsia')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4,5], [1,2,3,4,5], color='white')\n\n# Create a scatter plot with white dots\nax.scatter([1,2,3,4"}
{"file": "dataset/ori_500/scatter_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 3.0))\n\n# Set the title of the plot\nax.set_title('Number of params. vs. NMAE on QM9')\n\n# Set the x-axis label\nax.set_xlabel('Number of parameters (M)')\n\n# Set the y-axis label\nax.set_ylabel('NMAE')\n\n# Create a scatter plot with the data\nax.scatter([1, 2, 3, 4, 5], [10, 15, 20, 25, 30], color='blue')\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='red')\nax.add_patch(rect)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Legend')\n\n# Set the x-axis label\nax.set_xlabel('PC1')\n\n# Set the y-axis label\nax.set_ylabel('PC2')\n\n# Set the x-axis limits\nax.set_xlim(-0.4, 0.4)\n\n# Set the y-axis limits\nax.set_ylim(-0.2, 0.4)\n\n# Create a scatter plot with random data\nax.scatter([0.1, 0.2, 0.3], [0.1, 0.2, 0.3], color='blue', label='ar')\n\n# Create another scatter plot with random data\nax.scatter([0.1, 0.2, 0.3], [0.1, 0.2, 0.3], color='pink', label='de')\n\n# Create another scatter plot with random data\nax.scatter([0.1, 0.2, 0.3], [0.1, 0.2, 0.3], color='yellow', label='fr')\n\n# Create another scatter plot with random data\nax.scatter([0.1, 0.2, 0.3], [0.1, 0.2, 0.3], color='green', label='he')\n\n# Create a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(7, 10))\n\n# Set the title of the plot\nax.set_title('DE')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7], [0.1, 0.2, 0.3], color='orange')\n\n# Set the x-axis label\nax.set_xlabel('CFA Similarity')\n\n# Set the y-axis label\nax.set_ylabel('MSE')\n\n# Set the x-axis limits\nax.set_xlim(0.5, 0.8)\n\n# Set the y-axis limits\nax.set_ylim(0.1, 0.4)\n\n# Add a legend\nax.legend(['iTrm-All', 'iTrm-En', 'PatchTST', 'TiDE', 'TimeXer'], loc='upper left')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/tree_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(3, 2, figsize=(12.0, 8.0))\n\n# Set the color of the subplots\naxs[0, 0].set_facecolor('lightblue')\naxs[0, 1].set_facecolor('lightcoral')\naxs[1, 0].set_facecolor('lightgreen')\naxs[1, 1].set_facecolor('lightsalmon')\naxs[2, 0].set_facecolor('lightcyan')\naxs[2, 1].set_facecolor('lightyellow')\n\n# Set the title of each subplot\naxs[0, 0].set_title('physicsforums.com 18.42%')\naxs[0, 1].set_title('gmatclub.com 6.26%')\naxs[1, 0].set_title('stackexchange.com 30.6%')\naxs[1, 1].set_title('mathoverflow.net 10.91%')\naxs[2, 0].set_title('mathhelpforum.com 14.21%')\naxs[2, 1].set_title('mathwork.com 4.91%')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/tree_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('#f5f5f5')\n\n# Create a bar chart with the data\nax.bar(['Java', 'Python', 'JavaScript', 'C++'], [10, 20, 27, 23], color='#9c27b0')\n\n# Add labels to the bars\nfor i, v in enumerate([10, 20, 27, 23]):\n    ax.text(i, v + 1, str(v) + '%', ha='center', va='bottom')\n\n# Set the title of the plot\nax.set_title('Programming Language Popularity')\n\n# Set the x-axis label\nax.set_xlabel('Programming Languages')\n\n# Set the y-axis label\nax.set_ylabel('Popularity (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/tree_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(12, 8))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Create a rectangle for the first product\nrect1 = plt.Rectangle((0.1, 0.7), 0.3, 0.2, color='skyblue')\nax.add_patch(rect1)\n\n# Create a rectangle for the second product\nrect2 = plt.Rectangle((0.5, 0.7), 0.3, 0.2, color='orange')\nax.add_patch(rect2)\n\n# Create a rectangle for the third product\nrect3 = plt.Rectangle((0.9, 0.7), 0.3, 0.2, color='lightgreen')\nax.add_patch(rect3)\n\n# Create a rectangle for the fourth product\nrect4 = plt.Rectangle((0.1, 0.3), 0.3, 0.2, color='lightyellow')\nax.add_patch(rect4)\n\n# Create a rectangle for the fifth product\nrect5 = plt.Rectangle((0.5, 0.3), 0.3, 0.2, color='lightcoral')\nax.add_patch(rect5)\n\n# Create a rectangle for the sixth product\nrect6 = plt.Rectangle((0.9, 0.3), 0.3, 0.2, color='lightseagreen')\nax.add_patch(rect6)\n\n# Create a rectangle for the seventh product\nrect7 = plt.Rectangle((0.1, 0.1), 0.3, 0.2, color='lightsalmon')\nax.add_patch(rect7)\n\n# Create a rectangle for the eighth product\nrect8 = plt.Rectangle((0.5, 0.1), 0.3, 0.2, color='lightpink')\nax.add_patch(rect8)\n\n# Create a rectangle for the ninth product\nrect9 = plt.Rectangle((0.9, 0.1), 0.3, 0.2, color='lightcyan')\nax.add_patch(rect9)\n\n# Add text labels to each rectangle\nax.text(0.2, 0.8, 'Adidas 13.42%', fontsize=12)\nax.text(0.6, 0.8, 'Under Armour 8.54%', fontsize=12)\nax.text(1.0, 0.8, 'New Balance 6.26%', fontsize=12)\nax.text(0.2, 0.4, 'Nike 30.6%', fontsize=12)\nax.text(0.6, 0.4, 'Reebok 10.91%', fontsize=12)\nax.text(1.0, 0.4, 'Puma 14.21%', fontsize=12)\nax.text(0.2, 0.0, 'Adidas 13.42%', fontsize=12)\nax.text(0.6, 0.0, 'Under Armour 8.54%', fontsize=12)\nax.text(1.0, 0.0, 'New Balance 6.26%', fontsize=12)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/tree_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(4.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('pink')\n\n# Create a bar chart with the data\nax.bar(['A', 'B', 'C'], [50, 15, 20], color='blue')\n\n# Set the title of the plot\nax.set_title('Bar Chart')\n\n# Set the x-axis label\nax.set_xlabel('Categories')\n\n# Set the y-axis label\nax.set_ylabel('Values')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/tree_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Create a rectangle for the first region\nrect1 = plt.Rectangle((0.1, 0.7), 0.8, 0.2, color='yellow')\nax.add_patch(rect1)\n\n# Create a rectangle for the second region\nrect2 = plt.Rectangle((0.1, 0.45), 0.8, 0.2, color='purple')\nax.add_patch(rect2)\n\n# Create a rectangle for the third region\nrect3 = plt.Rectangle((0.1, 0.2), 0.8, 0.2, color='pink')\nax.add_patch(rect3)\n\n# Create a rectangle for the fourth region\nrect4 = plt.Rectangle((0.1, 0.7), 0.35, 0.2, color='cyan')\nax.add_patch(rect4)\n\n# Create a rectangle for the fifth region\nrect5 = plt.Rectangle((0.55, 0.7), 0.35, 0.2, color='blue')\nax.add_patch(rect5)\n\n# Create a rectangle for the sixth region\nrect6 = plt.Rectangle((0.1, 0.45), 0.35, 0.2, color='lightgreen')\nax.add_patch(rect6)\n\n# Create a rectangle for the seventh region\nrect7 = plt.Rectangle((0.55, 0.45), 0.35, 0.2, color='lightblue')\nax.add_patch(rect7)\n\n# Create a rectangle for the eighth region\nrect8 = plt.Rectangle((0.1, 0.2), 0.35, 0.2, color='lightgreen')\nax.add_patch(rect8)\n\n# Create a rectangle for the ninth region\nrect9 = plt.Rectangle((0.55, 0.2), 0.35, 0.2, color='lightblue')\nax.add_patch(rect9)\n\n# Add text labels to each rectangle\nax.text(0.5, 0.85, 'European\\n15%', ha='center', va='center', fontsize=12)\nax.text(0.5, 0.6, 'Australian\\n18%', ha='center', va='center', fontsize=12)\nax.text(0.5, 0.35, 'South American\\n10%', ha='center', va='center', fontsize=12)\nax.text(0.5, 0.1, 'Asian\\n25%', ha='center', va='center', fontsize=12)\nax.text(0.15, 0.85, 'North American\\n20%', ha='center', va='center', fontsize=12)\nax.text(0.85, 0.85, 'African\\n12%', ha='center', va='center', fontsize=12)\n\n# Set the limits of the plot\nax.set_xlim(0, 1)\nax.set_ylim(0, 1)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Set the title of the plot\nax.set_title('Llama2 Performance')\n\n# Set the x-axis label\nax.set_xlabel('Number of examples')\n\n# Set the y-axis label\nax.set_ylabel('LogP(CL)')\n\n# Create a scatter plot\nx = np.arange(1, 6)\ny = np.random.rand(5) * 6 + 1\nax.scatter(x, y)\n\n# Add a legend\nax.legend(['Llama2', 'Llama2 (In-Chat)'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Comparison of Scores with and without Memory')\n\n# Create a color map for the scores\ncmap = plt.get_cmap('coolwarm')\n\n# Create a scatter plot for each car model\nfor i, car in enumerate(car_models):\n    # Get the score for the car model\n    score = car['score']\n    \n    # Get the efficiency, comfort, and safety scores\n    efficiency = car['efficiency']\n    comfort = car['comfort']\n    safety = car['safety']\n    \n    # Get the memory type\n    memory_type = car['memory_type']\n    \n    # Plot the car model\n    ax.scatter(efficiency, score, c=cmap(comfort), s=safety*100, label=car['name'])\n    \n    # Add a star to the plot if the car has memory\n    if memory_type == 'With Memory':\n        ax.plot(efficiency, score, 'r*', markersize=10)\n    \n    # Add a label to the plot\n    ax.text(efficiency, score, car['name'], fontsize=8)\n\n# Set the x-axis label\nax.set_xlabel('Efficiency')\n\n# Set the y-axis label\nax.set_ylabel('Score')\n\n# Set the legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Define the data\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\n\n# Plot the data\nax.plot(x, y)\n\n# Set the title and labels\nax.set_title('Efficiency')\nax.set_xlabel('Time')\nax.set_ylabel('Score')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 6))\n\n# Set the title of the plot\nax.set_title('Scoring Evaluation')\n\n# Create a bar chart with the data\nax.bar(range(1, 7), [0.5, 0.7, 0.9, 0.3, 0.8, 0.6], color='green')\n\n# Set the x-axis labels\nax.set_xticks(range(1, 7))\nax.set_xticklabels(['1', '2', '3', '4', '5', '6'])\n\n# Set the y-axis label\nax.set_ylabel('Score')\n\n# Set the y-axis limits\nax.set_ylim([0, 1])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Define the data for the plots\nx = np.linspace(0, 10, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\ny3 = np.tan(x)\n\n# Plot the data\nax.plot(x, y1, label='jTrans')\nax.plot(x, y2, label='PalmTree')\nax.plot(x, y3, label='CLAP')\n\n# Set the title and labels\nax.set_title('Stock Market Analysis')\nax.set_xlabel('Time')\nax.set_ylabel('Price')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Create a rectangle for the teacher style\nteacher_style = plt.Rectangle((0.1, 0.1), 0.8, 0.8, fc='darkblue', ec='black')\nax.add_patch(teacher_style)\n\n# Create a rectangle for the standardize style\nstandardize_style = plt.Rectangle((0.2, 0.2), 0.6, 0.6, fc='orange', ec='black')\nax.add_patch(standardize_style)\n\n# Create a circle for the student performance\nstudent_performance = plt.Circle((0.5, 0.5), 0.3, fc='yellow', ec='black')\nax.add_patch(student_performance)\n\n# Set the limits of the x and y axes\nax.set_xlim(0, 1)\nax.set_ylim(0, 1)\n\n# Set the title of the plot\nax.set_title('Student Performance by Teaching Style')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 8))\n\n# Create a rectangle for the logo\nlogo = plt.Rectangle((0.5, 0.5), 0.1, 0.1, color='black')\nax.add_patch(logo)\n\n# Create a circle for the logo\ncircle = plt.Circle((0.5, 0.5), 0.1, color='red')\nax.add_artist(circle)\n\n# Set the title of the plot\nax.set_title('Company Name')\n\n# Set the x-axis label\nax.set_xlabel('X Axis Label')\n\n# Set the y-axis label\nax.set_ylabel('Y Axis Label')\n\n# Set the x-axis limits\nax.set_xlim([0, 1])\n\n# Set the y-axis limits\nax.set_ylim([0, 1])\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 1.1, 0.1))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 1.1, 0.1))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1'])\n\n# Set the x-axis grid lines\nax.grid(True)\n\n# Set the y-axis grid lines\nax.grid(True)\n\n# Set the x-axis tick parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.yaxis.label.set_size(12)\n\n# Set the x-axis title parameters\nax.title.set_size(14)\n\n# Set the y-axis title parameters\nax.title.set_size(14)\n\n# Set the x-axis grid line parameters\nax.grid(True)\n\n# Set the y-axis grid line parameters\nax.grid(True)\n\n# Set the x-axis tick label parameters\nax.tick_params(axis='x', which='major', labelsize=10)\n\n# Set the y-axis tick label parameters\nax.tick_params(axis='y', which='major', labelsize=10)\n\n# Set the x-axis label parameters\nax.xaxis.label.set_size(12)\n\n# Set the y-axis label parameters\nax.y"}
{"file": "dataset/ori_500/violin_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('% Decrease in Test MSE vs. FLAM-GL')\n\n# Set the x-axis label\nax.set_xlabel('Number of Features')\n\n# Set the y-axis label\nax.set_ylabel('% Decrease in Test MSE')\n\n# Set the x-ticks\nax.set_xticks([2, 4, 6, 8, 10])\n\n# Set the y-ticks\nax.set_yticks(range(0, 100, 10))\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'AGIS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Group l0"}
{"file": "dataset/ori_500/violin_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Define the data\nx = np.array([0.88, 0.85, 0.79, 0.67, 0.57])\ny = np.array([0.18, 0.19, 0.19, 0.18, 0.16])\ncolors = ['blue', 'orange', 'green', 'red', 'purple']\narea = np.pi * (np.array([2, 2, 2, 2, 2]))**2  # 0 to 15 point radii\n\n# Plot the scatter plot\nscatter = ax.scatter(x, y, s=area, c=colors, alpha=0.5)\n\n# Add labels and title\nax.set_xlabel('Decimated Sampling Rate')\nax.set_ylabel('KCC')\nax.set_title('KCC vs Decimated Sampling Rate')\n\n# Add a color bar which maps values to colors\ncbar = fig.colorbar(scatter)\ncbar.set_label('Pearson R')\n\n# Add text annotations\nfor i, txt in enumerate(['Raw', '125Hz', '50Hz', '25Hz', '10Hz']):\n    ax.annotate(txt, (x[i], y[i]))\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 8))\n\n# Set the title of the plot\nax.set_title('Distribution of Grades: Class 1')\n\n# Create a bar chart\nax.bar(['Boys', 'Girls'], [95, 85], color='blue')\n\n# Set the x-axis label\nax.set_xlabel('Gender')\n\n# Set the y-axis label\nax.set_ylabel('Grades')\n\n# Display the plot\nplt.show()\n```"}
