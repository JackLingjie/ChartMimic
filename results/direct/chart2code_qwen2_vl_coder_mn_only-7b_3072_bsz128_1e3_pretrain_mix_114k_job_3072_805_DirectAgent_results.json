{"file": "dataset/ori_500/3d_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig = plt.figure(figsize=(7.0, 7.0))\nax = fig.add_subplot(111, projection='3d')\n\n# Generate some data\nx = np.random.rand(10)\ny = np.random.rand(10)\nz = np.random.rand(10)\n\n# Plot the data\nax.scatter(x, y, z, c='r', marker='o')\n\n# Set the labels\nax.set_xlabel('X Label')\nax.set_ylabel('Y Label')\nax.set_zlabel('Z Label')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the aspect ratio of the plot\nax.set_aspect('equal')\n\n# Set the grid lines\nax.grid(True)\n\n# Set the tick labels\nax.set_xticks(np.arange(0.5, 4.0, 1.0))\nax.set_yticks(np.arange(0.5, 4.0, 1.0))\nax.set_zticks(np.arange(0.5, 4.0, 1.0))\n\n# Set the tick labels\nax.set_xticklabels(['0.5', '1.0', '1.5', '2.0', '2.5', '3.0', '3.5', '4.0'])\nax.set_yticklabels(['0.5', '1.0', '1.5', '2.0', '2.5', '3.0', '3.5', '4.0'])\nax.set_zticklabels(['0.5', '1.0', '1.5', '2.0', '2.5', '3.0', '3.5', '4.0'])\n\n# Set the labels\nax.set_xlabel('Height')\nax.set_ylabel('Width')\nax.set_zlabel('Count')\n\n# Set the title\nax.set_title('3D Bar Chart')\n\n# Set the color of the bars\nax.bar3d([0.5, 1.5, 2.5], [0.5, 1.5, 2.5], [0.5, 0.5, 0.5], [1, 1, 1], [1, 1, 1], [1, 1, 1], shade=True, color='red')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_11.pdf", "response": "```\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nimport numpy as np\n\nfig = plt.figure(figsize=(8.0, 6.0))\nax = fig.add_subplot(111, projection='3d')\n\n# Create a sphere\nu = np.linspace(0, 2 * np.pi, 100)\nv = np.linspace(0, np.pi, 100)\nx = 5 * np.outer(np.cos(u), np.sin(v))\ny = 5 * np.outer(np.sin(u), np.sin(v))\nz = 5 * np.outer(np.ones(np.size(u)), np.cos(v))\n\n# Plot the surface\nax.plot_surface(x, y, z, color='magenta')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_12.pdf", "response": "```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\n# Create a figure and a 3D axis.\nfig = plt.figure(figsize=(8.0, 6.0))\nax = fig.add_subplot(111, projection='3d')\n\n# Generate some data.\nx = np.linspace(-4, 4, 10)\ny = np.linspace(-4, 4, 10)\nx, y = np.meshgrid(x, y)\nz = np.sin(np.sqrt(x**2 + y**2))\n\n# Plot the surface.\nsurf = ax.plot_surface(x, y, z, cmap='viridis', linewidth=0)\n\n# Add a color bar which maps values to colors.\nfig.colorbar(surf, shrink=0.5, aspect=5)\n\n# Set the labels for the axes.\nax.set_xlabel('Temperature (\u00b0C)')\nax.set_ylabel('Pressure (kPa)')\nax.set_zlabel('Volume (L)')\n\n# Add a grid to the plot.\nax.grid(True)\n\n# Add a fit line to the plot.\nax.plot([-4, 4], [0, 0], [0, 20], 'b-', label='Fit Line')\n\n# Add discrete points to the plot.\nax.scatter([0, 2, 4], [0, 0, 0], [0, 0, 20], c='r', marker='o', label='Discrete Points')\n\n# Add a legend to the plot.\nax.legend()\n\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Set the grid lines\nax.grid(True)\n\n# Set the tick labels\nax.set_xticks([1, 2, 3, 4])\nax.set_yticks([0, 0.2, 0.4, 0.6, 0.8])\n\n# Set the tick labels\nax.set_xticklabels(['2010', '2012', '2014', '2016'])\nax.set_yticklabels(['0', '0.2', '0.4', '0.6', '0.8'])\n\n# Set the axis labels\nax.set_xlabel('Year')\nax.set_ylabel('Type')\n\n# Set the title\nax.set_title('Student to Teacher Ratio')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the view angle\nax.view_init(elev=30, azim=45)\n\n# Set the color map\ncmap = plt.cm.get_cmap('viridis')\n\n# Set the data\ndata = np.array([[0.7, 0.8, 0.9, 0.8],\n                 [0.6, 0.7, 0.8, 0.7],\n                 [0.5, 0.6, 0.7, 0.6],\n                 [0.4, 0.5, 0.6, 0.5]])\n\n# Plot the data\nfor i in range(data.shape[0]):\n    for j in range(data.shape[1]):\n        ax.bar(i, data[i, j], color=cmap(j/data.shape[1]))\n\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_14.pdf", "response": "```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Create data\nx = np.linspace(0, 10, 100)\ny = np.linspace(0, 10, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(X) * np.cos(Y)\n\n# Plot\nfig = plt.figure(figsize=(8.0, 6.0))\nax = fig.add_subplot(111, projection='3d')\nax.plot_surface(X, Y, Z, cmap='viridis')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_15.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the x-axis labels\nax.set_xticks([2010, 2012, 2014, 2016, 2018])\nax.set_xticklabels(['2010', '2012', '2014', '2016', '2018'])\n\n# Set the y-axis labels\nax.set_yticks([0, 2, 4, 6, 8])\n\n# Set the z-axis labels\nax.set_zticks([0, 2, 4, 6, 8])\n\n# Set the title of the plot\nax.set_title('Investment (Billions USD)')\n\n# Set the labels for the axes\nax.set_xlabel('Year')\nax.set_ylabel('CS')\nax.set_zlabel('Sector')\n\n# Create a 3D scatter plot\nax.scatter([0, 1, 2, 3, 4], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4], c='r', marker='o')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/3d_2.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\ndef plot_function():\n    fig = plt.figure(figsize=(10.0, 7.0))\n    ax = fig.add_subplot(111, projection='3d')\n    x = np.linspace(-1, 1, 100)\n    y = np.linspace(-1, 1, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.sin(np.sqrt(X**2 + Y**2))\n    ax.plot_surface(X, Y, Z, rstride=5, cstride=5, cmap='viridis', edgecolor='none')\n    ax.set_xlabel('x')\n    ax.set_ylabel('y')\n    ax.set_zlabel('z')\n    ax.set_title('f(x)')\n    plt.show()\n\ndef plot_solution():\n    fig = plt.figure(figsize=(10.0, 7.0))\n    ax = fig.add_subplot(111, projection='3d')\n    x = np.linspace(-1, 1, 100)\n    y = np.linspace(-1, 1, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.exp(-(X**2 + Y**2))\n    ax.plot_surface(X, Y, Z, rstride=5, cstride=5, cmap='viridis', edgecolor='none')\n    ax.set_xlabel('x')\n    ax.set_ylabel('y')\n    ax.set_zlabel('z')\n    ax.set_title('solution')\n    plt.show()\n\nplot_function()\nplot_solution()"}
{"file": "dataset/ori_500/3d_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nimport numpy as np\n\n# Create a figure and a 3D axis.\nfig = plt.figure(figsize=(10.0, 6.0))\nax = fig.add_subplot(111, projection='3d')\n\n# Define the data for the plot.\nx = np.array([1, 2, 3, 4, 5, 6])\ny = np.array([1, 2, 3, 4, 5, 6])\nz = np.array([94, 92, 90, 88, 86, 84])\n\n# Plot the data.\nax.plot_trisurf(x, y, z, cmap=plt.cm.viridis)\n\n# Set the labels for the axes.\nax.set_xlabel('K')\nax.set_ylabel('tau')\nax.set_zlabel('Accuracy (%)')\n\n# Set the title of the plot.\nax.set_title('CIFAR10 Spiking ResNet18 T=6')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_4.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\ndef plot_3d_surface():\n    fig = plt.figure(figsize=(15.0, 10.0))\n    ax = fig.add_subplot(111, projection='3d')\n    x = np.linspace(-100, 100, 100)\n    y = np.linspace(-100, 100, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.sin(np.sqrt(X**2 + Y**2))\n    ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='viridis', edgecolor='none')\n    ax.set_xlabel('m')\n    ax.set_ylabel('n')\n    ax.set_zlabel('FREEDOM')\n    ax.set_title('Origin')\n    plt.show()\n\ndef plot_3d_surface_with_meshgrid():\n    fig = plt.figure(figsize=(15.0, 10.0))\n    ax = fig.add_subplot(111, projection='3d')\n    x = np.linspace(-100, 100, 100)\n    y = np.linspace(-100, 100, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.sin(np.sqrt(X**2 + Y**2))\n    ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='viridis', edgecolor='none')\n    ax.set_xlabel('m')\n    ax.set_ylabel('n')\n    ax.set_zlabel('FREEDOM')\n    ax.set_title('MG (ours)')\n    plt.show()\n\ndef plot_3d_surface_with_contourf():\n    fig = plt.figure(figsize=(15.0, 10.0))\n    ax = fig.add_subplot(111, projection='3d')\n    x = np.linspace(-100, 100, 100)\n    y = np.linspace(-100, 100, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.sin(np.sqrt(X**2 + Y**2))\n    ax.contourf(X, Y, Z, zdir='z', offset=-1.5, cmap='viridis')\n    ax.set_xlabel('m')\n    ax.set_ylabel('n')\n    ax.set_zlabel('FREEDOM')\n    ax.set_title('Origin')\n    plt.show()\n\ndef plot_3d_surface_with_contourf_and_meshgrid():\n    fig = plt.figure(figsize=(15.0, 10.0))\n    ax = fig.add_subplot(111, projection='3d')\n    x = np.linspace(-100, 100, 100)\n    y = np.linspace(-100, 100, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.sin(np.sqrt(X**2 + Y**2))\n    ax.contourf(X, Y, Z, zdir='z', offset=-1.5, cmap='viridis')\n    ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='viridis', edgecolor='none')\n    ax.set_xlabel('m')\n    ax.set_ylabel('n')\n    ax.set_zlabel('FREEDOM')\n    ax.set_title('MG (ours)')\n    plt.show()\n\ndef plot_3d_surface_with_contourf_and_meshgrid_and_title():\n    fig = plt.figure(figsize=(15.0, 10.0))\n    ax = fig.add_subplot(111, projection='3d')\n    x = np.linspace(-100, 100, 100)\n    y = np.linspace(-100, 100, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.sin(np.sqrt(X**2 + Y**2))\n    ax.contourf(X, Y, Z, zdir='z', offset=-1.5, cmap='viridis')\n    ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='viridis', edgecolor='none')\n    ax.set_xlabel('m')\n    ax.set_ylabel('n')\n    ax.set_zlabel('FREEDOM')\n    ax.set_title('Origin')\n    plt.show()\n\ndef plot_3d_surface_with_contourf_and_meshgrid_and_title_and_xlabel():\n    fig = plt.figure(figsize=(15.0, 10.0))\n    ax = fig.add_subplot(111, projection='3d')\n    x = np.linspace(-100, 100, 100)\n    y = np.linspace(-100, 100, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.sin(np.sqrt(X**2 + Y**2))\n    ax.contourf(X, Y, Z, zdir='z', offset=-1.5, cmap='viridis')\n    ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='viridis', edgecolor='none')\n    ax.set_xlabel('m')\n    ax.set_ylabel('n')\n    ax.set_zlabel('FREEDOM')\n    ax.set_title('Origin')\n    plt.show()\n\ndef plot_3d_surface_with_contourf_and_meshgrid_and_title_and_xlabel_and_ylabel():\n    fig = plt.figure(figsize=(15.0, 10.0))\n    ax = fig.add_subplot(111, projection='3d')\n    x = np.linspace(-100, 100, 100)\n    y = np.linspace(-100, 100, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.sin(np.sqrt(X**2 + Y**2))\n    ax.contourf(X, Y, Z, zdir='z', offset=-1.5, cmap='viridis')\n    ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='viridis', edgecolor='none')\n    ax.set_xlabel('m')\n    ax.set_ylabel('n')\n    ax.set_zlabel('FREEDOM')\n    ax.set_title('Origin')\n    plt.show()\n\ndef plot_3d_surface_with_contourf_and_meshgrid_and_title_and_xlabel_and_ylabel_and_zlabel():\n    fig = plt.figure(figsize=(15.0, 10.0))\n    ax = fig.add_subplot(111, projection='3d')\n    x = np.linspace(-100, 100, 100)\n    y = np.linspace(-100, 100, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.sin(np.sqrt(X**2 + Y**2))\n    ax.contourf(X, Y, Z, zdir='z', offset=-1.5, cmap='viridis')\n    ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='viridis', edgecolor='none')\n    ax.set_xlabel('m')\n    ax.set_ylabel('n')\n    ax.set_zlabel('FREEDOM')\n    ax.set_title('Origin')\n    plt.show()\n\ndef plot_3d_surface_with_contourf_and_meshgrid_and_title_and_xlabel_and_ylabel_and_zlabel_and_colorbar():\n    fig = plt.figure(figsize=(15.0, 10.0))\n    ax = fig.add_subplot(111, projection='3d')\n    x = np.linspace(-100, 100, 100)\n    y = np.linspace(-100, 100, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.sin(np.sqrt(X**2 + Y**2))\n    ax.contourf(X, Y, Z, zdir='z', offset=-1.5, cmap='viridis')\n    ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='viridis', edgecolor='none')\n    ax.set_xlabel('m')\n    ax.set_ylabel('n')\n    ax.set_zlabel('FREEDOM')\n    ax.set_title('Origin')\n    plt.show()\n\ndef plot_3d_surface_with_contourf_and_meshgrid_and_title_and_xlabel_and_ylabel_and_zlabel_and_colorbar_and_alpha():\n    fig = plt.figure(figsize=(15.0, 10.0))\n    ax = fig.add_subplot(111, projection='3d')\n    x = np.linspace(-100, 100, 100)\n    y = np.linspace(-100, 100, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.sin(np.sqrt(X**2 + Y**2))\n    ax.contourf(X, Y, Z, zdir='z', offset=-1.5, cmap='viridis')\n    ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='viridis', edgecolor='none')\n    ax.set_xlabel('m')\n    ax.set_ylabel('n')\n    ax.set_zlabel('FREEDOM')\n    ax.set_title('Origin')\n    plt.show()\n\ndef plot_3d_surface_with_contourf_and_meshgrid_and_title_and_xlabel_and_ylabel_and_zlabel_and_colorbar_and_alpha_and_edgecolor():\n    fig = plt.figure(figsize=(15.0, 10.0))\n    ax = fig.add_subplot(111, projection='3d')\n    x = np.linspace(-100, 100, 100)\n    y = np.linspace(-100, 100, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.sin(np.sqrt(X**2 + Y**2))\n    ax.contourf(X, Y, Z, zdir='z', offset=-1.5, cmap='viridis')\n    ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='viridis', edgecolor='none')\n    ax.set_xlabel('m')\n    ax.set_ylabel('n')\n    ax.set_zlabel('FREEDOM')\n    ax.set_title('Origin')\n    plt.show()\n\ndef plot_3d_surface_with_contourf_and_meshgrid_and_title_and_xlabel_and_ylabel_and_zlabel_and_colorbar_and_alpha_and_edgecolor_and_linewidth():\n    fig = plt.figure(figsize=(15.0, 10.0))\n    ax = fig.add_subplot(111, projection='3d')\n    x = np.linspace(-100, 100, 100)\n    y = np.linspace(-100, 100, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.sin(np.sqrt(X**2 + Y**2))\n    ax.contourf(X, Y, Z, zdir='z', offset=-1.5, cmap='viridis')\n    ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='viridis', edgecolor='none')\n    ax.set_xlabel('m')\n    ax.set_ylabel('n')\n    ax.set_zlabel('FREEDOM')\n    ax.set_title('Origin')\n    plt.show()\n\ndef plot_3d_surface_with_contourf_and_meshgrid_and_title_and_xlabel_and_ylabel_and_zlabel_and_colorbar_and_alpha_and_edgecolor_and_linewidth_and_antialiased():\n    fig = plt.figure(figsize=(15.0, 10.0))\n    ax = fig.add_subplot(111, projection='3d')\n    x = np.linspace(-100, 100, 100)\n    y = np.linspace(-100, 100, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.sin(np.sqrt(X**2 + Y**2))\n    ax.contourf(X, Y, Z, zdir='z', offset=-1.5, cmap='viridis')\n    ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='viridis', edgecolor='none')\n    ax.set_xlabel('m')\n    ax.set_ylabel('n')\n    ax.set_zlabel('FREEDOM')\n    ax.set_title('Origin')\n    plt.show()\n\ndef plot_3d_surface_with_contourf_and_meshgrid_and_title_and_xlabel_and_ylabel_and_zlabel_and_colorbar_and_alpha_and_edgecolor_and_linewidth_and_antialiased_and_shading():\n    fig = plt.figure(figsize=(15.0, 10.0))\n    ax = fig.add_subplot(111, projection='3d')\n    x = np.linspace(-100, 100, 100)\n    y = np.linspace(-100, 100, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.sin(np.sqrt(X**2 + Y**2))\n    ax.contourf(X, Y, Z, zdir='z', offset=-1.5, cmap='viridis')\n    ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='viridis', edgecolor='none')\n    ax.set_xlabel('m')\n    ax.set_ylabel('n')\n    ax.set_zlabel('FREEDOM')\n    ax.set_title('Origin')\n    plt.show()\n\ndef plot_3d_surface_with_contourf_and_meshgrid_and_title_and_xlabel_and_ylabel_and_zlabel_and_colorbar_and_alpha_and_edgecolor_and_linewidth_and_antialiased_and_shading_and_facecolors():\n    fig = plt.figure(figsize=(15.0, 10.0))\n    ax = fig.add_subplot(111, projection='3d')\n    x = np.linspace(-100, 100, 100)\n    y = np.linspace(-100, 100, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.sin(np.sqrt(X**2 + Y**2))\n    ax.contourf(X, Y, Z, zdir='z', offset=-1.5, cmap='viridis')\n    ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='viridis', edgecolor='none')\n    ax.set_xlabel('m')\n    ax.set_ylabel('n')\n    ax.set_zlabel('FREEDOM')\n    ax.set_title('Origin')\n    plt.show()\n\ndef plot_3d_surface_with_contourf_and_meshgrid_and_title_and_xlabel_and_ylabel_and_zlabel_and_colorbar_and_alpha_and_edgecolor_and_linewidth_and_antialiased_and_shading_and_facecolors_and_edgecolors():\n    fig = plt.figure(figsize=(15.0, 10.0))\n    ax = fig.add_subplot(111, projection='3d')\n    x = np.linspace(-100, 100, 100)\n    y = np.linspace(-100, 100, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.sin(np.sqrt(X**2 + Y**2))\n    ax.contourf(X, Y, Z, zdir='z', offset=-1.5, cmap='viridis')\n    ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='viridis', edgecolor='none')\n    ax.set_xlabel('m')\n    ax.set_ylabel('n')\n    ax.set_zlabel('FREEDOM')\n    ax.set_title('Origin')\n    plt.show()\n\ndef plot_3d_surface_with_contourf_and_meshgrid_and_title_and_xlabel_and_ylabel_and_zlabel_and_colorbar_and_alpha_and_edgecolor_and_linewidth_and_antialiased_and_shading_and_facecolors_and_edgecolors_and_antialiased():\n    fig = plt.figure(figsize=(15.0, 10.0))\n    ax = fig.add_subplot(111, projection='3d')\n    x = np.linspace(-100, 100, 100)\n    y = np.linspace(-100, 100, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.sin(np.sqrt(X**2 + Y**2))\n    ax.contourf(X, Y, Z, zdir='z', offset=-1.5, cmap='viridis')\n    ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='viridis', edgecolor='none')\n    ax.set_xlabel('m')\n    ax.set_ylabel('n')\n    ax.set_zlabel('FREEDOM')\n    ax.set_title('Origin')\n    plt.show()\n\ndef plot_3d_surface_with_contourf_and_meshgrid_and_title_and_xlabel_and_ylabel_and_zlabel_and_colorbar_and_alpha_and_edgecolor_and_linewidth_and_antialiased_and_shading_and_facecolors_and_edgecolors_and_antialiased_and_shading():\n    fig = plt.figure(figsize=(15.0, 10.0))\n    ax = fig.add_subplot(111, projection='3d')\n    x = np.linspace(-100, 100, 100)\n    y = np.linspace(-100, 100, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.sin(np.sqrt(X**2 + Y**2))\n    ax.contourf(X, Y, Z, zdir='z', offset=-1.5, cmap='viridis')\n    ax.plot_surface(X, Y, Z, rstride=1, cstride=1, cmap='viridis', edgecolor='none')\n    ax.set_xlabel('m')\n    ax.set_ylabel('n')\n    ax.set_zlabel('FREEDOM')\n    ax.set_title('Origin')\n    plt.show()\n\ndef plot_3d_surface_with_contourf_and_meshgrid_and_title_and_xlabel_and_ylabel_and_zlabel_and_colorbar_and_alpha_and_edgecolor_and_linewidth_and_antialiased_and_shading_and_facecolors_and_edgecolors_and_antialiased_and_shading_and_facecolors():\n    fig = plt.figure(figsize=(15.0, 10.0))\n    ax = fig.add_subplot(111, projection='3d')\n    x = np.linspace(-100, 100, 100)\n    y = np.linspace(-100, 100, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.sin(np.sqrt(X**2 + Y**2))\n    ax"}
{"file": "dataset/ori_500/3d_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig = plt.figure(figsize=(7.0, 7.0))\nax = fig.add_subplot(111, projection='3d')\n\n# Generate some data\nx = np.random.rand(10)\ny = np.random.rand(10)\nz = np.random.rand(10)\n\n# Plot the data\nax.scatter(x, y, z, c='r', marker='o')\n\n# Set the limits of the axes\nax.set_xlim([0, 1])\nax.set_ylim([0, 1])\nax.set_zlim([0, 1])\n\n# Add a grid\nax.grid(True)\n\n# Add a legend\nax.legend(['Targets'], loc='upper left')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_6.pdf", "response": "```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\n# Create a new figure with a specific size\nfig = plt.figure(figsize=(8.0, 8.0))\nax = fig.add_subplot(111, projection='3d')\n\n# Generate the data for the plot\nx = np.linspace(-4, 4, 20)\ny = np.linspace(-4, 4, 20)\nx, y = np.meshgrid(x, y)\nz = np.sin(np.sqrt(x**2 + y**2))\n\n# Plot the surface\nsurf = ax.plot_surface(x, y, z, cmap='coolwarm', linewidth=0, antialiased=False)\n\n# Add a color bar which maps values to colors.\nfig.colorbar(surf, shrink=0.5, aspect=5)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the x-axis limits\nax.set_xlim(1, 4)\n\n# Set the y-axis limits\nax.set_ylim(0, 12)\n\n# Set the z-axis limits\nax.set_zlim(0, 12)\n\n# Set the x-axis ticks\nax.set_xticks([1, 2, 3, 4])\n\n# Set the y-axis ticks\nax.set_yticks([0, 2, 4, 6, 8, 10])\n\n# Set the z-axis ticks\nax.set_zticks([0, 2, 4, 6, 8, 10])\n\n# Set the x-axis labels\nax.set_xticklabels(['1', '2', '3', '4'])\n\n# Set the y-axis labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the z-axis labels\nax.set_zticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis label\nax.set_xlabel('X')\n\n# Set the y-axis label\nax.set_ylabel('Y')\n\n# Set the z-axis label\nax.set_zlabel('Z')\n\n# Set the colorbar\ncbar = fig.colorbar(ax.imshow(np.random.rand(10, 10), cmap='viridis'))\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_8.pdf", "response": "```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\n# Create some data\nnp.random.seed(42)\nx = np.random.rand(100)\ny = np.random.rand(100)\nz = np.random.rand(100)\n\n# Create a figure and a 3D axis\nfig = plt.figure(figsize=(8.0, 6.0))\nax = fig.add_subplot(111, projection='3d')\n\n# Plot the data\nax.scatter(x, y, z, c='r', marker='o')\n\n# Set the labels\nax.set_xlabel('Age')\nax.set_ylabel('Income')\nax.set_zlabel('Debt')\n\n# Set the tick labels\nax.set_xticks(np.arange(0, 1.1, 0.1))\nax.set_yticks(np.arange(0, 1.1, 0.1))\nax.set_zticks(np.arange(-1, -0.5, 0.1))\n\n# Set the tick labels\nax.set_xticklabels(['0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\nax.set_yticklabels(['0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\nax.set_zticklabels(['-10', '-9', '-8', '-7', '-6', '-5', '-4', '-3', '-2', '-1', '0'])\n\n# Set the background color\nax.w_xaxis.set_pane_color((0.9, 0.9, 0.9, 1.0))\nax.w_yaxis.set_pane_color((0.9, 0.9, 0.9, 1.0))\nax.w_zaxis.set_pane_color((0.9, 0.9, 0.9, 1.0))\n\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\n# Create a figure and a 3D axis.\nfig = plt.figure(figsize=(8.0, 6.0))\nax = fig.add_subplot(111, projection='3d')\n\n# Set the grid lines.\nax.grid(True)\n\n# Set the tick labels.\nax.set_xticks([10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60])\nax.set_yticks([10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60])\nax.set_zticks([-20, -15, -10, -5, 0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60])\n\n# Set the tick labels.\nax.set_xlabel('Temperature (\u00b0C)')\nax.set_ylabel('Time (s)')\nax.set_zlabel('Depth (m)')\n\n# Plot the data.\nax.plot([10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60], [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60], [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60], 'r-')\nax.plot([10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60], [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60], [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60], 'b-')\nax.plot([10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60], [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60], [10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60], 'o-')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_1.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Plot the histogram for the Out distribution\nx_out = np.linspace(-20, 20, 100)\ny_out = 0.5 * (np.exp(-(x_out + 10)**2 / (2 * 2**2)) + np.exp(-(x_out - 10)**2 / (2 * 2**2)))\nax.plot(x_out, y_out, 'b-', label='Out')\n\n# Plot the histogram for the In distribution\nx_in = np.linspace(-20, 20, 100)\ny_in = 0.5 * (np.exp(-(x_in + 10)**2 / (2 * 2**2)) + np.exp(-(x_in - 10)**2 / (2 * 2**2)))\nax.plot(x_in, y_in, 'r-', label='In')\n\n# Add a vertical line at x=0\nax.axvline(0, color='k', linestyle='--')\n\n# Add a vertical line at x=10\nax.axvline(10, color='k', linestyle='--')\n\n# Add a vertical line at x=15\nax.axvline(15, color='k', linestyle='--')\n\n# Add a vertical line at x=20\nax.axvline(20, color='k', linestyle='--')\n\n# Add a vertical line at x=-20\nax.axvline(-20, color='k', linestyle='--')\n\n# Add a vertical line at x=-15\nax.axvline(-15, color='k', linestyle='--')\n\n# Add a vertical line at x=-10\nax.axvline(-10, color='k', linestyle='--')\n\n# Add a vertical line at x=-5\nax.axvline(-5, color='k', linestyle='--')\n\n# Add a vertical line at x=5\nax.axvline(5, color='k', linestyle='--')\n\n# Add a vertical line at x=12\nax.axvline(12, color='k', linestyle='--')\n\n# Add a vertical line at x=14\nax.axvline(14, color='k', linestyle='--')\n\n# Add a vertical line at x=16\nax.axvline(16, color='k', linestyle='--')\n\n# Add a vertical line at x=18\nax.axvline(18, color='k', linestyle='--')\n\n# Add a vertical line at x=22\nax.axvline(22, color='k', linestyle='--')\n\n# Add a vertical line at x=24\nax.axvline(24, color='k', linestyle='--')\n\n# Add a vertical line at x=26\nax.axvline(26, color='k', linestyle='--')\n\n# Add a vertical line at x=28\nax.axvline(28, color='k', linestyle='--')\n\n# Add a vertical line at x=30\nax.axvline(30, color='k', linestyle='--')\n\n# Add a vertical line at x=32\nax.axvline(32, color='k', linestyle='--')\n\n# Add a vertical line at x=34\nax.axvline(34, color='k', linestyle='--')\n\n# Add a vertical line at x=36\nax.axvline(36, color='k', linestyle='--')\n\n# Add a vertical line at x=38\nax.axvline(38, color='k', linestyle='--')\n\n# Add a vertical line at x=40\nax.axvline(40, color='k', linestyle='--')\n\n# Add a vertical line at x=42\nax.axvline(42, color='k', linestyle='--')\n\n# Add a vertical line at x=44\nax.axvline(44, color='k', linestyle='--')\n\n# Add a vertical line at x=46\nax.axvline(46, color='k', linestyle='--')\n\n# Add a vertical line at x=48\nax.axvline(48, color='k', linestyle='--')\n\n# Add a vertical line at x=50\nax.axvline(50, color='k', linestyle='--')\n\n# Add a vertical line at x=52\nax.axvline(52, color='k', linestyle='--')\n\n# Add a vertical line at x=54\nax.axvline(54, color='k', linestyle='--')\n\n# Add a vertical line at x=56\nax.axvline(56, color='k', linestyle='--')\n\n# Add a vertical line at x=58\nax.axvline(58, color='k', linestyle='--')\n\n# Add a vertical line at x=60\nax.axvline(60, color='k', linestyle='--')\n\n# Add a vertical line at x=62\nax.axvline(62, color='k', linestyle='--')\n\n# Add a vertical line at x=64\nax.axvline(64, color='k', linestyle='--')\n\n# Add a vertical line at x=66\nax.axvline(66, color='k', linestyle='--')\n\n# Add a vertical line at x=68\nax.axvline(68, color='k', linestyle='--')\n\n# Add a vertical line at x=70\nax.axvline(70, color='k', linestyle='--')\n\n# Add a vertical line at x=72\nax.axvline(72, color='k', linestyle='--')\n\n# Add a vertical line at x=74\nax.axvline(74, color='k', linestyle='--')\n\n# Add a vertical line at x=76\nax.axvline(76, color='k', linestyle='--')\n\n# Add a vertical line at x=78\nax.axvline(78, color='k', linestyle='--')\n\n# Add a vertical line at x=80\nax.axvline(80, color='k', linestyle='--')\n\n# Add a vertical line at x=82\nax.axvline(82, color='k', linestyle='--')\n\n# Add a vertical line at x=84\nax.axvline(84, color='k', linestyle='--')\n\n# Add a vertical line at x=86\nax.axvline(86, color='k', linestyle='--')\n\n# Add a vertical line at x=88\nax.axvline(88, color='k', linestyle='--')\n\n# Add a vertical line at x=90\nax.axvline(90, color='k', linestyle='--')\n\n# Add a vertical line at x=92\nax.axvline(92, color='k', linestyle='--')\n\n# Add a vertical line at x=94\nax.axvline(94, color='k', linestyle='--')\n\n# Add a vertical line at x=96\nax.axvline(96, color='k', linestyle='--')\n\n# Add a vertical line at x=98\nax.axvline(98, color='k', linestyle='--')\n\n# Add a vertical line at x=100\nax.axvline(100, color='k', linestyle='--')\n\n# Add a vertical line at x=102\nax.axvline(102, color='k', linestyle='--')\n\n# Add a vertical line at x=104\nax.axvline(104, color='k', linestyle='--')\n\n# Add a vertical line at x=106\nax.axvline(106, color='k', linestyle='--')\n\n# Add a vertical line at x=108\nax.axvline(108, color='k', linestyle='--')\n\n# Add a vertical line at x=110\nax.axvline(110, color='k', linestyle='--')\n\n# Add a vertical line at x=112\nax.axvline(112, color='k', linestyle='--')\n\n# Add a vertical line at x=114\nax.axvline(114, color='k', linestyle='--')\n\n# Add a vertical line at x=116\nax.axvline(116, color='k', linestyle='--')\n\n# Add a vertical line at x=118\nax.axvline(118, color='k', linestyle='--')\n\n# Add a vertical line at x=120\nax.axvline(120, color='k', linestyle='--')\n\n# Add a vertical line at x=122\nax.axvline(122, color='k', linestyle='--')\n\n# Add a vertical line at x=124\nax.axvline(124, color='k', linestyle='--')\n\n# Add a vertical line at x=126\nax.axvline(126, color='k', linestyle='--')\n\n# Add a vertical line at x=128\nax.axvline(128, color='k', linestyle='--')\n\n# Add a vertical line at x=130\nax.axvline(130, color='k', linestyle='--')\n\n# Add a vertical line at x=132\nax.axvline(132, color='k', linestyle='--')\n\n# Add a vertical line at x=134\nax.axvline(134, color='k', linestyle='--')\n\n# Add a vertical line at x=136\nax.axvline(136, color='k', linestyle='--')\n\n# Add a vertical line at x=138\nax.axvline(138, color='k', linestyle='--')\n\n# Add a vertical line at x=140\nax.axvline(140, color='k', linestyle='--')\n\n# Add a vertical line at x=142\nax.axvline(142, color='k', linestyle='--')\n\n# Add a vertical line at x=144\nax.axvline(144, color='k', linestyle='--')\n\n# Add a vertical line at x=146\nax.axvline(146, color='k', linestyle='--')\n\n# Add a vertical line at x=148\nax.axvline(148, color='k', linestyle='--')\n\n# Add a vertical line at x=150\nax.axvline(150, color='k', linestyle='--')\n\n# Add a vertical line at x=152\nax.axvline(152, color='k', linestyle='--')\n\n# Add a vertical line at x=154\nax.axvline(154, color='k', linestyle='--')\n\n# Add a vertical line at x=156\nax.axvline(156, color='k', linestyle='--')\n\n# Add a vertical line at x=158\nax.axvline(158, color='k', linestyle='--')\n\n# Add a vertical line at x=160\nax.axvline(160, color='k', linestyle='--')\n\n# Add a vertical line at x=162\nax.axvline(162, color='k', linestyle='--')\n\n# Add a vertical line at x=164\nax.axvline(164, color='k', linestyle='--')\n\n# Add a vertical line at x=166\nax.axvline(166, color='k', linestyle='--')\n\n# Add a vertical line at x=168\nax.axvline(168, color='k', linestyle='--')\n\n# Add a vertical line at x=170\nax.axvline(170, color='k', linestyle='--')\n\n# Add a vertical line at x=172\nax.axvline(172, color='k', linestyle='--')\n\n# Add a vertical line at x=174\nax.axvline(174, color='k', linestyle='--')\n\n# Add a vertical line at x=176\nax.axvline(176, color='k', linestyle='--')\n\n# Add a vertical line at x=178\nax.axvline(178, color='k', linestyle='--')\n\n# Add a vertical line at x=180\nax.axvline(180, color='k', linestyle='--')\n\n# Add a vertical line at x=182\nax.axvline(182, color='k', linestyle='--')\n\n# Add a vertical line at x=184\nax.axvline(184, color='k', linestyle='--')\n\n# Add a vertical line at x=186\nax.axvline(186, color='k', linestyle='--')\n\n# Add a vertical line at x=188\nax.axvline(188, color='k', linestyle='--')\n\n# Add a vertical line at x=190\nax.axvline(190, color='k', linestyle='--')\n\n# Add a vertical line at x=192\nax.axvline(192, color='k', linestyle='--')\n\n# Add a vertical line at x=194\nax.axvline(194, color='k', linestyle='--')\n\n# Add a vertical line at x=196\nax.axvline(196, color='k', linestyle='--')\n\n# Add a vertical line at x=198\nax.axvline(198, color='k', linestyle='--')\n\n# Add a vertical line at x=200\nax.axvline(200, color='k', linestyle='--')\n\n# Add a vertical line at x=202\nax.axvline(202, color='k', linestyle='--')\n\n# Add a vertical line at x=204\nax.axvline(204, color='k', linestyle='--')\n\n# Add a vertical line at x=206\nax.axvline(206, color='k', linestyle='--')\n\n# Add a vertical line at x=208\nax.axvline(208, color='k', linestyle='--')\n\n# Add a vertical line at x=210\nax.axvline(210, color='k', linestyle='--')\n\n# Add a vertical line at x=212\nax.axvline(212, color='k', linestyle='--')\n\n# Add a vertical line at x=214\nax.axvline(214, color='k', linestyle='--')\n\n# Add a vertical line at x=216\nax.axvline(216, color='k', linestyle='--')\n\n# Add a vertical line at x=218\nax.axvline(218, color='k', linestyle='--')\n\n# Add a vertical line at x=220\nax.axvline(220, color='k', linestyle='--')\n\n# Add a vertical line at x=222\nax.axvline(222, color='k', linestyle='--')\n\n# Add a vertical line at x=224\nax.axvline(224, color='k', linestyle='--')\n\n# Add a vertical line at x=226\nax.axvline(226, color='k', linestyle='--')\n\n# Add a vertical line at x=228\nax.axvline(228, color='k', linestyle='--')\n\n# Add a vertical line at x=230\nax.axvline(230, color='k', linestyle='--')\n\n# Add a vertical line at x=232\nax.axvline(232, color='k', linestyle='--')\n\n# Add a vertical line at x=234\nax.axvline(234, color='k', linestyle='--')\n\n# Add a vertical line at x=236\nax.axvline(236, color='k', linestyle='--')\n\n# Add a vertical line at x=238\nax.axvline(238, color='k', linestyle='--')\n\n# Add a vertical line at x=240\nax.axvline(240, color='k', linestyle='--')\n\n# Add a vertical line at x=242\nax.axvline(242, color='k', linestyle='--')\n\n# Add a vertical line at x=244\nax.axvline(244, color='k', linestyle='--')\n\n# Add a vertical line at x=246\nax.axvline(246, color='k', linestyle='--')\n\n# Add a vertical line at x=248\nax.axvline(248, color='k', linestyle='--')\n\n# Add a vertical line at x=250\nax.axvline(250, color='k', linestyle='--')\n\n# Add a vertical line at x=252\nax.axvline(252, color='k', linestyle='--')\n\n# Add a vertical line at x=254\nax.axvline(254, color='k', linestyle='--')\n\n# Add a vertical line at x=256\nax.axvline(256, color='k', linestyle='--')\n\n# Add a vertical line at x=258\nax.axvline(258, color='k', linestyle='--')\n\n# Add a vertical line at x=260\nax.axvline(260, color='k', linestyle='--')\n\n# Add a vertical line at x=262\nax.axvline(262, color='k', linestyle='--')\n\n# Add a vertical line at x=264\nax.axvline(264, color='k', linestyle='--')\n\n# Add a vertical line at x=266\nax.axvline(266, color='k', linestyle='--')\n\n# Add a vertical line at x=268\nax.axvline(268, color='k', linestyle='--')\n\n# Add a vertical line at x=270\nax"}
{"file": "dataset/ori_500/CB_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 5.0))\n\n# Set the x and y limits\nax.set_xlim(150, 400)\nax.set_ylim(-6, 0)\n\n# Add grid lines\nax.grid(True)\n\n# Add labels\nax.set_xlabel('Average Tracked ORB Feature Number')\nax.set_ylabel('Log (ATE RMSE)')\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((200, -3), 200, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((150, -6), 250, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 100, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((300, -6), 50, 2, color='grey', alpha=0.5))\n\n# Add a shaded rectangle\nax.add_patch(plt.Rectangle((350, -6), 50, 2, color='grey"}
{"file": "dataset/ori_500/CB_11.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 5.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the background color of the plot\nax.set_facecolor"}
{"file": "dataset/ori_500/CB_12.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Plot the histogram\nax.hist(np.random.normal(loc=0.5, scale=1.0, size=1000), bins=20, density=True, color='lightgrey')\n\n# Add a vertical line at x=0.5\nax.axvline(x=0.5, color='black', linestyle='--')\n\n# Add a horizontal line at y=0.5\nax.axhline(y=0.5, color='black', linestyle='--')\n\n# Set the title of the plot\nax.set_title('Histogram of a normal distribution')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Define the data for each task\nsnakes = [0.75, 0.72, 0.68, 0.65, 0.63]\nnavigate = [0.79, 0.76, 0.72, 0.69, 0.67]\nquestion_selection = [0.81, 0.78, 0.74, 0.71, 0.69]\nobject_counting = [0.83, 0.80, 0.76, 0.73, 0.71]\n\n# Plot the data for each task\nax.barh(range(len(snakes)), snakes, color='lightblue', label='snakes')\nax.barh(range(len(navigate)), navigate, color='lightgreen', label='navigate')\nax.barh(range(len(question_selection)), question_selection, color='lightcoral', label='question_selection')\nax.barh(range(len(object_counting)), object_counting, color='lightgrey', label='object_counting')\n\n# Set the labels for each task\nax.set_yticks(range(len(snakes)))\nax.set_yticklabels(['snakes', 'navigate', 'question_selection', 'object_counting'])\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Plot the histogram for the 'h' distribution\nax.hist(h, bins=20, color='lightblue', alpha=0.7)\n\n# Plot the histogram for the 'r' distribution\nax.hist(r, bins=20, color='pink', alpha=0.7)\n\n# Set the x-axis label\nax.set_xlabel('norm size')\n\n# Set the y-axis label\nax.set_ylabel('count')\n\n# Set the title of the plot\nax.set_title('summary_xsum:temperature=0.3,device=cuda')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_15.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Define the data\nlabels = ['Same', 'Different', 'Incomparable']\nsizes = [73.3, 23.7, 3.0]\ncolors = ['green', 'blue', 'yellow']\n\n# Plot the pie chart\nax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%')\n\n# Set the title\nax.set_title('Comparative Analysis')\n\n# Add a color bar which maps values to colors.\ncbar = fig.colorbar(ax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%')[0])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_16.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 5.0))\n\n# Set the x-axis label\nax.set_xlabel('Algorithms')\n\n# Set the y-axis label\nax.set_ylabel('Time Cost (Seconds)')\n\n# Set the title of the plot\nax.set_title('Time Cost of Algorithms')\n\n# Create a scatter plot for the SEAC algorithm\nax.scatter(np.random.normal(0, 1, 100), np.random.normal(0, 1, 100), color='green', label='SEAC')\n\n# Create a scatter plot for the SAC(20Hz) algorithm\nax.scatter(np.random.normal(0, 1, 100), np.random.normal(0, 1, 100), color='red', label='SAC(20Hz)')\n\n# Add a legend to the plot\nax.legend()\n\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Define the data for the first subplot\nx = ['CodeBERT', 'ChatGPT-3.5', 'ChatGPT-4.0', 'CodeAgent']\ny = [0.63, 0.80, 0.84, 0.90]\nz = [0.90, 0.87, 0.88, 0.90]\ncolors = ['blue', 'red', 'green', 'purple']\n\n# Plot the data\nfor i in range(len(x)):\n    ax.barh(x[i], y[i], color=colors[i])\n    ax.text(y[i] + 0.02, i, str(round(z[i], 2)) + '%')\n\n# Set the title and labels\nax.set_title('Average Recall Scores by Method')\nax.set_xlabel('Scores')\nax.set_ylabel('Methods')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the x-axis limits\nax.set_xlim(3, 32)\n\n# Set the y-axis limits\nax.set_ylim(80, 97)\n\n# Set the x-axis tick labels\nax.set_xticks([4, 8, 12, 16, 20, 24, 28, 32])\n\n# Set the y-axis tick labels\nax.set_yticks([80, 82, 84, 86, 88, 90, 92, 94, 96, 97])\n\n# Set the x-axis label\nax.set_xlabel('Few-Shot K')\n\n# Set the y-axis label\nax.set_ylabel('Micro F1')\n\n# Set the title of the plot\nax.set_title('Trained w Few-Shot Ex')\n\n# Set the color of the background\nax.set_facecolor('lightgrey')\n\n# Set the color of the grid lines\nax.grid(color='grey', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', labelcolor='black')\n\n# Set the color of the legend\nax.legend(facecolor='white', edgecolor='black')\n\n# Set the color of the line\nax.plot([4, 8, 12, 16, 20, 24, 28, 32], [85, 87, 89, 91, 93, 95, 97, 99], 'bo-', lw=2, markersize=8, label='Trained w Few-Shot Ex')\n\n# Set the color of the marker\nax.plot([4, 8, 12, 16, 20, 24, 28, 32], [85, 87, 89, 91, 93, 95, 97, 99], 'ro-', lw=2, markersize=8, label='Def Deduc+Ex')\n\n# Set the color of the fill\nax.fill_between([4, 8, 12, 16, 20, 24, 28, 32], [85, 87, 89, 91, 93, 95, 97, 99], [85, 87, 89, 91, 93, 95, 97, 99], alpha=0.5, color='lightgrey')\n\n# Set the color of the text\nax.text(4, 85, 'Trained w Few-Shot Ex', fontsize=12, color='blue')\nax.text(4, 83, 'Def Deduc+Ex', fontsize=12, color='red')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 7.0))\n\n# Set the x and y limits\nax.set_xlim(0, 50)\nax.set_ylim(0, 85)\n\n# Set the x and y labels\nax.set_xlabel('Vehicle Parameter Size (units)')\nax.set_ylabel('Efficiency (%)')\n\n# Set the tick marks\nax.set_xticks(np.arange(0, 51, 10))\nax.set_yticks(np.arange(0, 90, 5))\n\n# Set the tick labels\nax.set_xticklabels(['0', '10', '20', '30', '40', '50'])\nax.set_yticklabels(['0', '5', '10', '15', '20', '25', '30', '35', '40', '45', '50', '55', '60', '65', '70', '75', '80'])\n\n# Set the title\nax.set_title('Cars and Trucks')\n\n# Set the legend\nax.legend(['Cars', 'Trucks'], loc='upper right')\n\n# Set the grid\nax.grid(True)\n\n# Set the background color\nax.set_facecolor('white')\n\n# Set the font size\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font family\nax.set_fontname('Arial')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font variant\nax.set_fontvariant('small-caps')\n\n# Set the font stretch\nax.set_fontstretch('ultra-condensed')\n\n# Set the font size\nax.set_fontsize(10)\n\n# Set the font family\nax.set_fontfamily('sans-serif')\n\n# Set the font style\nax.set_fontstyle('italic')\n\n# Set the font weight\nax.set_fontweight('bold')\n\n# Set the font"}
{"file": "dataset/ori_500/CB_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\nx = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\ny = np.array([6, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88])\nz = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n\n# Create the plot\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\nax.plot(x, y, 'm--')\nax.set_xlabel('Model')\nax.set_ylabel('Success Rate (%)')\nax.set_title('Encoding/Decoding Shelling Points by Model')\nax.grid()\n\n# Add the data points\nax.scatter(x, y, color='b')\n\n# Add the legend\nax.legend(['Simple Trend', 'Simple', 'Complex', 'Code'], loc='upper left')\n\n# Add the text\nax.text(0, 6, 'GPT-2', fontsize=12)\nax.text(1, 12, 'Llama 2 7B', fontsize=12)\nax.text(2, 16, 'Llama 2 70B', fontsize=12)\nax.text(3, 20, 'Mixtral 8x7B', fontsize=12)\nax.text(4, 24, 'GPT-3.5', fontsize=12)\nax.text(5, 28, 'GPT-4', fontsize=12)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Plot the calibration curve\nax.plot([0, 1], [0, 1], 'k--')\n\n# Generate random data for the subgroups\nnp.random.seed(42)\nx = np.random.rand(100)\ny = np.random.rand(100)\nax.scatter(x, y, color='orange', label='Subgroups')\n\n# Generate random data for the calibration curve\nx = np.random.rand(100)\ny = np.random.rand(100)\nax.scatter(x, y, color='black', label='Calibration curve')\n\n# Set the limits and labels\nax.set_xlim(0, 1)\nax.set_ylim(0, 1)\nax.set_xlabel('redicted probability')\nax.set_ylabel('Fraction of positives')\n\n# Add a legend\nax.legend()\n\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_21.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Plot the histogram\nx = np.linspace(-6, 6, 100)\ny = 1/(np.sqrt(2*np.pi)*2) * np.exp(-(x**2)/(2*2**2))\nax.plot(x, y, 'k-', lw=2)\n\n# Add a box plot\nbox = ax.boxplot([np.random.normal(0, 1, 100), np.random.normal(0, 1, 100)], positions=[0, 1], widths=0.5, patch_artist=True, vert=False)\n\n# Add a scatter plot\nx = np.random.normal(0, 1, 100)\ny = np.random.normal(0, 1, 100)\nax.scatter(x, y, color='r', s=10)\n\n# Add a violin plot\nviolin = ax.violinplot([np.random.normal(0, 1, 100), np.random.normal(0, 1, 100)], positions=[0, 1], showmeans=True, showmedians=False, showextrema=False)\n\n# Add a bar chart\nbar = ax.bar([0, 1], [10, 20], color='b')\n\n# Add a histogram\nhist = ax.hist([np.random.normal(0, 1, 100), np.random.normal(0, 1, 100)], bins=10, color='g')\n\n# Add a scatter plot\nx = np.random.normal(0, 1, 100)\ny = np.random.normal(0, 1, 100)\nax.scatter(x, y, color='r', s=10)\n\n# Add a box plot\nbox = ax.boxplot([np.random.normal(0, 1, 100), np.random.normal(0, 1, 100)], positions=[0, 1], widths=0.5, patch_artist=True, vert=False)\n\n# Add a scatter plot\nx = np.random.normal(0, 1, 100)\ny = np.random.normal(0, 1, 100)\nax.scatter(x, y, color='r', s=10)\n\n# Add a violin plot\nviolin = ax.violinplot([np.random.normal(0, 1, 100), np.random.normal(0, 1, 100)], positions=[0, 1], showmeans=True, showmedians=False, showextrema=False)\n\n# Add a bar chart\nbar = ax.bar([0, 1], [10, 20], color='b')\n\n# Add a histogram\nhist = ax.hist([np.random.normal(0, 1, 100), np.random.normal(0, 1, 100)], bins=10, color='g')\n\nplt.show()"}
{"file": "dataset/ori_500/CB_22.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, axs = plt.subplots(2, 2, figsize=(10.0, 8.0))\n\n# Plot the first subplot\naxs[0, 0].plot([1600, 1625, 1650, 1675, 1700, 1725], [0.0000, 0.0025, 0.0050, 0.0025, 0.0000, 0.0000], 'bo-')\naxs[0, 0].set_title('Total')\naxs[0, 0].set_xlabel('Daily reward (Ether)')\naxs[0, 0].set_ylabel('Probability')\n\n# Plot the second subplot\naxs[0, 1].plot([205, 210, 215, 220], [0.0000, 0.0025, 0.0050, 0.0025], 'bo-')\naxs[0, 1].set_title('Proposer')\naxs[0, 1].set_xlabel('Daily reward (Ether)')\naxs[0, 1].set_ylabel('Probability')\n\n# Plot the third subplot\naxs[1, 0].plot([1340, 1360, 1380, 1400, 1420, 1440, 1460], [0.0000, 0.0025, 0.0050, 0.0025, 0.0000, 0.0000, 0.0000], 'bo-')\naxs[1, 0].set_title('Attester')\naxs[1, 0].set_xlabel('Daily reward (Ether)')\naxs[1, 0].set_ylabel('Probability')\n\n# Plot the fourth subplot\naxs[1, 1].plot([48, 49, 50, 51, 52], [0.0000, 0.0025, 0.0050, 0.0025, 0.0000], 'bo-')\naxs[1, 1].set_title('Sync committee member')\naxs[1, 1].set_xlabel('Daily reward (Ether)')\naxs[1, 1].set_ylabel('Probability')\n\nplt.show()"}
{"file": "dataset/ori_500/CB_23.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 8.0))\n\n# Set the x-axis label\nax.set_xlabel('Trainable Parameter Size (M)')\n\n# Set the y-axis label\nax.set_ylabel('RMSE')\n\n# Set the title of the plot\nax.set_title('Llama2 7B vs Llama2 13B')\n\n# Define the data points\nx = [0, 50, 100, 150]\ny = [1.15, 1.19, 1.21, 1.22]\n\n# Plot the data points\nax.plot(x, y, 'ro-')\n\n# Add annotations for each data point\nax.annotate('LlaSMol FNN', xy=(0, 1.15), xytext=(0, 1.15),\n            arrowprops=dict(facecolor='black', shrink=0.05))\nax.annotate('LlaSMol Attn', xy=(0, 1.19), xytext=(0, 1.19),\n            arrowprops=dict(facecolor='black', shrink=0.05))\nax.annotate('LlaSMol Large', xy=(0, 1.21), xytext=(0, 1.21),\n            arrowprops=dict(facecolor='black', shrink=0.05))\nax.annotate('LlaSMol Lite', xy=(0, 1.22), xytext=(0, 1.22),\n            arrowprops=dict(facecolor='black', shrink=0.05))\n\n# Set the tick marks\nax.set_xticks(np.arange(0, 160, 50))\nax.set_yticks(np.arange(1.1, 1.3, 0.05))\n\n# Set the limits of the axes\nax.set_xlim([0, 150])\nax.set_ylim([1.1, 1.3])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_24.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Define the data for the histogram\nx = np.array([40, 60, 80, 100, 120, 140, 160])\ny = np.array([0.00, 0.03, 0.06, 0.09, 0.06, 0.03, 0.00])\n\n# Plot the histogram\nax.bar(x, y, color='blue')\n\n# Add the mean value\nax.axvline(80, color='black', linestyle='--')\nax.text(80, 0.05, '80', ha='center', va='bottom')\n\n# Add the standard deviation values\nax.axvline(40, color='black', linestyle='--')\nax.text(40, 0.05, '40', ha='center', va='bottom')\nax.axvline(40, color='black', linestyle='--')\nax.text(40, 0.05, '40', ha='center', va='bottom')\n\n# Add the distribution's name\nax.set_title('Distribution of Execution Duration(clock)')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_25.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Define the data\nx = np.array([15, 20, 30, 40, 50, 60, 70, 80, 90, 100])\ny = np.array([18, 14, 13, 12, 9, 7, 6, 5, 4, 3])\n\n# Plot the data\nax.plot(x, y, 'ro-')\n\n# Set the labels\nax.set_xlabel('Instance size')\nax.set_ylabel('Makespan (step)')\nax.set_title('Methods')\n\n# Add a legend\nax.legend(['PetriRL', 'GAM', 'GIN', 'DGERD'], loc='upper left')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_26.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 5.0))\n\n# Set the x-axis label\nax.set_xlabel('Algorithms')\n\n# Set the y-axis label\nax.set_ylabel('Time Cost (Seconds)')\n\n# Set the title of the plot\nax.set_title('Comparison of Algorithms')\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 1])\nax.set_xticklabels(['SEAC', 'CTCO'])\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(-1, 4, 1))\n\n# Set the limits for the x-axis\nax.set_xlim(-0.5, 1.5)\n\n# Set the limits for the y-axis\nax.set_ylim(-1, 4)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the width of the axes\nax.spines['bottom'].set_linewidth(2)\nax.spines['top'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', top=True, bottom=True, left=True, right=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False, labelbottom=True, labelleft=True, labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelwidth=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsep=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelpad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both',"}
{"file": "dataset/ori_500/CB_27.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the x-axis labels\nax.set_xticks([0, 1, 2, 3])\nax.set_xticklabels(['Adidas', 'Nike', 'New Balance', 'Our Brand'])\n\n# Set the y-axis limits\nax.set_ylim(40, 120)\n\n# Add grid lines\nax.grid(True)\n\n# Plot the data\nax.plot([0, 1, 2, 3], [85, 90, 80, 70], 'o-')\nax.plot([0, 1, 2, 3], [75, 80, 70, 60], 'o-')\n\n# Add the legend\nax.legend(['Adidas', 'Nike', 'New Balance', 'Our Brand'], loc='upper left')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_28.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Plot the data\nax.plot([0.00, 0.01, 0.02, 0.03], [2000, 2001, 2002, 2003], 'bo-')\nax.plot([0.00, 0.01, 0.02, 0.03], [1975, 1976, 1977, 1978], 'ro-')\n\n# Set the x-axis label\nax.set_xlabel('Density')\n\n# Set the y-axis label\nax.set_ylabel('Year')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_29.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Define the data for the first plot\nx = np.array([20, 10, 40, 30, 60, 70, 90, 80, 90, 120])\ny = np.array([10, 20, 30, 40, 50, 60, 70, 80, 90, 120])\n\n# Plot the data\nax.plot(x, y, 'o-')\n\n# Set the title and labels\nax.set_title('Patent Filings in 2013')\nax.set_xlabel('Number of Patents')\nax.set_ylabel('Technology Field')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_3.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig = plt.figure(figsize=(6.0, 6.0))\n\n# Add a subplot to the figure\nax = fig.add_subplot(111)\n\n# Set the x and y limits for the plot\nax.set_xlim([0, 1])\nax.set_ylim([0, 1])\n\n# Set the x and y labels for the plot\nax.set_xlabel('Predicted probability')\nax.set_ylabel('Fraction of positives')\n\n# Set the title of the plot\nax.set_title('Calibration curve')\n\n# Set the tick marks for the x and y axes\nax.set_xticks(np.arange(0, 1.1, 0.25))\nax.set_yticks(np.arange(0, 1.1, 0.25))\n\n# Set the grid lines for the plot\nax.grid(True)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('viridis')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('plasma')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('coolwarm')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('hot')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('spring')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('summer')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('autumn')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('winter')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('bone')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('copper')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('pink')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('gray')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('gist_earth')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('gist_gray')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('gist_heat')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('gist_ncar')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('gist_rainbow')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('gist_stern')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('gist_yarg')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('gnuplot')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('gnuplot2')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('gnuplot_r')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('hot')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('hot_r')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('hsv')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('hsv_r')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('inferno')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('jet')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('magma')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('nipy_spectral')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('ocean')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('prism')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('rainbow')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('seismic')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('spectral')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('spring')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('summer')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('terrain')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('viridis')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('winter')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('YlGnBu')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('YlOrBr')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('YlOrRd')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('afmhot')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('brg')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('bwr')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('cool')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('coolwarm')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('copper')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('flag')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('gist_earth')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('gist_gray')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('gist_heat')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('gist_ncar')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('gist_rainbow')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('gist_stern')\n\n# Generate random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data points\nax.scatter(x, y, c=cmap(y), s=10)\n\n# Set the color map for the plot\ncmap = plt.cm.get_cmap('gist_yarg')\n\n# Generate random data points"}
{"file": "dataset/ori_500/CB_30.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nquarters = ['Q1', 'Q2', 'Q3', 'Q4']\ncompanies = ['Tesla', 'BMW', 'BYD', 'Porsche']\nearnings = [[350, 300, 250, 200], [300, 250, 200, 150], [250, 200, 150, 100], [200, 150, 100, 50]]\ngrowth = [40, 30, 20, 10]\n\n# Plot\nfig, ax1 = plt.subplots(figsize=(8.0, 6.0))\nax1.set_xlabel('Quarter')\nax1.set_ylabel('Earnings ($1000)')\nax1.set_title('Growth %')\nax1.set_xticks(np.arange(len(quarters)))\nax1.set_xticklabels(quarters)\nax1.plot(growth, marker='o', color='magenta')\n\nax2 = ax1.twinx()\nax2.set_ylabel('Growth %')\nax2.set_ylim(0, 100)\nax2.set_yticks(np.arange(0, 101, 10))\n\nfor i, company in enumerate(companies):\n    ax1.barh(i, earnings[i], color=plt.cm.tab20c(i), label=company)\n\nfig.tight_layout()\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_4.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Define the data for the bar chart\nx = ['Linear probing', 'BitFit', 'Prompt Tuning', 'Full finetuning', 'LoRA', 'Ours (LoSA)']\ny = [0.24, 0.23, 0.25, 0.25, 0.26, 0.27]\ncolors = ['blue', 'orange', 'green', 'red', 'purple', 'brown']\n\n# Plot the bar chart\nax.bar(x, y, color=colors)\n\n# Add the line graph\nax.plot([0, 1, 2, 3, 4, 5], [0.25, 0.26, 0.27, 0.28, 0.29, 0.30], 'k-')\n\n# Add the legend\nax.legend(['Train sec / img', 'Inference GFLPs', 'Param, log10', 'Train Memory'], loc='upper left')\n\n# Add the title\nax.set_title('Normalized Requirements (lower is better)')\n\n# Add the x-axis label\nax.set_xlabel('Methods')\n\n# Add the y-axis label\nax.set_ylabel('Normalized Requirements')\n\n# Add the y-axis tick labels\nax.set_yticks(np.arange(0.2, 0.31, 0.01))\n\n# Add the x-axis tick labels\nax.set_xticks(np.arange(len(x)))\n\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_5.pdf", "response": "```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Generate random data\nnp.random.seed(42)\nx = np.random.rand(100)\ny = np.random.rand(100)\nz = np.random.rand(100)\n\n# Create a figure with two subplots\nfig, (ax1, ax2) = plt.subplots(2, 1, figsize=(6.0, 6.0))\n\n# Plot the first subplot\nax1.plot(x, y, 'o')\nax1.set_xlabel('TM-score')\nax1.set_ylabel('Seq-ident')\n\n# Plot the second subplot\nax2.bar(range(len(z)), z)\nax2.set_xlabel('Bar chart')\nax2.set_ylabel('Values')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_6.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Plot the scatter plot\nax.scatter(np.random.randn(100), np.random.randn(100), c=np.random.rand(100), s=50)\n\n# Add a color bar\ncbar = fig.colorbar(ax.collections[0])\n\n# Set the color bar label\ncbar.set_label('Color bar label')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/CB_7.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the grid\nax.grid(True)\n\n# Set the tick marks\nax.set_xticks(np.arange(0, 130, 10))\nax.set_yticks(np.arange(0, 130, 10))\n\n# Set the tick labels\nax.set_xticklabels(['0K', '8K', '16K', '24K', '32K', '40K', '48K', '56K', '64K', '72K', '80K', '88K', '96K', '104K', '112K', '120K', '128K'])\nax.set_yticklabels(['0K', '8K', '16K', '24K', '32K', '40K', '48K', '56K', '64K', '72K', '80K', '88K', '96K', '104K', '112K', '120K', '128K'])\n\n# Plot the points\nax.plot([0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128], [0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128], 'o-')\n\n# Set the title and labels\nax.set_title('HC_first (after aging)')\nax.set_xlabel('HC_first (before aging)')\nax.set_ylabel('HC_first (after aging)')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_8.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Set the x and y axis limits\nax.set_xlim(0, 10)\nax.set_ylim(0, 1)\n\n# Set the x and y axis labels\nax.set_xlabel('TMScore')\nax.set_ylabel('Sequence ID')\n\n# Set the grid lines\nax.grid(True)\n\n# Set the tick marks\nax.set_xticks(np.arange(0, 10, 0.5))\nax.set_yticks(np.arange(0, 1, 0.2))\n\n# Set the tick labels\nax.set_xticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8'])\n\n# Set the title of the plot\nax.set_title('TMscore')\n\n# Set the font size of the title\nax.set_title_fontsize(12)\n\n# Set the font size of the x and y axis labels\nax.set_xlabel_fontsize(12)\nax.set_ylabel_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the grid lines\nax.set_grid_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font size of the tick labels\nax.set_xticklabels_fontsize(12)\nax.set_yticklabels_fontsize(12)\n\n# Set the font size of the tick marks\nax.set_xticks_fontsize(12)\nax.set_yticks_fontsize(12)\n\n# Set the font"}
{"file": "dataset/ori_500/CB_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nx = np.array([4211, 2411, 2141, 1124])\ny = np.array([0.9628, 0.9604, 0.9624, 0.9592])\nz = np.array([0.9640, 0.9624, 0.9612, 0.9561])\nw = np.array([0.9600, 0.9600, 0.9580, 0.9560])\nv = np.array([0.9560, 0.9560, 0.9580, 0.9560])\n\n# Plot\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\nax.plot(x, y, 'bo-', label='SRCC')\nax.plot(x, z, 'ro-', label='PLCC')\nax.plot(x, w, 'go-', label='SRRCC')\nax.plot(x, v, 'ko-', label='PLRCC')\nax.set_xlabel('Modes')\nax.set_ylabel('Values')\nax.legend()\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_1.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 3.0))\n\n# Set the data for each subplot\ndata = [\n    [176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 176, 0, 0]\n]\n\n# Set the color map\ncmap = plt.cm.get_cmap('tab20')\n\n# Set the number of colors\nnum_colors = 20\n\n# Set the number of rows and columns\nnum_rows = 5\nnum_cols = 5\n\n# Set the number of subplots\nnum_subplots = num_rows * num_cols\n\n# Set the number of colors per subplot\ncolors_per_subplot = num_colors // num_subplots\n\n# Set the number of colors per row\ncolors_per_row = num_colors // num_rows\n\n# Set the number of colors per column\ncolors_per_column = num_colors // num_cols\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows * num_cols)\n\n# Set the number of colors per cell\ncolors_per_cell = num_colors // (num_rows"}
{"file": "dataset/ori_500/HR_10.pdf", "response": "```\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Create figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set title\nax.set_title('Compact Spiral with Elliptical Hallow Center')\n\n# Set x and y limits\nax.set_xlim(-10, 10)\nax.set_ylim(-10, 10)\n\n# Set x and y ticks\nax.set_xticks(np.arange(-10, 11, 2))\nax.set_yticks(np.arange(-10, 11, 2))\n\n# Set x and y labels\nax.set_xlabel('X')\nax.set_ylabel('Y')\n\n# Set grid\nax.grid(True)\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect('equal')\n\n# Set equal aspect ratio\nax.set_aspect"}
{"file": "dataset/ori_500/HR_11.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Set the x and y limits\nax.set_xlim(10**-1, 10**1)\nax.set_ylim(10**10, 10**12)\n\n# Set the x and y labels\nax.set_xlabel('Flops/byte')\nax.set_ylabel('Flows/s')\n\n# Add a title\nax.set_title('DAXPY memory bandwidth')\n\n# Add a legend\nax.legend(['explicit, random', 'explicit, block size 100', 'explicit, block size 1000', 'implicit, random', 'implicit, block size 10', 'implicit, block size 100', 'implicit, block size 1000'], loc='upper left', bbox_to_anchor=(1,1), fancybox=True, shadow=True)\n\n# Add a rectangle\nrect = plt.Rectangle((10**0, 10**11), 10**1, 10**1, color='lightblue', alpha=0.5)\nax.add_patch(rect)\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add a text\nax.text(10**0.5, 10**11.5, 'w/o FMA', ha='center', va='center')\n\n# Add"}
{"file": "dataset/ori_500/HR_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(0.45, 0.75)\n\n# Set the y-axis limits\nax.set_ylim(-0.1, 0.2)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0.45, 0.76, 0.1))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(-0.1, 0.3, 0.05))\n\n# Set the x-axis labels\nax.set_xticklabels(['0.45', '0.50', '0.55', '0.60', '0.65', '0.70', '0.75'])\n\n# Set the y-axis labels\nax.set_yticklabels(['-0.10', '-0.05', '0.00', '0.05', '0.10', '0.15', '0.20'])\n\n# Set the x-axis label\nax.set_xlabel('f(x) = 0.50')\n\n# Set the y-axis label\nax.set_ylabel('f(x) = 0.76')\n\n# Set the title\nax.set_title('Satisfy Constraints')\n\n# Set the grid\nax.grid(True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', pad=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', top=True, bottom=True, left=True, right=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=True, labelbottom=True, labelleft=True, labelright=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelrotation=45)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='red')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', pad=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', top=True, bottom=True, left=True, right=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=True, labelbottom=True, labelleft=True, labelright=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelrotation=45)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='red')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', pad=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', top=True, bottom=True, left=True, right=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=True, labelbottom=True, labelleft=True, labelright=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelrotation=45)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='red')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', pad=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', top=True, bottom=True, left=True, right=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=True, labelbottom=True, labelleft=True, labelright=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelrotation=45)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='red')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', pad=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', top=True, bottom=True, left=True, right=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=True, labelbottom=True, labelleft=True, labelright=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelrotation=45)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='red')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', pad=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', top=True, bottom=True, left=True, right=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=True, labelbottom=True, labelleft=True, labelright=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelrotation=45)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='red')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', pad=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', top=True, bottom=True, left=True, right=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=True, labelbottom=True, labelleft=True, labelright=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelrotation=45)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='red')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', pad=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', top=True, bottom=True, left=True, right=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=True, labelbottom=True, labelleft=True, labelright=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelrotation=45)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='red')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', pad=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', top=True, bottom=True, left=True, right=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=True, labelbottom=True, labelleft=True, labelright=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelrotation=45)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='red')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', pad=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', top=True, bottom=True, left=True, right=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=True, labelbottom=True, labelleft=True, labelright=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelrotation=45)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='red')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', pad=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', top=True, bottom=True, left=True, right=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=True, labelbottom=True, labelleft=True, labelright=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelrotation=45)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='red')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', pad=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', top=True, bottom=True, left=True, right=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=True, labelbottom=True, labelleft=True, labelright=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelrotation=45)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='red')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', pad=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', top=True, bottom=True, left=True, right=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=True, labelbottom=True, labelleft=True, labelright=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelrotation=45)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='red')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', pad=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', top=True, bottom=True, left=True, right=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=True, labelbottom=True, labelleft=True, labelright=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelrotation=45)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='red')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', pad=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', top=True, bottom=True, left=True, right=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=True, labelbottom=True, labelleft=True, labelright=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelrotation=45)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='red')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', pad=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', top=True, bottom=True, left=True, right=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=True, labelbottom=True, labelleft=True, labelright=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelrotation=45)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='red')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', pad=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', top=True, bottom=True, left=True, right=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=True, labelbottom=True, labelleft=True, labelright=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelrotation=45)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='red')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', pad="}
{"file": "dataset/ori_500/HR_13.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport matplotlib.patches as patches\n\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Draw the outer circle\nouter_circle = patches.Circle((45, 24), 10, edgecolor='black', facecolor='none')\nax.add_patch(outer_circle)\n\n# Draw the inner circle\ninner_circle = patches.Circle((45, 24), 5, edgecolor='black', facecolor='none')\nax.add_patch(inner_circle)\n\n# Draw the ChatRepair rectangle\nchatrepair = patches.Rectangle((35, 10), 10, 10, edgecolor='black', facecolor='none')\nax.add_patch(chatrepair)\n\n# Draw the CigaR text\nax.text(45, 10, 'CigaR', ha='center', va='center')\n\n# Draw the ChatRepair text\nax.text(45, 24, 'ChatRepair', ha='center', va='center')\n\n# Draw the outer circle's label\nax.text(45, 24, '45', ha='center', va='center')\n\n# Draw the inner circle's label\nax.text(45, 24, '24', ha='center', va='center')\n\n# Draw the ChatRepair's label\nax.text(45, 24, '8', ha='center', va='center')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\nx = np.linspace(0, 2 * np.pi, 100)\ny = np.sin(x)\n\n# Create the figure and axis objects\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Plot the data\nax.plot(x, y)\n\n# Set the title\nax.set_title('Qwen-VL-Max')\n\n# Set the labels\nax.set_xlabel('GPT4V-CoT')\nax.set_ylabel('Gemini Pro-Cot')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_15.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, axs = plt.subplots(1, 2, figsize=(10.0, 4.0))\n\n# Define the number of matvecs\nm = np.logspace(1, 2, 10)\n\n# Define the number of iterations\nn = np.arange(1, 100)\n\n# Define the function for the norm of A-Atilde\ndef norm_A(A):\n    return np.linalg.norm(A - np.dot(A.T, A))\n\n# Define the function for the norm of Atilde-A\ndef norm_Atilde(A):\n    return np.linalg.norm(np.dot(A.T, A) - A)\n\n# Define the function for the norm of Atilde-Atilde\ndef norm_Atilde_Atilde(A):\n    return np.linalg.norm(np.dot(A.T, A) - np.dot(A.T, A.T, A))\n\n# Define the function for the norm of Atilde-Atilde-A\ndef norm_Atilde_Atilde_A(A):\n    return np.linalg.norm(np.dot(A.T, A) - np.dot(A.T, A.T, A) + np.dot(A.T, A.T, A.T, A))\n\n# Define the function for the norm of Atilde-Atilde-Atilde\ndef norm_Atilde_Atilde_Atilde(A):\n    return np.linalg.norm(np.dot(A.T, A) - np.dot(A.T, A.T, A) + np.dot(A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A))\n\n# Define the function for the norm of Atilde-Atilde-Atilde-A\ndef norm_Atilde_Atilde_Atilde_A(A):\n    return np.linalg.norm(np.dot(A.T, A) - np.dot(A.T, A.T, A) + np.dot(A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A))\n\n# Define the function for the norm of Atilde-Atilde-Atilde-Atilde\ndef norm_Atilde_Atilde_Atilde_Atilde(A):\n    return np.linalg.norm(np.dot(A.T, A) - np.dot(A.T, A.T, A) + np.dot(A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A))\n\n# Define the function for the norm of Atilde-Atilde-Atilde-Atilde-A\ndef norm_Atilde_Atilde_Atilde_Atilde_A(A):\n    return np.linalg.norm(np.dot(A.T, A) - np.dot(A.T, A.T, A) + np.dot(A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A))\n\n# Define the function for the norm of Atilde-Atilde-Atilde-Atilde-Atilde\ndef norm_Atilde_Atilde_Atilde_Atilde_Atilde(A):\n    return np.linalg.norm(np.dot(A.T, A) - np.dot(A.T, A.T, A) + np.dot(A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A))\n\n# Define the function for the norm of Atilde-Atilde-Atilde-Atilde-Atilde-A\ndef norm_Atilde_Atilde_Atilde_Atilde_Atilde_A(A):\n    return np.linalg.norm(np.dot(A.T, A) - np.dot(A.T, A.T, A) + np.dot(A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A))\n\n# Define the function for the norm of Atilde-Atilde-Atilde-Atilde-Atilde-Atilde\ndef norm_Atilde_Atilde_Atilde_Atilde_Atilde_Atilde(A):\n    return np.linalg.norm(np.dot(A.T, A) - np.dot(A.T, A.T, A) + np.dot(A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A))\n\n# Define the function for the norm of Atilde-Atilde-Atilde-Atilde-Atilde-Atilde-A\ndef norm_Atilde_Atilde_Atilde_Atilde_Atilde_Atilde_A(A):\n    return np.linalg.norm(np.dot(A.T, A) - np.dot(A.T, A.T, A) + np.dot(A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A))\n\n# Define the function for the norm of Atilde-Atilde-Atilde-Atilde-Atilde-Atilde-Atilde\ndef norm_Atilde_Atilde_Atilde_Atilde_Atilde_Atilde_Atilde(A):\n    return np.linalg.norm(np.dot(A.T, A) - np.dot(A.T, A.T, A) + np.dot(A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A))\n\n# Define the function for the norm of Atilde-Atilde-Atilde-Atilde-Atilde-Atilde-Atilde-A\ndef norm_Atilde_Atilde_Atilde_Atilde_Atilde_Atilde_Atilde_A(A):\n    return np.linalg.norm(np.dot(A.T, A) - np.dot(A.T, A.T, A) + np.dot(A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A))\n\n# Define the function for the norm of Atilde-Atilde-Atilde-Atilde-Atilde-Atilde-Atilde-Atilde\ndef norm_Atilde_Atilde_Atilde_Atilde_Atilde_Atilde_Atilde_Atilde(A):\n    return np.linalg.norm(np.dot(A.T, A) - np.dot(A.T, A.T, A) + np.dot(A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A))\n\n# Define the function for the norm of Atilde-Atilde-Atilde-Atilde-Atilde-Atilde-Atilde-Atilde-A\ndef norm_Atilde_Atilde_Atilde_Atilde_Atilde_Atilde_Atilde_Atilde_A(A):\n    return np.linalg.norm(np.dot(A.T, A) - np.dot(A.T, A.T, A) + np.dot(A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A))\n\n# Define the function for the norm of Atilde-Atilde-Atilde-Atilde-Atilde-Atilde-Atilde-Atilde-Atilde\ndef norm_Atilde_Atilde_Atilde_Atilde_Atilde_Atilde_Atilde_Atilde_Atilde(A):\n    return np.linalg.norm(np.dot(A.T, A) - np.dot(A.T, A.T, A) + np.dot(A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A.T, A))\n\n# Define the function for the norm of Atilde-Atilde-Atilde-Atilde-Atilde-Atilde-Atilde-Atilde-Atilde-A\ndef norm_Atilde_Atilde_Atilde_Atilde_Atilde_Atilde_Atilde_Atilde_Atilde_A(A):\n    return np.linalg.norm(np.dot(A.T, A) - np.dot(A.T, A.T, A) + np.dot(A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A) + np.dot(A.T, A.T, A.T, A.T, A.T, A.T, A.T, A) - np.dot(A.T, A.T, A.T"}
{"file": "dataset/ori_500/HR_16.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Draw the circle\ncircle = plt.Circle((0, 0), 1, color='black')\nax.add_artist(circle)\n\n# Draw the grid\nax.grid(True)\n\n# Draw the text\nax.text(0, 0, 'En.QA', ha='center', va='center', fontsize=12)\nax.text(-0.5, -0.5, 'Retrieve.Number', ha='center', va='center', fontsize=12)\nax.text(0.5, -0.5, 'Retrieve.KV', ha='center', va='center', fontsize=12)\nax.text(-0.5, 0.5, 'En.Sum', ha='center', va='center', fontsize=12)\nax.text(0.5, 0.5, 'Retrieve.PassKey', ha='center', va='center', fontsize=12)\n\n# Draw the arcs\nax.add_patch(plt.Arc((0, 0), 2, 2, angle=0, theta1=90, theta2=180, color='green'))\nax.add_patch(plt.Arc((0, 0), 2, 2, angle=0, theta1=180, theta2=270, color='blue'))\nax.add_patch(plt.Arc((0, 0), 2, 2, angle=0, theta1=270, theta2=360, color='yellow'))\n\n# Set the aspect ratio to be equal so circles look like circles\nax.set_aspect('equal')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_17.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\ndef plot():\n    fig, ax = plt.subplots(figsize=(6.0, 5.0))\n    x = np.linspace(0, 140, 100)\n    y = np.sin(x/30) * np.exp(-x/90) + np.random.normal(0, 0.1, 100)\n    ax.plot(x, y, 'r-')\n    ax.set_xlim(0, 140)\n    ax.set_ylim(-4, 4)\n    ax.set_xlabel('Time (s)')\n    ax.set_ylabel('Amplitude')\n    ax.set_title('Sine Wave with Noise')\n    plt.show()"}
{"file": "dataset/ori_500/HR_18.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Uncertainty in Thermal Conductivity Measurements')\n\n# Set the labels for the x-axis\nax.set_xlabel('Sample Number')\nax.set_xticks([0, 1, 2, 3, 4, 5, 6])\nax.set_xticklabels(['0', '1', '2', '3', '4', '5', '6'])\n\n# Set the labels for the y-axis\nax.set_ylabel('Thermal Conductivity (W/m.K)')\nax.set_yticks(np.arange(1.5, 4.6, 0.5))\nax.set_yticklabels(['1.5', '2.0', '2.5', '3.0', '3.5', '4.0', '4.5'])\n\n# Create a rectangle for the first sample\nrect1 = plt.Rectangle((0, 2.0), 1, 1.5, color='blue', alpha=0.5)\nax.add_patch(rect1)\n\n# Create a rectangle for the second sample\nrect2 = plt.Rectangle((1, 2.5), 1, 1.5, color='blue', alpha=0.5)\nax.add_patch(rect2)\n\n# Create a rectangle for the third sample\nrect3 = plt.Rectangle((2, 3.0), 1, 1.5, color='blue', alpha=0.5)\nax.add_patch(rect3)\n\n# Create a rectangle for the fourth sample\nrect4 = plt.Rectangle((3, 3.5), 1, 1.5, color='blue', alpha=0.5)\nax.add_patch(rect4)\n\n# Create a rectangle for the fifth sample\nrect5 = plt.Rectangle((4, 4.0), 1, 1.5, color='blue', alpha=0.5)\nax.add_patch(rect5)\n\n# Create a rectangle for the sixth sample\nrect6 = plt.Rectangle((5, 4.5), 1, 1.5, color='blue', alpha=0.5)\nax.add_patch(rect6)\n\n# Create a rectangle for the seventh sample\nrect7 = plt.Rectangle((6, 5.0), 1, 1.5, color='blue', alpha=0.5)\nax.add_patch(rect7)\n\n# Create a line for the first sample\nline1 = plt.Line2D([0, 1], [2.0, 2.5], color='black')\nax.add_line(line1)\n\n# Create a line for the second sample\nline2 = plt.Line2D([1, 2], [2.5, 3.0], color='black')\nax.add_line(line2)\n\n# Create a line for the third sample\nline3 = plt.Line2D([2, 3], [3.0, 3.5], color='black')\nax.add_line(line3)\n\n# Create a line for the fourth sample\nline4 = plt.Line2D([3, 4], [3.5, 4.0], color='black')\nax.add_line(line4)\n\n# Create a line for the fifth sample\nline5 = plt.Line2D([4, 5], [4.0, 4.5], color='black')\nax.add_line(line5)\n\n# Create a line for the sixth sample\nline6 = plt.Line2D([5, 6], [4.5, 5.0], color='black')\nax.add_line(line6)\n\nplt.show()"}
{"file": "dataset/ori_500/HR_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 5.0))\n\n# Define the data\nscores = [28, 35, 26, 10, 20, 22, 25, 30]\ngames = ['I', 'II', 'III', 'IV', 'V']\n\n# Plot the scores\nax.plot(scores, 'o-')\n\n# Set the x-axis labels\nax.set_xticks(np.arange(len(games)))\nax.set_xticklabels(games)\n\n# Set the y-axis label\nax.set_ylabel('Score')\n\n# Set the title\nax.set_title('Scores by number of game and players')\n\n# Add legend\nax.legend(['Player A', 'Player B'], loc='upper left')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_2.pdf", "response": "```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the limits of the axes\nax.set_xlim(-6, 6)\nax.set_ylim(-6, 6)\n\n# Set the labels of the axes\nax.set_xlabel('Variable 1')\nax.set_ylabel('Variable 2')\n\n# Set the color map\ncmap = plt.cm.get_cmap('viridis', 10)\n\n# Plot the ellipses\nfor i in range(10):\n    theta = np.linspace(0, 2*np.pi, 100)\n    x = 3*np.cos(theta)\n    y = 2*np.sin(theta)\n    ax.plot(x, y, color=cmap(i))\n\n# Add a color bar\nsm = plt.cm.ScalarMappable(cmap=cmap)\nsm.set_array([])\ncbar = fig.colorbar(sm, ax=ax, orientation='vertical', label='Time')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_20.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the plot\nx = np.array([3, 4, 5, 6, 7, 8, 9])\ny = np.array([2, 3, 4, 5, 6, 7, 8])\n\n# Create the figure and axis objects\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Plot the data\nax.plot(x, y)\n\n# Set the title and labels\nax.set_title('Trustee Scenario')\nax.set_xlabel('Trustee Player')\nax.set_ylabel('Average Amount Sent ($)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Endurance Race Performance Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Seconds Since Start')\n\n# Set the y-axis label\nax.set_ylabel('Athlete')\n\n# Set the x-axis limits\nax.set_xlim(0, 200)\n\n# Set the y-axis limits\nax.set_ylim(0, 10)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 200, 25))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 10, 1))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '25', '50', '75', '100', '125', '150', '175', '200'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['Athlete Bill', 'Athlete Jam'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_color('none')\nax.spines['right'].set_color('none')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x"}
{"file": "dataset/ori_500/HR_22.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Comparative Distribution of Three Different Groups')\n\n# Set the labels for the x-axis\nax.set_xlabel('Number of Observations')\nax.set_ylabel('Value Range')\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 1, 2])\nax.set_xticklabels(['Control Group', 'Treatment Group 1', 'Treatment Group 2'])\n\n# Generate random data for the first group\ndata1 = np.random.normal(0, 1, 100)\nax.boxplot(data1, positions=[0])\n\n# Generate random data for the second group\ndata2 = np.random.normal(0, 1, 100)\nax.boxplot(data2, positions=[1])\n\n# Generate random data for the third group\ndata3 = np.random.normal(0, 1, 100)\nax.boxplot(data3, positions=[2])\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/HR_23.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\nx = np.array([150, -50, -120, -135, 50, 25, -300])\ny = np.array([350, 200, 75, 50, 120, 90, 80])\n\n# Create the plot\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\nax.plot(x, y, 'o-')\n\n# Set the axis limits\nax.set_xlim(-400, 400)\nax.set_ylim(-400, 400)\n\n# Set the axis labels\nax.set_xlabel('X-axis')\nax.set_ylabel('Y-axis')\n\n# Set the title\nax.set_title('Waterfall Chart')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_24.pdf", "response": "```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('tripcolor of Delaunay triangulation, flat shading')\n\n# Generate the data for the plot\nx = np.linspace(-1, 1, 100)\ny = np.linspace(-1, 1, 100)\nX, Y = np.meshgrid(x, y)\nZ = (1 - X/2 + X**5 + Y**3) * np.exp(-X**2 - Y**2)\n\n# Plot the data using tripcolor\nc = ax.tripcolor(X, Y, Z, shading='flat', cmap=plt.cm.viridis)\n\n# Add a colorbar to the plot\nfig.colorbar(c, ax=ax)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_25.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\ndef plot_image(image, title):\n    fig, ax = plt.subplots(figsize=(8.0, 6.0))\n    ax.imshow(image, interpolation='nearest')\n    ax.set_title(title)\n    plt.show()\n\ndef plot_bilinear(image, title):\n    fig, ax = plt.subplots(figsize=(8.0, 6.0))\n    ax.imshow(image, interpolation='bilinear')\n    ax.set_title(title)\n    plt.show()\n\n# Generate some random data\ndata = np.random.rand(10, 10)\n\n# Plot the images\nplot_image(data, 'nearest')\nplot_bilinear(data, 'bilinear')\n```\nThis code will generate two plots, one with nearest neighbor interpolation and one with bilinear interpolation. The plots will be displayed using matplotlib's show function."}
{"file": "dataset/ori_500/HR_3.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Set the x-axis labels\nax.set_xticks(np.arange(10))\nax.set_xticklabels(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the y-axis labels\nax.set_yticks(np.arange(0, 700, 100))\nax.set_yticklabels(['0', '100', '200', '300', '400', '500', '600'])\n\n# Set the title of the plot\nax.set_title('Flickr30k')\n\n# Set the color of the bars\ncolors = ['red', 'blue', 'green', 'purple', 'orange', 'cyan', 'magenta', 'brown', 'pink', 'gray']\n\n# Set the width of the bars\nwidth = 0.8\n\n# Set the position of the bars\nx = np.arange(len(colors))\n\n# Plot the bars\nfor i in range(len(colors)):\n    ax.bar(x + i * width / len(colors), [i] * len(colors), width / len(colors), color=colors[i])\n\nplt.show()"}
{"file": "dataset/ori_500/HR_4.pdf", "response": "```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Define the function for the curve\ndef f(x):\n    return 1 / (x + 1)\n\n# Generate the x values\nx = np.linspace(0, 25, 100)\n\n# Calculate the y values\ny = f(x)\n\n# Plot the curve\nplt.plot(x, y, 'r-', label='Monte Carlo')\n\n# Add the legend\nplt.legend()\n\n# Set the title\nplt.title('Denser Points with Perfectly Circular Error Ellipses')\n\n# Set the axis labels\nplt.xlabel('x(m)')\nplt.ylabel('y(m)')\n\n# Set the grid\nplt.grid(True)\n\n# Set the figure size\nplt.figure(figsize=(8.0, 6.0))\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_5.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the aspect ratio of the plot to be equal\nax.set_aspect('equal')\n\n# Set the limits of the plot\nax.set_xlim(-1, 1)\nax.set_ylim(-1, 1)\n\n# Draw a circle with radius 1\ncircle = plt.Circle((0, 0), 1, color='blue')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/2\ncircle = plt.Circle((0, 0), 0.5, color='red')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/4\ncircle = plt.Circle((0, 0), 0.25, color='green')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/8\ncircle = plt.Circle((0, 0), 0.125, color='yellow')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/16\ncircle = plt.Circle((0, 0), 0.0625, color='purple')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/32\ncircle = plt.Circle((0, 0), 0.03125, color='orange')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/64\ncircle = plt.Circle((0, 0), 0.015625, color='pink')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/128\ncircle = plt.Circle((0, 0), 0.0078125, color='brown')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/256\ncircle = plt.Circle((0, 0), 0.00390625, color='gray')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/512\ncircle = plt.Circle((0, 0), 0.001953125, color='cyan')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/1024\ncircle = plt.Circle((0, 0), 0.0009765625, color='magenta')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/2048\ncircle = plt.Circle((0, 0), 0.00048828125, color='lime')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/4096\ncircle = plt.Circle((0, 0), 0.000244140625, color='navy')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/8192\ncircle = plt.Circle((0, 0), 0.0001220703125, color='olive')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/16384\ncircle = plt.Circle((0, 0), 0.00006103515625, color='coral')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/32768\ncircle = plt.Circle((0, 0), 0.000030517578125, color='silver')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/65536\ncircle = plt.Circle((0, 0), 0.0000152587890625, color='gold')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/131072\ncircle = plt.Circle((0, 0), 0.00000762939453125, color='chartreuse')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/262144\ncircle = plt.Circle((0, 0), 0.000003814697265625, color='maroon')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/524288\ncircle = plt.Circle((0, 0), 0.0000019073486328125, color='tan')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/1048576\ncircle = plt.Circle((0, 0), 0.00000095367431640625, color='aqua')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/2097152\ncircle = plt.Circle((0, 0), 0.000000476837158203125, color='indigo')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/4194304\ncircle = plt.Circle((0, 0), 0.0000002384185791015625, color='violet')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/8388608\ncircle = plt.Circle((0, 0), 0.00000011920928955078125, color='beige')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/16777216\ncircle = plt.Circle((0, 0), 0.000000059604644775390625, color='darkblue')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/33554432\ncircle = plt.Circle((0, 0), 0.0000000298023223876953125, color='darkgreen')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/67108864\ncircle = plt.Circle((0, 0), 0.00000001490116119384765625, color='darkred')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/134217728\ncircle = plt.Circle((0, 0), 0.000000007450580596923828125, color='darkorange')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/268435456\ncircle = plt.Circle((0, 0), 0.0000000037252902984619140625, color='darkviolet')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/536870912\ncircle = plt.Circle((0, 0), 0.00000000186264514923095703125, color='darkgrey')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/1073741824\ncircle = plt.Circle((0, 0), 0.000000000931322574615478515625, color='darkkhaki')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/2147483648\ncircle = plt.Circle((0, 0), 0.0000000004656612873077392578125, color='darkmagenta')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/4294967296\ncircle = plt.Circle((0, 0), 0.00000000023283064365386962890625, color='darkolivegreen')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/8589934592\ncircle = plt.Circle((0, 0), 0.000000000116415321826934814453125, color='darkorchid')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/17179869184\ncircle = plt.Circle((0, 0), 0.0000000000582076609134674072265625, color='darksalmon')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/34359738368\ncircle = plt.Circle((0, 0), 0.00000000002910383045673370361328125, color='darkseagreen')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/68719476736\ncircle = plt.Circle((0, 0), 0.000000000014551915228366851806640625, color='darkslateblue')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/137438953472\ncircle = plt.Circle((0, 0), 0.0000000000072759576141834259033203125, color='darkslategray')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/274877906944\ncircle = plt.Circle((0, 0), 0.00000000000363797880709171295166015625, color='darkturquoise')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/549755813888\ncircle = plt.Circle((0, 0), 0.000000000001818989403545856475830078125, color='darkviolet')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/1099511627776\ncircle = plt.Circle((0, 0), 0.0000000000009094947017729282379150390625, color='darkyellow')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/2199023255552\ncircle = plt.Circle((0, 0), 0.00000000000045474735088646411895751953125, color='deeppink')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/4398046511104\ncircle = plt.Circle((0, 0), 0.000000000000227373675443232059478759765625, color='deepskyblue')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/8796093022208\ncircle = plt.Circle((0, 0), 0.0000000000001136868377216160297393798828125, color='dimgray')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/17592186044416\ncircle = plt.Circle((0, 0), 0.00000000000005684341886080801486968994140625, color='dimgrey')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/35184372088832\ncircle = plt.Circle((0, 0), 0.000000000000028421709430404007434844970703125, color='dodgerblue')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/70368744177664\ncircle = plt.Circle((0, 0), 0.0000000000000142108547152020037174224853515625, color='firebrick')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/140737488355328\ncircle = plt.Circle((0, 0), 0.00000000000000710542735760100185871124267578125, color='floralwhite')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/281474976710656\ncircle = plt.Circle((0, 0), 0.000000000000003552713678800500929355621337890625, color='forestgreen')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/562949953421312\ncircle = plt.Circle((0, 0), 0.0000000000000017763568394002504646778106689453125, color='fuchsia')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/1125899906842624\ncircle = plt.Circle((0, 0), 0.00000000000000088817841970012523233890533447265625, color='gainsboro')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/2251799813685248\ncircle = plt.Circle((0, 0), 0.000000000000000444089209850062616169452667236328125, color='ghostwhite')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/4503599627370496\ncircle = plt.Circle((0, 0), 0.0000000000000002220446049250313080847263336181640625, color='gold')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/9007199254740992\ncircle = plt.Circle((0, 0), 0.00000000000000011102230246251565404236316680908203125, color='goldenrod')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/18014398509481984\ncircle = plt.Circle((0, 0), 0.000000000000000055511151231257827021181583404541015625, color='gray')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/36028797018963968\ncircle = plt.Circle((0, 0), 0.0000000000000000277555756156289135105907917022705078125, color='green')\nax.add_artist(circle)\n\n# Draw a circle with radius 1/72057594037927936\ncircle = plt.Circle((0, 0), 0.000000000000000013877787807814456755"}
{"file": "dataset/ori_500/HR_6.pdf", "response": "```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Generate a grid of values for alpha and beta\nalpha = np.linspace(0, 2, 10)\nbeta = np.linspace(0, 2, 10)\nalpha, beta = np.meshgrid(alpha, beta)\n\n# Calculate the value of delta_t for each point in the grid\ndelta_t = alpha - beta\n\n# Create a color map for the alpha-beta plane\ncmap = plt.cm.get_cmap('viridis')\n\n# Plot the alpha-beta plane with the color map\nax.pcolormesh(alpha, beta, delta_t, cmap=cmap)\n\n# Add a color bar to the plot\ncbar = fig.colorbar(ax.pcolormesh(alpha, beta, delta_t, cmap=cmap), ax=ax, orientation='vertical', fraction=0.046, pad=0.04)\n\n# Set the limits of the color bar\ncbar.set_clim(-0.0015, 0.0015)\n\n# Set the tick labels for the color bar\ncbar.set_ticks([-0.0015, -0.0005, 0.0005, 0.0015])\n\n# Set the tick labels for the color bar\ncbar.set_ticklabels(['-0.0015', '-0.0005', '0.0005', '0.0015'])\n\n# Set the title of the plot\nax.set_title(r'$\\Delta t$')\n\n# Set the label for the x-axis\nax.set_xlabel(r'$\\alpha$')\n\n# Set the label for the y-axis\nax.set_ylabel(r'$\\beta$')\n\n# Set the limits of the x-axis\nax.set_xlim(0, 2)\n\n# Set the limits of the y-axis\nax.set_ylim(0, 2)\n\n# Set the ticks for the x-axis\nax.set_xticks(np.arange(0, 2.1, 0.25))\n\n# Set the ticks for the y-axis\nax.set_yticks(np.arange(0, 2.1, 0.25))\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0.0', '0.25', '0.50', '0.75', '1.00', '1.25', '1.50', '1.75', '2.00'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['0.0', '0.25', '0.50', '0.75', '1.00', '1.25', '1.50', '1.75', '2.00'])\n\n# Set the limits of the color bar\ncbar.set_clim(-0.0015, 0.0015)\n\n# Set the tick labels for the color bar\ncbar.set_ticks([-0.0015, -0.0005, 0.0005, 0.0015])\n\n# Set the tick labels for the color bar\ncbar.set_ticklabels(['-0.0015', '-0.0005', '0.0005', '0.0015'])\n\n# Set the title of the plot\nax.set_title(r'$\\Delta t$')\n\n# Set the label for the x-axis\nax.set_xlabel(r'$\\alpha$')\n\n# Set the label for the y-axis\nax.set_ylabel(r'$\\beta$')\n\n# Set the limits of the x-axis\nax.set_xlim(0, 2)\n\n# Set the limits of the y-axis\nax.set_ylim(0, 2)\n\n# Set the ticks for the x-axis\nax.set_xticks(np.arange(0, 2.1, 0.25))\n\n# Set the ticks for the y-axis\nax.set_yticks(np.arange(0, 2.1, 0.25))\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0.0', '0.25', '0.50', '0.75', '1.00', '1.25', '1.50', '1.75', '2.00'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['0.0', '0.25', '0.50', '0.75', '1.00', '1.25', '1.50', '1.75', '2.00'])\n\n# Set the limits of the color bar\ncbar.set_clim(-0.0015, 0.0015)\n\n# Set the tick labels for the color bar\ncbar.set_ticks([-0.0015, -0.0005, 0.0005, 0.0015])\n\n# Set the tick labels for the color bar\ncbar.set_ticklabels(['-0.0015', '-0.0005', '0.0005', '0.0015'])\n\n# Set the title of the plot\nax.set_title(r'$\\Delta t$')\n\n# Set the label for the x-axis\nax.set_xlabel(r'$\\alpha$')\n\n# Set the label for the y-axis\nax.set_ylabel(r'$\\beta$')\n\n# Set the limits of the x-axis\nax.set_xlim(0, 2)\n\n# Set the limits of the y-axis\nax.set_ylim(0, 2)\n\n# Set the ticks for the x-axis\nax.set_xticks(np.arange(0, 2.1, 0.25))\n\n# Set the ticks for the y-axis\nax.set_yticks(np.arange(0, 2.1, 0.25))\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0.0', '0.25', '0.50', '0.75', '1.00', '1.25', '1.50', '1.75', '2.00'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['0.0', '0.25', '0.50', '0.75', '1.00', '1.25', '1.50', '1.75', '2.00'])\n\n# Set the limits of the color bar\ncbar.set_clim(-0.0015, 0.0015)\n\n# Set the tick labels for the color bar\ncbar.set_ticks([-0.0015, -0.0005, 0.0005, 0.0015])\n\n# Set the tick labels for the color bar\ncbar.set_ticklabels(['-0.0015', '-0.0005', '0.0005', '0.0015'])\n\n# Set the title of the plot\nax.set_title(r'$\\Delta t$')\n\n# Set the label for the x-axis\nax.set_xlabel(r'$\\alpha$')\n\n# Set the label for the y-axis\nax.set_ylabel(r'$\\beta$')\n\n# Set the limits of the x-axis\nax.set_xlim(0, 2)\n\n# Set the limits of the y-axis\nax.set_ylim(0, 2)\n\n# Set the ticks for the x-axis\nax.set_xticks(np.arange(0, 2.1, 0.25))\n\n# Set the ticks for the y-axis\nax.set_yticks(np.arange(0, 2.1, 0.25))\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0.0', '0.25', '0.50', '0.75', '1.00', '1.25', '1.50', '1.75', '2.00'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['0.0', '0.25', '0.50', '0.75', '1.00', '1.25', '1.50', '1.75', '2.00'])\n\n# Set the limits of the color bar\ncbar.set_clim(-0.0015, 0.0015)\n\n# Set the tick labels for the color bar\ncbar.set_ticks([-0.0015, -0.0005, 0.0005, 0.0015])\n\n# Set the tick labels for the color bar\ncbar.set_ticklabels(['-0.0015', '-0.0005', '0.0005', '0.0015'])\n\n# Set the title of the plot\nax.set_title(r'$\\Delta t$')\n\n# Set the label for the x-axis\nax.set_xlabel(r'$\\alpha$')\n\n# Set the label for the y-axis\nax.set_ylabel(r'$\\beta$')\n\n# Set the limits of the x-axis\nax.set_xlim(0, 2)\n\n# Set the limits of the y-axis\nax.set_ylim(0, 2)\n\n# Set the ticks for the x-axis\nax.set_xticks(np.arange(0, 2.1, 0.25))\n\n# Set the ticks for the y-axis\nax.set_yticks(np.arange(0, 2.1, 0.25))\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0.0', '0.25', '0.50', '0.75', '1.00', '1.25', '1.50', '1.75', '2.00'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['0.0', '0.25', '0.50', '0.75', '1.00', '1.25', '1.50', '1.75', '2.00'])\n\n# Set the limits of the color bar\ncbar.set_clim(-0.0015, 0.0015)\n\n# Set the tick labels for the color bar\ncbar.set_ticks([-0.0015, -0.0005, 0.0005, 0.0015])\n\n# Set the tick labels for the color bar\ncbar.set_ticklabels(['-0.0015', '-0.0005', '0.0005', '0.0015'])\n\n# Set the title of the plot\nax.set_title(r'$\\Delta t$')\n\n# Set the label for the x-axis\nax.set_xlabel(r'$\\alpha$')\n\n# Set the label for the y-axis\nax.set_ylabel(r'$\\beta$')\n\n# Set the limits of the x-axis\nax.set_xlim(0, 2)\n\n# Set the limits of the y-axis\nax.set_ylim(0, 2)\n\n# Set the ticks for the x-axis\nax.set_xticks(np.arange(0, 2.1, 0.25))\n\n# Set the ticks for the y-axis\nax.set_yticks(np.arange(0, 2.1, 0.25))\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0.0', '0.25', '0.50', '0.75', '1.00', '1.25', '1.50', '1.75', '2.00'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['0.0', '0.25', '0.50', '0.75', '1.00', '1.25', '1.50', '1.75', '2.00'])\n\n# Set the limits of the color bar\ncbar.set_clim(-0.0015, 0.0015)\n\n# Set the tick labels for the color bar\ncbar.set_ticks([-0.0015, -0.0005, 0.0005, 0.0015])\n\n# Set the tick labels for the color bar\ncbar.set_ticklabels(['-0.0015', '-0.0005', '0.0005', '0.0015'])\n\n# Set the title of the plot\nax.set_title(r'$\\Delta t$')\n\n# Set the label for the x-axis\nax.set_xlabel(r'$\\alpha$')\n\n# Set the label for the y-axis\nax.set_ylabel(r'$\\beta$')\n\n# Set the limits of the x-axis\nax.set_xlim(0, 2)\n\n# Set the limits of the y-axis\nax.set_ylim(0, 2)\n\n# Set the ticks for the x-axis\nax.set_xticks(np.arange(0, 2.1, 0.25))\n\n# Set the ticks for the y-axis\nax.set_yticks(np.arange(0, 2.1, 0.25))\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0.0', '0.25', '0.50', '0.75', '1.00', '1.25', '1.50', '1.75', '2.00'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['0.0', '0.25', '0.50', '0.75', '1.00', '1.25', '1.50', '1.75', '2.00'])\n\n# Set the limits of the color bar\ncbar.set_clim(-0.0015, 0.0015)\n\n# Set the tick labels for the color bar\ncbar.set_ticks([-0.0015, -0.0005, 0.0005, 0.0015])\n\n# Set the tick labels for the color bar\ncbar.set_ticklabels(['-0.0015', '-0.0005', '0.0005', '0.0015'])\n\n# Set the title of the plot\nax.set_title(r'$\\Delta t$')\n\n# Set the label for the x-axis\nax.set_xlabel(r'$\\alpha$')\n\n# Set the label for the y-axis\nax.set_ylabel(r'$\\beta$')\n\n# Set the limits of the x-axis\nax.set_xlim(0, 2)\n\n# Set the limits of the y-axis\nax.set_ylim(0, 2)\n\n# Set the ticks for the x-axis\nax.set_xticks(np.arange(0, 2.1, 0.25))\n\n# Set the ticks for the y-axis\nax.set_yticks(np.arange(0, 2.1, 0.25))\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0.0', '0.25', '0.50', '0.75', '1.00', '1.25', '1.50', '1.75', '2.00'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['0.0', '0.25', '0.50', '0.75', '1.00', '1.25', '1.50', '1.75', '2.00'])\n\n# Set the limits of the color bar\ncbar.set_clim(-0.0015, 0.0015)\n\n# Set the tick labels for the color bar\ncbar.set_ticks([-0.0015, -0.0005, 0.0005, 0.0015])\n\n# Set the tick labels for the color bar\ncbar.set_ticklabels(['-0.0015', '-0.0005', '0.0005', '0.0015'])\n\n# Set the title of the plot\nax.set_title(r'$\\Delta t$')\n\n# Set the label for the x-axis\nax.set_xlabel(r'$\\alpha$')\n\n# Set the label for the y-axis\nax.set_ylabel(r'$\\beta$')\n\n# Set the limits of the x-axis\nax.set_xlim(0, 2)\n\n# Set the limits of the y-axis\nax.set_ylim(0, 2)\n\n# Set the ticks for the x-axis\nax.set_xticks(np.arange(0, 2.1, 0.25))\n\n# Set the ticks for the y-axis\nax.set_yticks(np.arange(0, 2.1, 0.25))\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0.0', '0.25', '0.50', '0.75', '1.00', '1.25', '1.50', '1.75', '2.00'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['0.0', '0.25', '0.50', '0.75', '1.00', '1.25', '1.50', '1.75', '2.00'])\n\n# Set the limits of the color bar\ncbar.set_clim(-0.0015, 0.0015)\n\n# Set the tick labels for the color bar\ncbar.set_ticks([-0.0015, -0.0005, 0.0005, 0.0015])\n\n# Set the tick labels for the color bar\ncbar.set_ticklabels(['-0.0015', '-0.0005', '0.0005', '0.0015'])\n\n# Set the title of the plot\nax.set_title(r'$\\Delta t$')\n\n# Set the label for the x-axis\nax.set_xlabel(r'$\\alpha$')\n\n# Set the label for the y-axis\nax.set_ylabel(r'$\\beta$')\n\n# Set the limits of the x-axis\nax.set_xlim(0, 2)\n\n# Set the limits of the y-axis\nax.set_ylim(0, 2"}
{"file": "dataset/ori_500/HR_7.pdf", "response": "```\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Create data\nx = np.linspace(0, 100, 100)\ny = np.sin(x/20)\ny1 = np.sin(x/30)\ny2 = np.sin(x/40)\ny3 = np.sin(x/50)\n\n# Plot\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\nax.plot(x, y, label='Left', color='blue')\nax.plot(x, y1, label='Center Left', color='slateblue')\nax.plot(x, y2, label='Center Right', color='red')\nax.plot(x, y3, label='Right', color='green')\n\n# Add labels and title\nax.set_xlabel('Users (U)')\nax.set_ylabel('Utility (f)')\nax.set_title('Utility distribution per topic')\n\n# Add legend\nax.legend()\n\n# Create user preference matrix\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\nax.imshow(np.random.rand(10, 10), cmap='hot', interpolation='nearest')\nax.set_title('User preference matrix (M)')\n\n# Add labels\nax.set_xticks(np.arange(10))\nax.set_yticks(np.arange(10))\nax.set_xticklabels(['L', 'CL', 'C', 'CR', 'R'])\nax.set_yticklabels(['L', 'CL', 'C', 'CR', 'R'])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_8.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Set the x and y limits\nax.set_xlim(-2, 4)\nax.set_ylim(-2, 4)\n\n# Set the x and y labels\nax.set_xlabel('Reactive-2 payoff')\nax.set_ylabel('Memory-2 payoff')\n\n# Set the tick labels\nax.set_xticks(np.arange(-2, 5))\nax.set_yticks(np.arange(-2, 5))\n\n# Set the tick labels\nax.set_xticklabels(['-2', '-1', '0', '1', '2', '3', '4'])\nax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4'])\n\n# Set the tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the title\nax.set_title('Self-reactive-2 mutants payoff')\n\n# Set the legend\nax.legend(['(S,T)', '(R,R)'], loc='upper right')\n\n# Set the scatter plot\nax.scatter([0, 1, 2, 3], [0, 1, 2, 3], color='blue')\n\n# Set the rectangle\nrect = plt.Rectangle((0, 0), 1, 1, color='red')\nax.add_patch(rect)\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(T,S)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(P,P)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(S,T)', ha='center', va='center', color='black')\n\n# Set the text\nax.text(0.5, 0.5, '(R,R)', ha='center"}
{"file": "dataset/ori_500/HR_9.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Generate random data for the first subplot\nnp.random.seed(0)\ndata1 = np.random.normal(loc=5, scale=2, size=100)\nax.boxplot(data1, positions=[1], widths=0.6, patch_artist=True, boxprops=dict(facecolor='blue', alpha=0.5), medianprops=dict(color='black'))\n\n# Generate random data for the second subplot\nnp.random.seed(1)\ndata2 = np.random.normal(loc=7, scale=3, size=100)\nax.boxplot(data2, positions=[2], widths=0.6, patch_artist=True, boxprops=dict(facecolor='red', alpha=0.5), medianprops=dict(color='black'))\n\n# Generate random data for the third subplot\nnp.random.seed(2)\ndata3 = np.random.normal(loc=9, scale=4, size=100)\nax.boxplot(data3, positions=[3], widths=0.6, patch_artist=True, boxprops=dict(facecolor='green', alpha=0.5), medianprops=dict(color='black'))\n\n# Generate random data for the fourth subplot\nnp.random.seed(3)\ndata4 = np.random.normal(loc=11, scale=5, size=100)\nax.boxplot(data4, positions=[4], widths=0.6, patch_artist=True, boxprops=dict(facecolor='purple', alpha=0.5), medianprops=dict(color='black'))\n\n# Set the x-axis labels\nax.set_xticks([1, 2, 3, 4])\nax.set_xticklabels(['story', 'rule', 'story', 'rule'])\n\n# Set the y-axis limits\nax.set_ylim(-10, 10)\n\nplt.show()"}
{"file": "dataset/ori_500/PIP_1.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the grid lines\nax.grid(True)\n\n# Set the tick labels\nax.set_xticks(np.arange(-40, 1, 5))\nax.set_yticks(np.arange(-5, 6, 1))\n\n# Set the tick labels\nax.set_xticklabels(['-40', '-35', '-30', '-25', '-20', '-15', '-10', '0', '5'])\nax.set_yticklabels(['-5', '-4', '-3', '-2', '-1', '0', '1', '2', '3', '4', '5'])\n\n# Set the x and y limits\nax.set_xlim([-40, 1])\nax.set_ylim([-5, 6])\n\n# Set the x and y labels\nax.set_xlabel('\u0394 Robust Accuracy (%)')\nax.set_ylabel('\u0394 Robust Accuracy (%)')\n\n# Set the title\nax.set_title('\u0394 Robust Accuracy (%)')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the aspect ratio\nax.set_aspect('equal"}
{"file": "dataset/ori_500/PIP_10.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig = plt.figure(figsize=(6.0, 6.0))\nax = fig.add_subplot(111)\n\n# Set the x-axis label\nax.set_xlabel('Gradient Steps (x 62.5K)')\n\n# Set the y-axis label\nax.set_ylabel('Exponential Scale')\n\n# Set the title of the plot\nax.set_title('Line 3 (Random Noise)\\nLine 4 (Exponential Focus)')\n\n# Generate random data for the plot\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data with a specific color and marker\nax.plot(x, y, 'ro-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=50, color='k', linestyle='-')\n\n# Add a horizontal line at a specific position\nplt.axhline(y=0.5, color='k', linestyle='-')\n\n# Add a text annotation at a specific position\nplt.text(50, 0.5, 'Text Annotation')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/PIP_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Set the grid lines\nax.grid(True)\n\n# Set the x-axis and y-axis limits\nax.set_xlim(0, 1.0)\nax.set_ylim(0, 2000)\n\n# Set the tick labels for the x-axis and y-axis\nax.set_xticks(np.arange(0, 1.1, 0.1))\nax.set_yticks(np.arange(0, 2000, 500))\n\n# Set the tick labels for the x-axis and y-axis\nax.set_xticklabels(['0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1.0'])\nax.set_yticklabels(['0', '500', '1000', '1500', '2000'])\n\n# Set the title of the plot\nax.set_title('Maximum predicted probability')\n\n# Set the label for the x-axis\nax.set_xlabel('maximum predicted probability')\n\n# Set the label for the y-axis\nax.set_ylabel('number of examples')\n\n# Create a bar chart\nax.bar(range(len(x)), x, align='center', alpha=0.5, color='blue')\n\n# Add a vertical line at a specific position\nplt.axvline(x=0.35, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=0.4, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=0.45, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=0.5, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=0.55, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=0.6, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=0.65, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=0.7, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=0.75, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=0.8, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=0.85, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=0.9, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=0.95, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=1.0, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=1.05, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=1.1, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=1.15, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=1.2, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=1.25, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=1.3, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=1.35, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=1.4, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=1.45, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=1.5, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=1.55, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=1.6, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=1.65, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=1.7, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=1.75, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=1.8, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=1.85, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=1.9, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=1.95, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=2.0, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=2.05, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=2.1, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=2.15, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=2.2, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=2.25, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=2.3, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=2.35, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=2.4, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=2.45, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=2.5, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=2.55, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=2.6, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=2.65, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=2.7, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=2.75, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=2.8, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=2.85, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=2.9, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=2.95, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=3.0, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=3.05, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=3.1, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=3.15, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=3.2, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=3.25, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=3.3, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=3.35, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=3.4, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=3.45, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=3.5, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=3.55, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=3.6, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=3.65, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=3.7, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=3.75, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=3.8, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=3.85, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=3.9, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=3.95, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=4.0, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=4.05, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=4.1, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=4.15, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=4.2, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=4.25, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=4.3, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=4.35, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=4.4, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=4.45, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=4.5, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=4.55, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=4.6, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=4.65, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=4.7, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=4.75, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=4.8, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=4.85, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=4.9, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=4.95, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=5.0, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=5.05, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=5.1, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=5.15, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=5.2, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=5.25, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=5.3, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=5.35, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=5.4, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=5.45, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=5.5, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=5.55, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=5.6, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=5.65, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=5.7, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=5.75, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=5.8, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=5.85, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=5.9, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=5.95, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=6.0, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=6.05, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=6.1, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=6.15, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=6.2, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=6.25, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=6.3, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=6.35, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=6.4, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=6.45, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=6.5, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=6.55, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=6.6, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=6.65, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=6.7, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=6.75, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=6.8, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=6.85, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=6.9, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=6.95, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=7.0, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=7.05, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=7.1, color='grey', linestyle='-')\n\n# Add a vertical line at a specific position\nplt.axvline(x=7.15, color='grey"}
{"file": "dataset/ori_500/PIP_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Plot the data\nax.plot([2, 3, 4, 5], [7, 8, 9, 10], 'ro-')\nax.plot([2, 3, 4, 5], [1, 2, 3, 4], 'go-')\n\n# Set the title and labels\nax.set_title('Bias Score by Data Type and Model')\nax.set_xlabel('Data Type')\nax.set_ylabel('Bias Score')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/PIP_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Define the data for the histogram\nx = np.array([0.0, 0.2, 0.4, 0.6])\ny = np.array([500, 1000, 1500, 2000])\n\n# Plot the histogram\nax.bar(x, y, color='orange')\n\n# Add a vertical line at x=0.5\nax.axvline(x=0.5, color='grey', linestyle='-')\n\n# Add a horizontal line at y=1000\nax.axhline(y=1000, color='grey', linestyle='-')\n\n# Add a scatter plot\nax.scatter(x, y, color='blue')\n\n# Add a text label\nax.text(0.5, 1000, 'Text Label')\n\n# Set the title of the plot\nax.set_title('Histogram')\n\n# Set the x-axis label\nax.set_xlabel('x-axis label')\n\n# Set the y-axis label\nax.set_ylabel('y-axis label')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/PIP_5.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Plot the first graph\nax.plot([2**6, 2**7, 2**8], [10000, 20000, 30000], 'go-')\nax.plot([2**6, 2**7, 2**8], [10000, 20000, 30000], 'g^--')\n\n# Plot the second graph\nax.plot([2**6, 2**7, 2**8], [10000, 20000, 30000], 'bo-')\nax.plot([2**6, 2**7, 2**8], [10000, 20000, 30000], 'b^-')\n\n# Add labels and title\nax.set_xlabel('Width of Layer')\nax.set_ylabel('Empirical Lipschitz Constant')\nax.set_title('Empirical Lipschitz Constant vs Width of Layer')\n\n# Add legend\nax.legend(['Cos | n0 = 200', 'Cos | n0 = 400', 'ReLU | n0 = 200', 'ReLU | n0 = 400'], loc='upper left')\n\n# Add grid\nax.grid(True)\n\n# Add text\nax.text(2**6, 10000, 'x', fontsize=12)\nax.text(2**7, 20000, 'x', fontsize=12)\nax.text(2**8, 30000, 'x', fontsize=12)\n\n# Add inset axes\ninset_ax = ax.inset_axes([0.5, 0.5, 0.47, 0.47])\ninset_ax.plot([2**6, 2**7, 2**8], [10000, 20000, 30000], 'ko-')\ninset_ax.plot([2**6, 2**7, 2**8], [10000, 20000, 30000], 'k^-')\n\n# Add labels and title for inset axes\ninset_ax.set_xlabel('Width of Layer')\ninset_ax.set_ylabel('Empirical Lipschitz Constant')\ninset_ax.set_title('Inset Axes')\n\n# Add text for inset axes\ninset_ax.text(2**6, 10000, 'x', fontsize=12)\ninset_ax.text(2**7, 20000, 'x', fontsize=12)\ninset_ax.text(2**8, 30000, 'x', fontsize=12)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/PIP_6.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Define the time steps\ntime_steps = np.arange(0, 10000, 1000)\n\n# Define the reward values for each time step\nrewards = [\n    [7000, 6500, 6000, 5500, 5000, 4500, 4000, 3500],\n    [7000, 6500, 6000, 5500, 5000, 4500, 4000, 3500],\n    [7000, 6500, 6000, 5500, 5000, 4500, 4000, 3500],\n    [7000, 6500, 6000, 5500, 5000, 4500, 4000, 3500],\n    [7000, 6500, 6000, 5500, 5000, 4500, 4000, 3500],\n    [7000, 6500, 6000, 5500, 5000, 4500, 4000, 3500],\n    [7000, 6500, 6000, 5500, 5000, 4500, 4000, 3500],\n    [7000, 6500, 6000, 5500, 5000, 4500, 4000, 3500],\n    [7000, 6500, 6000, 5500, 5000, 4500, 4000, 3500],\n    [7000, 6500, 6000, 5500, 5000, 4500, 4000, 3500],\n]\n\n# Plot the rewards\nfor i in range(len(rewards)):\n    ax.plot(time_steps, rewards[i], label=f\"Reward {i+1}\")\n\n# Set the x-axis limits\nax.set_xlim([0, 10000])\n\n# Set the y-axis limits\nax.set_ylim([3500, 7500])\n\n# Set the x-axis ticks\nax.set_xticks([0, 2000, 4000, 6000, 8000, 10000])\n\n# Set the y-axis ticks\nax.set_yticks([3500, 4000, 4500, 5000, 5500, 6000, 6500, 7000, 7500])\n\n# Set the x-axis label\nax.set_xlabel(\"Time Steps\")\n\n# Set the y-axis label\nax.set_ylabel(\"Discounted Cumulative Reward\")\n\n# Set the title\nax.set_title(\"Discounted Cumulative Reward\")\n\n# Add a legend\nax.legend()\n\nplt.show()\n```"}
{"file": "dataset/ori_500/PIP_7.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Generate random data for the time series\nnp.random.seed(0)\ntime_steps = np.arange(201)\nwi_data = np.random.rand(len(time_steps)) * 0.5 + 0.2\nisq_data = np.random.rand(len(time_steps)) * 0.5 + 0.2\n\n# Plot the time series data\nax.plot(time_steps, wi_data, label='WI', color='blue')\nax.plot(time_steps, isq_data, label='ISQ', color='orange')\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('Time Steps')\nax.set_ylabel('Discounted cumulative reward')\n\n# Add a legend to the plot\nax.legend()\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/PIP_8.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Set the limits for the x and y axes\nax.set_xlim(-4, 4)\nax.set_ylim(-4, 4)\n\n# Set the tick labels for the x and y axes\nax.set_xticks(np.arange(-4, 5, 1))\nax.set_yticks(np.arange(-4, 5, 1))\n\n# Set the tick label style\nfor label in ax.get_xticklabels() + ax.get_yticklabels():\n    label.set_fontsize(12)\n    label.set_family('sans-serif')\n\n# Set the title of the plot\nax.set_title('Daytime Sunny', fontsize=14, fontweight='bold')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='orange')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='blue')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), 'o', color='green')\n\n# Set the color of the plot\nax.plot(np.random.rand(10), '"}
{"file": "dataset/ori_500/PIP_9.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Generate random data\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data\nax.plot(x, y, 'o')\n\n# Set the limits of the plot\nax.set_xlim(-8, 8)\nax.set_ylim(-7, 7)\n\n# Add a colorbar\ncbar = fig.colorbar(ax.collections[0])\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/area_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 8.0))\n\n# Define the data for the plot\nx = np.array([10, 50, 100, 500])\ny = np.array([10, 20, 30, 40])\n\n# Plot the data\nax.plot(x, y, 'o-')\n\n# Set the limits of the x-axis\nax.set_xlim(0, 1000)\n\n# Set the labels for the x-axis\nax.set_xticks([10, 50, 100, 500, 1000])\nax.set_xticklabels(['10K', '50K', '1M', '5M', '10M'])\n\n# Set the title of the plot\nax.set_title('ActivityNet mIoU')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/area_2.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig, ax = plt.subplots(figsize=(10.0, 10.0))\n\n# Define the time steps and their corresponding values for RSA and CR\ntime_steps = [0, 1, 2, 3]\nrsa_values = [0, 10, 20, 10]\ncr_values = [1.0, 0.98, 0.96, 0.94]\n\n# Plot the RSA and CR values against the time steps\nax.plot(time_steps, rsa_values, label='RSA')\nax.plot(time_steps, cr_values, label='CR')\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('time step')\nax.set_ylabel('value')\n\n# Add a legend to the plot\nax.legend()\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/area_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 80)\n\n# Set the y-axis limits\nax.set_ylim(0.5, 0.76)\n\n# Set the x-axis ticks\nax.set_xticks([0, 20, 40, 60, 80])\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0.5, 0.76, 0.05))\n\n# Set the x-axis labels\nax.set_xlabel('Decomposition IO Norm')\n\n# Set the y-axis labels\nax.set_ylabel('Accuracy')\n\n# Set the title of the plot\nax.set_title('Dynamic Effect of Vocab on Zero Shot Accuracy')\n\n# Add a horizontal line at y=0.76\nax.axhline(y=0.76, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.75\nax.axhline(y=0.75, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.70\nax.axhline(y=0.70, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.65\nax.axhline(y=0.65, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.60\nax.axhline(y=0.60, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.55\nax.axhline(y=0.55, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.53\nax.axhline(y=0.53, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.50\nax.axhline(y=0.50, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.49\nax.axhline(y=0.49, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.48\nax.axhline(y=0.48, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.47\nax.axhline(y=0.47, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.46\nax.axhline(y=0.46, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.45\nax.axhline(y=0.45, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.44\nax.axhline(y=0.44, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.43\nax.axhline(y=0.43, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.42\nax.axhline(y=0.42, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.41\nax.axhline(y=0.41, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.40\nax.axhline(y=0.40, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.39\nax.axhline(y=0.39, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.38\nax.axhline(y=0.38, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.37\nax.axhline(y=0.37, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.36\nax.axhline(y=0.36, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.35\nax.axhline(y=0.35, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.34\nax.axhline(y=0.34, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.33\nax.axhline(y=0.33, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.32\nax.axhline(y=0.32, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.31\nax.axhline(y=0.31, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.30\nax.axhline(y=0.30, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.29\nax.axhline(y=0.29, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.28\nax.axhline(y=0.28, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.27\nax.axhline(y=0.27, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.26\nax.axhline(y=0.26, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.25\nax.axhline(y=0.25, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.24\nax.axhline(y=0.24, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.23\nax.axhline(y=0.23, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.22\nax.axhline(y=0.22, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.21\nax.axhline(y=0.21, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.20\nax.axhline(y=0.20, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.19\nax.axhline(y=0.19, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.18\nax.axhline(y=0.18, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.17\nax.axhline(y=0.17, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.16\nax.axhline(y=0.16, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.15\nax.axhline(y=0.15, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.14\nax.axhline(y=0.14, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.13\nax.axhline(y=0.13, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.12\nax.axhline(y=0.12, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.11\nax.axhline(y=0.11, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.10\nax.axhline(y=0.10, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.09\nax.axhline(y=0.09, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.08\nax.axhline(y=0.08, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.07\nax.axhline(y=0.07, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.06\nax.axhline(y=0.06, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.05\nax.axhline(y=0.05, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.04\nax.axhline(y=0.04, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.03\nax.axhline(y=0.03, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.02\nax.axhline(y=0.02, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.01\nax.axhline(y=0.01, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n# Add a horizontal line at y=0.00\nax.axhline(y=0.00, color='black', linestyle='-')\n\n#"}
{"file": "dataset/ori_500/area_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the plot\nn = np.linspace(0, 8, 9)\ncontent_gain = [0, 1, 2, 3, 4, 5, 6, 7, 8]\norganization_gain = [0, 1, 2, 3, 4, 5, 6, 7, 8]\nlanguage_gain = [0, 1, 2, 3, 4, 5, 6, 7, 8]\n\n# Create the plot\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\nax.plot(n, content_gain, label='Content')\nax.plot(n, organization_gain, label='Organization')\nax.plot(n, language_gain, label='Language')\n\n# Add grid lines\nax.grid(True)\n\n# Set the title and labels\nax.set_title('Cumulative Performance Gain by Augmentation Level')\nax.set_xlabel('n')\nax.set_ylabel('Performance Gain (%)')\n\n# Add legend\nax.legend()\n\nplt.show()\n```"}
{"file": "dataset/ori_500/area_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\nyears = np.arange(1950, 2011)\npopulations = [3000, 3100, 3200, 3300, 3400, 3500, 3600, 3700, 3800, 3900, 4000, 4100, 4200, 4300, 4400, 4500, 4600, 4700, 4800, 4900, 5000]\npopulations = np.array(populations)\n\n# Plot the data\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\nax.plot(years, populations, 'b-')\nax.set_xlabel('Year')\nax.set_ylabel('Population (millions)')\nax.set_title('World population')\nax.grid(True)\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 5.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 60)\n\n# Set the y-axis limits\nax.set_ylim(0, 0.8)\n\n# Set the x-axis ticks\nax.set_xticks([0, 20, 40, 60])\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 1, 0.1))\n\n# Set the x-axis labels\nax.set_xticklabels(['0', '20', '40', '60'])\n\n# Set the y-axis labels\nax.set_yticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8'])\n\n# Set the title of the plot\nax.set_title('Scores')\n\n# Set the labels for the legend\nax.legend(['Notre-Dame de Paris', 'Demi-Gods and Semi-Devils', 'The Count of Monte Cristo', 'Game of Thrones', 'Attack on Titan'], loc='upper left')\n\n# Set the color of the bars\ncolors = ['blue', 'blue', 'orange', 'teal', 'blue']\n\n# Set the width of the bars\nwidth = 0.2\n\n# Set the position of the bars\nx = np.arange(len(colors))\n\n# Plot the bars\nax.bar(x, [0.7, 0.6, 0.5, 0.4, 0.3], width, color=colors)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Define the data\nx = ['Which', 'What', 'How', 'Will', 'Are', 'Is', 'Choose', 'Select', 'Identify', 'Fill']\ny = [30, 40, 20, 10, 50, 45, 55, 60, 55, 60]\n\n# Plot the data\nax.bar(x, y, color='blue')\n\n# Set the limits of the x-axis\nax.set_xlim(-0.5, 9.5)\n\n# Set the labels for the x-axis\nax.set_xticks(np.arange(len(x)))\nax.set_xticklabels(x)\n\n# Set the title of the plot\nax.set_title('Accuracy (%)')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_100.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create data for the first region\nregion1_data = [70, 80, 90, 100, 110]\nregion1_labels = ['Product A', 'Product B', 'Product C', 'Product D', 'Product E']\n\n# Create data for the second region\nregion2_data = [60, 70, 80, 90, 100]\nregion2_labels = ['Product A', 'Product B', 'Product C', 'Product D', 'Product E']\n\n# Create data for the third region\nregion3_data = [50, 60, 70, 80, 90]\nregion3_labels = ['Product A', 'Product B', 'Product C', 'Product D', 'Product E']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(15.0, 5.0))\n\n# Plot the first region's data\nax.bar(region1_labels, region1_data, color=['green', 'blue', 'red', 'yellow', 'purple'])\n\n# Plot the second region's data\nax.bar(region2_labels, region2_data, color=['cyan', 'magenta', 'lime', 'orange', 'brown'])\n\n# Plot the third region's data\nax.bar(region3_labels, region3_data, color=['pink', 'grey', 'black', 'white', 'brown'])\n\n# Add a title\nax.set_title('Average Monthly Sales by Product Across Regions')\n\n# Add a y-axis label\nax.set_ylabel('Sales')\n\n# Add a x-axis label\nax.set_xlabel('Region')\n\n# Add a grid\nax.grid(True)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_11.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the x-axis labels\nax.set_xticks([0, 10, 20, 30, 40])\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'])\n\n# Set the y-axis labels\nax.set_yticks([-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75])\n\n# Set the y-axis label\nax.set_ylabel('spearman')\n\n# Set the x-axis label\nax.set_xlabel('length')\n\n# Set the background color of the plot\nax.set_facecolor('#f2f2f2')\n\n# Set the background color of the x-axis\nax.spines['bottom'].set_color('#f2f2f2')\n\n# Set the background color of the y-axis\nax.spines['left'].set_color('#f2f2f2')\n\n# Set the background color of the top and right axis\nax.spines['top'].set_color('none')\nax.spines['right'].set_color('none')\n\n# Set the tick color\nax.tick_params(axis='both', colors='#f2f2f2')\n\n# Set the grid color\nax.grid(color='#f2f2f2')\n\n# Set the font size\nax.tick_params(axis='both', which='major', labelsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size\nax.set_xlabel('Length', fontsize=10)\n\n# Set the font size\nax.set_ylabel('Spearman', fontsize=10)\n\n# Set the font size\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'], fontsize=8)\n\n# Set the font size\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'], fontsize=8)\n\n# Set the font size\nax.set_title('Spearman Correlation', fontsize=10)\n\n# Set the font size"}
{"file": "dataset/ori_500/bar_12.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data for the first plot\nx = np.array([2.2, 11.2, 2.4, 19.9, 0])\ny = np.array([1, 5, 10, 15, 20])\nlabels = ['MLP-Rec', 'BERT4Rec', 'SASRec', 'CasRec', 'GRU4Rec']\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\nax.barh(labels, x, height=0.8, left=y)\nax.set_xlabel('Accuracy (%)')\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the bar chart\nx = np.array([3.5, 2.3, 1.5, 1.3, 3.5, 2.8])\ny = np.array([4, 2, 0, 1.3, 4, 2.8])\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Plot the bar chart\nax.bar(range(len(x)), x, color='blue')\nax.bar(range(len(y)), y, color='red')\n\n# Set the labels and title\nax.set_xlabel('Model')\nax.set_ylabel('Improvement [%]')\nax.set_title('ENDEFRRITES sampled')\n\n# Add grid lines\nax.grid(True)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_14.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 5.0))\n\n# Set the x-axis labels\nx_labels = ['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell']\n\n# Set the y-axis limits\nax.set_ylim(0.70, 0.90)\n\n# Set the x-axis tick labels\nax.set_xticks(np.arange(len(x_labels)))\nax.set_xticklabels(x_labels)\n\n# Set the y-axis label\nax.set_ylabel('Macro F1-score')\n\n# Set the x-axis label\nax.set_xlabel('Pheme')\n\n# Set the y-axis grid\nax.yaxis.grid(True, linestyle='--')\n\n# Set the x-axis grid\nax.xaxis.grid(True, linestyle='--')\n\n# Set the y-axis tick labels\nax.set_yticks(np.arange(0.70, 0.90, 0.05))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85', '0.90'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'Dell'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.70', '0.75', '0.80', '0.85"}
{"file": "dataset/ori_500/bar_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the x-axis labels\nax.set_xticks([1, 2, 3, 4, 5, 6])\nax.set_xticklabels(['1', '2', '3', '4', '5', '6'])\n\n# Set the y-axis limits\nax.set_ylim(0, 50)\n\n# Set the y-axis label\nax.set_ylabel('Scores')\n\n# Set the title of the plot\nax.set_title('Human Labeling and Agreement Bias Checking')\n\n# Create a bar chart for each column\nfor i in range(6):\n    ax.bar(i, np.random.randint(0, 50), color='blue')\n\n# Create a legend for the plot\nax.legend(['Labeler 1', 'Labeler 2', 'Labeler 3', 'Labeler 4', 'Labeler 5', 'Labeler 6'], loc='upper left')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Resonance Preference Plot for rich_context')\n\n# Set the labels for the x-axis\nax.set_xlabel('Count')\nax.set_ylabel('Role')\n\n# Set the tick labels for the x-axis\nax.set_xticks(np.arange(0, 801, 100))\nax.set_yticks(np.arange(0, 5, 1))\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['human', 'gpt4', 'gpt4-cot'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '100', '200', '300', '400', '500', '600', '700', '800'])\n\n# Set the color of the bars\ncolors = ['cyan', 'yellow', 'red']\n\n# Set the width of the bars\nwidth = 0.8\n\n# Set the position of the bars\nx = np.arange(len(colors))\n\n# Set the data for the bars\ndata = [200, 400, 600]\n\n# Set the labels for the bars\nlabels = ['O', 'T', 'P']\n\n# Set the bar chart\nax.bar(x, data, width, color=colors)\n\n# Set the labels for the bars\nfor i, v in enumerate(data):\n    ax.text(i-width/2, v + 3, str(v), ha='center', va='bottom')\n\n# Set the title of the bars\nax.set_title('s1')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data for the bar chart\nx = np.array([53, 51, 56, 58, 56])\ny = np.array([46, 45, 48, 46, 47])\nz = np.array([53, 51, 56, 58, 56])\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Plot the data\nax.bar(x, y, color='blue')\nax.bar(x, z, color='green')\n\n# Set the labels and title\nax.set_xlabel('Tasks')\nax.set_ylabel('Accuracy (%)')\nax.set_title('Bar Chart')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_18.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for each bar\nx = np.array(['GSM8K', 'MNLI', 'race@High'])\ny = np.array([57, 62, 65])\nyerr = np.array([1, 1, 1])\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Plot the bars\nax.bar(x, y, yerr=yerr, capsize=5)\n\n# Set the title and labels\nax.set_title('Performance')\nax.set_xlabel('Dataset')\nax.set_ylabel('Score')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_19.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\ndata = {\n    'DLMA win': [0.602, 0.602, 0.468, 0.347, 0.625, 0.492, 0.309],\n    'Tie': [0.288, 0.288, 0.391, 0.391, 0.277, 0.363, 0.387],\n    'DLMA lose': [0.110, 0.110, 0.141, 0.262, 0.98, 1.45, 0.305]\n}\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Plot the data\nax.bar(range(len(data['DLMA win'])), data['DLMA win'], color='green')\nax.bar(range(len(data['Tie'])), data['Tie'], bottom=data['DLMA win'], color='blue')\nax.bar(range(len(data['DLMA lose'])), data['DLMA lose'], bottom=[sum(x) for x in zip(data['DLMA win'], data['Tie'])], color='red')\n\n# Set the labels\nax.set_xticks(range(len(data['DLMA win'])))\nax.set_xticklabels(['DLMA win', 'DLMA win', 'DLMA win', 'DLMA win', 'DLMA win', 'DLMA win', 'DLMA win'])\n\n# Set the title\nax.set_title('DLMA win Methods On HHH (Evaluated by GPT4)')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 3.0))\n\n# Define the data for the plot\ntime = np.array([0, 10, 20, 30, 40])\ngait = np.array([0.9, 0.8, 0.7, 0.6, 0.5])\ntrot = np.array([0.9, 0.8, 0.7, 0.6, 0.5])\npace = np.array([0.8, 0.7, 0.6, 0.5, 0.4])\nbound = np.array([0.7, 0.6, 0.5, 0.4, 0.3])\npronek = np.array([0.6, 0.5, 0.4, 0.3, 0.2])\ntransition = np.array([0.5, 0.4, 0.3, 0.2, 0.1])\n\n# Plot the data\nax.plot(time, gait, label='gait')\nax.plot(time, trot, label='trot')\nax.plot(time, pace, label='pace')\nax.plot(time, bound, label='bound')\nax.plot(time, pronek, label='pronek')\nax.plot(time, transition, label='transition')\n\n# Set the labels and title\nax.set_xlabel('Time (s)')\nax.set_ylabel('% Experiments')\nax.set_title('Gait Distribution Over Time: Policy ORC=111')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_20.pdf", "response": "```\nimport matplotlib.pyplot as plt\n\n# Data for the bar chart\nx = ['LIMA', 'Vicuna', 'Koala', 'Wizardlm', 'Self-Instruct']\ny = [68, 82, 68, 72, 68]\ncolors = ['blue', 'purple', 'grey', 'cyan', 'orange']\n\n# Create a bar chart\nplt.bar(x, y, color=colors)\n\n# Add title and labels\nplt.title('Bar Chart')\nplt.xlabel('Categories')\nplt.ylabel('Values')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the plots\ndata = {\n    'Eye Movement': {'Benefits': [14.8, 29.6, 29.6, 18.5, 8.4], 'Reliability': [9.4, 24.1, 40.7, 27.8, 9.0], 'Security': [8.3, 14.8, 40.7, 33.3, 9.3], 'Privacy': [24.1, 29.6, 20.4, 16.7, 9.3]},\n    'Brainwave': {'Benefits': [19.0, 26.2, 35.7, 9.5, 9.5], 'Reliability': [9.5, 26.2, 45.2, 23.8, 14.0], 'Security': [9.5, 26.2, 45.2, 23.8, 14.0], 'Privacy': [12.0, 14.3, 38.1, 14.3, 9.5]}\n}\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Plot the data\nfor key, value in data.items():\n    ax.barh(list(value.keys()), list(value.values()), color='blue')\n\n# Set the labels\nax.set_xlabel('Percentage')\nax.set_ylabel('Criteria')\nax.set_title('Eye Movement')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_22.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, axs = plt.subplots(2, 1, figsize=(6.0, 10.0))\n\n# First subplot\naxs[0].plot(range(5), [0, -10, -20, -30, 0], 'o-')\naxs[0].set_title('Rate of Gain Change (%)')\naxs[0].set_xlabel('Brightness')\naxs[0].set_ylabel('Scale')\naxs[0].grid(True)\n\n# Second subplot\naxs[1].plot(range(5), [0, -10, -20, -30, 0], 'o-')\naxs[1].set_title('Rate of Gain Change (%)')\naxs[1].set_xlabel('Rotation Angle (\u00b0)')\naxs[1].set_ylabel('Scale')\naxs[1].grid(True)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_23.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the bar chart\nx = np.array(['GPT4', 'GPT-few-shot', 'GPT3.5', 'StarCoder', 'Code Llama', 'NCL'])\ny = np.array([2.8, 2.7, 2.6, 2.5, 2.4, 2.3])\ny1 = np.array([3.5, 3.4, 3.3, 3.2, 3.1, 3.0])\ny2 = np.array([2.5, 2.4, 2.3, 2.2, 2.1, 2.0])\ny3 = np.array([1.5, 1.4, 1.3, 1.2, 1.1, 1.0])\n\n# Create the bar chart\nfig, ax = plt.subplots(figsize=(9.0, 5.0))\nax.bar(x, y, color='blue')\nax.bar(x, y1, bottom=y, color='orange')\nax.bar(x, y2, bottom=y+y1, color='red')\nax.bar(x, y3, bottom=y+y1+y2, color='teal')\n\n# Add labels and title\nax.set_xlabel('Language Models')\nax.set_ylabel('Ratings')\nax.set_title('Ratings of Language Models on a Scale from 1-4')\n\n# Add legend\nax.legend(['Accuracy', 'Completeness', 'Conciseness', 'Readability'])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\nmodels = ['Majority', 'Flan-T5', 'GPT-3.5', 'GPT-4', 'Wizard13b', 'Vicuna13b', 'Vicuna33b', 'Mistral17b']\naccuracies = [0.302, 0.601, 0.468, 0.653, 0.384, 0.379, 0.347, 0.364]\ncolors = ['blue', 'darkblue', 'darkgreen', 'lightgreen', 'lightgreen', 'lightgreen', 'yellow', 'yellow']\n\n# Create the bar chart\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\nax.bar(models, accuracies, color=colors)\n\n# Set the labels and title\nax.set_xlabel('Accuracy')\nax.set_ylabel('Models')\nax.set_title('Model Accuracy')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_25.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the plots\ndata = {\n    'Alpa52k+': [78.8, 67.4, 44.2, 59.8],\n    'AlpaGasus-1k+': [11.7, 18.1, 33.9, 21.0],\n    'LIMAv1k+': [9.5, 14.5, 19.2, 19.0],\n    'LIMAv1k*': [17.8, 3.0, 13.5, 18.0]\n}\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Plot the data\nfor key, value in data.items():\n    ax.bar(key, value, color='blue')\n\n# Set the title and labels\nax.set_title('GPT4-as-a-judge')\nax.set_xlabel('Alpa52k+')\nax.set_ylabel('AlpaGasus-1k+')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_26.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\nemotions = ['Ang', 'Cn', 'Dis', 'Fea', 'Joy', 'Ntr', 'Sad', 'Sur']\nvalues = [1000, 500, 200, 1000, 2000, 3500, 1000, 500]\ncolors = ['red', 'green', 'grey', 'orange']\n\n# Create the bar chart\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\nax.bar(emotions, values, color=colors)\n\n# Add the text labels\nfor i, v in enumerate(values):\n    ax.text(i, v + 100, str(v), ha='center')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_27.pdf", "response": "```\nimport matplotlib.pyplot as plt\n\n# Data for the plots\ngpt4v_data = [0.0, 0.2, 0.4, 0.6, 0.8, 1.0]\nrobocode_data = [0.0, 0.2, 0.4, 0.6, 0.8, 1.0]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 3.0))\n\n# Plot the data\nax.plot(gpt4v_data, label='GPT-4V')\nax.plot(robocode_data, label='RoboCodeX')\n\n# Add labels and title\nax.set_xlabel('Percentage of Total Trials')\nax.set_ylabel('0.0')\nax.set_title('Success Rate')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_28.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Set the x-axis labels\nax.set_xticks([0, 1])\nax.set_xticklabels(['VOC 2012', 'COCO 2017'])\n\n# Set the y-axis label\nax.set_ylabel('Transmission Delay (ms)')\n\n# Set the title\nax.set_title('Datasets')\n\n# Create a bar chart\nbar_width = 0.35\nopacity = 0.8\nindex = np.arange(len(ax.get_xticks()))\nrects1 = ax.bar(index, [3.0, 3.0], bar_width,\n                alpha=opacity, color='b',\n                error_kw=dict(elinewidth=1, ecolor='k'))\n\n# Create a histogram\nn, bins, patches = ax.hist([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0"}
{"file": "dataset/ori_500/bar_29.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\nx = np.array(['Wave', 'Diffusion', 'Heat', 'Poison', 'Burgers', 'N-S'])\ny = np.array([1e-1, 1e-2, 1e-3, 1e-4, 1e-5, 1e-6])\n\n# Create the plot\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\nax.bar(x, y, color='orange')\n\n# Add the legend\nax.legend(['RBF-INT', 'RBF-POL', 'RBF-COM'], loc='upper left')\n\n# Set the labels\nax.set_xlabel('PDEs')\nax.set_ylabel('log L2')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for each model\nmodels = ['w/o DaQRN', 'w/o CPRN', 'w/o QCN', 'Full model']\ndata = [\n    [0.975, 0.975, 0.975, 0.975],\n    [0.975, 0.975, 0.975, 0.975],\n    [0.975, 0.975, 0.975, 0.975],\n    [0.975, 0.975, 0.975, 0.975]\n]\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(10.0, 3.0))\nax.bar(models, data, color=['blue', 'orange', 'cyan', 'gold'])\n\n# Add labels and title\nax.set_xlabel('Models')\nax.set_ylabel('Metric Values')\nax.set_title('Models')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_30.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nx = np.array([28.33, 56.11, 44.44, 60.56])\ny = np.array([6.11, 31.11, 42.78, 99.44])\nz = np.array([85.0, 56.11, 44.44, 60.56])\n\n# Create figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Plot data\nax.bar(range(len(x)), x, color='tab:red')\nax.bar(range(len(y)), y, color='tab:blue')\nax.bar(range(len(z)), z, color='tab:purple')\n\n# Set labels\nax.set_xlabel('GPT-3b-Instructor')\nax.set_ylabel('One-shot (%)')\nax.set_title('Zero-shot')\n\n# Add legend\nax.legend(['Zero-shot', 'One-shot', 'DS-Agent'])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_31.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data for the plot\nx = np.array([0, 20, 40, 60, 80, 100])\ny = np.array([17, 20, 25, 30, 31.5, 19.5])\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Plot the data\nax.plot(x, y, 'o-')\n\n# Set the x-axis limits\nax.set_xlim(0, 100)\n\n# Set the y-axis limits\nax.set_ylim(0, 100)\n\n# Set the x-axis tick labels\nax.set_xticks(x)\nax.set_xticklabels(['0', '20', '40', '60', '80', '100'])\n\n# Set the y-axis tick labels\nax.set_yticks(y)\nax.set_yticklabels(['17%', '20%', '25%', '30%', '31.5%', '19.5%'])\n\n# Set the title of the plot\nax.set_title('LLM-based vs Template')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_32.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the bar chart\nlabels = ['Combat Spider', 'Milk Cow', 'Shear Sheep']\nvalues = [0.72, 0.74, 0.56]\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(6.0, 2.0))\nax.bar(labels, values, color='C0')\n\n# Set the title and labels\nax.set_title('Probability of Improvement over VLM Image Encoder Baseline Returns')\nax.set_xlabel('Probability of Improvement')\nax.set_ylabel('')\n\n# Set the tick marks\nax.set_xticks([0.0, 0.2, 0.4, 0.6, 0.8, 1.0])\nax.set_yticks([])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_33.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nsteps = [0, 1, 2, 3, 4]\nscores = [100.0, 83.3, 48.1, 50.7, 63.4]\nerrors = [10.0, 1.0, 0.8, 0.7, 0.6]\n\n# Plot\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\nax.bar(steps, scores, color='blue')\nax.set_xlabel('Steps')\nax.set_ylabel('Scores')\nax.set_title('Instruction Following Results In Different Steps (gpt-3.5-turbo)')\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_34.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Define the data for each bar\nbar_data = [\n    [100, 95, 90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10, 5, 0],\n    [100, 95, 90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10, 5, 0],\n    [100, 95, 90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10, 5, 0]\n]\n\n# Define the labels for each bar\nlabels = ['coreutils', 'scp', 'tar', 'exim', 'mem.c', 'astar', 'bzip2', 'glibc', 'hmmr', 'libm', 'mc', 'perl', 'sieng', 'xalan', 'php', 'mySQL', 'avg']\n\n# Define the colors for each bar\ncolors = ['blue', 'yellow', 'blue']\n\n# Define the width of each bar\nwidth = 0.2\n\n# Define the position of each bar\nx = np.arange(len(labels))\n\n# Plot the bars\nfor i in range(len(bar_data)):\n    ax.bar(x + i * width, bar_data[i], width, label=labels[i], color=colors[i])\n\n# Add a legend\nax.legend()\n\n# Set the title and labels\nax.set_title('Bar Chart')\nax.set_xlabel('Labels')\nax.set_ylabel('Values')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_35.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nx = np.array([5.52, 5.53, 5.54, 5.83, 5.84])\ny = np.array([6.57, 6.75, 6.81, 7.08, 6.9])\n\n# Plot\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\nax.barh(x, y, color='blue')\nax.set_xlabel('MT-Bench Score')\nax.set_ylabel('Llama2')\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_36.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.61, 5.23))\n\n# Define the data\nx = np.array([49.98, 49.63])\ny = np.array([51.05, 50.74])\n\n# Plot the data\nax.bar(range(len(x)), x, color='blue')\nax.bar(range(len(y)), y, color='brown')\n\n# Add labels and title\nax.set_xlabel('Number of Clusters')\nax.set_ylabel('MMLU')\nax.set_title('Random Sampling')\n\n# Add legend\nax.legend(['Random Sampling', 'Uniform', 'ClusterClip'])\n\n# Set the y-axis limits\nax.set_ylim(47, 53)\n\n# Set the x-axis limits\nax.set_xlim(-1, 2)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_37.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the bar chart\nx = np.array([7.4, 6.1, 8.7, 3.9, 4.3])\ny = np.array([1.0, 1.0, 1.0, 1.0, 1.0])\nz = np.array([2.6, 2.9, 2.7, 1.6, 1.8])\na = np.array([4.6, 3.4, 3.4, 3.3, 3.4])\nb = np.array([4.5, 4.5, 4.5, 4.5, 4.5])\nc = np.array([3.3, 3.4, 3.4, 3.3, 3.4])\nd = np.array([2.6, 2.9, 2.7, 1.6, 1.8])\ne = np.array([1.0, 1.0, 1.0, 1.0, 1.0])\nf = np.array([1.8, 1.9, 1.6, 1.8, 1.8])\ng = np.array([1.0, 1.0, 1.0, 1.0, 1.0])\nh = np.array([2.6, 2.9, 2.7, 1.6, 1.8])\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 4.0))\n\n# Plot the bar chart\nax.bar(range(len(x)), x, color='purple')\nax.bar(range(len(y)), y, color='blue')\nax.bar(range(len(z)), z, color='pink')\nax.bar(range(len(a)), a, color='green')\nax.bar(range(len(b)), b, color='cyan')\nax.bar(range(len(c)), c, color='teal')\nax.bar(range(len(d)), d, color='brown')\nax.bar(range(len(e)), e, color='red')\nax.bar(range(len(f)), f, color='orange')\nax.bar(range(len(g)), g, color='grey')\nax.bar(range(len(h)), h, color='yellow')\n\n# Set the labels for the x-axis\nax.set_xticks(range(len(x)))\nax.set_xticklabels(['ResNet18', 'AlexNet', 'ResNet50'])\n\n# Set the labels for the y-axis\nax.set_yticks(range(11))\nax.set_yticklabels(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the title of the plot\nax.set_title('Perturbation')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_38.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 5.0))\n\n# Define the data for each bar\nx = ['CL-7b', 'CL-13b', 'CL-34b', 'DS-6.7b', 'DS-33b', 'SC']\ny = [82, 79, 77, 76, 75, 74]\ncolors = ['green', 'blue', 'red', 'purple', 'green', 'cyan']\n\n# Plot the bars\nfor i in range(len(x)):\n    ax.barh(i, y[i], color=colors[i])\n\n# Set the labels and title\nax.set_xlabel('Accuracy')\nax.set_title('LeetCode, DS-6.7b')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_39.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the bar chart\nx = np.array([53, 80, 116, 99, 179])\ny = np.array([6, 33, 49, 50, 23])\nz = np.array([21, 67, 53, 103, 98])\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Plot the bars\nax.bar(range(len(x)), x, color='r')\nax.bar(range(len(y)), y, bottom=x, color='y')\nax.bar(range(len(z)), z, bottom=x+y, color='b')\n\n# Set the labels\nax.set_xticks(range(len(x)))\nax.set_xticklabels(['Vicuna', 'Koala', 'WizardLM', 'SInstructor', 'LIMA'])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nx = ['CometKiwi', 'LaBSE', 'IF', 'Max', 'Stere+', 'Wass Combo', 'Ppl', 'Alti+', 'Stare']\ny = [35.15, 26.86, 19.08, 22.09, 20.67, 58.99, 48.38, 66.19, 62.94]\ny2 = [36.63, 23.9, 26.38, 17.06]\ny3 = [36.63, 23.9, 26.38, 17.06]\n\n# Create figure and axis objects\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Plot data\nax.bar(x, y, color='lightgreen')\nax.bar(x, y2, color='orange')\nax.bar(x, y3, color='lightgreen')\n\n# Set axis limits\nax.set_xlim(-0.5, len(x)-0.5)\nax.set_ylim(0, 80)\n\n# Add labels\nax.set_xlabel('Dataset')\nax.set_ylabel('Score')\n\n# Add title\nplt.title('FPR@90TPR on Guerreiro et al. 2022')\n\n# Add legend\nax.legend(['Non-agg', 'Agg', 'Non-agg'], loc='upper left')\n\n# Show plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_40.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the bar chart\ncategories = ['Literal', 'Assignment', 'Operator', 'Comment', 'Operation', 'Exception Handling', 'Method Call', 'Return', 'External Variable/Method', 'Variable', 'External Class', 'Argument', 'Conditional Block', 'Loop', 'Conditional Statement', 'Variable Declaration', 'Method Declaration', 'Parameter']\nvalues = [200, 190, 180, 170, 160, 150, 140, 130, 120, 110, 100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 0]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Plot the bar chart\nax.barh(categories, values, color='lightgrey')\n\n# Set the x-axis limits\nax.set_xlim(-50, 200)\n\n# Set the y-axis limits\nax.set_ylim(-5, 18)\n\n# Set the x-axis label\nax.set_xlabel('Difference (%)')\n\n# Set the y-axis label\nax.set_ylabel('Semantic Category')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_41.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the plots\ntruthful = [66.3, 61.9, 53.8]\nmisleading = [36.3, 41.0, 31.5]\ntruthful2 = [49.3, 45.7, 41.6]\nmisleading2 = [40.5, 49.6, 36.5]\ntruthful3 = [48.0, 42.6, 36.5]\nmisleading3 = [43.8, 40.2, 30.6]\ntruthful4 = [49.0, 42.6, 36.5]\nmisleading4 = [44.5, 49.6, 36.5]\ntruthful5 = [43.8, 40.2, 30.6]\nmisleading5 = [49.5, 56.8, 42.8]\ntruthful6 = [64.7, 59.6, 43.4]\nmisleading6 = [22.3, 25.9, 22.5]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(14.0, 4.0))\n\n# Plot the truthful and misleading data\nax.bar(range(len(truthful)), truthful, color='blue', label='Truthful Recall')\nax.bar(range(len(misleading)), misleading, color='red', label='Misleading Recall')\n\n# Add labels and title\nax.set_xlabel('Time')\nax.set_ylabel('Score')\nax.set_title('Truthful:Misleading = 2:0')\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_42.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\nx = np.array([-6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6])\ny = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n\n# Create the plot\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\nax.plot(x, y, 'o-')\n\n# Add the model name\nax.set_title('Model = Vicuna')\n\n# Add the x-axis label\nax.set_xlabel('\u0394Acc (with Rules)')\n\n# Add the y-axis label\nax.set_ylabel('\u0394Acc (without Rules)')\n\n# Add the legend\nax.legend(['\u0394Acc < -1', '-1 <= \u0394Acc <= 1', '\u0394Acc > 1'])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_43.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for each subplot\ndata = [\n    {'name': 'MedCQA', 'performance': [72.3, 54.3, 40, 49, 64.9, 57.2, 59.3, 72.3, 79.1], 'color': 'brown'},\n    {'name': 'MMLU', 'performance': [84.1, 40, 49, 54, 58.6, 64.9, 69.5, 71.1, 78.4], 'color': 'brown'},\n    {'name': 'MMLU Clinical', 'performance': [89.6, 40, 49, 54, 58.6, 64.9, 69.5, 71.1, 78.4], 'color': 'brown'},\n    {'name': 'MMLU Medicine', 'performance': [89.0, 40, 49, 54, 58.6, 64.9, 69.5, 71.1, 78.4], 'color': 'brown'},\n    {'name': 'MMLU Genetics', 'performance': [89.0, 40, 49, 54, 58.6, 64.9, 69.5, 71.1, 78.4], 'color': 'brown'},\n    {'name': 'PubMed', 'performance': [70.7, 40, 49, 54, 58.6, 64.9, 69.5, 71.1, 78.4], 'color': 'brown'},\n    {'name': 'GPT-4', 'performance': [40, 40, 40, 40, 40, 40, 40, 40, 40], 'color': 'grey'}\n]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Plot the data\nfor i, d in enumerate(data):\n    ax.plot(d['performance'], label=d['name'], color=d['color'])\n\n# Set the labels and title\nax.set_xlabel('Performance Score (%)')\nax.set_ylabel('Number of Participants')\nax.set_title('Comparison of Performance Scores')\n\n# Show the legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_44.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Define the categories\ncategories = ['AFAN', 'AFBE', 'AFCE', 'AFEI', 'AFEX', 'AFPK', 'AFPO', 'AFP', 'AFPR', 'AFRL', 'AFSC', 'AFSL', 'AFST', 'AFSU', 'AFSV', 'AFSW', 'AFSX', 'AFSY', 'AFSZ', 'AFTA', 'AFTB', 'AFTC', 'AFTD', 'AFTE', 'AFTF', 'AFTG', 'AFTH', 'AFTI', 'AFTK', 'AFTL', 'AFTM', 'AFTN', 'AFTO', 'AFTP', 'AFTR', 'AFTS', 'AFTT', 'AFTU', 'AFTV', 'AFTW', 'AFTX', 'AFTY', 'AFTZ', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI', 'AI"}
{"file": "dataset/ori_500/bar_45.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\nx = np.array([3, 5, 7, 10])\ny = np.array([-2.4, -2.6, -2.8, -2.9])\n\n# Create the plot\nfig, ax = plt.subplots(figsize=(10.0, 7.0))\nax.plot(x, y, 'o-')\n\n# Add labels and title\nax.set_xlabel('Num of Constraint Words')\nax.set_ylabel('Score')\nax.set_title('Taboo')\n\n# Add legend\nax.legend(['LLAMA-Default', 'LLAMA-HAG', 'Vicuna-Default', 'Vicuna-HAG'], loc='upper left')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_46.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 10)\n\n# Set the y-axis limits\nax.set_ylim(0, 90)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 10, 2))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 100, 10))\n\n# Set the x-axis labels\nax.set_xticklabels(['0%', '0.71%', '4.64%', '4.64%', '31.79%', '82.5%'])\n\n# Set the y-axis labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50', '60', '70', '80', '90'])\n\n# Set the title of the plot\nax.set_title('Human Study')\n\n# Set the grid\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the"}
{"file": "dataset/ori_500/bar_47.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the plots\ndata = {\n    'COP v.s. Golden (Human Eval)': [\n        {'HH': [22, 50, 28], 'Reddit': [25, 40, 35], 'IMDB': [30, 60, 10], 'AVG': [26, 50, 37]},\n        {'HH': [45, 20, 35], 'Reddit': [50, 10, 60], 'IMDB': [50, 30, 20], 'AVG': [40, 50, 30]},\n        {'HH': [50, 50, 35], 'Reddit': [20, 55, 30], 'IMDB': [38, 42, 22], 'AVG': [35, 50, 30]},\n        {'HH': [0, 0, 0], 'Reddit': [0, 0, 0], 'IMDB': [0, 0, 0], 'AVG': [0, 0, 0]}\n    ],\n    'COP v.s. Golden (GPT-4 Eval)': [\n        {'HH': [40, 50, 30], 'Reddit': [30, 10, 60], 'IMDB': [50, 30, 20], 'AVG': [40, 50, 30]},\n        {'HH': [50, 20, 35], 'Reddit': [50, 10, 60], 'IMDB': [50, 30, 20], 'AVG': [40, 50, 30]},\n        {'HH': [50, 50, 35], 'Reddit': [20, 55, 30], 'IMDB': [38, 42, 22], 'AVG': [35, 50, 30]},\n        {'HH': [0, 0, 0], 'Reddit': [0, 0, 0], 'IMDB': [0, 0, 0], 'AVG': [0, 0, 0]}\n    ],\n    'COP v.s. DPO-ER (Human Eval)': [\n        {'HH': [45, 20, 35], 'Reddit': [50, 10, 60], 'IMDB': [50, 30, 20], 'AVG': [40, 50, 30]},\n        {'HH': [50, 20, 35], 'Reddit': [50, 10, 60], 'IMDB': [50, 30, 20], 'AVG': [40, 50, 30]},\n        {'HH': [50, 50, 35], 'Reddit': [20, 55, 30], 'IMDB': [38, 42, 22], 'AVG': [35, 50, 30]},\n        {'HH': [0, 0, 0], 'Reddit': [0, 0, 0], 'IMDB': [0, 0, 0], 'AVG': [0, 0, 0]}\n    ],\n    'COP v.s. DPO-ER (GPT-4 Eval)': [\n        {'HH': [50, 50, 35], 'Reddit': [20, 55, 30], 'IMDB': [38, 42, 22], 'AVG': [35, 50, 30]},\n        {'HH': [50, 50, 35], 'Reddit': [20, 55, 30], 'IMDB': [38, 42, 22], 'AVG': [35, 50, 30]},\n        {'HH': [50, 50, 35], 'Reddit': [20, 55, 30], 'IMDB': [38, 42, 22], 'AVG': [35, 50, 30]},\n        {'HH': [0, 0, 0], 'Reddit': [0, 0, 0], 'IMDB': [0, 0, 0], 'AVG': [0, 0, 0]}\n    ]\n}\n\n# Define the colors for the plots\ncolors = ['brown', 'orange', 'pink']\n\n# Create the plots\nfig, ax = plt.subplots(figsize=(13.0, 6.0))\nfor i, (key, value) in enumerate(data.items()):\n    for j, (k, l) in enumerate(value):\n        ax.barh(key, l[k], color=colors[j])\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_48.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create data for the first plot\naccuracy = [0.35, 0.25, 0.15]\nunfairness = [0.10, 0.05, 0.00]\nx_labels = ['Accuracy', 'Unfairness']\n\n# Create data for the second plot\naccuracy2 = [0.18, 0.14]\nunfairness2 = [0.10, 0.08]\nx_labels2 = ['Accuracy', 'Unfairness']\n\n# Create the first plot\nfig, ax = plt.subplots(figsize=(5.0, 6.0))\nax.bar(x_labels, accuracy, color='blue')\nax.bar(x_labels, unfairness, bottom=accuracy, color='yellow')\nax.set_title('NDCG@20')\n\n# Create the second plot\nfig, ax = plt.subplots(figsize=(5.0, 6.0))\nax.bar(x_labels2, accuracy2, color='blue')\nax.bar(x_labels2, unfairness2, bottom=accuracy2, color='yellow')\nax.set_title('CV@20')\n```"}
{"file": "dataset/ori_500/bar_49.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Define the data for the bar chart\nx = np.array([224, 128, 64, 32])\ny = np.array([80, 75, 70, 65])\n\n# Plot the bar chart\nax.bar(x, y, color='blue')\n\n# Add labels and title\nax.set_xlabel('Resolutions')\nax.set_ylabel('Top-1 Acc (%)')\nax.set_title('Top-1 Accuracy by Resolution and Method')\n\n# Add a horizontal line at the mean of the data\nax.axhline(y=np.mean(y), color='b', linestyle='-')\n\n# Add a vertical line at the mean of the data\nax.axvline(x=np.mean(x), color='b', linestyle='-')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i] - 0.5, str(v), ha='center', va='top')\n\n# Add a text label at the top of each bar\nfor i, v in enumerate(y):\n    ax.text(x[i], v + 0.5, str(v), ha='center', va='bottom')\n\n# Add a text label at the bottom of each bar\nfor i, v in enumerate(x):\n    ax.text(v, y[i]"}
{"file": "dataset/ori_500/bar_5.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data for the plot\nx = np.array([50, 50, 50])\ny = np.array([30, 22, 20])\nz = np.array([10, 16.8, 10])\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 3.0))\n\n# Plot the data\nax.bar(range(len(x)), x, color='yellow')\nax.bar(range(len(y)), y, bottom=x, color='blue')\nax.bar(range(len(z)), z, bottom=x+y, color='red')\n\n# Add labels and title\nax.set_xlabel('Level')\nax.set_ylabel('# Avg Uploaded Samples')\nax.set_title('Tent/PL/CoTTA vs ETA vs CETTA (ours)')\nax.set_xticks(range(len(x)))\nax.set_xticklabels(['Level 1', 'Level 2', 'Level 4'])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_50.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Define the data\nx = np.array([17, 9, 11, 20, 19, 12, 14, 30, 28, 22, 34, 24, 22, 35])\ny = np.array([39.4, 32.84, 19.66, 26.82, 22, 35.18, 20.84, 22, 30, 28.0, 34.06, 24.27, 22, 35])\n\n# Plot the data\nax.plot(x, y, 'o-')\n\n# Set the labels\nax.set_xlabel('Categories')\nax.set_ylabel('Reward Values')\nax.set_title('Reward Values by Categories')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_51.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nx = np.array([0, 1000, 2000, 3000, 4000, 5000])\ny = np.array([5375, 4190, 4000, 3543, 3216, 3215])\n\n# Plot\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\nax.plot(x, y)\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_52.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\ndata = {\n    'greeting': [8, 16],\n    'request': [31, 28],\n    'criticism': [24, 11],\n    'apology': [7, 5],\n    'persuasion': [10, 15],\n    'thank': [10, 16],\n    'leave-taking': [10, 9]\n}\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 10)\n\n# Set the y-axis limits\nax.set_ylim(0, 30)\n\n# Set the x-axis ticks\nax.set_xticks([0, 10])\n\n# Set the x-axis labels\nax.set_xticklabels(['synthetic data', 'human-authored data'])\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 31, 5))\n\n# Set the y-axis labels\nax.set_yticklabels(['0%', '5%', '10%', '15%', '20%', '25%', '30%'])\n\n# Plot the bars\nfor key, value in data.items():\n    ax.barh(key, value[0], color='lightgrey')\n    ax.barh(key, value[1], left=value[0], color='darkgrey')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_53.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the x-axis labels\nx_labels = ['small', 'certain', 'little', 'fraction', 'limited', 'day', 'few', 'new', 'specific', 'substantial', 'tiny', 'very', 'single', 'slight', 'relatively', 'moderate', 'handful', 'low']\n\n# Set the y-axis limits\nax.set_ylim(0, 0.3)\n\n# Set the y-axis tick labels\nax.set_yticks(np.arange(0, 0.35, 0.05))\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick labels\nax.set_xticks(range(len(x_labels)))\nax.set_xticklabels(x_labels, rotation=45)\n\n# Set the x-axis label\nax.set_xlabel('Word')\n\n# Set the y-axis label\nax.set_ylabel('Probability')\n\n# Set the title of the plot\nax.set_title('Context: The human body can tolerate only a')\n\n# Set the color of the bars\ncolors = ['red', 'orange', 'yellow', 'green', 'blue', 'purple', 'pink', 'brown', 'gray', 'cyan', 'magenta', 'lime', 'teal', 'coral', 'silver', 'gold', 'navy']\n\n# Set the width of the bars\nwidth = 0.35\n\n# Set the position of the bars\nindex = np.arange(len(x_labels))\n\n# Plot the bars\nfor i in range(len(colors)):\n    ax.bar(index + i * width, [0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05], width, color=colors[i])\n\n# Add a legend\nax.legend(['Human Distribution', 'Model Distribution'], loc='upper right')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_54.pdf", "response": "```\nimport matplotlib.pyplot as plt\n\n# Data for the bar chart\ncategories = ['Convertible', 'Coupe', 'Truck', 'SUV', 'Sedan']\nvalues = [10, 8, 7, 6, 5]\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(6.0, 2.0))\nax.bar(categories, values, color='blue')\n\n# Set the title and labels\nax.set_title('Probability of Improvement over VLM Image Encoder Baseline Returns')\nax.set_xlabel('Probability of Improvement')\nax.set_ylabel('Car Type')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_55.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\nemotion = ['Disapproval', 'Joy', 'Relief', 'Gratitude', 'Annoyance', 'Nervousness', 'Pride', 'Sadness', 'Unbothered', 'Amusement']\nfrequency = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\npercentage = [2.1, 3.0, 3.5, 3.5, 6.0, 6.0, 6.6, 6.7, 7.0, 7.6]\n\n# Create the figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Plot the data\nax.barh(emotion, percentage, color='r')\n\n# Set the labels\nax.set_xlabel('Frequency (%)')\nax.set_ylabel('Emotion')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_56.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 9000)\n\n# Set the y-axis limits\nax.set_ylim(0, 10000)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 9000, 1000))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 10000, 1000))\n\n# Set the x-axis labels\nax.set_xticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the y-axis labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the x-axis label\nax.set_xlabel('Number of Videos')\n\n# Set the y-axis label\nax.set_ylabel('Number of Profession')\n\n# Set the title\nax.set_title('Number of Videos by Profession')\n\n# Set the grid\nax.grid(True)\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', length=0)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', length=0)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', length=0)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', length=0)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', length=0)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', length=0)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', length=0)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', length=0)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', length=0)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', length=0)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', length=0)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', length=0)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', length=0)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', length=0)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', length=0)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', length=0)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', length=0)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', length=0)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', length=0)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', length=0)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', length=0)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', length=0)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', length=0)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', length=0)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', length=0)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', length=0)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', length=0)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', length=0)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', length=0)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', length=0)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', length=0)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', length=0)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', length=0)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', length=0)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', length=0)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', length=0)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', length=0)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', length=0)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', length=0)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', length=0)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '1000', '2000', '3000', '4000', '5000', '6000', '7000', '8000', '9000'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', length=0)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', length=0)\n\n# Set the"}
{"file": "dataset/ori_500/bar_57.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for each category\ncategories = ['GDP Growth', 'Unemployment Rate', 'Inflation Rate', 'NASDAQ', 'Exchange Rate', 'Real Estate Prices', 'Corporate Profits']\ndata = [\n    [10, 20, 30, 40, 50],\n    [15, 25, 35, 45, 55],\n    [20, 30, 40, 50, 60],\n    [25, 35, 45, 55, 65],\n    [30, 40, 50, 60, 70],\n    [35, 45, 55, 65, 75],\n    [40, 50, 60, 70, 80]\n]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Plot the bars\nfor i in range(len(categories)):\n    ax.bar(categories[i], data[i], color='blue')\n\n# Add labels and title\nax.set_xlabel('Categories')\nax.set_ylabel('Values')\nax.set_title('Bar Chart')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_58.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Define the data for the bar chart\ndata = [0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]\nlabels = ['Excellent', 'Good', 'Moderate', 'Poor', 'Very Poor']\n\n# Create a bar chart\nax.bar(labels, data, color=['r', 'orange', 'grey', 'b', 'blue'])\n\n# Add a vertical line at x=0.5\nax.axvline(x=0.5, color='grey', linestyle='--')\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 1)\n\n# Set the x-axis tick labels\nax.set_xticks(np.arange(0, 1, 0.1))\nax.set_xticklabels(['90', '80', '70', '60', '50', '40', '30', '20', '10', '0'])\n\n# Set the y-axis tick labels\nax.set_yticks(np.arange(0, 1, 0.1))\nax.set_yticklabels(['0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9'])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_59.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the bar chart\nx = np.array([-80, -60, -40, -20, 0, 20, 40])\ny = np.array([80, 70, 60, 50, 40, 30, 20])\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Plot the bar chart\nax.bar(x, y, color='red')\n\n# Set the x-axis limits\nax.set_xlim(-80, 80)\n\n# Set the y-axis limits\nax.set_ylim(0, 80)\n\n# Set the x-axis tick labels\nax.set_xticks(np.arange(-80, 81, 20))\n\n# Set the y-axis tick labels\nax.set_yticks(np.arange(0, 81, 10))\n\n# Set the x-axis label\nax.set_xlabel('Difference (%)')\n\n# Set the y-axis label\nax.set_ylabel('Positive Differences')\n\n# Set the title of the plot\nax.set_title('Positive Differences in Machine vs. Human Focus on Semantic Categories')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the emotions and their corresponding frequencies\nemotions = ['Disappointment', 'Embarrassment', 'Oblivious', 'Delight', 'Disapproval', 'Joy', 'Relief', 'Gratitude', 'Annoyance', 'Nervousness', 'Pride', 'Sadness', 'Unbothered', 'Amusement']\nfrequencies = [7, 8, 0, 2, 1, 6, 4, 3, 2, 1, 0, 0, 0, 0]\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\nax.barh(emotions, frequencies, color='lightblue')\n\n# Set the x-axis label\nax.set_xlabel('Frequency (%)')\n\n# Set the y-axis label\nax.set_ylabel('Emotion')\n\n# Set the title of the plot\nax.set_title('Emotion Frequency')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_60.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Define the data\nx = np.array([-20, -15, -10, -5, 0, 5, 10, 15, 20])\ny = np.array([0, 0, 0, 0, 0, 0, 0, 0, 0])\n\n# Plot the data\nax.plot(x, y, 'k-')\n\n# Set the tick labels\nax.set_xticks(np.arange(-20, 21, 5))\nax.set_yticks(np.arange(0, 21, 5))\n\n# Set the tick labels\nax.set_xticklabels(['-20', '-15', '-10', '-5', '0', '5', '10', '15', '20'])\nax.set_yticklabels(['0', '5', '10', '15', '20'])\n\n# Set the axis limits\nax.set_xlim(-20, 20)\nax.set_ylim(0, 20)\n\n# Set the axis labels\nax.set_xlabel('X-axis')\nax.set_ylabel('Y-axis')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_61.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 3250)\n\n# Set the y-axis limits\nax.set_ylim(0, 100)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 3250, 500))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 100, 10))\n\n# Set the x-axis labels\nax.set_xticklabels(['0', '250', '500', '750', '1000', '1250', '1500', '1750', '2000', '2250', '2500', '2750', '3000', '3250'])\n\n# Set the y-axis labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the x-axis label\nax.set_xlabel('Year')\n\n# Set the y-axis label\nax.set_ylabel('Percentage')\n\n# Set the title of the plot\nax.set_title('Internet Penetration (%)')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='black')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='black')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='black')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='minor', linestyle=':')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='minor', linestyle=':')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='minor', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='minor', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='minor', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='minor', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='major', linestyle='-')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='major', linestyle='-')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='major', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='major', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='major', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='major', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linestyle=':')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linestyle=':')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linestyle='-')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linestyle='-')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linestyle=':')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linestyle=':')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linestyle='-')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linestyle='-')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linestyle=':')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linestyle=':')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linestyle='-')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linestyle='-')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linestyle=':')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linestyle=':')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linestyle='-')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linestyle='-')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linestyle=':')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linestyle=':')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linestyle='-')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linestyle='-')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linestyle=':')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linestyle=':')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linestyle='-')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linestyle='-')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linestyle=':')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linestyle=':')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the color of the x-axis grid lines"}
{"file": "dataset/ori_500/bar_62.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\ndata = {\n    'greeting': [12, 18],\n    'request': [35, 32],\n    'criticism': [28, 15],\n    'apology': [15, 8],\n    'persuasion': [18, 20],\n    'thank': [14, 22],\n    'leave-taking': [16, 12]\n}\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Plot the data\nfor key, value in data.items():\n    ax.barh(key, value, color=plt.cm.viridis(value[0]/max(value)))\n\n# Set the limits of the x-axis\nax.set_xlim(0, max(data.values())[0])\n\n# Add labels\nax.set_xlabel('synthetic data')\nax.set_ylabel('human-authored data')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_63.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create data\nx = np.arange(0, 7, 0.1)\ny = np.sin(x)\n\n# Plot\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\nax.plot(x, y, 'r-')\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_64.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 7.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 100)\n\n# Set the y-axis limits\nax.set_ylim(0, 100)\n\n# Set the x-axis tick labels\nax.set_xticks([0, 20, 40, 60, 80, 100])\n\n# Set the y-axis tick labels\nax.set_yticks([0, 20, 40, 60, 80, 100])\n\n# Set the x-axis label\nax.set_xlabel('Concentration')\n\n# Set the y-axis label\nax.set_ylabel('Air Quality Index')\n\n# Set the title of the plot\nax.set_title('Air Quality Metrics by Region')\n\n# Create a bar chart for the West region\nwest = [11.59, 17.38, 32.19, 56.03]\nwest_labels = ['PM (\u00b5g/m\u00b3)', 'SO2 (\u00b5g/m\u00b3)', 'NO2 (\u00b5g/m\u00b3)', 'CO2 (ppm)']\nwest_colors = ['red', 'blue', 'purple', 'cyan']\nax.bar(range(len(west)), west, tick_label=west_labels, color=west_colors)\n\n# Create a bar chart for the East region\neast = [17.38, 32.19, 56.03]\neast_labels = ['PM (\u00b5g/m\u00b3)', 'SO2 (\u00b5g/m\u00b3)', 'NO2 (\u00b5g/m\u00b3)']\neast_colors = ['red', 'blue', 'purple']\nax.bar(range(len(east)), east, tick_label=east_labels, color=east_colors)\n\n# Create a bar chart for the South region\nsouth = [17.38, 32.19, 56.03]\nsouth_labels = ['PM (\u00b5g/m\u00b3)', 'SO2 (\u00b5g/m\u00b3)', 'NO2 (\u00b5g/m\u00b3)']\nsouth_colors = ['red', 'blue', 'purple']\nax.bar(range(len(south)), south, tick_label=south_labels, color=south_colors)\n\n# Create a bar chart for the North region\nnorth = [17.38, 32.19, 56.03]\nnorth_labels = ['PM (\u00b5g/m\u00b3)', 'SO2 (\u00b5g/m\u00b3)', 'NO2 (\u00b5g/m\u00b3)']\nnorth_colors = ['red', 'blue', 'purple']\nax.bar(range(len(north)), north, tick_label=north_labels, color=north_colors)\n\n# Create a bar chart for the West region\nwest = [11.59, 17.38, 32.19, 56.03]\nwest_labels = ['PM (\u00b5g/m\u00b3)', 'SO2 (\u00b5g/m\u00b3)', 'NO2 (\u00b5g/m\u00b3)', 'CO2 (ppm)']\nwest_colors = ['red', 'blue', 'purple', 'cyan']\nax.bar(range(len(west)), west, tick_label=west_labels, color=west_colors)\n\n# Create a bar chart for the West region\nwest = [11.59, 17.38, 32.19, 56.03]\nwest_labels = ['PM (\u00b5g/m\u00b3)', 'SO2 (\u00b5g/m\u00b3)', 'NO2 (\u00b5g/m\u00b3)', 'CO2 (ppm)']\nwest_colors = ['red', 'blue', 'purple', 'cyan']\nax.bar(range(len(west)), west, tick_label=west_labels, color=west_colors)\n\n# Create a bar chart for the West region\nwest = [11.59, 17.38, 32.19, 56.03]\nwest_labels = ['PM (\u00b5g/m\u00b3)', 'SO2 (\u00b5g/m\u00b3)', 'NO2 (\u00b5g/m\u00b3)', 'CO2 (ppm)']\nwest_colors = ['red', 'blue', 'purple', 'cyan']\nax.bar(range(len(west)), west, tick_label=west_labels, color=west_colors)\n\n# Create a bar chart for the West region\nwest = [11.59, 17.38, 32.19, 56.03]\nwest_labels = ['PM (\u00b5g/m\u00b3)', 'SO2 (\u00b5g/m\u00b3)', 'NO2 (\u00b5g/m\u00b3)', 'CO2 (ppm)']\nwest_colors = ['red', 'blue', 'purple', 'cyan']\nax.bar(range(len(west)), west, tick_label=west_labels, color=west_colors)\n\n# Create a bar chart for the West region\nwest = [11.59, 17.38, 32.19, 56.03]\nwest_labels = ['PM (\u00b5g/m\u00b3)', 'SO2 (\u00b5g/m\u00b3)', 'NO2 (\u00b5g/m\u00b3)', 'CO2 (ppm)']\nwest_colors = ['red', 'blue', 'purple', 'cyan']\nax.bar(range(len(west)), west, tick_label=west_labels, color=west_colors)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_65.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the plot\nx = np.array([-3.0, -2.5, -2.0, -1.5, -1.0, -0.5, 0.0])\ny = np.array([-2.2, -2.3, -3.3, -3.2, -2.2, -1.9, -1.7])\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Plot the data\nax.plot(x, y, 'o-')\n\n# Set the labels\nax.set_xlabel('Score')\nax.set_ylabel('Constraint Words Count')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_66.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(-1.0, 0.0)\n\n# Set the y-axis limits\nax.set_ylim(-0.8, 0.2)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(-1.0, 0.3, 0.2))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(-0.8, 0.3, 0.2))\n\n# Set the x-axis labels\nax.set_xticklabels(['-1.0', '-0.8', '-0.6', '-0.4', '-0.2', '0.0'])\n\n# Set the y-axis labels\nax.set_yticklabels(['-0.8', '-0.6', '-0.4', '-0.2', '0.0'])\n\n# Set the title of the plot\nax.set_title('Negative GDP Growth Rates by Country and Year')\n\n# Set the color of the GDP growth rates\ncolors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rates\ngdp_growth_rates = [-0.5, -0.4, -0.3, -0.2]\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'teal', 'purple']\n\n# Set the GDP growth rate labels\ngdp_growth_rate_labels = ['GDP growth 2018', 'GDP growth 2019', 'GDP growth 2020', 'GDP growth 2021']\n\n# Set the GDP growth rate colors\ngdp_growth_rate_colors = ['red', 'green', 'te"}
{"file": "dataset/ori_500/bar_67.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nmodels = ['GPT-4V', 'OSCar', 'LLaMA', 'BLIP2', 'BLIP1', 'Video-LLMA', 'Lavila']\nscores = [80, 73.93, 31.79, 4.64, 4.64, 0.71, 0.0]\ncolors = ['red', 'orange', 'green', 'blue', 'purple', 'pink', 'brown']\n\n# Create figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\n\n# Plot bars\nax.bar(models, scores, color=colors)\n\n# Set labels and title\nax.set_xlabel('Model')\nax.set_ylabel('Percentage (%)')\nax.set_title('Human Study')\n\n# Show plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_68.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\ncategories = ['Traffic Flow', 'Accident Rate', 'Public Transport Usage', 'Road Condition']\nvalues = [50, 20, 70, 80]\ncolors = ['blue', 'cyan', 'teal', 'lightgrey']\n\n# Create stacked bar chart\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\nax.bar(categories, values, color=colors)\nax.set_title('Stacked Bar Chart of Transportation Data')\nax.set_xlabel('Categories')\nax.set_ylabel('Values')\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_69.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 7.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Set the title of the plot\nax.set_title('Enhanced Stacked Bar Chart with Textures and Annotated Values')\n\n# Set the x-axis label\nax.set_xlabel('Product Categories')\n\n# Set the y-axis label\nax.set_ylabel('Sales Units')\n\n# Set the x-axis tick labels\nax.set_xticks(np.arange(8))\nax.set_xticklabels(['Category A', 'Category B', 'Category C', 'Category D', 'Category E', 'Category F', 'Category G'])\n\n# Set the y-axis tick labels\nax.set_yticks(np.arange(0, 90, 20))\n\n# Set the y-axis limits\nax.set_ylim(0, 90)\n\n# Set the x-axis limits\nax.set_xlim(0, 8)\n\n# Set the grid lines\nax.grid(True, linestyle='--')\n\n# Set the bar colors\ncolors = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'purple']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = np.arange(8)\n\n# Set the bar heights\nbar_heights = [80, 60, 40, 20, 0]\n\n# Set the bar textures\nbar_textures = ['hatch', 'hatch', 'hatch', 'hatch', 'hatch']\n\n# Set the bar annotations\nbar_annotations = ['Product A Sales', 'Product B Sales', 'Product C Sales', 'Product D Sales', 'Product E Sales', 'Product F Sales', 'Product G Sales']\n\n# Set the bar annotations colors\nbar_annotation_colors = ['black', 'black', 'black', 'black', 'black', 'black', 'black']\n\n# Set the bar annotations sizes\nbar_annotation_sizes = [10, 10, 10, 10, 10, 10, 10]\n\n# Set the bar annotations weights\nbar_annotation_weights = ['bold', 'bold', 'bold', 'bold', 'bold', 'bold', 'bold']\n\n# Set the bar annotations horizontal alignments\nbar_annotation_haligns = ['center', 'center', 'center', 'center', 'center', 'center', 'center']\n\n# Set the bar annotations vertical alignments\nbar_annotation_valigns = ['center', 'center', 'center', 'center', 'center', 'center', 'center']\n\n# Set the bar annotations rotation angles\nbar_annotation_rotations = [0, 0, 0, 0, 0, 0, 0]\n\n# Set the bar annotations font families\nbar_annotation_families = ['sans-serif', 'sans-serif', 'sans-serif', 'sans-serif', 'sans-serif', 'sans-serif', 'sans-serif']\n\n# Set the bar annotations font styles\nbar_annotation_styles = ['normal', 'normal', 'normal', 'normal', 'normal', 'normal', 'normal']\n\n# Set the bar annotations font variants\nbar_annotation_variants = ['normal', 'normal', 'normal', 'normal', 'normal', 'normal', 'normal']\n\n# Set the bar annotations font weights\nbar_annotation_weights = ['normal', 'normal', 'normal', 'normal', 'normal', 'normal', 'normal']\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar_annotation_stretch = 'normal'\n\n# Set the bar annotations font size\nbar_annotation_size = 10\n\n# Set the bar annotations font family\nbar_annotation_family = 'sans-serif'\n\n# Set the bar annotations font style\nbar_annotation_style = 'normal'\n\n# Set the bar annotations font variant\nbar_annotation_variant = 'normal'\n\n# Set the bar annotations font weight\nbar_annotation_weight = 'normal'\n\n# Set the bar annotations font stretch\nbar"}
{"file": "dataset/ori_500/bar_7.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis labels\nax.set_xticks([1, 2, 3])\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'])\n\n# Set the y-axis limits\nax.set_ylim(-100, 100)\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(-100, 100, 10))\n\n# Set the y-axis label\nax.set_ylabel('Feature Embedding Distance')\n\n# Set the x-axis label\nax.set_xlabel('Categories')\n\n# Set the title\nax.set_title('Feature Embedding Distance')\n\n# Set the legend\nax.legend(['Probing FGT', 'Observed FGT', 'Feature Embedding Distance'], loc='upper right')\n\n# Set the grid\nax.grid(True)\n\n# Set the background color\nax.set_facecolor('lightgrey')\n\n# Set the font size\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set the font size for the title\nax.set_title('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the x-axis label\nax.set_xlabel('Categories', fontsize=12)\n\n# Set the font size for the y-axis label\nax.set_ylabel('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the tick labels\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'], fontsize=10)\nax.set_yticklabels(np.arange(-100, 100, 10), fontsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set the font size for the title\nax.set_title('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the x-axis label\nax.set_xlabel('Categories', fontsize=12)\n\n# Set the font size for the y-axis label\nax.set_ylabel('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the tick labels\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'], fontsize=10)\nax.set_yticklabels(np.arange(-100, 100, 10), fontsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set the font size for the title\nax.set_title('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the x-axis label\nax.set_xlabel('Categories', fontsize=12)\n\n# Set the font size for the y-axis label\nax.set_ylabel('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the tick labels\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'], fontsize=10)\nax.set_yticklabels(np.arange(-100, 100, 10), fontsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set the font size for the title\nax.set_title('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the x-axis label\nax.set_xlabel('Categories', fontsize=12)\n\n# Set the font size for the y-axis label\nax.set_ylabel('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the tick labels\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'], fontsize=10)\nax.set_yticklabels(np.arange(-100, 100, 10), fontsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set the font size for the title\nax.set_title('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the x-axis label\nax.set_xlabel('Categories', fontsize=12)\n\n# Set the font size for the y-axis label\nax.set_ylabel('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the tick labels\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'], fontsize=10)\nax.set_yticklabels(np.arange(-100, 100, 10), fontsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set the font size for the title\nax.set_title('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the x-axis label\nax.set_xlabel('Categories', fontsize=12)\n\n# Set the font size for the y-axis label\nax.set_ylabel('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the tick labels\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'], fontsize=10)\nax.set_yticklabels(np.arange(-100, 100, 10), fontsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set the font size for the title\nax.set_title('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the x-axis label\nax.set_xlabel('Categories', fontsize=12)\n\n# Set the font size for the y-axis label\nax.set_ylabel('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the tick labels\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'], fontsize=10)\nax.set_yticklabels(np.arange(-100, 100, 10), fontsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set the font size for the title\nax.set_title('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the x-axis label\nax.set_xlabel('Categories', fontsize=12)\n\n# Set the font size for the y-axis label\nax.set_ylabel('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the tick labels\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'], fontsize=10)\nax.set_yticklabels(np.arange(-100, 100, 10), fontsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set the font size for the title\nax.set_title('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the x-axis label\nax.set_xlabel('Categories', fontsize=12)\n\n# Set the font size for the y-axis label\nax.set_ylabel('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the tick labels\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'], fontsize=10)\nax.set_yticklabels(np.arange(-100, 100, 10), fontsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set the font size for the title\nax.set_title('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the x-axis label\nax.set_xlabel('Categories', fontsize=12)\n\n# Set the font size for the y-axis label\nax.set_ylabel('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the tick labels\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'], fontsize=10)\nax.set_yticklabels(np.arange(-100, 100, 10), fontsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set the font size for the title\nax.set_title('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the x-axis label\nax.set_xlabel('Categories', fontsize=12)\n\n# Set the font size for the y-axis label\nax.set_ylabel('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the tick labels\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'], fontsize=10)\nax.set_yticklabels(np.arange(-100, 100, 10), fontsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set the font size for the title\nax.set_title('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the x-axis label\nax.set_xlabel('Categories', fontsize=12)\n\n# Set the font size for the y-axis label\nax.set_ylabel('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the tick labels\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'], fontsize=10)\nax.set_yticklabels(np.arange(-100, 100, 10), fontsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set the font size for the title\nax.set_title('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the x-axis label\nax.set_xlabel('Categories', fontsize=12)\n\n# Set the font size for the y-axis label\nax.set_ylabel('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the tick labels\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'], fontsize=10)\nax.set_yticklabels(np.arange(-100, 100, 10), fontsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set the font size for the title\nax.set_title('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the x-axis label\nax.set_xlabel('Categories', fontsize=12)\n\n# Set the font size for the y-axis label\nax.set_ylabel('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the tick labels\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'], fontsize=10)\nax.set_yticklabels(np.arange(-100, 100, 10), fontsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set the font size for the title\nax.set_title('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the x-axis label\nax.set_xlabel('Categories', fontsize=12)\n\n# Set the font size for the y-axis label\nax.set_ylabel('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the tick labels\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'], fontsize=10)\nax.set_yticklabels(np.arange(-100, 100, 10), fontsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set the font size for the title\nax.set_title('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the x-axis label\nax.set_xlabel('Categories', fontsize=12)\n\n# Set the font size for the y-axis label\nax.set_ylabel('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the tick labels\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'], fontsize=10)\nax.set_yticklabels(np.arange(-100, 100, 10), fontsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set the font size for the title\nax.set_title('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the x-axis label\nax.set_xlabel('Categories', fontsize=12)\n\n# Set the font size for the y-axis label\nax.set_ylabel('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the tick labels\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'], fontsize=10)\nax.set_yticklabels(np.arange(-100, 100, 10), fontsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set the font size for the title\nax.set_title('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the x-axis label\nax.set_xlabel('Categories', fontsize=12)\n\n# Set the font size for the y-axis label\nax.set_ylabel('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the tick labels\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'], fontsize=10)\nax.set_yticklabels(np.arange(-100, 100, 10), fontsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set the font size for the title\nax.set_title('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the x-axis label\nax.set_xlabel('Categories', fontsize=12)\n\n# Set the font size for the y-axis label\nax.set_ylabel('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the tick labels\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'], fontsize=10)\nax.set_yticklabels(np.arange(-100, 100, 10), fontsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set the font size for the title\nax.set_title('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the x-axis label\nax.set_xlabel('Categories', fontsize=12)\n\n# Set the font size for the y-axis label\nax.set_ylabel('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the tick labels\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'], fontsize=10)\nax.set_yticklabels(np.arange(-100, 100, 10), fontsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set the font size for the title\nax.set_title('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the x-axis label\nax.set_xlabel('Categories', fontsize=12)\n\n# Set the font size for the y-axis label\nax.set_ylabel('Feature Embedding Distance', fontsize=12)\n\n# Set the font size for the tick labels\nax.set_xticklabels(['SEQ', 'REPLAY', 'MTL'], fontsize=10)\nax.set_yticklabels(np.arange(-100, 100, 10), fontsize=10)\n\n# Set the font size for the legend\nax.legend_.get_texts()[0].set_fontsize(10)\nax.legend_.get_texts()[1].set_fontsize(10)\nax.legend_.get_texts()[2].set_fontsize(10)\n\n# Set"}
{"file": "dataset/ori_500/bar_70.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data for the plot\nscores = [10, 8, 12, 10, 6, 8]\nlabels = ['Score 1', 'Score 2', 'Score 3', 'Score 4', 'Score 5']\ncolors = ['k', 'g', 'c', 'm', 'y']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Plot the scores\nax.barh(labels, scores, color=colors)\n\n# Set the title and labels\nax.set_title('Scores')\nax.set_xlabel('Score')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_71.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Define the data\nx = ['core', 'gzip', 'scp', 'liba', 'mc', 'omnet', 'perl']\ny = [100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 0]\ncolors = ['green', 'yellow', 'blue']\n\n# Plot the data\nfor i in range(len(x)):\n    ax.barh(y[i], x[i], color=colors[i])\n\n# Set the labels\nax.set_xlabel('Percentage')\nax.set_ylabel('Program')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_72.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the x-axis labels\nax.set_xticks(np.arange(4))\nax.set_xticklabels(['Bactrian-X EN', 'Lima-X DE', 'Bactrian-X FR', 'Lima-X IT'])\n\n# Set the y-axis labels\nax.set_yticks(np.arange(-2, 6, 1))\n\n# Set the title of the plot\nax.set_title('Model Performance Improvement by Language')\n\n# Set the title of the x-axis\nax.set_xlabel('Model with Language')\n\n# Set the title of the y-axis\nax.set_ylabel('Improvement [%]')\n\n# Set the color of the bars\ncolors = ['blue', 'red', 'orange', 'yellow', 'green']\n\n# Set the width of the bars\nwidth = 0.35\n\n# Set the position of the bars\nx = np.arange(len(colors))\n\n# Plot the bars\nax.bar(x - width/2, [3.5, 2.3, 4.4, 1.3], width, label='EN', color=colors[0])\nax.bar(x + width/2, [2.3, 1.3, 1.0, 0.7], width, label='DE', color=colors[1])\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_73.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 6)\n\n# Set the y-axis limits\nax.set_ylim(-6, 6)\n\n# Set the x-axis tick labels\nax.set_xticks([1, 2, 3, 4, 5])\nax.set_xticklabels(['1', '2', '3', '4', '5'])\n\n# Set the y-axis tick labels\nax.set_yticks([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n\n# Set the x-axis label\nax.set_xlabel('Fiscal Quarter')\n\n# Set the y-axis label\nax.set_ylabel('Index Change (%)')\n\n# Set the title of the plot\nax.set_title('Dow Jones Index')\n\n# Set the color of the Dow Jones Index\ndow_color = '#80bfff'\n\n# Set the color of the Nasdaq Index\nnasdaq_color = '#ff9999'\n\n# Plot the Dow Jones Index\nax.plot(range(1, 6), [0.5, 1.5, 2.2, 3.9, 4.6], color=dow_color)\n\n# Plot the Nasdaq Index\nax.plot(range(1, 6), [-0.6, 1.0, 0.4, -0.8, -1.2], color=nasdaq_color)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_74.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the plot\nx = np.array([39.4, 35.18, 34.06, 32.4, 20.84, 19.16, 14.0, 9.0, 17.0])\ny = np.array([34.0, 35.18, 34.06, 32.4, 20.84, 19.16, 14.0, 9.0, 17.0])\nz = np.array([30.0, 28.0, 24.27, 26.82, 30.0, 20.0, 35.0, 22.0, 22.0])\n\n# Create the figure and axis objects\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Plot the data\nax.plot(x, y, 'o-')\nax.plot(y, z, 'o-')\n\n# Set the labels\nax.set_xlabel('Reward Values')\nax.set_ylabel('Series Labels')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_75.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\ntruthful = [46.3, 57.9, 53.8, 43.7]\nmisleading = [30.1, 34, 20, 19.4]\nx = np.arange(len(truthful))  # the label locations\nwidth = 0.35  # the width of the bars\n\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\nrects1 = ax.bar(x - width/2, truthful, width, label='Truthful Recall', color='black')\nrects2 = ax.bar(x + width/2, misleading, width, label='Misleading Recall', color='pink')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_ylabel('Recall')\nax.set_title('Truthful: Misleading = 2:0')\nax.set_xticks(x)\nax.set_xticklabels(['A', 'B', 'C', 'D'])\nax.legend()\n\n# Add horizontal lines\nax.axhline(y=0, color='grey', linestyle='--')\nax.axhline(y=-20, color='grey', linestyle='--')\nax.axhline(y=-40, color='grey', linestyle='--')\n\n# Add vertical lines\nax.axvline(x=0, color='grey', linestyle='--')\nax.axvline(x=-20, color='grey', linestyle='--')\nax.axvline(x=-40, color='grey', linestyle='--')\n\n# Add text for values\nax.text(0.5, 46.3, '46.3%', ha='center', va='bottom')\nax.text(1.5, 57.9, '57.9%', ha='center', va='bottom')\nax.text(2.5, 53.8, '53.8%', ha='center', va='bottom')\nax.text(3.5, 43.7, '43.7%', ha='center', va='bottom')\n\nax.text(-0.5, 30.1, '30.1%', ha='center', va='bottom')\nax.text(-1.5, 34, '34%', ha='center', va='bottom')\nax.text(-2.5, 20, '20%', ha='center', va='bottom')\nax.text(-3.5, 19.4, '19.4%', ha='center', va='bottom')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_76.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the x-axis labels\nax.set_xticks([0, 1, 2, 3])\nax.set_xticklabels(['Light Industry', 'Heavy Industry', 'Transportation', 'Residential'])\n\n# Set the y-axis limits\nax.set_ylim(-1700, 0)\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(-1700, 0, 200))\n\n# Set the y-axis labels\nax.set_yticklabels(['-1700', '-1500', '-1300', '-1100', '-900', '-700', '-500', '-300', '-100', '0'])\n\n# Set the y-axis grid\nax.grid(axis='y', linestyle='--')\n\n# Set the x-axis grid\nax.grid(axis='x', linestyle='--')\n\n# Set the x-axis label\nax.set_xlabel('Industry Sectors')\n\n# Set the y-axis label\nax.set_ylabel('Pollution Emissions (thousands of metric tons)')\n\n# Set the title\nax.set_title('Environmental Impact by Sector')\n\n# Set the legend\nax.legend(['Current Year', 'Previous Year'], loc='upper left')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick parameters\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick parameters\nax.tick_params(axis='both',"}
{"file": "dataset/ori_500/bar_77.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\ncities = ['Beijing', 'Shanghai', 'Guangzhou City', 'Shenzhen', 'Chengdu']\ntemps = [10, 15, 20, 15, 10]\n\n# Create figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Plot data\nax.bar(cities, temps, color='lightblue')\n\n# Set title and labels\nax.set_title('Average City Temperatures')\nax.set_xlabel('City')\nax.set_ylabel('Average Temperature (\u00b0C)')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_78.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Define the data for the bar chart\nx = np.array(['Region 1', 'Region 2', 'Region 3', 'Region 4'])\ny1 = np.array([-175, -125, -75, -25])\ny2 = np.array([-200, -150, -100, -50])\n\n# Plot the data\nax.bar(x, y1, color='r')\nax.bar(x, y2, color='b')\n\n# Add labels and title\nax.set_xlabel('Regions')\nax.set_ylabel('Emissions')\nax.set_title('Annual Pollution Emission Reductions')\n\n# Add legend\nax.legend(['2020 Emissions', '2021 Emissions'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_79.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the bar chart\nx = np.array([26, 13, 17, 10, 32, 37, 26, 35, 29])\ny = np.array([10, 10, 15, 10, 15, 37, 35, 32, 21])\nlabels = ['Question 1', 'Question 2', 'Question 3', 'Question 4', 'Question 5']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Plot the bar chart\nax.bar(labels, x, color='blue')\nax.bar(labels, y, bottom=x, color='green')\n\n# Add labels and title\nax.set_xlabel('Questions')\nax.set_ylabel('Responses')\nax.set_title('Bar Chart of Responses')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_8.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the x-axis labels\nax.set_xticks(np.arange(1, 11))\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Set the title\nax.set_title('Top-10 superfamilies in training dataset')\n\n# Set the x-axis limits\nax.set_xlim(0, 10)\n\n# Set the y-axis limits\nax.set_ylim(0, 1.0)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 11))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2',"}
{"file": "dataset/ori_500/bar_80.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Define the data for the plot\nx = np.array([3, 5, 7, 10])\ny = np.array([-2, -1, 0, 1])\n\n# Plot the data\nax.plot(x, y, 'o-')\n\n# Add labels and title\nax.set_xlabel('Num of Constraint Words')\nax.set_ylabel('Score')\nax.set_title('Taboo')\n\n# Add grid lines\nax.grid(True)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_81.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nx = np.array(['LLaMA', 'Vicuna', 'Alpaca', 'WizardLM'])\ny = np.array([46.3, 56.9, 40, 53.8])\nz = np.array([30.1, 34, 43.7, 27])\nw = np.array([19.4, 43.7, 20, 0])\n\n# Create figure and axis objects\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Plot data\nax.bar(x, y, color='blue')\nax.bar(x, z, color='green')\nax.bar(x, w, color='purple')\n\n# Add labels and title\nax.set_xlabel('Truthful Recall')\nax.set_ylabel('Misleading Recall')\nax.set_title('Truthful: Misleading Recall = 2:0')\n\n# Show plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_82.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the first plot\nlabels = ['Convertible', 'Coupe', 'SUV', 'Truck', 'Sedan']\nsizes = [20, 15, 10, 15, 30]\ncolors = ['green', 'blue', 'purple', 'cyan', 'pink']\n\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\nax.barh(labels, sizes, color=colors)\nax.set_xlabel('Probability of Improvement over VLM Image Encoder Baseline Returns')\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_83.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Define the data for the bar chart\nx = np.array([7.6, 7.0, 6.6, 6.0, 6.0, 5.5, 5.0, 4.6, 4.0, 3.5, 3.5, 3.0, 2.1])\ny = ['Amusement', 'Unbothered', 'Nervousness', 'Pride', 'Anxiety', 'Gratitude', 'Relief', 'Joy', 'Disapproval']\n\n# Plot the bar chart\nax.barh(y, x, color='red')\n\n# Set the labels and title\nax.set_xlabel('Frequency Metric 1 (%)')\nax.set_title('Emotion 1')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_84.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with three subplots\nfig, axs = plt.subplots(3, 3, figsize=(10.0, 6.0))\n\n# First subplot\naxs[0, 0].barh(['Attack on Titan', 'Game of Thrones', 'The Count of Monte Cristo', 'Demi-Gods and Semi-Devils', 'Notre-Dame de Paris'], [0.4, 0.5, 0.3, 0.4, 0.5], color=['#87CEEB', '#FFD700', '#FFA500', '#FF4500', '#FF69B4'])\naxs[0, 0].set_title('1st Experiment')\naxs[0, 0].set_xlabel('Score at Time 0')\naxs[0, 0].set_ylabel('Game')\n\n# Second subplot\naxs[0, 1].barh(['Attack on Titan', 'Game of Thrones', 'The Count of Monte Cristo', 'Demi-Gods and Semi-Devils', 'Notre-Dame de Paris'], [0.4, 0.5, 0.3, 0.4, 0.5], color=['#87CEEB', '#FFD700', '#FFA500', '#FF4500', '#FF69B4'])\naxs[0, 1].set_title('2nd Experiment')\naxs[0, 1].set_xlabel('Score at Time 20')\naxs[0, 1].set_ylabel('Game')\n\n# Third subplot\naxs[0, 2].barh(['Attack on Titan', 'Game of Thrones', 'The Count of Monte Cristo', 'Demi-Gods and Semi-Devils', 'Notre-Dame de Paris'], [0.4, 0.5, 0.3, 0.4, 0.5], color=['#87CEEB', '#FFD700', '#FFA500', '#FF4500', '#FF69B4'])\naxs[0, 2].set_title('3rd Experiment')\naxs[0, 2].set_xlabel('Score at Time 40')\naxs[0, 2].set_ylabel('Game')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_85.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Define the data for each country\ncountries = ['Japan', 'Australia', 'Canada', 'Germany', 'Italy', 'France', 'UK', 'USA']\nenergies = [10, 10, 10, 10, 10, 10, 10, 10]\ncolors = ['red', 'blue', 'orange', 'green', 'purple', 'pink', 'brown', 'grey']\n\n# Plot the data\nfor i in range(len(countries)):\n    ax.barh(countries[i], energies[i], color=colors[i])\n\n# Set the x-axis limits\nax.set_xlim(0, 2000)\n\n# Set the y-axis limits\nax.set_ylim(-1, len(countries))\n\n# Set the x-axis ticks\nax.set_xticks([0, 500, 1000, 1500, 2000])\n\n# Set the x-axis labels\nax.set_xticklabels(['0', '500', '1000', '1500', '2000'])\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(len(countries)))\n\n# Set the y-axis labels\nax.set_yticklabels(countries)\n\n# Set the title\nax.set_title('Total Energy Consumption (10^2 P)')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_86.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(-20, 30)\n\n# Set the y-axis limits\nax.set_ylim(0, 35)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(-20, 31, 10))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 36, 5))\n\n# Set the x-axis labels\nax.set_xticklabels(['-20', '-10', '0', '10', '20', '30'])\n\n# Set the y-axis labels\nax.set_yticklabels(['0', '5', '10', '15', '20', '25', '30'])\n\n# Set the x-axis title\nax.set_xlabel('x')\n\n# Set the y-axis title\nax.set_ylabel('y')\n\n# Set the title of the plot\nax.set_title('Plot Title')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_87.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the first plot\nx = np.array([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\ny = np.array([6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16])\n\n# Create the first plot\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\nax.plot(x, y, 'o-')\nax.set_title('Beauty')\n\n# Define the data for the second plot\nx = np.array([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\ny = np.array([6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16])\n\n# Create the second plot\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\nax.plot(x, y, 'o-')\nax.set_title('MovieLens-1M')\n\n# Define the data for the third plot\nx = np.array([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\ny = np.array([6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16])\n\n# Create the third plot\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\nax.plot(x, y, 'o-')\nax.set_title('More')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_88.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the x-axis limits\nax.set_xlim(-3.5, 0.0)\n\n# Set the y-axis limits\nax.set_ylim(-3.3, -2.2)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(-3.5, 0.5, 1.0))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(-3.3, -2.2, 0.1))\n\n# Set the x-axis labels\nax.set_xticklabels(['-3.5', '-3.0', '-2.5', '-2.0', '-1.5', '-1.0', '-0.5'])\n\n# Set the y-axis labels\nax.set_yticklabels(['-3.3', '-3.2', '-3.1', '-3.0', '-2.9', '-2.8', '-2.7', '-2.6', '-2.5', '-2.4', '-2.3', '-2.2'])\n\n# Set the title of the plot\nax.set_title('Scores by group and constraint word count')\n\n# Set the color of the bars\ncolors = ['red', 'green', 'purple', 'blue']\n\n# Set the width of the bars\nwidth = 0.2\n\n# Set the position of the bars\nx = np.arange(-3.5, 0.5, 1.0)\n\n# Set the data for the bars\ndata = [-3.2, -3.3, -2.2, -2.3]\n\n# Plot the bars\nfor i in range(len(data)):\n    ax.bar(x[i], data[i], width, color=colors[i])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_89.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Create a bar chart\nax.bar(range(1, 11), [0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75], color='blue')\n\n# Add a horizontal line\nax.axhline(y=0.5, color='r', linestyle='-')\n\n# Set the x-axis labels\nax.set_xticks(range(1, 11))\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\nplt.show()"}
{"file": "dataset/ori_500/bar_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Define the data for the bar chart\nx = ['Type', 'Span', 'T&S', 'Spurious', 'Total']\ny1 = [85, 72, 64, 20, 100]\ny2 = [90, 70, 60, 20, 100]\ny3 = [80, 60, 40, 20, 100]\n\n# Plot the data\nax.bar(x, y1, color='pink')\nax.bar(x, y2, bottom=y1, color='orange')\nax.bar(x, y3, bottom=[sum(i) for i in zip(y1, y2)], color='green')\n\n# Set the labels and title\nax.set_xlabel('Error correction rate (%)')\nax.set_ylabel('Error correction rate (%)')\nax.set_title('GENIA')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_90.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the plot\nx = np.array(['GPT4V', 'OSCaR', 'LLaVA', 'BLIP2', 'BLIP1', 'Video-LLaMA', 'Lavila'])\ny = np.array([82.5, 73.93, 31.79, 4.64, 4.64, 0.71, 0.0])\nz = np.array([0, 0, 0, 0, 0, 0, 0])\nw = np.array([0, 0, 0, 0, 0, 0, 0])\n\n# Create the figure and axis objects\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\n\n# Plot the data\nax.bar(x, y, color='r')\nax.bar(x, z, color='g')\nax.bar(x, w, color='b')\n\n# Set the labels and title\nax.set_xlabel('Model')\nax.set_ylabel('Score A (%)')\nax.set_title('Human Study')\n\n# Add grid lines\nax.grid(True)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_91.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the plots\nx = np.array(['GCN', 'RvNN', 'Hyphen', 'GET'])\ny1 = np.array([0.75, 0.80, 0.77, 0.70])\ny2 = np.array([0.80, 0.85, 0.88, 0.90])\n\n# Create the first plot\nfig, ax1 = plt.subplots(figsize=(10.0, 5.0))\nax1.bar(x, y1, color='blue')\nax1.set_xlabel('Pheme')\nax1.set_ylabel('Macro F1-score')\n\n# Create the second plot\nax2 = ax1.twinx()\nax2.bar(x, y2, color='red')\nax2.set_ylabel('Macro F1-score')\n\n# Add a horizontal line at the mean of the second plot\nax2.axhline(y=np.mean(y2), color='gray', linestyle='--')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_92.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Resonance Preference Plot for rich_context')\n\n# Set the labels for the x-axis\nax.set_xlabel('Count')\n\n# Set the labels for the y-axis\nax.set_ylabel('Role')\n\n# Set the tick marks for the x-axis\nax.set_xticks(np.arange(0, 801, 100))\n\n# Set the tick marks for the y-axis\nax.set_yticks(np.arange(0, 4, 1))\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '100', '200', '300', '400', '500', '600', '700', '800'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['human', 'gpt4', 'gpt4-cot', 'gpt4'])\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the labels\nax.set_xlabel('Count', fontsize=10)\nax.set_ylabel('Role', fontsize=10)\n\n# Set the color of the title\nax.set_title('Resonance Preference Plot for rich_context', fontsize=10)\n\n# Set the color of the legend\nax.legend(loc='upper right', bbox_to_anchor=(1.0, 1.0), fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 's1', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 's2', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 's3', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'human', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'gpt4-cot', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10)\n\n# Set the color of the text\nax.text(0."}
{"file": "dataset/ori_500/bar_93.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data for the eye movement chart\neye_data = [20.4, 29.6, 20.4, 20.4, 9.3]\neye_labels = ['Effort', '20%', '29.6%', '20.4%', '20.4%', '9.3%']\neye_colors = ['red', 'orange', 'yellow', 'green', 'blue']\n\n# Data for the brainwave chart\nbrain_data = [23.8, 14.3, 16.7, 38.1, 7.1]\nbrain_labels = ['Effort', '23.8%', '14.3%', '16.7%', '38.1%', '7.1%']\nbrain_colors = ['red', 'orange', 'yellow', 'green', 'blue']\n\n# Create the figure and axis objects\nfig, ax = plt.subplots(figsize=(6.0, 3.0))\n\n# Plot the eye movement data\nax.bar(eye_labels, eye_data, color=eye_colors)\n\n# Add labels and title\nax.set_xlabel('Eye Movement')\nax.set_ylabel('Effort')\nax.set_title('Eye Movement')\n\n# Plot the brainwave data\nax.bar(brain_labels, brain_data, color=brain_colors)\n\n# Add labels and title\nax.set_xlabel('Brainwave')\nax.set_ylabel('Effort')\nax.set_title('Brainwave')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_94.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, axs = plt.subplots(2, 2, figsize=(10.0, 6.0))\n\n# First subplot\naxs[0, 0].plot(np.random.rand(10), 'ro')\naxs[0, 0].set_title('Rate of Gain Change[%]')\naxs[0, 0].set_xlabel('Brightness')\naxs[0, 0].set_ylabel('Scale')\n\n# Second subplot\naxs[0, 1].plot(np.random.rand(10), 'ro')\naxs[0, 1].set_title('Rate of Gain Change[%]')\naxs[0, 1].set_xlabel('Rotation Angle[\u00b0]')\n\n# Third subplot\naxs[1, 0].plot(np.random.rand(10), 'ro')\naxs[1, 0].set_title('Rate of Gain Change[%]')\naxs[1, 0].set_xlabel('Brightness')\naxs[1, 0].set_ylabel('Scale')\n\n# Fourth subplot\naxs[1, 1].plot(np.random.rand(10), 'ro')\naxs[1, 1].set_title('Rate of Gain Change[%]')\naxs[1, 1].set_xlabel('Rotation Angle[\u00b0]')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_95.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Plot the first row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1], 'k-')\nax.plot([0, 1, 2, 3, 4], [-2, -2, -2, -2, -2], 'k-')\nax.plot([0, 1, 2, 3, 4], [-3, -3, -3, -3, -3], 'k-')\nax.plot([0, 1, 2, 3, 4], [-4, -4, -4, -4, -4], 'k-')\n\n# Plot the second row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1], 'k-')\nax.plot([0, 1, 2, 3, 4], [-2, -2, -2, -2, -2], 'k-')\nax.plot([0, 1, 2, 3, 4], [-3, -3, -3, -3, -3], 'k-')\nax.plot([0, 1, 2, 3, 4], [-4, -4, -4, -4, -4], 'k-')\n\n# Plot the third row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1], 'k-')\nax.plot([0, 1, 2, 3, 4], [-2, -2, -2, -2, -2], 'k-')\nax.plot([0, 1, 2, 3, 4], [-3, -3, -3, -3, -3], 'k-')\nax.plot([0, 1, 2, 3, 4], [-4, -4, -4, -4, -4], 'k-')\n\n# Plot the fourth row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1], 'k-')\nax.plot([0, 1, 2, 3, 4], [-2, -2, -2, -2, -2], 'k-')\nax.plot([0, 1, 2, 3, 4], [-3, -3, -3, -3, -3], 'k-')\nax.plot([0, 1, 2, 3, 4], [-4, -4, -4, -4, -4], 'k-')\n\n# Plot the fifth row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1], 'k-')\nax.plot([0, 1, 2, 3, 4], [-2, -2, -2, -2, -2], 'k-')\nax.plot([0, 1, 2, 3, 4], [-3, -3, -3, -3, -3], 'k-')\nax.plot([0, 1, 2, 3, 4], [-4, -4, -4, -4, -4], 'k-')\n\n# Plot the sixth row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1], 'k-')\nax.plot([0, 1, 2, 3, 4], [-2, -2, -2, -2, -2], 'k-')\nax.plot([0, 1, 2, 3, 4], [-3, -3, -3, -3, -3], 'k-')\nax.plot([0, 1, 2, 3, 4], [-4, -4, -4, -4, -4], 'k-')\n\n# Plot the seventh row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1], 'k-')\nax.plot([0, 1, 2, 3, 4], [-2, -2, -2, -2, -2], 'k-')\nax.plot([0, 1, 2, 3, 4], [-3, -3, -3, -3, -3], 'k-')\nax.plot([0, 1, 2, 3, 4], [-4, -4, -4, -4, -4], 'k-')\n\n# Plot the eighth row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1], 'k-')\nax.plot([0, 1, 2, 3, 4], [-2, -2, -2, -2, -2], 'k-')\nax.plot([0, 1, 2, 3, 4], [-3, -3, -3, -3, -3], 'k-')\nax.plot([0, 1, 2, 3, 4], [-4, -4, -4, -4, -4], 'k-')\n\n# Plot the ninth row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1], 'k-')\nax.plot([0, 1, 2, 3, 4], [-2, -2, -2, -2, -2], 'k-')\nax.plot([0, 1, 2, 3, 4], [-3, -3, -3, -3, -3], 'k-')\nax.plot([0, 1, 2, 3, 4], [-4, -4, -4, -4, -4], 'k-')\n\n# Plot the tenth row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1], 'k-')\nax.plot([0, 1, 2, 3, 4], [-2, -2, -2, -2, -2], 'k-')\nax.plot([0, 1, 2, 3, 4], [-3, -3, -3, -3, -3], 'k-')\nax.plot([0, 1, 2, 3, 4], [-4, -4, -4, -4, -4], 'k-')\n\n# Plot the eleventh row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1], 'k-')\nax.plot([0, 1, 2, 3, 4], [-2, -2, -2, -2, -2], 'k-')\nax.plot([0, 1, 2, 3, 4], [-3, -3, -3, -3, -3], 'k-')\nax.plot([0, 1, 2, 3, 4], [-4, -4, -4, -4, -4], 'k-')\n\n# Plot the twelfth row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1], 'k-')\nax.plot([0, 1, 2, 3, 4], [-2, -2, -2, -2, -2], 'k-')\nax.plot([0, 1, 2, 3, 4], [-3, -3, -3, -3, -3], 'k-')\nax.plot([0, 1, 2, 3, 4], [-4, -4, -4, -4, -4], 'k-')\n\n# Plot the thirteenth row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1], 'k-')\nax.plot([0, 1, 2, 3, 4], [-2, -2, -2, -2, -2], 'k-')\nax.plot([0, 1, 2, 3, 4], [-3, -3, -3, -3, -3], 'k-')\nax.plot([0, 1, 2, 3, 4], [-4, -4, -4, -4, -4], 'k-')\n\n# Plot the fourteenth row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1], 'k-')\nax.plot([0, 1, 2, 3, 4], [-2, -2, -2, -2, -2], 'k-')\nax.plot([0, 1, 2, 3, 4], [-3, -3, -3, -3, -3], 'k-')\nax.plot([0, 1, 2, 3, 4], [-4, -4, -4, -4, -4], 'k-')\n\n# Plot the fifteenth row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1], 'k-')\nax.plot([0, 1, 2, 3, 4], [-2, -2, -2, -2, -2], 'k-')\nax.plot([0, 1, 2, 3, 4], [-3, -3, -3, -3, -3], 'k-')\nax.plot([0, 1, 2, 3, 4], [-4, -4, -4, -4, -4], 'k-')\n\n# Plot the sixteenth row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1], 'k-')\nax.plot([0, 1, 2, 3, 4], [-2, -2, -2, -2, -2], 'k-')\nax.plot([0, 1, 2, 3, 4], [-3, -3, -3, -3, -3], 'k-')\nax.plot([0, 1, 2, 3, 4], [-4, -4, -4, -4, -4], 'k-')\n\n# Plot the seventeenth row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1], 'k-')\nax.plot([0, 1, 2, 3, 4], [-2, -2, -2, -2, -2], 'k-')\nax.plot([0, 1, 2, 3, 4], [-3, -3, -3, -3, -3], 'k-')\nax.plot([0, 1, 2, 3, 4], [-4, -4, -4, -4, -4], 'k-')\n\n# Plot the eighteenth row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1], 'k-')\nax.plot([0, 1, 2, 3, 4], [-2, -2, -2, -2, -2], 'k-')\nax.plot([0, 1, 2, 3, 4], [-3, -3, -3, -3, -3], 'k-')\nax.plot([0, 1, 2, 3, 4], [-4, -4, -4, -4, -4], 'k-')\n\n# Plot the nineteenth row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1], 'k-')\nax.plot([0, 1, 2, 3, 4], [-2, -2, -2, -2, -2], 'k-')\nax.plot([0, 1, 2, 3, 4], [-3, -3, -3, -3, -3], 'k-')\nax.plot([0, 1, 2, 3, 4], [-4, -4, -4, -4, -4], 'k-')\n\n# Plot the twentieth row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1], 'k-')\nax.plot([0, 1, 2, 3, 4], [-2, -2, -2, -2, -2], 'k-')\nax.plot([0, 1, 2, 3, 4], [-3, -3, -3, -3, -3], 'k-')\nax.plot([0, 1, 2, 3, 4], [-4, -4, -4, -4, -4], 'k-')\n\n# Plot the twenty-first row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1], 'k-')\nax.plot([0, 1, 2, 3, 4], [-2, -2, -2, -2, -2], 'k-')\nax.plot([0, 1, 2, 3, 4], [-3, -3, -3, -3, -3], 'k-')\nax.plot([0, 1, 2, 3, 4], [-4, -4, -4, -4, -4], 'k-')\n\n# Plot the twenty-second row of the table\nax.plot([0, 1, 2, 3, 4], [0, 0, 0, 0, 0], 'k-')\nax.plot([0, 1, 2, 3, 4], [-1, -1, -1, -1, -1],"}
{"file": "dataset/ori_500/bar_96.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the plots\ntruthful_data = np.array([[66.3, 61.9, 53.8], [49.3, 45.7, 41.6]])\nmisleading_data = np.array([[-10.1, -13.6, -13.7], [-36.3, -41.0, -31.5]])\n\n# Create the figure and axis objects\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Plot the truthful data\nax.bar(range(len(truthful_data)), truthful_data, color='blue', alpha=0.5)\nax.set_xticks(range(len(truthful_data)))\nax.set_xticklabels(['Random', 'Ours', 'SOTA'])\nax.set_ylabel('Score')\nax.set_title('Truthful: Misleading = 2:0')\n\n# Plot the misleading data\nax.bar(range(len(misleading_data)), misleading_data, color='red', alpha=0.5)\nax.set_yticks(np.arange(-80, 90, 10))\nax.grid(True, linestyle='--')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_97.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Define the data for the first chart\nscores_1 = [60, 59, 58, 57, 56, 55]\nscores_2 = [60, 59, 58, 57, 56, 55]\nscores_3 = [60, 59, 58, 57, 56, 55]\n\n# Plot the scores\nax.plot(scores_1, 'r-')\nax.plot(scores_2, 'b-')\nax.plot(scores_3, 'g-')\n\n# Set the labels\nax.set_xlabel('Scores')\nax.set_ylabel('Human Labeling and Agreement Bias Checking')\n\n# Add a title\nax.set_title('Human Labeling and Agreement Bias Checking 1')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_98.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for each model\nmodels = ['Model A', 'Model B', 'Model C', 'Model D', 'Model E', 'Model F', 'Model G', 'Model H', 'Model I']\nscores = [54.9, 71.5, 60.3, 52.9, 54.5, 64.5, 42.4, 64.6, 7.1, 8.7, 2.0]\ncontrastive_search_scores = [92.6, 96.2, 89.2, 83.3]\nbeam_search_scores = [52.9, 56.8, 56.8, 56.8]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Plot the scores for each model\nfor i in range(len(models)):\n    ax.bar(models[i], scores[i], color='lightgrey', edgecolor='black')\n\n# Add dashed lines at the y-axis values\nax.axhline(y=100, color='grey', linestyle='--')\nax.axhline(y=120, color='grey', linestyle='--')\n\n# Add dashed lines at the x-axis values\nax.axvline(x=0, color='grey', linestyle='--')\nax.axvline(x=1, color='grey', linestyle='--')\nax.axvline(x=2, color='grey', linestyle='--')\nax.axvline(x=3, color='grey', linestyle='--')\nax.axvline(x=4, color='grey', linestyle='--')\nax.axvline(x=5, color='grey', linestyle='--')\nax.axvline(x=6, color='grey', linestyle='--')\nax.axvline(x=7, color='grey', linestyle='--')\nax.axvline(x=8, color='grey', linestyle='--')\nax.axvline(x=9, color='grey', linestyle='--')\nax.axvline(x=10, color='grey', linestyle='--')\n\n# Add labels and title\nax.set_xlabel('Models')\nax.set_ylabel('Scores')\nax.set_title('Performance Comparison by Model')\n\n# Add legend\nax.legend(['Contrastive Search', 'Beam Search'], loc='upper right')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_99.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Dataset 1\nx = np.array([150, 180, 75, 90, 80])\ny = np.array([100, 125, 75, 90, 80])\nplt.bar(range(len(x)), x, color=plt.cm.Reds(np.linspace(0, 1, len(x))))\nplt.xticks(range(len(y)), ['Traffic Flow', 'Accident Rate', 'Public Transport Usage', 'Road Conditions', 'Public Satisfaction'])\nplt.title('Dataset 1')\n\n# Dataset 2\nx = np.array([2.5, 2.0, 1.5, 2.0])\ny = np.array([0.0, 0.5, 1.0, 0.0])\nplt.bar(range(len(x)), y, color=plt.cm.Blues(np.linspace(0, 1, len(x))))\nplt.xticks(range(len(y)), ['Traffic Flow', 'Accident Rate', 'Public Transport Usage', 'Road Conditions', 'Public Satisfaction'])\nplt.title('Dataset 2')\n\n# Dataset 3\nx = np.array([60, 55, 70, 65, 72])\ny = np.array([100, 125, 75, 90, 80])\nplt.bar(range(len(x)), x, color=plt.cm.Greens(np.linspace(0, 1, len(x))))\nplt.xticks(range(len(y)), ['Traffic Flow', 'Accident Rate', 'Public Transport Usage', 'Road Conditions', 'Public Satisfaction'])\nplt.title('Dataset 3')\n\n# Dataset 4\nx = np.array([80, 75, 90, 85, 88])\ny = np.array([0.0, 0.5, 1.0, 0.0, 0.0])\nplt.bar(range(len(x)), y, color=plt.cm.YlOrBr(np.linspace(0, 1, len(x))))\nplt.xticks(range(len(y)), ['Traffic Flow', 'Accident Rate', 'Public Transport Usage', 'Road Conditions', 'Public Satisfaction'])\nplt.title('Dataset 4')\nplt.show()\n```"}
{"file": "dataset/ori_500/box_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Define the data\nx = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])\ny = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9])\n\n# Plot the data\nax.plot(x, y, 'o-')\n\n# Set the x-axis limits\nax.set_xlim(1, 9)\n\n# Set the y-axis limits\nax.set_ylim(1, 9)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(1, 10))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(1, 10))\n\n# Set the x-axis labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the y-axis labels\nax.set_yticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the title\nax.set_title('Dominance')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 5.0))\n\n# Set the x-axis limits\nax.set_xlim(20, 90)\n\n# Set the y-axis limits\nax.set_ylim(-1, 1)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(20, 90, 10))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(-1, 1, 0.2))\n\n# Set the x-axis labels\nax.set_xticklabels(['20', '30', '40', '50', '60', '70', '80', '90'])\n\n# Set the y-axis labels\nax.set_yticklabels(['-1', '-0.8', '-0.6', '-0.4', '-0.2', '0', '0.2', '0.4', '0.6', '0.8', '1'])\n\n# Set the title of the plot\nax.set_title('Daily Activity Durations')\n\n# Set the x-axis label\nax.set_xlabel('Duration (minutes)')\n\n# Set the y-axis label\nax.set_ylabel('Activity')\n\n# Add a vertical line at the mean\nax.axvline(x=50, color='black', linestyle='-')\n\n# Add a horizontal line at the median\nax.axhline(y=0, color='black', linestyle='-')\n\n# Add a scatter plot for the data\nax.scatter(np.random.normal(50, 10, 100), np.random.normal(0, 0.5, 100), color='grey')\n\n# Add a box plot for the data\nax.boxplot(np.random.normal(50, 10, 100), positions=[0], widths=[0.5])\n\n# Add a histogram for the data\nax.hist(np.random.normal(50, 10, 100), bins=10, color='grey')\n\n# Add a violin plot for the data\nax.violinplot(np.random.normal(50, 10, 100), positions=[0], widths=[0.5])\n\n# Add a bar plot for the data\nax.bar(np.random.normal(50, 10, 100), np.random.normal(0, 0.5, 100), color='grey')\n\n# Add a pie chart for the data\nax.pie(np.random.normal(50, 10, 100), colors=['grey'], autopct='%1.1f%%')\n\n# Add a scatter plot with a regression line\nx = np.random.normal(50, 10, 100)\ny = np.random.normal(0, 0.5, 100)\nz = np.polyfit(x, y, 1)\np = np.poly1d(z)\nax.plot(x, p(x), \"r--\")\n\n# Add a scatter plot with a regression line and a confidence interval\nx = np.random.normal(50, 10, 100)\ny = np.random.normal(0, 0.5, 100)\nz = np.polyfit(x, y, 1)\np = np.poly1d(z)\nax.plot(x, p(x), \"r--\")\nax.fill_between(x, p(x)-np.std(p(x)), p(x)+np.std(p(x)), color='grey')\n\n# Add a scatter plot with a regression line and a confidence interval and a prediction interval\nx = np.random.normal(50, 10, 100)\ny = np.random.normal(0, 0.5, 100)\nz = np.polyfit(x, y, 1)\np = np.poly1d(z)\nax.plot(x, p(x), \"r--\")\nax.fill_between(x, p(x)-np.std(p(x)), p(x)+np.std(p(x)), color='grey')\nax.fill_between(x, p(x)-2*np.std(p(x)), p(x)+2*np.std(p(x)), color='grey')\n\n# Add a scatter plot with a regression line and a confidence interval and a prediction interval and a residual plot\nx = np.random.normal(50, 10, 100)\ny = np.random.normal(0, 0.5, 100)\nz = np.polyfit(x, y, 1)\np = np.poly1d(z)\nax.plot(x, p(x), \"r--\")\nax.fill_between(x, p(x)-np.std(p(x)), p(x)+np.std(p(x)), color='grey')\nax.fill_between(x, p(x)-2*np.std(p(x)), p(x)+2*np.std(p(x)), color='grey')\nax.scatter(x, y-p(x), color='grey')\n\n# Add a scatter plot with a regression line and a confidence interval and a prediction interval and a residual plot and a QQ plot\nx = np.random.normal(50, 10, 100)\ny = np.random.normal(0, 0.5, 100)\nz = np.polyfit(x, y, 1)\np = np.poly1d(z)\nax.plot(x, p(x), \"r--\")\nax.fill_between(x, p(x)-np.std(p(x)), p(x)+np.std(p(x)), color='grey')\nax.fill_between(x, p(x)-2*np.std(p(x)), p(x)+2*np.std(p(x)), color='grey')\nax.scatter(x, y-p(x), color='grey')\nax.plot(x, np.random.normal(0, 0.5, 100), \"b--\")\n\n# Add a scatter plot with a regression line and a confidence interval and a prediction interval and a residual plot and a QQ plot and a histogram\nx = np.random.normal(50, 10, 100)\ny = np.random.normal(0, 0.5, 100)\nz = np.polyfit(x, y, 1)\np = np.poly1d(z)\nax.plot(x, p(x), \"r--\")\nax.fill_between(x, p(x)-np.std(p(x)), p(x)+np.std(p(x)), color='grey')\nax.fill_between(x, p(x)-2*np.std(p(x)), p(x)+2*np.std(p(x)), color='grey')\nax.scatter(x, y-p(x), color='grey')\nax.plot(x, np.random.normal(0, 0.5, 100), \"b--\")\nax.hist(y-p(x), bins=10, color='grey')\n\n# Add a scatter plot with a regression line and a confidence interval and a prediction interval and a residual plot and a QQ plot and a histogram and a box plot\nx = np.random.normal(50, 10, 100)\ny = np.random.normal(0, 0.5, 100)\nz = np.polyfit(x, y, 1)\np = np.poly1d(z)\nax.plot(x, p(x), \"r--\")\nax.fill_between(x, p(x)-np.std(p(x)), p(x)+np.std(p(x)), color='grey')\nax.fill_between(x, p(x)-2*np.std(p(x)), p(x)+2*np.std(p(x)), color='grey')\nax.scatter(x, y-p(x), color='grey')\nax.plot(x, np.random.normal(0, 0.5, 100), \"b--\")\nax.hist(y-p(x), bins=10, color='grey')\nax.boxplot(y-p(x), positions=[0], widths=[0.5])\n\n# Add a scatter plot with a regression line and a confidence interval and a prediction interval and a residual plot and a QQ plot and a histogram and a box plot and a violin plot\nx = np.random.normal(50, 10, 100)\ny = np.random.normal(0, 0.5, 100)\nz = np.polyfit(x, y, 1)\np = np.poly1d(z)\nax.plot(x, p(x), \"r--\")\nax.fill_between(x, p(x)-np.std(p(x)), p(x)+np.std(p(x)), color='grey')\nax.fill_between(x, p(x)-2*np.std(p(x)), p(x)+2*np.std(p(x)), color='grey')\nax.scatter(x, y-p(x), color='grey')\nax.plot(x, np.random.normal(0, 0.5, 100), \"b--\")\nax.hist(y-p(x), bins=10, color='grey')\nax.boxplot(y-p(x), positions=[0], widths=[0.5])\nax.violinplot(y-p(x), positions=[0], widths=[0.5])\n\n# Add a scatter plot with a regression line and a confidence interval and a prediction interval and a residual plot and a QQ plot and a histogram and a box plot and a violin plot and a bar plot\nx = np.random.normal(50, 10, 100)\ny = np.random.normal(0, 0.5, 100)\nz = np.polyfit(x, y, 1)\np = np.poly1d(z)\nax.plot(x, p(x), \"r--\")\nax.fill_between(x, p(x)-np.std(p(x)), p(x)+np.std(p(x)), color='grey')\nax.fill_between(x, p(x)-2*np.std(p(x)), p(x)+2*np.std(p(x)), color='grey')\nax.scatter(x, y-p(x), color='grey')\nax.plot(x, np.random.normal(0, 0.5, 100), \"b--\")\nax.hist(y-p(x), bins=10, color='grey')\nax.boxplot(y-p(x), positions=[0], widths=[0.5])\nax.violinplot(y-p(x), positions=[0], widths=[0.5])\nax.bar(y-p(x), np.random.normal(0, 0.5, 100), color='grey')\n\n# Add a scatter plot with a regression line and a confidence interval and a prediction interval and a residual plot and a QQ plot and a histogram and a box plot and a violin plot and a bar plot and a pie chart\nx = np.random.normal(50, 10, 100)\ny = np.random.normal(0, 0.5, 100)\nz = np.polyfit(x, y, 1)\np = np.poly1d(z)\nax.plot(x, p(x), \"r--\")\nax.fill_between(x, p(x)-np.std(p(x)), p(x)+np.std(p(x)), color='grey')\nax.fill_between(x, p(x)-2*np.std(p(x)), p(x)+2*np.std(p(x)), color='grey')\nax.scatter(x, y-p(x), color='grey')\nax.plot(x, np.random.normal(0, 0.5, 100), \"b--\")\nax.hist(y-p(x), bins=10, color='grey')\nax.boxplot(y-p(x), positions=[0], widths=[0.5])\nax.violinplot(y-p(x), positions=[0], widths=[0.5])\nax.bar(y-p(x), np.random.normal(0, 0.5, 100), color='grey')\nax.pie(y-p(x), colors=['grey'], autopct='%1.1f%%')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/box_11.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the x-axis labels\nax.set_xticks([1, 2])\nax.set_xticklabels(['Llama-70b (T2TT)', 'Llama-70b (S2TT)'])\n\n# Set the y-axis label\nax.set_ylabel('BLEU')\n\n# Set the title\nax.set_title('1.0 Bilingual Evaluation Understudy')\n\n# Create a box plot for the first dataset\nax.boxplot([np.random.normal(20, 2, 100), np.random.normal(20, 2, 100)])\n\n# Create a box plot for the second dataset\nax.boxplot([np.random.normal(20, 2, 100), np.random.normal(20, 2, 100)])\n\n# Add a vertical line at the mean of the first dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the second dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the third dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the fourth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the fifth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the sixth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the seventh dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the eighth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the ninth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the tenth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the eleventh dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the twelfth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirteenth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the fourteenth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the fifteenth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the sixteenth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the seventeenth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the eighteenth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the nineteenth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the twentieth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the twenty-first dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the twenty-second dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the twenty-third dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the twenty-fourth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the twenty-fifth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the twenty-sixth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the twenty-seventh dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the twenty-eighth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the twenty-ninth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-first dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-second dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-third dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-fourth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-fifth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-sixth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-seventh dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-eighth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-ninth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-tenth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-eleventh dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-twelfth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirteenth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-fourteenth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-fifteenth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-sixteenth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-seventeenth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-eighteenth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-nineteenth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-twentieth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-twenty-first dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-twenty-second dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-twenty-third dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-twenty-fourth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-twenty-fifth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-twenty-sixth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-twenty-seventh dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-twenty-eighth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-twenty-ninth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirtieth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirtieth-first dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirtieth-second dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirtieth-third dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirtieth-fourth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirtieth-fifteenth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirtieth-sixteenth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirtieth-seventeenth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirtieth-eighteenth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirtieth-nineteenth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirtieth-twentieth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirtieth-twenty-first dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirtieth-twenty-second dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirtieth-twenty-third dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirtieth-twenty-fourth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirtieth-twenty-fifth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirtieth-twenty-sixth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirtieth-twenty-seventh dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirtieth-twenty-eighth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirtieth-twenty-ninth dataset\nax.axvline(x=np.mean([np.random.normal(20, 2, 100)]), color='orange', linestyle='-')\n\n# Add a vertical line at the mean of the thirtieth-thirtieth-thirtieth dataset\nax.axvline(x=np.mean(["}
{"file": "dataset/ori_500/box_12.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis labels\nax.set_xticks([1, 2, 3, 4])\nax.set_xticklabels(['AlphaBeta', 'z+', 'Gamma(\u03b3=0.05)', 'Gamma(\u03b3=0.1)', 'Gamma(\u03b3=0.25)'])\n\n# Plot the box plots\nax.boxplot([np.random.normal(5, 1, 100), np.random.normal(4, 1, 100), np.random.normal(4.5, 1, 100), np.random.normal(4, 1, 100), np.random.normal(4, 1, 100)])\n\n# Add vertical lines for the mean\nax.axvline(x=1, color='orange')\nax.axvline(x=2, color='orange')\nax.axvline(x=3, color='orange')\nax.axvline(x=4, color='orange')\n\nplt.show()"}
{"file": "dataset/ori_500/box_13.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Set the x-axis labels\nax.set_xticks([1, 2, 3, 4, 5])\nax.set_xticklabels(['SQL-Only', 'PoT', 'IC-LP', 'DAIL', 'IC-LP+PoT'])\n\n# Set the y-axis limits\nax.set_ylim(0.75, 0.95)\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0.75, 0.95, 0.05))\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.75', '0.80', '0.85', '0.90'])\n\n# Set the y-axis label\nax.set_ylabel('Execution Accuracy')\n\n# Set the x-axis label\nax.set_xlabel('Algorithm')\n\n# Set the title\nax.set_title('Execution Accuracy')\n\n# Set the boxplot data\ndata = [[0.875, 0.875, 0.875, 0.875, 0.875],\n        [0.850, 0.850, 0.850, 0.850, 0.850],\n        [0.825, 0.825, 0.825, 0.825, 0.825],\n        [0.800, 0.800, 0.800, 0.800, 0.800],\n        [0.775, 0.775, 0.775, 0.775, 0.775]]\n\n# Plot the boxplot\nax.boxplot(data)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/box_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Set the title of the plot\nax.set_title('Region Classification Accuracy')\n\n# Set the x-axis labels\nax.set_xlabel('DENSE (ref)\\nJoint Multimodal Framework (ours)\\nCine')\n\n# Set the y-axis labels\nax.set_ylabel('LMA Region Classification Accuracy')\n\n# Create a boxplot for the first dataset\nax.boxplot([np.random.normal(0.88, 0.02, 10), np.random.normal(0.87, 0.02, 10), np.random.normal(0.83, 0.02, 10)], vert=False)\n\n# Create a scatter plot for the second dataset\nax.scatter(np.random.normal(0.88, 0.02, 10), np.random.normal(0.87, 0.02, 10), color='black', marker='^')\n\n# Create a bar chart for the third dataset\nax.bar(['DENSE (ref)', 'Joint Multimodal Framework (ours)', 'Cine'], [0.88, 0.87, 0.83], color=['blue', 'orange', 'green'])\n\n# Create a histogram for the fourth dataset\nax.hist([np.random.normal(0.88, 0.02, 10), np.random.normal(0.87, 0.02, 10), np.random.normal(0.83, 0.02, 10)], bins=10, color=['blue', 'orange', 'green'])\n\n# Create a line plot for the fifth dataset\nax.plot([np.random.normal(0.88, 0.02, 10), np.random.normal(0.87, 0.02, 10), np.random.normal(0.83, 0.02, 10)], color='black')\n\n# Create a pie chart for the sixth dataset\nax.pie([0.88, 0.87, 0.83], labels=['DENSE (ref)', 'Joint Multimodal Framework (ours)', 'Cine'], colors=['blue', 'orange', 'green'])\n\n# Create a scatter plot for the seventh dataset\nax.scatter([np.random.normal(0.88, 0.02, 10), np.random.normal(0.87, 0.02, 10), np.random.normal(0.83, 0.02, 10)], [np.random.normal(0.88, 0.02, 10), np.random.normal(0.87, 0.02, 10), np.random.normal(0.83, 0.02, 10)], color='black', marker='^')\n\n# Create a bar chart for the eighth dataset\nax.bar(['DENSE (ref)', 'Joint Multimodal Framework (ours)', 'Cine'], [0.88, 0.87, 0.83], color=['blue', 'orange', 'green'])\n\n# Create a histogram for the ninth dataset\nax.hist([np.random.normal(0.88, 0.02, 10), np.random.normal(0.87, 0.02, 10), np.random.normal(0.83, 0.02, 10)], bins=10, color=['blue', 'orange', 'green'])\n\n# Create a line plot for the tenth dataset\nax.plot([np.random.normal(0.88, 0.02, 10), np.random.normal(0.87, 0.02, 10), np.random.normal(0.83, 0.02, 10)], color='black')\n\n# Create a pie chart for the eleventh dataset\nax.pie([0.88, 0.87, 0.83], labels=['DENSE (ref)', 'Joint Multimodal Framework (ours)', 'Cine'], colors=['blue', 'orange', 'green'])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/box_15.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Plot the box plot\nax.boxplot([np.random.normal(10, 2, 100), np.random.normal(15, 3, 100), np.random.normal(20, 4, 100)], labels=[\"w/o att\", \"w/o DP\", \"1xQ\", \"20xQ\"])\n\n# Add a horizontal line at the threshold\nax.axhline(y=5, color='r', linestyle='-')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/box_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\n\n# Define the data\nlabels = ['REM', 'No POP', 'Separate M emb.', '4 x 4 tokenizer', 'No latent space C', 'C w/o action inputs']\nvalues = [1.2, 1.3, 1.4, 1.5, 1.6, 1.7]\ncolors = ['blue', 'green', 'orange', 'purple', 'brown', 'pink']\n\n# Plot the data\nfor i in range(len(labels)):\n    ax.barh(labels[i], values[i], color=colors[i])\n\n# Set the limits of the axes\nax.set_xlim(1.0, 3.0)\nax.set_ylim(-1.0, 6.0)\n\n# Set the labels of the axes\nax.set_xlabel('Mean')\nax.set_ylabel('Techniques')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/box_17.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Define the data\ndata = np.random.rand(10, 10)\nlabels = ['Run 1', 'Run 2', 'Run 3', 'Run 4', 'Run 5', 'Run 6', 'Run 7', 'Run 8', 'Run 9', 'Run 10']\n\n# Plot the boxplot\nax.boxplot(data)\n\n# Add labels\nax.set_xticklabels(labels)\n\nplt.show()"}
{"file": "dataset/ori_500/box_18.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Define the data for the first box plot\nx1 = [0.0, 0.2, 0.4, 0.6, 0.8, 1.0]\ny1 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\nwidth1 = [0.2, 0.2, 0.2, 0.2, 0.2, 0.2]\n\n# Define the data for the second box plot\nx2 = [0.0, 0.2, 0.4, 0.6, 0.8, 1.0]\ny2 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\nwidth2 = [0.2, 0.2, 0.2, 0.2, 0.2, 0.2]\n\n# Plot the first box plot\nax.boxplot(x1, positions=[0], widths=width1, patch_artist=True, boxprops=dict(facecolor='lightblue'))\n\n# Plot the second box plot\nax.boxplot(x2, positions=[1], widths=width2, patch_artist=True, boxprops=dict(facecolor='lightgreen'))\n\n# Set the x-axis labels\nax.set_xticks([0, 1])\nax.set_xticklabels(['one by one', 'all in one'])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/box_19.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Define the data for each box plot\ndata_eme = [np.random.normal(0.5, 0.2, 100), np.random.normal(0.6, 0.3, 100), np.random.normal(0.7, 0.4, 100)]\ndata_neu = [np.random.normal(0.8, 0.2, 100), np.random.normal(0.9, 0.3, 100), np.random.normal(1.0, 0.4, 100)]\ndata_me = [np.random.normal(0.8, 0.2, 100), np.random.normal(0.9, 0.3, 100), np.random.normal(1.0, 0.4, 100)]\n\n# Plot the box plots\nax.boxplot(data_eme, positions=[1, 2, 3], widths=0.6)\nax.boxplot(data_neu, positions=[4, 5, 6], widths=0.6)\nax.boxplot(data_me, positions=[7, 8, 9], widths=0.6)\n\n# Add labels and title\nax.set_xlabel('BERT Base', fontsize=12)\nax.set_ylabel(r'$\\delta$ (m/s)', fontsize=12)\nax.set_title('EME sentences', fontsize=14)\nax.set_xticks([1, 2, 3, 4, 5, 6, 7, 8, 9])\nax.set_xticklabels(['BERT Base', 'MacBERT', 'English HLM', 'BERT Base', 'MacBERT', 'English HLM', 'BERT Base', 'MacBERT', 'English HLM'], rotation=45, fontsize=12)\n\nplt.show()"}
{"file": "dataset/ori_500/box_2.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create data\nnp.random.seed(42)\ndata1 = np.random.normal(loc=2.5, scale=0.5, size=100)\ndata2 = np.random.normal(loc=2.7, scale=0.3, size=100)\n\n# Create figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Plot boxplot\nax.boxplot([data1, data2], labels=[\"Our Model\", \"NTM+CL\"])\n\n# Set title\nax.set_title(\"Ratings\")\n\nplt.show()\n```"}
{"file": "dataset/ori_500/box_20.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Define the data for each group\ndata = {\n    'Digit': [7.2, 7.8, 6.4, 6.9, 7.3, 7.5, 7.1, 7.6, 7.4, 7.0],\n    'Lexical decision': [1.8, 1.9, 1.6, 1.7, 1.8, 1.7, 1.9, 1.8, 1.7, 1.8],\n    'Correct word reaction time': [1.4, 1.4, 1.2, 1.3, 1.4, 1.3, 1.4, 1.4, 1.3, 1.4],\n    'Correct response ratio': [0.9, 0.9, 0.8, 0.8, 0.9, 0.8, 0.9, 0.9, 0.8, 0.9],\n    'Reaction time': [1.0, 1.0, 0.9, 0.9, 1.0, 0.9, 1.0, 1.0, 0.9, 1.0],\n    'Trail making': [1.7, 1.7, 1.5, 1.5, 1.7, 1.5, 1.7, 1.7, 1.5, 1.7]\n}\n\n# Plot the boxplot for each group\nfor key, value in data.items():\n    ax.boxplot(value, positions=[np.random.normal(1, 0.04) for _ in range(len(value))], widths=0.6)\n\n# Set the labels for the x-axis\nax.set_xticks([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\nax.set_xticklabels(['Digit', 'Lexical decision', 'Correct word reaction time', 'Correct response ratio', 'Reaction time', 'Trail making'])\n\n# Set the title of the plot\nax.set_title('Group')\n\nplt.show()"}
{"file": "dataset/ori_500/box_21.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Methods')\n\n# Add labels for the x-axis\nax.set_xlabel('Prediction Accuracy $v_{D_1}$')\n\n# Add labels for the y-axis\nax.set_ylabel('')\n\n# Add a boxplot for the 'SSP' data\nax.boxplot([np.random.normal(60, 10, 100), np.random.normal(70, 10, 100)], positions=[3], widths=0.6)\n\n# Add a boxplot for the 'NBP' data\nax.boxplot([np.random.normal(40, 10, 100), np.random.normal(50, 10, 100)], positions=[4], widths=0.6)\n\n# Add a boxplot for the 'IBP' data\nax.boxplot([np.random.normal(20, 10, 100), np.random.normal(30, 10, 100)], positions=[1], widths=0.6)\n\n# Add a boxplot for the 'BG' data\nax.boxplot([np.random.normal(10, 10, 100), np.random.normal(20, 10, 100)], positions=[0], widths=0.6)\n\n# Add a boxplot for the 'IP' data\nax.boxplot([np.random.normal(80, 10, 100), np.random.normal(90, 10, 100)], positions=[2], widths=0.6)\n\n# Add a bar chart for the 'SSP' data\nax.bar([3], [np.random.normal(60, 10, 1)], color='purple', width=0.6)\n\n# Add a bar chart for the 'NBP' data\nax.bar([4], [np.random.normal(40, 10, 1)], color='purple', width=0.6)\n\n# Add a bar chart for the 'IBP' data\nax.bar([1], [np.random.normal(20, 10, 1)], color='purple', width=0.6)\n\n# Add a bar chart for the 'BG' data\nax.bar([0], [np.random.normal(10, 10, 1)], color='purple', width=0.6)\n\n# Add a bar chart for the 'IP' data\nax.bar([2], [np.random.normal(80, 10, 1)], color='purple', width=0.6)\n\n# Add a rectangle for the 'SSP' data\nax.add_patch(plt.Rectangle((3-0.3, 50), 0.6, 20, color='blue'))\n\n# Add a rectangle for the 'NBP' data\nax.add_patch(plt.Rectangle((4-0.3, 30), 0.6, 20, color='blue'))\n\n# Add a rectangle for the 'IBP' data\nax.add_patch(plt.Rectangle((1-0.3, 10), 0.6, 20, color='blue'))\n\n# Add a rectangle for the 'BG' data\nax.add_patch(plt.Rectangle((0-0.3, -10), 0.6, 20, color='blue'))\n\n# Add a rectangle for the 'IP' data\nax.add_patch(plt.Rectangle((2-0.3, 70), 0.6, 20, color='blue'))\n\n# Add a rectangle for the 'SSP' data\nax.add_patch(plt.Rectangle((3-0.3, 50), 0.6, 20, color='green'))\n\n# Add a rectangle for the 'NBP' data\nax.add_patch(plt.Rectangle((4-0.3, 30), 0.6, 20, color='green'))\n\n# Add a rectangle for the 'IBP' data\nax.add_patch(plt.Rectangle((1-0.3, 10), 0.6, 20, color='green'))\n\n# Add a rectangle for the 'BG' data\nax.add_patch(plt.Rectangle((0-0.3, -10), 0.6, 20, color='green'))\n\n# Add a rectangle for the 'IP' data\nax.add_patch(plt.Rectangle((2-0.3, 70), 0.6, 20, color='green'))\n\n# Add a rectangle for the 'SSP' data\nax.add_patch(plt.Rectangle((3-0.3, 50), 0.6, 20, color='brown'))\n\n# Add a rectangle for the 'NBP' data\nax.add_patch(plt.Rectangle((4-0.3, 30), 0.6, 20, color='brown'))\n\n# Add a rectangle for the 'IBP' data\nax.add_patch(plt.Rectangle((1-0.3, 10), 0.6, 20, color='brown'))\n\n# Add a rectangle for the 'BG' data\nax.add_patch(plt.Rectangle((0-0.3, -10), 0.6, 20, color='brown'))\n\n# Add a rectangle for the 'IP' data\nax.add_patch(plt.Rectangle((2-0.3, 70), 0.6, 20, color='brown'))\n\n# Add a line for the 'SSP' data\nax.plot([3], [50], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'NBP' data\nax.plot([4], [30], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IBP' data\nax.plot([1], [10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'BG' data\nax.plot([0], [-10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IP' data\nax.plot([2], [70], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'SSP' data\nax.plot([3], [50], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'NBP' data\nax.plot([4], [30], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IBP' data\nax.plot([1], [10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'BG' data\nax.plot([0], [-10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IP' data\nax.plot([2], [70], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'SSP' data\nax.plot([3], [50], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'NBP' data\nax.plot([4], [30], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IBP' data\nax.plot([1], [10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'BG' data\nax.plot([0], [-10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IP' data\nax.plot([2], [70], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'SSP' data\nax.plot([3], [50], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'NBP' data\nax.plot([4], [30], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IBP' data\nax.plot([1], [10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'BG' data\nax.plot([0], [-10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IP' data\nax.plot([2], [70], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'SSP' data\nax.plot([3], [50], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'NBP' data\nax.plot([4], [30], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IBP' data\nax.plot([1], [10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'BG' data\nax.plot([0], [-10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IP' data\nax.plot([2], [70], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'SSP' data\nax.plot([3], [50], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'NBP' data\nax.plot([4], [30], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IBP' data\nax.plot([1], [10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'BG' data\nax.plot([0], [-10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IP' data\nax.plot([2], [70], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'SSP' data\nax.plot([3], [50], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'NBP' data\nax.plot([4], [30], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IBP' data\nax.plot([1], [10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'BG' data\nax.plot([0], [-10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IP' data\nax.plot([2], [70], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'SSP' data\nax.plot([3], [50], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'NBP' data\nax.plot([4], [30], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IBP' data\nax.plot([1], [10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'BG' data\nax.plot([0], [-10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IP' data\nax.plot([2], [70], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'SSP' data\nax.plot([3], [50], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'NBP' data\nax.plot([4], [30], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IBP' data\nax.plot([1], [10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'BG' data\nax.plot([0], [-10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IP' data\nax.plot([2], [70], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'SSP' data\nax.plot([3], [50], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'NBP' data\nax.plot([4], [30], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IBP' data\nax.plot([1], [10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'BG' data\nax.plot([0], [-10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IP' data\nax.plot([2], [70], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'SSP' data\nax.plot([3], [50], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'NBP' data\nax.plot([4], [30], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IBP' data\nax.plot([1], [10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'BG' data\nax.plot([0], [-10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IP' data\nax.plot([2], [70], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'SSP' data\nax.plot([3], [50], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'NBP' data\nax.plot([4], [30], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IBP' data\nax.plot([1], [10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'BG' data\nax.plot([0], [-10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IP' data\nax.plot([2], [70], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'SSP' data\nax.plot([3], [50], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'NBP' data\nax.plot([4], [30], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IBP' data\nax.plot([1], [10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'BG' data\nax.plot([0], [-10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IP' data\nax.plot([2], [70], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'SSP' data\nax.plot([3], [50], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'NBP' data\nax.plot([4], [30], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IBP' data\nax.plot([1], [10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'BG' data\nax.plot([0], [-10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IP' data\nax.plot([2], [70], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'SSP' data\nax.plot([3], [50], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'NBP' data\nax.plot([4], [30], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IBP' data\nax.plot([1], [10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'BG' data\nax.plot([0], [-10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IP' data\nax.plot([2], [70], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'SSP' data\nax.plot([3], [50], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'NBP' data\nax.plot([4], [30], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IBP' data\nax.plot([1], [10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'BG' data\nax.plot([0], [-10], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'IP' data\nax.plot([2], [70], '|', markersize=10, markeredgewidth=2)\n\n# Add a line for the 'SSP' data\nax.plot([3], [50], '|', markersize=10, markeredg"}
{"file": "dataset/ori_500/box_22.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Generate some data\nnp.random.seed(42)\ndata = np.random.normal(loc=0.0, scale=0.01, size=(3, 10))\ndata[:, 0] = np.random.normal(loc=50.0, scale=10.0, size=10)\ndata[:, 1] = np.random.normal(loc=100.0, scale=10.0, size=10)\ndata[:, 2] = np.random.normal(loc=150.0, scale=10.0, size=10)\ndata[:, 3] = np.random.normal(loc=200.0, scale=10.0, size=10)\ndata[:, 4] = np.random.normal(loc=300.0, scale=10.0, size=10)\n\n# Plot the data\nax.boxplot(data)\n\n# Set the x-axis labels\nax.set_xticklabels(['50', '100', '150', '200', '300'])\n\n# Set the y-axis label\nax.set_ylabel('Reward')\n\n# Set the x-axis label\nax.set_xlabel('Search depth')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/box_23.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 5.0))\n\n# Set the x-axis labels\nax.set_xticks([1, 2, 3, 4])\nax.set_xticklabels(['Music Playtime', 'Reading Duration', 'Exercise Duration', 'Gaming Duration'])\n\n# Set the y-axis limits\nax.set_ylim(20, 90)\n\n# Add a title\nax.set_title('Daily Activity Durations')\n\n# Add a boxplot for each activity\nax.boxplot([np.random.normal(65, 10, 100), np.random.normal(55, 10, 100), np.random.normal(38, 10, 100), np.random.normal(29, 10, 100)])\n\n# Add a scatter plot for each activity\nax.scatter([1, 2, 3, 4], [65.1, 55.7, 38.1, 29.5])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, axs = plt.subplots(2, 2, figsize=(8.0, 8.0))\n\n# Set the title of each subplot\naxs[0, 0].set_title('Mean Value')\naxs[0, 1].set_title('Median Value')\naxs[1, 0].set_title('IQR Mean')\naxs[1, 1].set_title('IQR Median')\n\n# Set the x-axis labels for each subplot\naxs[0, 0].set_xlabel('No Intervention')\naxs[0, 1].set_xlabel('Low Intensity')\naxs[1, 0].set_xlabel('High Intensity')\naxs[1, 1].set_xlabel('Recovery')\naxs[0, 0].set_ylabel('No Intervention')\naxs[0, 1].set_ylabel('Low Intensity')\naxs[1, 0].set_ylabel('High Intensity')\naxs[1, 1].set_ylabel('Recovery')\n\n# Set the y-axis limits for each subplot\naxs[0, 0].set_ylim(0, 3)\naxs[0, 1].set_ylim(0, 3)\naxs[1, 0].set_ylim(0, 3)\naxs[1, 1].set_ylim(0, 3)\n\n# Set the x-axis tick labels for each subplot\naxs[0, 0].set_xticks([0, 1, 2, 3, 4])\naxs[0, 1].set_xticks([0, 1, 2, 3, 4])\naxs[1, 0].set_xticks([0, 1, 2, 3, 4])\naxs[1, 1].set_xticks([0, 1, 2, 3, 4])\n\n# Set the y-axis tick labels for each subplot\naxs[0, 0].set_yticks([0, 1, 2, 3])\naxs[0, 1].set_yticks([0, 1, 2, 3])\naxs[1, 0].set_yticks([0, 1, 2, 3])\naxs[1, 1].set_yticks([0, 1, 2, 3])\n\n# Set the x-axis tick labels for each subplot\naxs[0, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[0, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\n\n# Set the y-axis tick labels for each subplot\naxs[0, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[0, 1].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 1].set_yticklabels(['0', '1', '2', '3'])\n\n# Set the x-axis tick labels for each subplot\naxs[0, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[0, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\n\n# Set the y-axis tick labels for each subplot\naxs[0, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[0, 1].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 1].set_yticklabels(['0', '1', '2', '3'])\n\n# Set the x-axis tick labels for each subplot\naxs[0, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[0, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\n\n# Set the y-axis tick labels for each subplot\naxs[0, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[0, 1].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 1].set_yticklabels(['0', '1', '2', '3'])\n\n# Set the x-axis tick labels for each subplot\naxs[0, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[0, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\n\n# Set the y-axis tick labels for each subplot\naxs[0, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[0, 1].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 1].set_yticklabels(['0', '1', '2', '3'])\n\n# Set the x-axis tick labels for each subplot\naxs[0, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[0, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\n\n# Set the y-axis tick labels for each subplot\naxs[0, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[0, 1].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 1].set_yticklabels(['0', '1', '2', '3'])\n\n# Set the x-axis tick labels for each subplot\naxs[0, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[0, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\n\n# Set the y-axis tick labels for each subplot\naxs[0, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[0, 1].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 1].set_yticklabels(['0', '1', '2', '3'])\n\n# Set the x-axis tick labels for each subplot\naxs[0, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[0, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\n\n# Set the y-axis tick labels for each subplot\naxs[0, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[0, 1].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 1].set_yticklabels(['0', '1', '2', '3'])\n\n# Set the x-axis tick labels for each subplot\naxs[0, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[0, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\n\n# Set the y-axis tick labels for each subplot\naxs[0, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[0, 1].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 1].set_yticklabels(['0', '1', '2', '3'])\n\n# Set the x-axis tick labels for each subplot\naxs[0, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[0, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\n\n# Set the y-axis tick labels for each subplot\naxs[0, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[0, 1].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 1].set_yticklabels(['0', '1', '2', '3'])\n\n# Set the x-axis tick labels for each subplot\naxs[0, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[0, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\n\n# Set the y-axis tick labels for each subplot\naxs[0, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[0, 1].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 1].set_yticklabels(['0', '1', '2', '3'])\n\n# Set the x-axis tick labels for each subplot\naxs[0, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[0, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\n\n# Set the y-axis tick labels for each subplot\naxs[0, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[0, 1].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 1].set_yticklabels(['0', '1', '2', '3'])\n\n# Set the x-axis tick labels for each subplot\naxs[0, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[0, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\n\n# Set the y-axis tick labels for each subplot\naxs[0, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[0, 1].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 1].set_yticklabels(['0', '1', '2', '3'])\n\n# Set the x-axis tick labels for each subplot\naxs[0, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[0, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\n\n# Set the y-axis tick labels for each subplot\naxs[0, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[0, 1].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 1].set_yticklabels(['0', '1', '2', '3'])\n\n# Set the x-axis tick labels for each subplot\naxs[0, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[0, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[1, 1].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\n\n# Set the y-axis tick labels for each subplot\naxs[0, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[0, 1].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 0].set_yticklabels(['0', '1', '2', '3'])\naxs[1, 1].set_yticklabels(['0', '1', '2', '3'])\n\n# Set the x-axis tick labels for each subplot\naxs[0, 0].set_xticklabels(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'])\naxs[0, 1].set_xticklabels(['No Intervention', 'Low Intensity', '"}
{"file": "dataset/ori_500/box_25.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Define the data for the plot\nx = np.array([-40, -20, 0, 20, 40])\ny = np.array([7.6, 5.6, 3.6, 1.6, -0.4])\n\n# Plot the data\nax.plot(x, y, 'o-')\n\n# Add labels and title\nax.set_xlabel('Thrust Angle [\u00b0]')\nax.set_ylabel('Angular Frequency [rad/s]')\nax.set_title('Angular Frequency vs Thrust Angle')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a horizontal line at y=0\nax.axhline(y=0, color='k', linestyle='-')\n\n# Add a vertical line at x=20\nax.axvline(x=20, color='k', linestyle='-')\n\n# Add a vertical line at x=-20\nax.axvline(x=-20, color='k', linestyle='-')\n\n# Add a vertical line at x=-40\nax.axvline(x=-40, color='k', linestyle='-')\n\n# Add a vertical line at x=40\nax.axvline(x=40, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k', linestyle='-')\n\n# Add a vertical line at x=0\nax.axv"}
{"file": "dataset/ori_500/box_3.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Define the data for each box plot\ndata = {\n    'ST_CVRP': [25, 30, 35, 40, 45],\n    'ST_VRPTW': [30, 35, 40, 45, 50],\n    'ST_All': [35, 40, 45, 50, 55],\n    'Ours': [40, 45, 50, 55, 60]\n}\n\n# Plot the box plots\nax.boxplot([data['ST_CVRP'], data['ST_VRPTW'], data['ST_All'], data['Ours']], labels=['ST_CVRP', 'ST_VRPTW', 'ST_All', 'Ours'])\n\n# Add the legend\nax.legend(['ST_CVRP', 'ST_VRPTW', 'ST_All', 'Ours'])\n\n# Set the y-axis label\nax.set_ylabel('Performance Gap (%)')\n\n# Set the x-axis label\nax.set_xlabel('Model')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/box_4.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 3.0))\n\n# Define the data for each subplot\ndata = [\n    [0.8, 0.4, 0.6, 0.2, 0.0],\n    [0.7, 0.5, 0.3, 0.1, 0.9],\n    [0.6, 0.4, 0.2, 0.0, 0.8],\n    [0.5, 0.3, 0.1, 0.9, 0.7],\n    [0.4, 0.2, 0.0, 0.8, 0.6],\n    [0.3, 0.1, 0.9, 0.7, 0.5],\n    [0.2, 0.0, 0.8, 0.6, 0.4],\n    [0.1, 0.9, 0.7, 0.5, 0.3]\n]\n\n# Plot the data for each subplot\nfor i in range(len(data)):\n    ax.plot(range(len(data[i])), data[i], 'o-')\n\n# Set the labels for the x-axis\nax.set_xlabel('Human Normalized Score')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/box_5.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Define the data for each box plot\ndata = [\n    [-45.2, -43.1, -42.9, -42.7, -42.5, -42.3, -42.1, -41.9, -41.7, -41.5, -41.3, -41.1, -40.9, -40.7, -40.5, -40.3, -40.1, -39.9, -39.7, -39.5, -39.3, -39.1, -38.9, -38.7, -38.5, -38.3, -38.1, -37.9, -37.7, -37.5, -37.3, -37.1, -36.9, -36.7, -36.5, -36.3, -36.1, -35.9, -35.7, -35.5, -35.3, -35.1, -34.9, -34.7, -34.5, -34.3, -34.1, -33.9, -33.7, -33.5, -33.3, -33.1, -32.9, -32.7, -32.5, -32.3, -32.1, -31.9, -31.7, -31.5, -31.3, -31.1, -30.9, -30.7, -30.5, -30.3, -30.1, -29.9, -29.7, -29.5, -29.3, -29.1, -28.9, -28.7, -28.5, -28.3, -28.1, -27.9, -27.7, -27.5, -27.3, -27.1, -26.9, -26.7, -26.5, -26.3, -26.1, -25.9, -25.7, -25.5, -25.3, -25.1, -24.9, -24.7, -24.5, -24.3, -24.1, -23.9, -23.7, -23.5, -23.3, -23.1, -22.9, -22.7, -22.5, -22.3, -22.1, -21.9, -21.7, -21.5, -21.3, -21.1, -20.9, -20.7, -20.5, -20.3, -20.1, -19.9, -19.7, -19.5, -19.3, -19.1, -18.9, -18.7, -18.5, -18.3, -18.1, -17.9, -17.7, -17.5, -17.3, -17.1, -16.9, -16.7, -16.5, -16.3, -16.1, -15.9, -15.7, -15.5, -15.3, -15.1, -14.9, -14.7, -14.5, -14.3, -14.1, -13.9, -13.7, -13.5, -13.3, -13.1, -12.9, -12.7, -12.5, -12.3, -12.1, -11.9, -11.7, -11.5, -11.3, -11.1, -10.9, -10.7, -10.5, -10.3, -10.1, -9.9, -9.7, -9.5, -9.3, -9.1, -8.9, -8.7, -8.5, -8.3, -8.1, -7.9, -7.7, -7.5, -7.3, -7.1, -6.9, -6.7, -6.5, -6.3, -6.1, -5.9, -5.7, -5.5, -5.3, -5.1, -4.9, -4.7, -4.5, -4.3, -4.1, -3.9, -3.7, -3.5, -3.3, -3.1, -2.9, -2.7, -2.5, -2.3, -2.1, -1.9, -1.7, -1.5, -1.3, -1.1, -0.9, -0.7, -0.5, -0.3, -0.1, 0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9, 2.1, 2.3, 2.5, 2.7, 2.9, 3.1, 3.3, 3.5, 3.7, 3.9, 4.1, 4.3, 4.5, 4.7, 4.9, 5.1, 5.3, 5.5, 5.7, 5.9, 6.1, 6.3, 6.5, 6.7, 6.9, 7.1, 7.3, 7.5, 7.7, 7.9, 8.1, 8.3, 8.5, 8.7, 8.9, 9.1, 9.3, 9.5, 9.7, 9.9, 10.1, 10.3, 10.5, 10.7, 10.9, 11.1, 11.3, 11.5, 11.7, 11.9, 12.1, 12.3, 12.5, 12.7, 12.9, 13.1, 13.3, 13.5, 13.7, 13.9, 14.1, 14.3, 14.5, 14.7, 14.9, 15.1, 15.3, 15.5, 15.7, 15.9, 16.1, 16.3, 16.5, 16.7, 16.9, 17.1, 17.3, 17.5, 17.7, 17.9, 18.1, 18.3, 18.5, 18.7, 18.9, 19.1, 19.3, 19.5, 19.7, 19.9, 20.1, 20.3, 20.5, 20.7, 20.9, 21.1, 21.3, 21.5, 21.7, 21.9, 22.1, 22.3, 22.5, 22.7, 22.9, 23.1, 23.3, 23.5, 23.7, 23.9, 24.1, 24.3, 24.5, 24.7, 24.9, 25.1, 25.3, 25.5, 25.7, 25.9, 26.1, 26.3, 26.5, 26.7, 26.9, 27.1, 27.3, 27.5, 27.7, 27.9, 28.1, 28.3, 28.5, 28.7, 28.9, 29.1, 29.3, 29.5, 29.7, 29.9, 30.1, 30.3, 30.5, 30.7, 30.9, 31.1, 31.3, 31.5, 31.7, 31.9, 32.1, 32.3, 32.5, 32.7, 32.9, 33.1, 33.3, 33.5, 33.7, 33.9, 34.1, 34.3, 34.5, 34.7, 34.9, 35.1, 35.3, 35.5, 35.7, 35.9, 36.1, 36.3, 36.5, 36.7, 36.9, 37.1, 37.3, 37.5, 37.7, 37.9, 38.1, 38.3, 38.5, 38.7, 38.9, 39.1, 39.3, 39.5, 39.7, 39.9, 40.1, 40.3, 40.5, 40.7, 40.9, 41.1, 41.3, 41.5, 41.7, 41.9, 42.1, 42.3, 42.5, 42.7, 42.9, 43.1, 43.3, 43.5, 43.7, 43.9, 44.1, 44.3, 44.5, 44.7, 44.9, 45.1, 45.3, 45.5, 45.7, 45.9, 46.1, 46.3, 46.5, 46.7, 46.9, 47.1, 47.3, 47.5, 47.7, 47.9, 48.1, 48.3, 48.5, 48.7, 48.9, 49.1, 49.3, 49.5, 49.7, 49.9, 50.1, 50.3, 50.5, 50.7, 50.9, 51.1, 51.3, 51.5, 51.7, 51.9, 52.1, 52.3, 52.5, 52.7, 52.9, 53.1, 53.3, 53.5, 53.7, 53.9, 54.1, 54.3, 54.5, 54.7, 54.9, 55.1, 55.3, 55.5, 55.7, 55.9, 56.1, 56.3, 56.5, 56.7, 56.9, 57.1, 57.3, 57.5, 57.7, 57.9, 58.1, 58.3, 58.5, 58.7, 58.9, 59.1, 59.3, 59.5, 59.7, 59.9, 60.1, 60.3, 60.5, 60.7, 60.9, 61.1, 61.3, 61.5, 61.7, 61.9, 62.1, 62.3, 62.5, 62.7, 62.9, 63.1, 63.3, 63.5, 63.7, 63.9, 64.1, 64.3, 64.5, 64.7, 64.9, 65.1, 65.3, 65.5, 65.7, 65.9, 66.1, 66.3, 66.5, 66.7, 66.9, 67.1, 67.3, 67.5, 67.7, 67.9, 68.1, 68.3, 68.5, 68.7, 68.9, 69.1, 69.3, 69.5, 69.7, 69.9, 70.1, 70.3, 70.5, 70.7, 70.9, 71.1, 71.3, 71.5, 71.7, 71.9, 72.1, 72.3, 72.5, 72.7, 72.9, 73.1, 73.3, 73.5, 73.7, 73.9, 74.1, 74.3, 74.5, 74.7, 74.9, 75.1, 75.3, 75.5, 75.7, 75.9, 76.1, 76.3, 76.5, 76.7, 76.9, 77.1, 77.3, 77.5, 77.7, 77.9, 78.1, 78.3, 78.5, 78.7, 78.9, 79.1, 79.3, 79.5, 79.7, 79.9, 80.1, 80.3, 80.5, 80.7, 80.9, 81.1, 81.3, 81.5, 81.7, 81.9, 82.1, 82.3, 82.5, 82.7, 82.9, 83.1, 83.3, 83.5, 83.7, 83.9, 84.1, 84.3, 84.5, 84.7, 84.9, 85.1, 85.3, 85.5, 85.7, 85.9, 86.1, 86.3, 86.5, 86.7, 86.9, 87.1, 87.3, 87.5, 87.7, 87.9, 88.1, 88.3, 88.5, 88.7, 88.9, 89.1, 89.3, 89.5, 89.7, 89.9, 90.1, 90.3, 90.5, 90.7, 90.9, 91.1, 91.3, 91.5, 91.7, 91.9, 92.1, 92.3, 92.5, 92.7, 92.9, 93.1, 93.3, 93.5, 93.7, 93.9, 94.1, 94.3, 94.5, 94.7,"}
{"file": "dataset/ori_500/box_6.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis labels\nax.set_xticks([1, 2, 3])\nax.set_xticklabels(['Perfect', '-10dB', '0dB'])\n\n# Set the y-axis limits\nax.set_ylim(4, 12)\n\n# Set the grid\nax.grid(True)\n\n# Set the boxplot\nax.boxplot([[9, 10, 11, 12], [7, 8, 9, 10], [5, 6, 7, 8]])\n\n# Add the method names\nax.text(1, 12, 'Method', fontsize=12, ha='center', va='center', color='black')\n\n# Add the legend\nax.legend(['GMML (25%-75%)', 'GML (25%-75%)', 'AO (25%-75%)'], loc='upper left')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/box_7.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(25.0, 8.0))\n\n# Plot the boxplot for Linear travel times\nax.boxplot([np.random.normal(10, 2, 100), np.random.normal(15, 3, 100), np.random.normal(20, 4, 100)], labels=[\"Davg\", \"Pto-KNN\", \"Pto-OLS\", \"SAA\", \"SAA-KNN\", \"SAA-OLS\", \"SAA-F\", \"CSA\", \"P-N\"])\nax.set_title(\"Linear travel times\")\n\n# Plot the boxplot for Exponential travel times\nax.boxplot([np.random.normal(10, 2, 100), np.random.normal(15, 3, 100), np.random.normal(20, 4, 100)], labels=[\"Davg\", \"Pto-KNN\", \"Pto-OLS\", \"SAA\", \"SAA-KNN\", \"SAA-OLS\", \"SAA-F\", \"CSA\", \"P-N\"])\nax.set_title(\"Exponential travel times\")\n\n# Plot the boxplot for Sigmoidal travel times\nax.boxplot([np.random.normal(10, 2, 100), np.random.normal(15, 3, 100), np.random.normal(20, 4, 100)], labels=[\"Davg\", \"Pto-KNN\", \"Pto-OLS\", \"SAA\", \"SAA-KNN\", \"SAA-OLS\", \"SAA-F\", \"CSA\", \"P-N\"])\nax.set_title(\"Sigmoidal travel times\")\n\nplt.show()"}
{"file": "dataset/ori_500/box_8.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\n\n# Define the data for each hospital\nhospital1 = [0.98, 0.97, 0.96, 0.95, 0.94]\nhospital2 = [0.93, 0.92, 0.91, 0.90, 0.89]\nhospital3 = [0.88, 0.87, 0.86, 0.85, 0.84]\n\n# Plot the boxplot for each hospital\nax.boxplot(hospital1, positions=[1], widths=0.6)\nax.boxplot(hospital2, positions=[2], widths=0.6)\nax.boxplot(hospital3, positions=[3], widths=0.6)\n\n# Add labels for each hospital\nax.set_xticks([1, 2, 3])\nax.set_xticklabels(['Only WSIs', 'Only CNN', 'WSI+CNN'])\n\n# Set the y-axis limits\nax.set_ylim(0.7, 1.0)\n\n# Add a title\nax.set_title('AUC')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/box_9.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Set the x-axis labels\nax.set_xticks([1, 2, 3])\nax.set_xticklabels(['Vanilla DIP', 'SGLD DIP', 'Ours'])\n\n# Set the y-axis limits\nax.set_ylim(22.0, 24.0)\n\n# Plot the boxplot\nax.boxplot(np.random.rand(3, 10), showmeans=True)\n\n# Add the mean line\nax.plot([1, 2, 3], [np.mean(np.random.rand(10)), np.mean(np.random.rand(10)), np.mean(np.random.rand(10))], 'o-')\n\n# Add the median line\nax.plot([1, 2, 3], [np.median(np.random.rand(10)), np.median(np.random.rand(10)), np.median(np.random.rand(10))], 'o-')\n\n# Add the whisker line\nax.plot([1, 2, 3], [np.min(np.random.rand(10)), np.min(np.random.rand(10)), np.min(np.random.rand(10))], 'o-')\n\n# Add the outlier line\nax.plot([1, 2, 3], [np.max(np.random.rand(10)), np.max(np.random.rand(10)), np.max(np.random.rand(10))], 'o-')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/contour_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the plot\nax.set_title('T-SNE plot for the output variable Y3')\n\n# Set the x and y limits\nax.set_xlim(-80, 80)\nax.set_ylim(-80, 80)\n\n# Set the x and y ticks\nax.set_xticks(np.arange(-80, 81, 20))\nax.set_yticks(np.arange(-80, 81, 20))\n\n# Set the x and y labels\nax.set_xlabel('X')\nax.set_ylabel('Y')\n\n# Set the background color\nax.set_facecolor('#f5f5f5')\n\n# Set the grid color\nax.grid(color='#d3d3d3', linestyle='-', linewidth=0.5)\n\n# Set the font size\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks\nax.set_xticklabels(ax.get_xticks(), fontsize=10)\nax.set_yticklabels(ax.get_yticks(), fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('T-SNE plot for the output variable Y3', fontsize=12)\n\n# Set the font size for the x and y labels\nax.set_xlabel('X', fontsize=10)\nax.set_ylabel('Y', fontsize=10)\n\n# Set the font size for the x and y ticks"}
{"file": "dataset/ori_500/contour_2.pdf", "response": "```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndef plot_contour():\n    fig, ax = plt.subplots(figsize=(8.0, 6.0))\n    x = np.linspace(0, 1, 100)\n    y = np.linspace(0, 1, 100)\n    X, Y = np.meshgrid(x, y)\n    Z = np.sin(X * Y)\n    CS = ax.contourf(X, Y, Z, locator=ticker.LogLocator(), cmap=\"viridis\")\n    cbar = fig.colorbar(CS)\n    plt.show()\n\nplot_contour()\n```"}
{"file": "dataset/ori_500/contour_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the grid\nax.grid(True)\n\n# Set the limits\nax.set_xlim(50, 160)\nax.set_ylim(50, 100)\n\n# Set the ticks\nax.set_xticks(np.arange(50, 170, 10))\nax.set_yticks(np.arange(50, 110, 10))\n\n# Set the labels\nax.set_xlabel('SBP (mmHg)')\nax.set_ylabel('DBP (mmHg)')\n\n# Set the title\nax.set_title('Blood Pressure')\n\n# Set the legend\nax.legend(['Female', 'Male'], loc='upper right')\n\n# Set the data\nfemale_data = [90, 80, 70, 60]\nmale_data = [95, 85, 75, 65]\n\n# Plot the data\nfor i in range(len(female_data)):\n    ax.plot([female_data[i], male_data[i]], [female_data[i], male_data[i]], 'k-')\n\n# Set the equal aspect ratio\nax.set_aspect('equal')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/contour_4.pdf", "response": "```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Define the radius of the circle\nr = 10\n\n# Define the angles\ntheta = np.linspace(0, 2*np.pi, 100)\n\n# Calculate the x and y coordinates\nx = r * np.cos(theta)\ny = r * np.sin(theta)\n\n# Plot the circle\nax.plot(x, y)\n\n# Set the limits of the plot\nax.set_xlim(-10, 10)\nax.set_ylim(-10, 10)\n\n# Set the ticks\nax.set_xticks(np.arange(-10, 11, 2))\nax.set_yticks(np.arange(-10, 11, 2))\n\n# Set the labels\nax.set_xlabel('X')\nax.set_ylabel('Y')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/contour_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Define the radii of the circles\nradii = [10, 8, 6, 4, 2]\n\n# Define the colors for each circle\ncolors = ['red', 'orange', 'yellow', 'green', 'blue']\n\n# Draw the circles\nfor r, c in zip(radii, colors):\n    circle = plt.Circle((0, 0), r, color=c, fill=False)\n    ax.add_artist(circle)\n\n# Set the aspect ratio to be equal\nax.set_aspect('equal')\n\n# Set the limits of the plot\nax.set_xlim(-10, 10)\nax.set_ylim(-10, 10)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/density_1.pdf", "response": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Define the number of iterations\nnum_iterations = 7\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 3.0))\n\n# Set the x-axis limits\nax.set_xlim(8, 15)\n\n# Set the y-axis limits\nax.set_ylim(0, 25)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(8, 16))\n\n# Set the y-axis label\nax.set_ylabel('Iteration')\n\n# Set the color map\ncmap = plt.cm.RdYlBu_r\n\n# Create a list of colors\ncolors = [cmap(i/num_iterations) for i in range(num_iterations)]\n\n# Create a list of labels\nlabels = ['Iteration {}'.format(i+1) for i in range(num_iterations)]\n\n# Create a list of data\ndata = [np.random.normal(loc=i, scale=1, size=100) for i in range(num_iterations)]\n\n# Plot the data\nfor i in range(num_iterations):\n    ax.plot(data[i], color=colors[i], label=labels[i])\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/density_2.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Plot the first curve\nx = np.linspace(0, 1, 100)\ny = np.sin(x)\nax.plot(x, y, color='black')\n\n# Plot the second curve\nx = np.linspace(0, 1, 100)\ny = np.cos(x)\nax.plot(x, y, color='red')\n\n# Set the aspect ratio of the plot\nax.set_aspect('equal')\n\nplt.show()"}
{"file": "dataset/ori_500/density_3.pdf", "response": "```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Generate data\nx = np.linspace(-1, 1, 100)\ny = np.sin(np.pi * x) * np.exp(-x**2)\n\n# Plot\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\nax.plot(x, y, 'b-', lw=2)\nax.set_xlabel('Spearman Coefficient')\nax.set_ylabel('Density')\nax.set_title('KDE Plot of Spearman Coefficient Distribution')\nplt.show()\n```"}
{"file": "dataset/ori_500/density_4.pdf", "response": "```\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Define the parameters for the distributions\nmu1, sigma1 = 7, 2\nmu2, sigma2 = 8, 3\nmu3, sigma3 = 9, 4\nmu4, sigma4 = 10, 5\nmu5, sigma5 = 11, 6\nmu6, sigma6 = 12, 7\nmu7, sigma7 = 13, 8\nmu8, sigma8 = 14, 9\nmu9, sigma9 = 15, 10\n\n# Generate random samples from the distributions\nx1 = np.random.normal(mu1, sigma1, 1000)\nx2 = np.random.normal(mu2, sigma2, 1000)\nx3 = np.random.normal(mu3, sigma3, 1000)\nx4 = np.random.normal(mu4, sigma4, 1000)\nx5 = np.random.normal(mu5, sigma5, 1000)\nx6 = np.random.normal(mu6, sigma6, 1000)\nx7 = np.random.normal(mu7, sigma7, 1000)\nx8 = np.random.normal(mu8, sigma8, 1000)\nx9 = np.random.normal(mu9, sigma9, 1000)\n\n# Combine the samples into one array\nx = np.concatenate((x1, x2, x3, x4, x5, x6, x7, x8, x9))\n\n# Plot the histogram of the combined samples\nplt.hist(x, bins=10, density=True, color='blue', alpha=0.5)\n\n# Add vertical lines at the means of the distributions\nplt.axvline(mu1, color='red', linestyle='--')\nplt.axvline(mu2, color='red', linestyle='--')\nplt.axvline(mu3, color='red', linestyle='--')\nplt.axvline(mu4, color='red', linestyle='--')\nplt.axvline(mu5, color='red', linestyle='--')\nplt.axvline(mu6, color='red', linestyle='--')\nplt.axvline(mu7, color='red', linestyle='--')\nplt.axvline(mu8, color='red', linestyle='--')\nplt.axvline(mu9, color='red', linestyle='--')\n\n# Add a vertical line at the mean of the combined samples\nplt.axvline(np.mean(x), color='red', linestyle='--')\n\n# Add a vertical line at the median of the combined samples\nplt.axvline(np.median(x), color='red', linestyle='--')\n\n# Add a vertical line at the mode of the combined samples\nplt.axvline(np.mode(x)[0], color='red', linestyle='--')\n\n# Add a vertical line at the minimum value of the combined samples\nplt.axvline(np.min(x), color='red', linestyle='--')\n\n# Add a vertical line at the maximum value of the combined samples\nplt.axvline(np.max(x), color='red', linestyle='--')\n\n# Add a vertical line at the first quartile of the combined samples\nplt.axvline(np.percentile(x, 25), color='red', linestyle='--')\n\n# Add a vertical line at the third quartile of the combined samples\nplt.axvline(np.percentile(x, 75), color='red', linestyle='--')\n\n# Add a vertical line at the interquartile range of the combined samples\nplt.axvline(np.percentile(x, 75) - np.percentile(x, 25), color='red', linestyle='--')\n\n# Add a vertical line at the standard deviation of the combined samples\nplt.axvline(np.std(x), color='red', linestyle='--')\n\n# Add a vertical line at the variance of the combined samples\nplt.axvline(np.var(x), color='red', linestyle='--')\n\n# Add a vertical line at the skewness of the combined samples\nplt.axvline(np.skew(x), color='red', linestyle='--')\n\n# Add a vertical line at the kurtosis of the combined samples\nplt.axvline(np.kurtosis(x), color='red', linestyle='--')\n\n# Add a vertical line at the entropy of the combined samples\nplt.axvline(np.entropy(x), color='red', linestyle='--')\n\n# Add a vertical line at the mode of the combined samples\nplt.axvline(np.mode(x)[0], color='red', linestyle='--')\n\n# Add a vertical line at the minimum value of the combined samples\nplt.axvline(np.min(x), color='red', linestyle='--')\n\n# Add a vertical line at the maximum value of the combined samples\nplt.axvline(np.max(x), color='red', linestyle='--')\n\n# Add a vertical line at the first quartile of the combined samples\nplt.axvline(np.percentile(x, 25), color='red', linestyle='--')\n\n# Add a vertical line at the third quartile of the combined samples\nplt.axvline(np.percentile(x, 75), color='red', linestyle='--')\n\n# Add a vertical line at the interquartile range of the combined samples\nplt.axvline(np.percentile(x, 75) - np.percentile(x, 25), color='red', linestyle='--')\n\n# Add a vertical line at the standard deviation of the combined samples\nplt.axvline(np.std(x), color='red', linestyle='--')\n\n# Add a vertical line at the variance of the combined samples\nplt.axvline(np.var(x), color='red', linestyle='--')\n\n# Add a vertical line at the skewness of the combined samples\nplt.axvline(np.skew(x), color='red', linestyle='--')\n\n# Add a vertical line at the kurtosis of the combined samples\nplt.axvline(np.kurtosis(x), color='red', linestyle='--')\n\n# Add a vertical line at the entropy of the combined samples\nplt.axvline(np.entropy(x), color='red', linestyle='--')\n\n# Add a vertical line at the mode of the combined samples\nplt.axvline(np.mode(x)[0], color='red', linestyle='--')\n\n# Add a vertical line at the minimum value of the combined samples\nplt.axvline(np.min(x), color='red', linestyle='--')\n\n# Add a vertical line at the maximum value of the combined samples\nplt.axvline(np.max(x), color='red', linestyle='--')\n\n# Add a vertical line at the first quartile of the combined samples\nplt.axvline(np.percentile(x, 25), color='red', linestyle='--')\n\n# Add a vertical line at the third quartile of the combined samples\nplt.axvline(np.percentile(x, 75), color='red', linestyle='--')\n\n# Add a vertical line at the interquartile range of the combined samples\nplt.axvline(np.percentile(x, 75) - np.percentile(x, 25), color='red', linestyle='--')\n\n# Add a vertical line at the standard deviation of the combined samples\nplt.axvline(np.std(x), color='red', linestyle='--')\n\n# Add a vertical line at the variance of the combined samples\nplt.axvline(np.var(x), color='red', linestyle='--')\n\n# Add a vertical line at the skewness of the combined samples\nplt.axvline(np.skew(x), color='red', linestyle='--')\n\n# Add a vertical line at the kurtosis of the combined samples\nplt.axvline(np.kurtosis(x), color='red', linestyle='--')\n\n# Add a vertical line at the entropy of the combined samples\nplt.axvline(np.entropy(x), color='red', linestyle='--')\n\n# Add a vertical line at the mode of the combined samples\nplt.axvline(np.mode(x)[0], color='red', linestyle='--')\n\n# Add a vertical line at the minimum value of the combined samples\nplt.axvline(np.min(x), color='red', linestyle='--')\n\n# Add a vertical line at the maximum value of the combined samples\nplt.axvline(np.max(x), color='red', linestyle='--')\n\n# Add a vertical line at the first quartile of the combined samples\nplt.axvline(np.percentile(x, 25), color='red', linestyle='--')\n\n# Add a vertical line at the third quartile of the combined samples\nplt.axvline(np.percentile(x, 75), color='red', linestyle='--')\n\n# Add a vertical line at the interquartile range of the combined samples\nplt.axvline(np.percentile(x, 75) - np.percentile(x, 25), color='red', linestyle='--')\n\n# Add a vertical line at the standard deviation of the combined samples\nplt.axvline(np.std(x), color='red', linestyle='--')\n\n# Add a vertical line at the variance of the combined samples\nplt.axvline(np.var(x), color='red', linestyle='--')\n\n# Add a vertical line at the skewness of the combined samples\nplt.axvline(np.skew(x), color='red', linestyle='--')\n\n# Add a vertical line at the kurtosis of the combined samples\nplt.axvline(np.kurtosis(x), color='red', linestyle='--')\n\n# Add a vertical line at the entropy of the combined samples\nplt.axvline(np.entropy(x), color='red', linestyle='--')\n\n# Add a vertical line at the mode of the combined samples\nplt.axvline(np.mode(x)[0], color='red', linestyle='--')\n\n# Add a vertical line at the minimum value of the combined samples\nplt.axvline(np.min(x), color='red', linestyle='--')\n\n# Add a vertical line at the maximum value of the combined samples\nplt.axvline(np.max(x), color='red', linestyle='--')\n\n# Add a vertical line at the first quartile of the combined samples\nplt.axvline(np.percentile(x, 25), color='red', linestyle='--')\n\n# Add a vertical line at the third quartile of the combined samples\nplt.axvline(np.percentile(x, 75), color='red', linestyle='--')\n\n# Add a vertical line at the interquartile range of the combined samples\nplt.axvline(np.percentile(x, 75) - np.percentile(x, 25), color='red', linestyle='--')\n\n# Add a vertical line at the standard deviation of the combined samples\nplt.axvline(np.std(x), color='red', linestyle='--')\n\n# Add a vertical line at the variance of the combined samples\nplt.axvline(np.var(x), color='red', linestyle='--')\n\n# Add a vertical line at the skewness of the combined samples\nplt.axvline(np.skew(x), color='red', linestyle='--')\n\n# Add a vertical line at the kurtosis of the combined samples\nplt.axvline(np.kurtosis(x), color='red', linestyle='--')\n\n# Add a vertical line at the entropy of the combined samples\nplt.axvline(np.entropy(x), color='red', linestyle='--')\n\n# Add a vertical line at the mode of the combined samples\nplt.axvline(np.mode(x)[0], color='red', linestyle='--')\n\n# Add a vertical line at the minimum value of the combined samples\nplt.axvline(np.min(x), color='red', linestyle='--')\n\n# Add a vertical line at the maximum value of the combined samples\nplt.axvline(np.max(x), color='red', linestyle='--')\n\n# Add a vertical line at the first quartile of the combined samples\nplt.axvline(np.percentile(x, 25), color='red', linestyle='--')\n\n# Add a vertical line at the third quartile of the combined samples\nplt.axvline(np.percentile(x, 75), color='red', linestyle='--')\n\n# Add a vertical line at the interquartile range of the combined samples\nplt.axvline(np.percentile(x, 75) - np.percentile(x, 25), color='red', linestyle='--')\n\n# Add a vertical line at the standard deviation of the combined samples\nplt.axvline(np.std(x), color='red', linestyle='--')\n\n# Add a vertical line at the variance of the combined samples\nplt.axvline(np.var(x), color='red', linestyle='--')\n\n# Add a vertical line at the skewness of the combined samples\nplt.axvline(np.skew(x), color='red', linestyle='--')\n\n# Add a vertical line at the kurtosis of the combined samples\nplt.axvline(np.kurtosis(x), color='red', linestyle='--')\n\n# Add a vertical line at the entropy of the combined samples\nplt.axvline(np.entropy(x), color='red', linestyle='--')\n\n# Add a vertical line at the mode of the combined samples\nplt.axvline(np.mode(x)[0], color='red', linestyle='--')\n\n# Add a vertical line at the minimum value of the combined samples\nplt.axvline(np.min(x), color='red', linestyle='--')\n\n# Add a vertical line at the maximum value of the combined samples\nplt.axvline(np.max(x), color='red', linestyle='--')\n\n# Add a vertical line at the first quartile of the combined samples\nplt.axvline(np.percentile(x, 25), color='red', linestyle='--')\n\n# Add a vertical line at the third quartile of the combined samples\nplt.axvline(np.percentile(x, 75), color='red', linestyle='--')\n\n# Add a vertical line at the interquartile range of the combined samples\nplt.axvline(np.percentile(x, 75) - np.percentile(x, 25), color='red', linestyle='--')\n\n# Add a vertical line at the standard deviation of the combined samples\nplt.axvline(np.std(x), color='red', linestyle='--')\n\n# Add a vertical line at the variance of the combined samples\nplt.axvline(np.var(x), color='red', linestyle='--')\n\n# Add a vertical line at the skewness of the combined samples\nplt.axvline(np.skew(x), color='red', linestyle='--')\n\n# Add a vertical line at the kurtosis of the combined samples\nplt.axvline(np.kurtosis(x), color='red', linestyle='--')\n\n# Add a vertical line at the entropy of the combined samples\nplt.axvline(np.entropy(x), color='red', linestyle='--')\n\n# Add a vertical line at the mode of the combined samples\nplt.axvline(np.mode(x)[0], color='red', linestyle='--')\n\n# Add a vertical line at the minimum value of the combined samples\nplt.axvline(np.min(x), color='red', linestyle='--')\n\n# Add a vertical line at the maximum value of the combined samples\nplt.axvline(np.max(x), color='red', linestyle='--')\n\n# Add a vertical line at the first quartile of the combined samples\nplt.axvline(np.percentile(x, 25), color='red', linestyle='--')\n\n# Add a vertical line at the third quartile of the combined samples\nplt.axvline(np.percentile(x, 75), color='red', linestyle='--')\n\n# Add a vertical line at the interquartile range of the combined samples\nplt.axvline(np.percentile(x, 75) - np.percentile(x, 25), color='red', linestyle='--')\n\n# Add a vertical line at the standard deviation of the combined samples\nplt.axvline(np.std(x), color='red', linestyle='--')\n\n# Add a vertical line at the variance of the combined samples\nplt.axvline(np.var(x), color='red', linestyle='--')\n\n# Add a vertical line at the skewness of the combined samples\nplt.axvline(np.skew(x), color='red', linestyle='--')\n\n# Add a vertical line at the kurtosis of the combined samples\nplt.axvline(np.kurtosis(x), color='red', linestyle='--')\n\n# Add a vertical line at the entropy of the combined samples\nplt.axvline(np.entropy(x), color='red', linestyle='--')\n\n# Add a vertical line at the mode of the combined samples\nplt.axvline(np.mode(x)[0], color='red', linestyle='--')\n\n# Add a vertical line at the minimum value of the combined samples\nplt.axvline(np.min(x), color='red', linestyle='--')\n\n# Add a vertical line at the maximum value of the combined samples\nplt.axvline(np.max(x), color='red', linestyle='--')\n\n# Add a vertical line at the first quartile of the combined samples\nplt.axvline(np.percentile(x, 25), color='red', linestyle='--')\n\n# Add a vertical line at the third quartile of the combined samples\nplt.axvline(np.percentile(x, 75), color='red', linestyle='--')\n\n# Add a vertical line at the interquartile range of the combined samples\nplt.axvline(np.percentile(x, 75) - np.percentile(x, 25), color='red', linestyle='--')\n\n# Add a vertical line at the standard deviation of the combined samples\nplt.axvline(np.std(x), color='red', linestyle='--')\n\n# Add a vertical line at the variance of the combined samples\nplt.axvline(np.var(x), color='red', linestyle='--')\n\n# Add a vertical line at the skewness of the combined samples\nplt.axvline(np.skew(x), color='red', linestyle='--')\n\n# Add a vertical line at the kurtosis of the combined samples\nplt.axvline(np.kurtosis(x), color='red', linestyle='--')\n\n# Add a vertical line at the entropy of the combined samples\nplt.axvline(np.entropy(x), color='red', linestyle='--')\n\n# Add a vertical line at the mode of the combined samples\nplt.axvline(np.mode(x)[0], color='red', linestyle='--')\n\n# Add a vertical line at the minimum value of the combined samples\nplt.axvline(np.min(x), color='red', linestyle='--')\n\n# Add a vertical line at the maximum value of the combined samples\nplt.axvline(np.max(x), color='red', linestyle='--')\n\n# Add a vertical line at the first quartile of the combined samples\nplt.axvline(np.percentile(x, 25), color='red', linestyle='--')\n\n# Add a vertical line at the third quartile of the combined samples\nplt.axvline(np.percentile(x, 75), color='red', linestyle='--')\n\n# Add a vertical line at the interquartile range of the combined samples\nplt.axvline(np.percentile(x, 75) - np.percentile(x, 25), color='red', linestyle='--')\n\n# Add a vertical line at the standard deviation of the combined samples\nplt.axvline(np.std(x), color='red', linestyle='"}
{"file": "dataset/ori_500/density_5.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a new figure with the specified size\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the x and y limits for the plot\nax.set_xlim(0, 1)\nax.set_ylim(0, 15)\n\n# Draw horizontal and vertical grid lines\nax.grid(True, which='both', linestyle='--')\n\n# Define the density values\ndensity_values = [0.0, 0.1, 0.2, 0.3, 0.4, 0.5]\n\n# Plot the first curve\nax.plot(density_values, [8, 7, 6, 5, 4, 3], label='Gucci', color='blue', linestyle='-', linewidth=2)\n\n# Plot the second curve\nax.plot(density_values, [10, 9, 8, 7, 6, 5], label='Chanel', color='green', linestyle='-', linewidth=2)\n\n# Add a legend to the plot\nax.legend()\n\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_1.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Define the data for the bar chart\nbar_data = [-0.500, -0.394, -0.443, -0.531, -0.539, -0.541, -0.543, -0.552, -0.590, -0.819]\nbar_labels = ['Deep Ensembles', 'Dropout', 'Laplacian', 'SNGP', 'HET-XL', 'Baseline', 'GP', 'Shallow Ensembles', 'DUQ', 'Corr. Pred']\n\n# Plot the bar chart\nax.bar(bar_labels, bar_data, color='green')\n\n# Define the data for the error bars\nerror_data = [0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000]\n\n# Plot the error bars\nax.errorbar(bar_labels, bar_data, yerr=error_data, fmt='o', capsize=5)\n\n# Set the y-axis limits\nax.set_ylim(-2.0, 0.0)\n\n# Set the y-axis label\nax.set_ylabel('Log Probability $\\mathregular{\\hat{p}}$')\n\n# Set the x-axis label\nax.set_xlabel('Model')\n\n# Set the title of the plot\nax.set_title('Log Probability')\n\n# Add a legend\nax.legend(['Distributional', 'Deterministic'], loc='upper right')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_10.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('IQM Human Normalized Score')\n\n# Set the labels for the x-axis and y-axis\nax.set_xlabel('Number of experts')\nax.set_ylabel('IQM Human Normalized Score')\n\n# Set the tick labels for the x-axis\nax.set_xticks([1, 2, 4, 8])\nax.set_xticklabels(['1', '2', '4', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(5, 8, 1))\nax.set_yticklabels(['5', '6', '7'])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.text(0.5, 0.9, 'Expert dimension', transform=ax.transAxes, fontsize=12, verticalalignment='center', horizontalalignment='center')\n\n# Set the color of the legend\nax.legend(loc='upper left', bbox_to_anchor=(0.0, 1.0), fancybox=True, shadow=True)\n\n# Set the color of the baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6, 6], 'g-', lw=2)\n\n# Set the color of the SoftMoE (\u2237 NumExperts)\nax.plot([0, 1], [6, 6], 'm-', lw=2)\n\n# Set the color of the Baseline\nax.plot([0, 1], [6, 6], 'b-', lw=2)\n\n# Set the color of the SoftMoE (unchanged)\nax.plot([0, 1], [6"}
{"file": "dataset/ori_500/errorbar_11.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the x-axis labels\nax.set_xticks([1, 2, 3])\nax.set_xticklabels(['Hospital 1', 'Hospital 2', 'Hospital 3'])\n\n# Set the y-axis limits\nax.set_ylim(0.5, 0.95)\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0.5, 1.0, 0.05))\n\n# Set the y-axis labels\nax.set_yticklabels(['0.5', '0.55', '0.60', '0.65', '0.70', '0.75', '0.80', '0.85', '0.90', '0.95'])\n\n# Set the title of the plot\nax.set_title('Accuracy by hospital and method')\n\n# Set the legend\nax.legend(['Baseline 1', 'Baseline 2', 'FedMM'], loc='upper left')\n\n# Set the color of the bars\ncolors = ['lightblue', 'lightgreen', 'lightcoral']\n\n# Set the width of the bars\nwidth = 0.2\n\n# Set the position of the bars\nx = np.arange(3)\n\n# Set the data for the bars\ndata = [0.748, 0.715, 0.75, 0.762, 0.748, 0.77, 0.709, 0.687, 0.713]\n\n# Plot the bars\nfor i in range(3):\n    ax.bar(x + i * width, data[i*3:(i+1)*3], width, color=colors[i])\n\n# Set the y-axis labels\nax.set_yticklabels(['0.5', '0.55', '0.60', '0.65', '0.70', '0.75', '0.80', '0.85', '0.90', '0.95'])\n\n# Set the title of the plot\nax.set_title('Accuracy by hospital and method')\n\n# Set the legend\nax.legend(['Baseline 1', 'Baseline 2', 'FedMM'], loc='upper left')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_12.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Plot the rectangles\nrects = ax.bar(range(4), [10, 20, 30, 40], color=['orange', 'teal', 'red', 'blue'])\n\n# Add labels to the rectangles\nfor rect in rects:\n    height = rect.get_height()\n    ax.text(rect.get_x() + rect.get_width()/2., height,\n            '%d' % int(height),\n            ha='center', va='bottom')\n\n# Add a title to the plot\nax.set_title('GPT-4 Buyer (valuation 40)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_13.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Define the data for each bar\ndata = [\n    [0.96, 0.95, 0.94, 0.93, 0.92, 0.91, 0.90, 0.89, 0.88, 0.87, 0.86, 0.85, 0.84, 0.83, 0.82, 0.81, 0.80, 0.79, 0.78, 0.77, 0.76, 0.75, 0.74, 0.73, 0.72, 0.71, 0.70, 0.69, 0.68, 0.67, 0.66, 0.65, 0.64, 0.63, 0.62, 0.61, 0.60, 0.59, 0.58, 0.57, 0.56, 0.55, 0.54, 0.53, 0.52, 0.51, 0.50],\n    [0.95, 0.94, 0.93, 0.92, 0.91, 0.90, 0.89, 0.88, 0.87, 0.86, 0.85, 0.84, 0.83, 0.82, 0.81, 0.80, 0.79, 0.78, 0.77, 0.76, 0.75, 0.74, 0.73, 0.72, 0.71, 0.70, 0.69, 0.68, 0.67, 0.66, 0.65, 0.64, 0.63, 0.62, 0.61, 0.60, 0.59, 0.58, 0.57, 0.56, 0.55, 0.54, 0.53, 0.52, 0.51, 0.50],\n    [0.94, 0.93, 0.92, 0.91, 0.90, 0.89, 0.88, 0.87, 0.86, 0.85, 0.84, 0.83, 0.82, 0.81, 0.80, 0.79, 0.78, 0.77, 0.76, 0.75, 0.74, 0.73, 0.72, 0.71, 0.70, 0.69, 0.68, 0.67, 0.66, 0.65, 0.64, 0.63, 0.62, 0.61, 0.60, 0.59, 0.58, 0.57, 0.56, 0.55, 0.54, 0.53, 0.52, 0.51, 0.50],\n    [0.93, 0.92, 0.91, 0.90, 0.89, 0.88, 0.87, 0.86, 0.85, 0.84, 0.83, 0.82, 0.81, 0.80, 0.79, 0.78, 0.77, 0.76, 0.75, 0.74, 0.73, 0.72, 0.71, 0.70, 0.69, 0.68, 0.67, 0.66, 0.65, 0.64, 0.63, 0.62, 0.61, 0.60, 0.59, 0.58, 0.57, 0.56, 0.55, 0.54, 0.53, 0.52, 0.51, 0.50],\n    [0.92, 0.91, 0.90, 0.89, 0.88, 0.87, 0.86, 0.85, 0.84, 0.83, 0.82, 0.81, 0.80, 0.79, 0.78, 0.77, 0.76, 0.75, 0.74, 0.73, 0.72, 0.71, 0.70, 0.69, 0.68, 0.67, 0.66, 0.65, 0.64, 0.63, 0.62, 0.61, 0.60, 0.59, 0.58, 0.57, 0.56, 0.55, 0.54, 0.53, 0.52, 0.51, 0.50],\n    [0.91, 0.90, 0.89, 0.88, 0.87, 0.86, 0.85, 0.84, 0.83, 0.82, 0.81, 0.80, 0.79, 0.78, 0.77, 0.76, 0.75, 0.74, 0.73, 0.72, 0.71, 0.70, 0.69, 0.68, 0.67, 0.66, 0.65, 0.64, 0.63, 0.62, 0.61, 0.60, 0.59, 0.58, 0.57, 0.56, 0.55, 0.54, 0.53, 0.52, 0.51, 0.50],\n    [0.90, 0.89, 0.88, 0.87, 0.86, 0.85, 0.84, 0.83, 0.82, 0.81, 0.80, 0.79, 0.78, 0.77, 0.76, 0.75, 0.74, 0.73, 0.72, 0.71, 0.70, 0.69, 0.68, 0.67, 0.66, 0.65, 0.64, 0.63, 0.62, 0.61, 0.60, 0.59, 0.58, 0.57, 0.56, 0.55, 0.54, 0.53, 0.52, 0.51, 0.50],\n    [0.89, 0.88, 0.87, 0.86, 0.85, 0.84, 0.83, 0.82, 0.81, 0.80, 0.79, 0.78, 0.77, 0.76, 0.75, 0.74, 0.73, 0.72, 0.71, 0.70, 0.69, 0.68, 0.67, 0.66, 0.65, 0.64, 0.63, 0.62, 0.61, 0.60, 0.59, 0.58, 0.57, 0.56, 0.55, 0.54, 0.53, 0.52, 0.51, 0.50],\n    [0.88, 0.87, 0.86, 0.85, 0.84, 0.83, 0.82, 0.81, 0.80, 0.79, 0.78, 0.77, 0.76, 0.75, 0.74, 0.73, 0.72, 0.71, 0.70, 0.69, 0.68, 0.67, 0.66, 0.65, 0.64, 0.63, 0.62, 0.61, 0.60, 0.59, 0.58, 0.57, 0.56, 0.55, 0.54, 0.53, 0.52, 0.51, 0.50],\n    [0.87, 0.86, 0.85, 0.84, 0.83, 0.82, 0.81, 0.80, 0.79, 0.78, 0.77, 0.76, 0.75, 0.74, 0.73, 0.72, 0.71, 0.70, 0.69, 0.68, 0.67, 0.66, 0.65, 0.64, 0.63, 0.62, 0.61, 0.60, 0.59, 0.58, 0.57, 0.56, 0.55, 0.54, 0.53, 0.52, 0.51, 0.50],\n    [0.86, 0.85, 0.84, 0.83, 0.82, 0.81, 0.80, 0.79, 0.78, 0.77, 0.76, 0.75, 0.74, 0.73, 0.72, 0.71, 0.70, 0.69, 0.68, 0.67, 0.66, 0.65, 0.64, 0.63, 0.62, 0.61, 0.60, 0.59, 0.58, 0.57, 0.56, 0.55, 0.54, 0.53, 0.52, 0.51, 0.50],\n    [0.85, 0.84, 0.83, 0.82, 0.81, 0.80, 0.79, 0.78, 0.77, 0.76, 0.75, 0.74, 0.73, 0.72, 0.71, 0.70, 0.69, 0.68, 0.67, 0.66, 0.65, 0.64, 0.63, 0.62, 0.61, 0.60, 0.59, 0.58, 0.57, 0.56, 0.55, 0.54, 0.53, 0.52, 0.51, 0.50],\n    [0.84, 0.83, 0.82, 0.81, 0.80, 0.79, 0.78, 0.77, 0.76, 0.75, 0.74, 0.73, 0.72, 0.71, 0.70, 0.69, 0.68, 0.67, 0.66, 0.65, 0.64, 0.63, 0.62, 0.61, 0.60, 0.59, 0.58, 0.57, 0.56, 0.55, 0.54, 0.53, 0.52, 0.51, 0.50],\n    [0.83, 0.82, 0.81, 0.80, 0.79, 0.78, 0.77, 0.76, 0.75, 0.74, 0.73, 0.72, 0.71, 0.70, 0.69, 0.68, 0.67, 0.66, 0.65, 0.64, 0.63, 0.62, 0.61, 0.60, 0.59, 0.58, 0.57, 0.56, 0.55, 0.54, 0.53, 0.52, 0.51, 0.50],\n    [0.82, 0.81, 0.80, 0.79, 0.78, 0.77, 0.76, 0.75, 0.74, 0.73, 0.72, 0.71, 0.70, 0.69, 0.68, 0.67, 0.66, 0.65, 0.64, 0.63, 0.62, 0.61, 0.60, 0.59, 0.58, 0.57, 0.56, 0.55, 0.54, 0.53, 0.52, 0.51, 0.50],\n    [0.81, 0.80, 0.79, 0.78, 0.77, 0.76, 0.75, 0.74, 0.73, 0.72, 0.71, 0.70, 0.69, 0.68, 0.67, 0.66, 0.65, 0.64, 0.63, 0.62, 0.61, 0.60, 0.59, 0.58, 0.57, 0.56, 0.55, 0.54, 0.53, 0.52, 0.51, 0.50],\n    [0.80, 0.79, 0.78, 0.77, 0.76, 0.75, 0.74, 0.73, 0.72, 0.71, 0.70, 0.69, 0.68, 0.67, 0.66, 0.65, 0.64, 0.63, 0.62, 0.61, 0.60, 0.59, 0.58, 0.57, 0.56, 0.55, 0.54, 0.53, 0.52, 0.51, 0.50],\n    [0.79, 0.78, 0.77, 0.76, 0.75, 0.74, 0.73, 0.72, 0.7"}
{"file": "dataset/ori_500/errorbar_14.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Define the data\nx = np.array([0.15, 0.10, 0.05, 0.00, -0.05])\ny = np.array([0.20, 0.15, 0.10, 0.05, 0.00])\n\n# Plot the data\nax.plot(x, y, 'k-')\n\n# Set the limits of the x-axis\nax.set_xlim(-0.5, 0.5)\n\n# Set the limits of the y-axis\nax.set_ylim(0, 0.25)\n\n# Set the labels for the x-axis\nax.set_xlabel('Posterior accuracy (\u0394 to no prompting)')\n\n# Set the labels for the y-axis\nax.set_ylabel('Posterior accuracy (\u0394 to no prompting)')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_15.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 3.0))\n\n# Define the data for each subplot\ndata = [\n    [85, 82, 87, 84],\n    [89, 86, 88, 85],\n    [90, 87, 89, 86]\n]\n\n# Define the labels for each subplot\nlabels = ['Medium', 'Medium-replay', 'Medium-expert']\n\n# Define the colors for each subplot\ncolors = ['orange', 'yellow', 'blue']\n\n# Define the width of each bar\nwidth = 0.2\n\n# Define the x-axis positions for each subplot\nx = np.arange(len(data[0]))\n\n# Plot each subplot\nfor i in range(len(data)):\n    ax.bar(x + i * width, data[i], width, label=labels[i], color=colors[i])\n\n# Add a legend\nax.legend()\n\n# Set the x-axis tick labels\nax.set_xticks(x + width)\nax.set_xticklabels(labels)\n\n# Set the y-axis label\nax.set_ylabel('Performance')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/errorbar_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Define the data for the plot\nx = np.array([128, 128, 256, 256, 256, 256, 64, 64, 64, 64])\ny = np.array([0.5, 0.5, 0.1, 0.1, 0.3, 0.3, 0.1, 0.1, 0.3, 0.3])\nz = np.array([0.0, 0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.4, 0.4, 0.4])\nw = np.array([0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0])\n\n# Plot the data\nax.plot(x, y, 'o-', lw=2)\nax.plot(x, z, 'o-', lw=2)\nax.plot(x, w, 'o-', lw=2)\n\n# Set the labels and title\nax.set_xlabel('Metric')\nax.set_ylabel('Hyperparameters')\nax.set_title('FashionMNIST (NEURAL)')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data for the first plot\nlabels = ['Japan', 'Brazil', 'India', 'Germany', 'United States']\nvalues = [0.25, 0.15, 0.4, 0.6, 0.8]\nerrors = [0.05, 0.05, 0.05, 0.05, 0.05]\n\n# Create the first plot\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\nax.barh(labels, values, xerr=errors, color='blue')\nax.set_xlabel('Higher Education Enrollment Rate')\nax.set_title('Higher Education Enrollment Rate')\n\n# Data for the second plot\nlabels = ['Japan', 'Brazil', 'India', 'Germany', 'United States']\nvalues = [0.25, 0.15, 0.4, 0.6, 0.8]\nerrors = [0.05, 0.05, 0.05, 0.05, 0.05]\n\n# Create the second plot\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\nax.barh(labels, values, xerr=errors, color='green')\nax.set_xlabel('Student-Teacher Ratio')\nax.set_title('Student-Teacher Ratio')\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, axs = plt.subplots(2, 1, figsize=(6.0, 9.0))\n\n# First subplot: Annual Carbon Dioxide Emissions\naxs[0].barh(['Africa', 'South America', 'North America', 'Asia', 'Europe'], [1200, 1800, 5000, 3200, 10400], color=['lightgrey', 'yellow', 'lightblue', 'lightcoral', 'lightpink'])\naxs[0].set_xlabel('Emissions (in millions of metric tons)')\naxs[0].set_title('Annual Carbon Dioxide Emissions')\n\n# Second subplot: Forest Coverage Rate\naxs[1].barh(['Africa', 'South America', 'North America', 'Asia', 'Europe'], [21, 34, 25, 38, 52], color=['lightgrey', 'yellow', 'lightblue', 'lightcoral', 'lightpink'])\naxs[1].set_xlabel('Forest Coverage Rate (%)')\naxs[1].set_title('Forest Coverage Rate')\n\n# Third subplot: Renewable Energy Usage\naxs[2].barh(['Africa', 'South America', 'North America', 'Asia', 'Europe'], [18, 28, 25, 34, 45], color=['lightgrey', 'yellow', 'lightblue', 'lightcoral', 'lightpink'])\naxs[2].set_xlabel('Renewable Energy Usage (%)')\naxs[2].set_title('Renewable Energy Usage')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 9.0))\n\n# Create a bar chart for Detroit\nax.bar(['Crime Rate', 'Happiness Index', 'Social Security Coverage', 'Political Participation'], [85, 75, 65, 45], color=['purple', 'blue', 'red', 'yellow'])\n\n# Add a vertical line at the mean value\nax.axvline(x=65, color='black')\n\n# Set the title of the plot\nax.set_title('(a) Detroit')\n\n# Create a bar chart for Philadelphia\nax.bar(['Crime Rate', 'Happiness Index', 'Social Security Coverage', 'Political Participation'], [95, 85, 75, 55], color=['purple', 'blue', 'red', 'yellow'])\n\n# Add a vertical line at the mean value\nax.axvline(x=75, color='black')\n\n# Set the title of the plot\nax.set_title('(b) Philadelphia')\n\n# Create a bar chart for Baltimore\nax.bar(['Crime Rate', 'Happiness Index', 'Social Security Coverage', 'Political Participation'], [90, 80, 70, 50], color=['purple', 'blue', 'red', 'yellow'])\n\n# Add a vertical line at the mean value\nax.axvline(x=70, color='black')\n\n# Set the title of the plot\nax.set_title('(c) Baltimore')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_2.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Add a grid\nax.grid(True)\n\n# Set the x-axis label\nax.set_xlabel('Judge')\n\n# Set the y-axis label\nax.set_ylabel('Judge Accuracy (%)')\n\n# Set the title of the plot\nax.set_title('Protocol')\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 1, 2])\nax.set_xticklabels(['GPT-3.5-Turbo', 'Claude 2.1', 'Human'])\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='upper left')\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0, 120, 10))\n\n# Set the tick labels for the legend\nax.legend(['Expert', 'Blind', 'Consultancy', 'Debate', 'Interactive Consultancy', 'Interactive Debate'], loc='"}
{"file": "dataset/ori_500/errorbar_20.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Define the data for each city\ncities = ['New York', 'London', 'Beijing', 'Tokyo']\nspring_temp = [12, 14, 16, 18]\nautumn_temp = [19, 21, 23, 25]\nrainfall = [100, 200, 300, 400]\nwind_speed = [5, 7, 9, 11]\naqi = [50, 60, 70, 80]\n\n# Plot the temperature data\nax.plot(cities, spring_temp, label='Spring')\nax.plot(cities, autumn_temp, label='Autumn')\n\n# Add labels and title\nax.set_xlabel('City')\nax.set_ylabel('Temperature (\u00b0C)')\nax.set_title('Annual Average Temperature')\n\n# Add legend\nax.legend()\n\n# Create a second subplot\nax2 = fig.add_subplot(2, 2, 2)\n\n# Plot the rainfall data\nax2.plot(cities, rainfall, label='Rainfall (mm)')\n\n# Add labels and title\nax2.set_xlabel('City')\nax2.set_ylabel('Rainfall (mm)')\nax2.set_title('Annual Rainfall')\n\n# Add legend\nax2.legend()\n\n# Create a third subplot\nax3 = fig.add_subplot(2, 2, 3)\n\n# Plot the wind speed data\nax3.plot(cities, wind_speed, label='Wind Speed (m/s)')\n\n# Add labels and title\nax3.set_xlabel('City')\nax3.set_ylabel('Wind Speed (m/s)')\nax3.set_title('Wind Speed')\n\n# Add legend\nax3.legend()\n\n# Create a fourth subplot\nax4 = fig.add_subplot(2, 2, 4)\n\n# Plot the AQI data\nax4.plot(cities, aqi, label='AQI')\n\n# Add labels and title\nax4.set_xlabel('City')\nax4.set_ylabel('AQI')\nax4.set_title('Air Quality Index')\n\n# Add legend\nax4.legend()\n\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Define the data for the bar chart\ndata = {'Germany': [-2000, -3000, -4000, -5000, -6000],\n        'China': [-2000, -3000, -4000, -5000, -6000],\n        'USA': [-2000, -3000, -4000, -5000, -6000],\n        'India': [-2000, -3000, -4000, -5000, -6000],\n        'Brazil': [-2000, -3000, -4000, -5000, -6000]}\n\n# Plot the bar chart\nfor key, value in data.items():\n    ax.bar(key, value, color='purple')\n\n# Set the x-axis limits\nax.set_xlim(-6000, 3000)\n\n# Set the y-axis limits\nax.set_ylim(0, 3000)\n\n# Set the x-axis tick labels\nax.set_xticks([-6000, -5000, -4000, -3000, -2000, -1000, 0])\n\n# Set the y-axis tick labels\nax.set_yticks([0, 1000, 2000, 3000])\n\n# Set the x-axis label\nax.set_xlabel('Energy Consumption (Petajoules)')\n\n# Set the y-axis label\nax.set_ylabel('Renewable Energy Usage (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_22.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the x-axis labels\nax.set_xticks([1, 2, 3])\nax.set_xticklabels(['Refrigerator', 'Washing Machine', 'Dishwasher'])\n\n# Set the y-axis limits\nax.set_ylim(-1, 0.4)\n\n# Plot the data\nax.plot([0.15, 0.05, 0.15], [0.25, -0.05, 0.15], 'o-', color='red')\nax.plot([0.25, 0.05, 0.15], [0.30, -0.05, 0.15], 'o-', color='green')\nax.plot([0.25, 0.05, 0.15], [0.30, -0.05, 0.15], 'o-', color='blue')\n\n# Add the legend\nax.legend(['Standard Model', 'Advanced Model', 'Optimal Model'], loc='upper left')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_23.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Define the data for each bar\nx = ['Wind', 'Solar', 'Hydro', 'Nuclear']\ny = [92, 87, 76, 64]\nyerr = [3, 2, 1, 2]\n\n# Plot the bars with error bars\nax.bar(x, y, yerr=yerr, capsize=5)\n\n# Add labels and title\nax.set_xlabel('Energy Assessment Entity')\nax.set_ylabel('Efficiency and Cost Scores')\nax.set_title('Evaluation Protocol')\n\n# Add legend\nax.legend(['Installation Efficiency', 'Maintenance Costs', 'Operational Efficiency', 'Environmental Impact', 'Safety Standards'], loc='upper right')\n\nplt.show()"}
{"file": "dataset/ori_500/errorbar_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Define the data for each country\ncountries = ['North America', 'Europe', 'Asia', 'South America', 'Africa', 'Central America', 'Middle East', 'Southeast Asia', 'China']\nvalues = [120, 110, 100, 80, 60, 40, 20, 0]\n\n# Plot the data\nfor i in range(len(countries)):\n    ax.plot([i, i], [values[i], values[i]], 'k-')\n    ax.text(i, values[i], countries[i])\n\n# Set the limits of the x-axis\nax.set_xlim(-1, len(countries))\n\n# Set the limits of the y-axis\nax.set_ylim(0, 130)\n\n# Set the tick labels\nax.set_xticks(range(len(countries)))\nax.set_xticklabels(countries)\n\n# Set the title\nax.set_title('Educational Metrics by Region')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_25.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nx = np.array([46.3, 30.1, 57.9, 34.0, 53.8, 43.7, 19.4, 20.0])\ny = np.array([57.9, 53.8, 43.7, 34.0, 20.0, 19.4, 30.1, 46.3])\n\n# Create figure and axis objects\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Plot data\nax.plot(x, y, 'o-')\n\n# Set axis labels\nax.set_xlabel('Misleading Recall')\nax.set_ylabel('Truthful Recall')\n\n# Show plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_26.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\ncategories = ['Support', 'Delivery', 'Product Quality', 'Returns', 'Pricing', 'Website Usability', 'Checkout Process']\nscores = [15, 75, 18, 82, 20, 78, 12, 85, 17, 80, 10, 88, 8, 90]\nsatisfaction = [75, 72, 78, 85, 80, 88, 90]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Plot the scores\nfor i in range(len(categories)):\n    ax.barh(categories[i], scores[i], color='blue')\n\n# Add the satisfaction scores\nfor i in range(len(categories)):\n    ax.text(scores[i] + 1, i, str(satisfaction[i]) + '%', ha='left', va='center')\n\n# Set the limits of the x-axis\nax.set_xlim(0, 100)\n\n# Set the labels\nax.set_xlabel('Satisfaction Scores')\nax.set_ylabel('Categories')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_27.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the bar chart\nagree_rates = [75, 82, 78, 85, 88]\ndisagree_rates = [15, 18, 20, 12, 17]\nsupport_quality = [100, 90, 80, 70, 60]\ndelivery_quality = [95, 85, 75, 65, 55]\nproduct_quality = [90, 80, 70, 60, 50]\nreturns = [85, 75, 65, 55, 45]\npricing = [90, 80, 70, 60, 50]\nwebsite_usability = [85, 75, 65, 55, 45]\ncheckout_process = [80, 70, 60, 50, 40]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Plot the agree rates\nax.bar(range(len(agree_rates)), agree_rates, color='red', label='Agree rates')\n\n# Plot the disagree rates\nax.bar(range(len(disagree_rates)), disagree_rates, color='blue', label='Disagree rates')\n\n# Plot the support quality\nax.bar(range(len(support_quality)), support_quality, color='green', label='Support Quality')\n\n# Plot the delivery quality\nax.bar(range(len(delivery_quality)), delivery_quality, color='orange', label='Delivery Quality')\n\n# Plot the product quality\nax.bar(range(len(product_quality)), product_quality, color='purple', label='Product Quality')\n\n# Plot the returns\nax.bar(range(len(returns)), returns, color='pink', label='Returns')\n\n# Plot the pricing\nax.bar(range(len(pricing)), pricing, color='yellow', label='Pricing')\n\n# Plot the website usability\nax.bar(range(len(website_usability)), website_usability, color='brown', label='Website Usability')\n\n# Plot the checkout process\nax.bar(range(len(checkout_process)), checkout_process, color='grey', label='Checkout Process')\n\n# Add labels and title\nax.set_xlabel('Factors')\nax.set_ylabel('Scores')\nax.set_title('Customer Satisfaction Scores')\n\n# Add legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_28.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the x-axis limits\nax.set_xlim(-0.15, 0.25)\n\n# Set the y-axis limits\nax.set_ylim(-0.15, 0.25)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(-0.15, 0.26, 0.05))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(-0.15, 0.26, 0.05))\n\n# Set the x-axis labels\nax.set_xticklabels(['-0.15', '-0.10', '-0.05', '0.00', '0.05', '0.10', '0.15', '0.20', '0.25'])\n\n# Set the y-axis labels\nax.set_yticklabels(['-0.15', '-0.10', '-0.05', '0.00', '0.05', '0.10', '0.15', '0.20', '0.25'])\n\n# Set the x-axis label\nax.set_xlabel('Impact on Plant Growth (\u0394 to control)')\n\n# Set the y-axis label\nax.set_ylabel('Environmental Factors')\n\n# Set the title of the plot\nax.set_title('Watering Frequency')\n\n# Set the grid lines\nax.grid(True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', pad=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', zorder=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelpad=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelpad=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelpad=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelpad=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelpad=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelpad=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelpad=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelpad=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelpad=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelpad=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelpad=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelpad=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelpad=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelpad=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelpad=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelpad=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelpad=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelpad=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelpad=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelpad=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelcolor='black')\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelrotation=0)\n\n# Set the tick marks\nax.tick_params(axis='both', which='both', labelpad=10)\n\n# Set the tick marks\nax.tick_params(axis='both',"}
{"file": "dataset/ori_500/errorbar_29.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data for the first city\nnyc = [-25, -15, 15, 25]\nnyc_labels = ['Traffic Volume', 'Public Transit', 'Accident Rate']\nnyc_values = [200, 175, 150, 125]\n\n# Data for the second city\nla = [-20, -10, 10, 20]\nla_labels = ['Traffic Volume', 'Public Transit', 'Accident Rate']\nla_values = [225, 175, 150, 125]\n\n# Data for the third city\nchi = [-20, -10, 10, 20]\nchi_labels = ['Traffic Volume', 'Public Transit', 'Accident Rate']\nchi_values = [250, 175, 150, 125]\n\nfig, axs = plt.subplots(3, 3, figsize=(10.0, 4.0))\naxs[0, 0].bar(nyc_labels, nyc_values, color=['green', 'blue', 'red'])\naxs[0, 0].set_title('New York')\naxs[0, 0].set_ylabel('Metric Values')\n\naxs[0, 1].bar(la_labels, la_values, color=['green', 'blue', 'red'])\naxs[0, 1].set_title('Los Angeles')\n\naxs[0, 2].bar(chi_labels, chi_values, color=['green', 'blue', 'red'])\naxs[0, 2].set_title('Chicago')\n\naxs[1, 0].bar(nyc_labels, nyc_values, color=['green', 'blue', 'red'])\naxs[1, 0].set_title('New York')\naxs[1, 0].set_ylabel('Metric Values')\n\naxs[1, 1].bar(la_labels, la_values, color=['green', 'blue', 'red'])\naxs[1, 1].set_title('Los Angeles')\n\naxs[1, 2].bar(chi_labels, chi_values, color=['green', 'blue', 'red'])\naxs[1, 2].set_title('Chicago')\n\naxs[2, 0].bar(nyc_labels, nyc_values, color=['green', 'blue', 'red'])\naxs[2, 0].set_title('New York')\naxs[2, 0].set_ylabel('Metric Values')\n\naxs[2, 1].bar(la_labels, la_values, color=['green', 'blue', 'red'])\naxs[2, 1].set_title('Los Angeles')\n\naxs[2, 2].bar(chi_labels, chi_values, color=['green', 'blue', 'red'])\naxs[2, 2].set_title('Chicago')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 10.0))\n\n# Define the data for each bar\nx = np.array([0.0, 0.2, 0.4, 0.6, 0.8, 1.0])\ny = np.array([128, 128, 128, 128, 128, 128])\n\n# Plot the bars\nax.bar(x, y, color='lightgrey')\n\n# Add the text labels\nax.text(0.0, 128, '128/0.1/0.0001', ha='center', va='bottom')\nax.text(0.2, 128, '128/0.3/0.0001', ha='center', va='bottom')\nax.text(0.4, 128, '128/0.5/0.0001', ha='center', va='bottom')\nax.text(0.6, 128, '128/0.5/0.0001', ha='center', va='bottom')\nax.text(0.8, 128, '128/0.5/0.0001', ha='center', va='bottom')\nax.text(1.0, 128, '128/0.5/0.0001', ha='center', va='bottom')\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 130)\n\n# Set the x-axis tick labels\nax.set_xticks(x)\nax.set_xticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the y-axis tick labels\nax.set_yticks(y)\nax.set_yticklabels(['128/0.1/0.0001', '128/0.3/0.0001', '128/0.5/0.0001', '128/0.5/0.0001', '128/0.5/0.0001', '128/0.5/0.0001'])\n\n# Set the title\nax.set_title('FashionMNIST (NEURAL)')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_30.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the x-axis labels\nax.set_xticks([1, 2, 3, 4])\nax.set_xticklabels(['City A', 'City B', 'City C', 'City D'])\n\n# Set the y-axis labels\nax.set_yticks(np.arange(-3, 1.5, 0.5))\nax.set_yticklabels(['-3.0', '-2.5', '-2.0', '-1.5', '-1.0', '-0.5', '0.0', '0.5', '1.0', '1.5'])\n\n# Set the title of the plot\nax.set_title('Environmental Impact Scores Across Cities')\n\n# Set the y-axis label\nax.set_ylabel('Air Quality Score')\n\n# Set the x-axis label\nax.set_xlabel('Water Quality Score')\n\n# Set the color of the air quality scores\nair_quality_scores = [-2.7, -2.1, -1.5, -1.0]\n\n# Set the color of the water quality scores\nwater_quality_scores = [0.0, 0.0, 0.0, 0.0]\n\n# Set the color of the air quality scores\nair_quality_colors = ['r', 'r', 'r', 'r']\n\n# Set the color of the water quality scores\nwater_quality_colors = ['g', 'g', 'g', 'g']\n\n# Plot the air quality scores\nfor i in range(len(air_quality_scores)):\n    ax.plot([i+1], [air_quality_scores[i]], 'o', color=air_quality_colors[i])\n\n# Plot the water quality scores\nfor i in range(len(water_quality_scores)):\n    ax.plot([i+1], [water_quality_scores[i]], 'o', color=water_quality_colors[i])\n\n# Add a legend\nax.legend(['Air Quality', 'Water Quality'], loc='upper right')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_4.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Define the data for the first plot\nwerewolf = [84.97, 67.17, 78.22, 85.17]\nseer = [102.67, 67.17, 78.22, 85.17]\nwitch = [102.67, 67.17, 78.22, 85.17]\nvillager = [102.67, 67.17, 78.22, 85.17]\n\n# Plot the data\nax.bar(range(4), werewolf, color='lightgreen', label='Wererwolf')\nax.bar(range(4), seer, color='lightblue', label='Seer')\nax.bar(range(4), witch, color='lightblue', label='Witch')\nax.bar(range(4), villager, color='darkblue', label='Villager')\n\n# Add labels and title\nax.set_xlabel('Speak duration of roles')\nax.set_ylabel('Duration (s)')\nax.set_title('(a) Speak duration of roles')\n\n# Add grid lines\nax.grid(True)\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/errorbar_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 7.0))\n\n# Define the data\nx = np.array([5, 10, 20, 30, 40, 50])\ny = np.array([63.77, 64.17, 64.31, 64.98, 65.82, 65.78])\n\n# Plot the data\nax.bar(x, y, color='c', edgecolor='k')\n\n# Add labels and title\nax.set_xlabel('Size of Data for Training and Validation')\nax.set_ylabel('True+info (%)')\nax.set_title('Size of Data for Training and Validation')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Out-of-domain accuracy')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Set the x-axis labels\nax.set_xticks([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the grid\nax.grid(True)\n\n# Set the y-axis range\nax.set_ylim(0.824, 0.834)\n\n# Set the x-axis range\nax.set_xlim(0, 20)\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(0, 21, 1))\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.824', '0.825', '0.826', '0.827', '0.828', '0.829', '0.830', '0.831', '0.832', '0.833', '0.834'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_1', 'test_2', 'test_3', 'test_4', 'test_5', 'test_6', 'constant'])\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0.824, 0.835, 0.001))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['all', 'arg-causal', 'test_0', 'test_"}
{"file": "dataset/ori_500/errorbar_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 1)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 1.1, 0.1))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 1.1, 0.1))\n\n# Set the x-axis labels\nax.set_xticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8'])\n\n# Set the y-axis labels\nax.set_yticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8'])\n\n# Set the title of the plot\nax.set_title('Mini Crosswords Performance')\n\n# Set the color of the lines\nax.plot([0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8], [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8], color='black')\n\n# Set the color of the bars\nax.bar([0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8], [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8], color='blue')\n\n# Set the color of the text\nax.text(0.0, 0.0, 'Initial Distribution', fontsize=12, color='black')\nax.text(0.1, 0.1, 'Best-of-Three', fontsize=12, color='black')\nax.text(0.2, 0.2, 'Final Distribution with GPT-4-Turbo', fontsize=12, color='black')\nax.text(0.3, 0.3, 'Final Distribution with GPT-3.5-Turbo', fontsize=12, color='black')\nax.text(0.4, 0.4, '0.125 Parameter-Valued Distribution', fontsize=12, color='black')\n\n# Set the color of the legend\nax.legend(['ToT (0.675)'], loc='upper right', fontsize=12, shadow=True, fancybox=True)\n\n# Set the color of the grid\nax.grid(True)\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=12)\nax.set_ylabel('Performance', fontsize=12)\n\n# Set the color of the title\nax.set_title('Mini Crosswords Performance', fontsize=14)\n\n# Set the color of the axis\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the labels\nax.set_xlabel('Objective Value', fontsize=1"}
{"file": "dataset/ori_500/errorbar_8.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the plot\nlabels = ['BERT', 'RoBERTa', 'DistilBERT', 'XLNet', 'Electra', 'BART', 'Albert', 'DeBERTa', 'Llama2']\nground_truth_labels = [67.5, 64.8, 61.9, 60.2, 59.8, 59.7, 59.6, 59.5, 59.4]\nweak_labels = [66.8, 64.5, 61.4, 60.1, 59.7, 59.6, 59.5, 59.4, 59.3]\n\n# Create a bar chart with error bars\nfig, ax = plt.subplots(figsize=(10.0, 3.0))\nax.bar(labels, ground_truth_labels, yerr=0.2, color='r')\nax.bar(labels, weak_labels, yerr=0.2, color='b')\n\n# Add labels and title\nax.set_xlabel('Model')\nax.set_ylabel('Accuracy (%)')\nax.set_title('Ground-truth labels vs Weak labels')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for each category\ncategories = ['Computational Social Science and Social Media', 'Phonology, Morphology and Word Segmentation', 'Information Retrieval and Text Mining', 'Machine Learning for NLP', 'Information Extraction', 'Discourse and Pragmatics', 'Syntax: Tagging, Chinking and Parsing']\nvalues = [2.5, 2.75, 2.25, 2.5, 2.75, 1.75, 1.5]\n\n# Create a figure with a single subplot\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the x-axis limits\nax.set_xlim(-3.5, -2.5)\n\n# Set the y-axis limits\nax.set_ylim(-3.5, -2.5)\n\n# Set the x-axis tick labels\nax.set_xticks(np.arange(-3.5, -2.5, 0.5))\nax.set_xticklabels(['-3.5', '-3.25', '-3.0', '-2.75', '-2.5', '-2.25', '-2.0', '-1.75', '-1.50'])\n\n# Set the y-axis tick labels\nax.set_yticks(np.arange(-3.5, -2.5, 0.5))\nax.set_yticklabels(['-3.5', '-3.25', '-3.0', '-2.75', '-2.5', '-2.25', '-2.0', '-1.75', '-1.50'])\n\n# Set the title of the chart\nax.set_title('Your Chart Title Here')\n\n# Set the categories on the left side of the chart\nfor i, category in enumerate(categories):\n    ax.text(-4, -3.5 + i * 0.5, category)\n\n# Set the values on the right side of the chart\nfor i, value in enumerate(values):\n    ax.text(-2.5, -3.5 + i * 0.5, value)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/errorpoint_1.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the x-axis labels\nax.set_xticks([1, 2, 3, 4, 5])\nax.set_xticklabels(['Kashmir', 'Religion', 'Crime and Justice', 'CAA', 'Pulwama Balakot', 'Politics'])\n\n# Set the y-axis limits\nax.set_ylim(0, 0.2)\n\n# Plot the data\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\n\n# Add the mean value\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\n\n# Add the mean value\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\n\n# Add the mean value\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\n\n# Add the mean value\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\n\n# Add the mean value\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\n\n# Add the mean value\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\n\n# Add the mean value\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\n\n# Add the mean value\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\n\n# Add the mean value\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\n\n# Add the mean value\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\n\n# Add the mean value\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\n\n# Add the mean value\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\n\n# Add the mean value\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\n\n# Add the mean value\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\n\n# Add the mean value\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\n\n# Add the mean value\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\n\n# Add the mean value\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\n\n# Add the mean value\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\n\n# Add the mean value\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\n\n# Add the mean value\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\n\n# Add the mean value\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k--')\nax.plot([0.1, 0.1, 0.1, 0.1, 0.1, 0.1], 'k"}
{"file": "dataset/ori_500/errorpoint_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, axs = plt.subplots(2, 1, figsize=(6.0, 9.0))\n\n# First subplot\naxs[0].plot([0, 1], [15.49, 17.15], 'ro-', lw=2)\naxs[0].plot([0, 1], [16.03, 16.03], 'mo-', lw=2)\naxs[0].plot([0, 1], [15.45, 15.45], 'go-', lw=2)\naxs[0].plot([0, 1], [14.24, 14.24], 'bo-', lw=2)\naxs[0].plot([0, 1], [13.00, 13.00], 'ko-', lw=2)\naxs[0].plot([0, 1], [12.00, 12.00], 'ko-', lw=2)\naxs[0].plot([0, 1], [11.00, 11.00], 'ko-', lw=2)\naxs[0].plot([0, 1], [10.00, 10.00], 'ko-', lw=2)\naxs[0].plot([0, 1], [9.00, 9.00], 'ko-', lw=2)\naxs[0].plot([0, 1], [8.00, 8.00], 'ko-', lw=2)\naxs[0].plot([0, 1], [7.00, 7.00], 'ko-', lw=2)\naxs[0].plot([0, 1], [6.00, 6.00], 'ko-', lw=2)\naxs[0].plot([0, 1], [5.00, 5.00], 'ko-', lw=2)\naxs[0].plot([0, 1], [4.00, 4.00], 'ko-', lw=2)\naxs[0].plot([0, 1], [3.00, 3.00], 'ko-', lw=2)\naxs[0].plot([0, 1], [2.00, 2.00], 'ko-', lw=2)\naxs[0].plot([0, 1], [1.00, 1.00], 'ko-', lw=2)\naxs[0].plot([0, 1], [0.00, 0.00], 'ko-', lw=2)\naxs[0].set_title('Variable, Symmetric Error')\naxs[0].set_xlabel('x')\naxs[0].set_ylabel('y')\naxs[0].grid(True)\n\n# Second subplot\naxs[1].plot([0, 1], [19.38, 19.38], 'ro-', lw=2)\naxs[1].plot([0, 1], [23.92, 23.92], 'mo-', lw=2)\naxs[1].plot([0, 1], [18.83, 18.83], 'co-', lw=2)\naxs[1].plot([0, 1], [22.92, 22.92], 'bo-', lw=2)\naxs[1].plot([0, 1], [20.29, 20.29], 'go-', lw=2)\naxs[1].plot([0, 1], [17.50, 17.50], 'ko-', lw=2)\naxs[1].plot([0, 1], [15.00, 15.00], 'ko-', lw=2)\naxs[1].plot([0, 1], [13.00, 13.00], 'ko-', lw=2)\naxs[1].plot([0, 1], [11.00, 11.00], 'ko-', lw=2)\naxs[1].plot([0, 1], [9.00, 9.00], 'ko-', lw=2)\naxs[1].plot([0, 1], [7.00, 7.00], 'ko-', lw=2)\naxs[1].plot([0, 1], [5.00, 5.00], 'ko-', lw=2)\naxs[1].plot([0, 1], [3.00, 3.00], 'ko-', lw=2)\naxs[1].plot([0, 1], [1.00, 1.00], 'ko-', lw=2)\naxs[1].plot([0, 1], [0.00, 0.00], 'ko-', lw=2)\naxs[1].set_title('Variable, Symmetric Error')\naxs[1].set_xlabel('x')\naxs[1].set_ylabel('y')\naxs[1].grid(True)\n\n# Add a legend\nfig.legend(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O'], loc='upper right')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/errorpoint_2.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(0.15, 0.28)\n\n# Set the y-axis limits\nax.set_ylim(0, 0.3)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0.16, 0.29, 0.02))\n\n# Set the y-axis labels\nax.set_yticks([0.16, 0.18, 0.20, 0.22, 0.24, 0.26, 0.28])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['Politics', 'Religion', 'Kashmir', 'CAA', 'Pulwama-Balakot'])\n\n# Set the x-axis label\nax.set_xlabel('Incivility (Fraction of Videos)')\n\n# Set the y-axis label\nax.set_ylabel('Dataset Mean')\n\n# Add a vertical line at x=0.16\nax.axvline(x=0.16, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.2\nax.axhline(y=0.2, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.22\nax.axhline(y=0.22, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.24\nax.axhline(y=0.24, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.26\nax.axhline(y=0.26, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.28\nax.axhline(y=0.28, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.3\nax.axhline(y=0.3, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.32\nax.axhline(y=0.32, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.34\nax.axhline(y=0.34, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.36\nax.axhline(y=0.36, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.38\nax.axhline(y=0.38, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.4\nax.axhline(y=0.4, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.42\nax.axhline(y=0.42, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.44\nax.axhline(y=0.44, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.46\nax.axhline(y=0.46, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.48\nax.axhline(y=0.48, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.5\nax.axhline(y=0.5, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.52\nax.axhline(y=0.52, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.54\nax.axhline(y=0.54, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.56\nax.axhline(y=0.56, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.58\nax.axhline(y=0.58, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.6\nax.axhline(y=0.6, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.62\nax.axhline(y=0.62, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.64\nax.axhline(y=0.64, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.66\nax.axhline(y=0.66, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.68\nax.axhline(y=0.68, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.7\nax.axhline(y=0.7, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.72\nax.axhline(y=0.72, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.74\nax.axhline(y=0.74, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.76\nax.axhline(y=0.76, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.78\nax.axhline(y=0.78, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.8\nax.axhline(y=0.8, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.82\nax.axhline(y=0.82, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.84\nax.axhline(y=0.84, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.86\nax.axhline(y=0.86, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.88\nax.axhline(y=0.88, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.9\nax.axhline(y=0.9, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.92\nax.axhline(y=0.92, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.94\nax.axhline(y=0.94, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.96\nax.axhline(y=0.96, color='blue', linestyle='--')\n\n# Add a horizontal line at y=0.98\nax.axhline(y=0.98, color='blue', linestyle='--')\n\n# Add a horizontal line at y=1\nax.axhline(y=1, color='blue', linestyle='--')\n\n# Add a horizontal line at y=1.2\nax.axhline(y=1.2, color='blue', linestyle='--')\n\n# Add a horizontal line at y=1.4\nax.axhline(y=1.4, color='blue', linestyle='--')\n\n# Add a horizontal line at y=1.6\nax.axhline(y=1.6, color='blue', linestyle='--')\n\n# Add a horizontal line at y=1.8\nax.axhline(y=1.8, color='blue', linestyle='--')\n\n# Add a horizontal line at y=2\nax.axhline(y=2, color='blue', linestyle='--')\n\n# Add a horizontal line at y=2.2\nax.axhline(y=2.2, color='blue', linestyle='--')\n\n# Add a horizontal line at y=2.4\nax.axhline(y=2.4, color='blue', linestyle='--')\n\n# Add a horizontal line at y=2.6\nax.axhline(y=2.6, color='blue', linestyle='--')\n\n# Add a horizontal line at y=2.8\nax.axhline(y=2.8, color='blue', linestyle='--')\n\n# Add a horizontal line at y=3\nax.axhline(y=3, color='blue', linestyle='--')\n\n# Add a horizontal line at y=3.2\nax.axhline(y=3.2, color='blue', linestyle='--')\n\n# Add a horizontal line at y=3.4\nax.axhline(y=3.4, color='blue', linestyle='--')\n\n# Add a horizontal line at y=3.6\nax.axhline(y=3.6, color='blue', linestyle='--')\n\n# Add a horizontal line at y=3.8\nax.axhline(y=3.8, color='blue', linestyle='--')\n\n# Add a horizontal line at y=4\nax.axhline(y=4, color='blue', linestyle='--')\n\n# Add a horizontal line at y=4.2\nax.axhline(y=4.2, color='blue', linestyle='--')\n\n# Add a horizontal line at y=4.4\nax.axhline(y=4.4, color='blue', linestyle='--')\n\n# Add a horizontal line at y=4.6\nax.axhline(y=4.6, color='blue', linestyle='--')\n\n# Add a horizontal line at y=4.8\nax.axhline(y=4.8, color='blue', linestyle='--')\n\n# Add a horizontal line at y=5\nax.axhline(y=5, color='blue', linestyle='--')\n\n# Add a horizontal line at y=5.2\nax.axhline(y=5.2, color='blue', linestyle='--')\n\n# Add a horizontal line at y=5.4\nax.axhline(y=5.4, color='blue', linestyle='--')\n\n# Add a horizontal line at y=5.6\nax.axhline(y=5.6, color='blue', linestyle='--')\n\n# Add a horizontal line at y=5.8\nax.axhline(y=5.8, color='blue', linestyle='--')\n\n# Add a horizontal line at y=6\nax.axhline(y=6, color='blue', linestyle='--')\n\n# Add a horizontal line at y=6.2\nax.axhline(y=6.2, color='blue', linestyle='--')\n\n# Add a horizontal line at y=6.4\nax.axhline(y=6.4, color='blue', linestyle='--')\n\n# Add a horizontal line at y=6.6\nax.axhline(y=6.6, color='blue', linestyle='--')\n\n# Add a horizontal line at y=6.8\nax.axhline(y=6.8, color='blue', linestyle='--')\n\n# Add a horizontal line at y=7\nax.axhline(y=7, color='blue', linestyle='--')\n\n# Add a horizontal line at y=7.2\nax.axhline(y=7.2, color='blue', linestyle='--')\n\n# Add a horizontal line at y=7.4\nax.axhline(y=7.4, color='blue', linestyle='--')\n\n# Add a horizontal line at y=7.6\nax.axhline(y=7.6, color='blue', linestyle='--')\n\n# Add a horizontal line at y=7.8\nax.axhline(y=7.8, color='blue', linestyle='--')\n\n# Add a horizontal line at y=8\nax.axhline(y=8, color='blue', linestyle='--')\n\n# Add a horizontal line at y=8.2\nax.axhline(y=8.2, color='blue', linestyle='--')\n\n# Add a horizontal line at y=8.4\nax.axhline(y=8.4, color='blue', linestyle='--')\n\n# Add a horizontal line at y=8.6\nax.axhline(y=8.6, color='blue', linestyle='--')\n\n# Add a horizontal line at y=8.8\nax.axhline(y=8.8, color='blue', linestyle='--')\n\n# Add a horizontal line at y=9\nax.axhline(y=9, color='blue', linestyle='--')\n\n# Add a horizontal line at y=9.2\nax.axhline(y=9.2, color='blue', linestyle='--')\n\n# Add a horizontal line at y=9.4\nax.axhline(y=9.4, color='blue', linestyle='--')\n\n# Add a horizontal line at y=9.6\nax.axhline(y=9.6, color='blue', linestyle='--')\n\n# Add a horizontal line at y=9.8\nax.axhline(y=9.8, color='blue', linestyle='--')\n\n# Add a horizontal line at y=10\nax.axhline(y=10, color='blue', linestyle='--')\n\n# Add a horizontal line at y=10.2\nax.axhline(y=10.2, color='blue', linestyle='--')\n\n# Add a horizontal line at y=10.4\nax.axhline(y=10.4, color='blue', linestyle='--')\n\n# Add a horizontal line at y=10.6\nax.axhline(y=10.6, color='blue', linestyle='--')\n\n# Add a horizontal line at y=10.8\nax.axhline(y=10.8, color='blue', linestyle='--')\n\n# Add a horizontal line at y=11\nax.axhline(y=11, color='blue', linestyle='--')\n\n# Add a horizontal line at y=11.2\nax.axhline(y=11.2, color='blue', linestyle='--')\n\n# Add a horizontal line at y=11.4\nax.axhline(y=11.4, color='blue', linestyle='--')\n\n# Add a horizontal line at y=11.6\nax.axhline(y=11.6, color='blue', linestyle='--')\n\n# Add a horizontal line at y=11.8\nax.axhline(y=11.8, color='blue', linestyle='--')\n\n# Add a horizontal line at y=12\nax.axhline(y=12, color='blue', linestyle='--')\n\n# Add a horizontal line at y=12.2\nax.axhline(y=12.2, color='blue', linestyle='--')\n\n# Add a horizontal line at y=12.4\nax.axhline(y=12.4, color='blue', linestyle='--')\n\n# Add a horizontal line at y=12.6\nax.axhline(y=12.6, color='blue', linestyle='--')\n\n# Add a horizontal line at y=12.8\nax.axhline(y=12.8, color='blue', linestyle='--')\n\n# Add a horizontal line at y=13\nax.axhline(y=13, color='blue', linestyle='--')\n\n# Add a horizontal line at y=13.2\nax.axhline(y=13.2, color='blue', linestyle='--')\n\n# Add a horizontal line at y=13.4\nax.axhline(y=13.4, color='blue', linestyle='--')\n\n# Add a horizontal line at y=13.6\nax.axhline(y=13.6, color='blue', linestyle='--')\n\n# Add a horizontal line at y=13.8\nax.axhline(y=13.8, color='blue', linestyle='--')\n\n# Add a horizontal line at y=14\nax.axhline(y=14, color='blue', linestyle='--')\n\n# Add a horizontal line at y=14.2\nax.axhline(y=14.2, color='blue', linestyle='--')\n\n# Add a horizontal line at y=14.4\nax.axhline(y=14.4, color='blue', linestyle='--')\n\n# Add a horizontal line at y=14.6\nax.axhline(y=14.6, color='blue', linestyle='--')\n\n# Add a horizontal line at y=14.8\nax.axhline(y=14.8, color='blue', linestyle='--')\n\n# Add a horizontal line at y=15\nax.axhline(y=15, color='blue', linestyle='--')\n\n# Add a horizontal line at y=15.2\nax.axhline(y=15.2, color='blue', linestyle='--')\n\n# Add a horizontal line at y=15.4\nax.axhline(y=15.4, color='blue', linestyle='--')\n\n# Add a horizontal line at y=15.6\nax.axhline(y=15.6, color='blue', linestyle='--')\n\n# Add a horizontal line at y=15.8\nax.axhline(y=15.8, color='blue', linestyle='--')\n\n# Add a horizontal line at y=16\nax.axhline(y=16, color='blue', linestyle='--')\n\n# Add a horizontal line at y=16.2\nax.axhline(y=16.2, color='blue', linestyle='--')\n\n# Add a horizontal line at y=16.4\nax.axhline(y=16.4, color='blue', linestyle='--')\n\n# Add a horizontal line at y=16.6\nax.axhline(y=16.6, color='blue', linestyle='--')\n\n# Add a horizontal line at y=16.8\nax.axhline(y=16.8, color='blue', linestyle='--')\n\n# Add a horizontal line at y=17\nax.axhline(y=17, color='blue', linestyle='--')\n\n# Add a horizontal line at y=17.2\nax.axhline(y=17.2, color='blue', linestyle='--')\n\n# Add a horizontal line at y=17.4\nax.axhline(y=17.4, color='blue', linestyle='--')\n\n# Add a horizontal line at y=17.6\nax.axhline(y=17.6, color='blue', linestyle='--')\n\n# Add a horizontal line at y=17.8\nax.axhline(y=17.8, color='blue', linestyle='--')\n\n# Add a horizontal line"}
{"file": "dataset/ori_500/errorpoint_3.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the x-axis limits\nax.set_xlim(-19.6, -19.0)\n\n# Set the y-axis limits\nax.set_ylim(-20, 20)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(-19.6, -18.9, 0.1))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(-20, 20, 1))\n\n# Set the x-axis labels\nax.set_xticklabels(['-19.6', '-19.5', '-19.4', '-19.3', '-19.2'])\n\n# Set the y-axis labels\nax.set_yticklabels(['This work*', 'Shah et al.', 'Shah et al.', 'Banerjee et al.', 'Favale et al.', 'Favale et al.', 'Gomez-Valent', 'Gomez-Valent', 'Benisty et al.', 'Benisty et al.'])\n\n# Set the title of the plot\nax.set_title('Figure 1')\n\n# Set the color of the background\nax.set_facecolor('lightgrey')\n\n# Set the color of the grid\nax.grid(color='grey', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', width=1)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', width=1)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', length=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', length=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', pad=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', pad=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', rotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', rotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', direction='in')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', direction='in')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelrotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelrotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelleft=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelleft=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelright=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelright=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labeltop=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labeltop=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelbottom=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelbottom=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', width=1)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', width=1)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', length=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', length=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', pad=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', pad=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', rotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', rotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', direction='in')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', direction='in')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelrotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelrotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelleft=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelleft=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelright=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelright=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labeltop=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labeltop=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelbottom=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelbottom=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', width=1)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', width=1)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', length=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', length=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', pad=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', pad=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', rotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', rotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', direction='in')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', direction='in')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelrotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelrotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelleft=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelleft=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelright=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelright=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labeltop=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labeltop=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelbottom=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelbottom=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', width=1)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', width=1)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', length=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', length=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', pad=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', pad=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', rotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', rotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', direction='in')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', direction='in')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelrotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelrotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelleft=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelleft=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelright=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelright=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labeltop=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labeltop=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelbottom=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelbottom=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', width=1)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', width=1)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', length=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', length=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', pad=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', pad=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', rotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', rotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', direction='in')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', direction='in')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelrotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelrotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelleft=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelleft=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelright=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelright=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labeltop=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labeltop=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelbottom=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelbottom=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', width=1)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', width=1)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', length=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', length=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', pad=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', pad=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', rotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', rotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', direction='in')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', direction='in')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelrotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelrotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelleft=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelleft=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelright=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelright=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labeltop=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labeltop=False)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelbottom=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelbottom=True)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', width=1)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', width=1)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', length=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', length=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', pad=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', pad=5)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', rotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', rotation=0)\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='major', direction='in')\n\n# Set the color of the tick parameters\nax.tick_params(axis='both', which='minor', direction='in')\n\n# Set"}
{"file": "dataset/ori_500/errorpoint_4.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the x-axis labels\nax.set_xticks(np.arange(5))\nax.set_xticklabels(['Education', 'Religion', 'Bollywood', 'Crime and Justice', 'Farmers Protest', 'Issue Politics'])\n\n# Set the y-axis limits\nax.set_ylim(4, 16)\n\n# Set the y-axis label\nax.set_ylabel('Number of speakers')\n\n# Set the x-axis label\nax.set_xlabel('Topic')\n\n# Set the title\nax.set_title('Dataset unique shouter count mean')\n\n# Set the legend\nax.legend()\n\n# Set the grid\nax.grid(True)\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='minor', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8', '10', '12', '14', '16'])\n\n# Set the tick marks\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the tick labels\nax.set_yticklabels(['4', '6', '8"}
{"file": "dataset/ori_500/errorpoint_5.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis labels\nax.set_xticks([1, 2, 3, 4])\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis label\nax.set_ylabel('Female Face presence (Fraction of videos)')\n\n# Set the title\nax.set_title('Female Face presence (Fraction of videos)')\n\n# Set the x-axis limits\nax.set_xlim(0, 5)\n\n# Set the y-axis limits\nax.set_ylim(0, 0.3)\n\n# Set the x-axis tick marks\nax.set_xticks(np.arange(1, 5, 1))\n\n# Set the y-axis tick marks\nax.set_yticks(np.arange(0, 0.3, 0.05))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR', 'COVID/Lockdown', 'SPORTS', 'CHINA'])\n\n# Set the y-axis tick mark labels\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20', '0.25', '0.30'])\n\n# Set the x-axis tick mark labels\nax.set_xticklabels(['KASHMIR',"}
{"file": "dataset/ori_500/errorpoint_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Define the data for the plot\nx = np.array([0, 1, 2, 3, 4, 5])\ny = np.array([0.0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0])\n\n# Plot the data\nax.errorbar(x, y, fmt='o', ecolor='black')\n\n# Add error bars\nax.errorbar(x, y, yerr=0.1, fmt='-o', ecolor='black')\n\n# Add labels\nax.set_xlabel('X-axis')\nax.set_ylabel('Y-axis')\nax.set_title('Errorbar upper and lower limits')\n\n# Add legend\nax.legend(['standard', 'upper limits', 'lower limits', 'upper and lower limits', 'random'])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/errorpoint_7.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create the figure and axis objects\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Generate the data for the first plot\nx = np.linspace(0, 3.5, 10)\ny = np.random.normal(size=10)\nax.plot(x, y, 'o')\n\n# Generate the data for the second plot\nx2 = np.linspace(0, 3.5, 10)\ny2 = np.random.normal(size=10)\nax2 = fig.add_subplot(122)\nax2.plot(x2, y2, 'o')\n\nplt.show()"}
{"file": "dataset/ori_500/errorpoint_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 7.0))\n\n# Set the title of the plot\nax.set_title('variable, asymmetric error')\n\n# Set the y-axis limits\nax.set_ylim(15, 35)\n\n# Set the x-axis limits\nax.set_xlim(0, 10)\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(15, 35, 5))\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 11, 2))\n\n# Set the y-axis labels\nax.set_yticklabels(['+3.587', '+3.704', '+3.777', '+3.923', '+4.261', '+4.498', '+4.610', '+4.777', '+4.923', '+5.000', '+5.221', '+5.289', '+5.334', '+5.444', '+5.498', '+5.610', '+5.704', '+5.777', '+5.874', '+5.923'])\n\n# Set the x-axis labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the y-axis label\nax.set_ylabel('variable, asymmetric error')\n\n# Set the x-axis label\nax.set_xlabel('variable, asymmetric error')\n\n# Set the y-axis grid\nax.yaxis.grid(True)\n\n# Set the x-axis grid\nax.xaxis.grid(True)\n\n# Set the y-axis tick color\nax.tick_params(axis='y', colors='green')\n\n# Set the x-axis tick color\nax.tick_params(axis='x', colors='green')\n\n# Set the y-axis tick label color\nax.tick_params(axis='y', labelcolor='green')\n\n# Set the x-axis tick label color\nax.tick_params(axis='x', labelcolor='green')\n\n# Set the y-axis tick label rotation\nax.tick_params(axis='y', labelrotation=45)\n\n# Set the x-axis tick label rotation\nax.tick_params(axis='x', labelrotation=45)\n\n# Set the y-axis tick label size\nax.tick_params(axis='y', labelsize=10)\n\n# Set the x-axis tick label size\nax.tick_params(axis='x', labelsize=10)\n\n# Set the y-axis tick label font\nax.tick_params(axis='y', labelfont='sans-serif')\n\n# Set the x-axis tick label font\nax.tick_params(axis='x', labelfont='sans-serif')\n\n# Set the y-axis tick label style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label color map\nax.tick_params(axis='y', labelcmap='Greens')\n\n# Set the x-axis tick label color map\nax.tick_params(axis='x', labelcmap='Greens')\n\n# Set the y-axis tick label alpha\nax.tick_params(axis='y', labelalpha=0.5)\n\n# Set the x-axis tick label alpha\nax.tick_params(axis='x', labelalpha=0.5)\n\n# Set the y-axis tick label rotation mode\nax.tick_params(axis='y', labelrotation_mode='anchor')\n\n# Set the x-axis tick label rotation mode\nax.tick_params(axis='x', labelrotation_mode='anchor')\n\n# Set the y-axis tick label vertical alignment\nax.tick_params(axis='y', labelverticalalignment='center')\n\n# Set the x-axis tick label vertical alignment\nax.tick_params(axis='x', labelverticalalignment='center')\n\n# Set the y-axis tick label horizontal alignment\nax.tick_params(axis='y', labelhorizontalalignment='right')\n\n# Set the x-axis tick label horizontal alignment\nax.tick_params(axis='x', labelhorizontalalignment='right')\n\n# Set the y-axis tick label background color\nax.tick_params(axis='y', labelbackgroundcolor='yellow')\n\n# Set the x-axis tick label background color\nax.tick_params(axis='x', labelbackgroundcolor='yellow')\n\n# Set the y-axis tick label border color\nax.tick_params(axis='y', labelbordercolor='green')\n\n# Set the x-axis tick label border color\nax.tick_params(axis='x', labelbordercolor='green')\n\n# Set the y-axis tick label border width\nax.tick_params(axis='y', labelborderwidth=2)\n\n# Set the x-axis tick label border width\nax.tick_params(axis='x', labelborderwidth=2)\n\n# Set the y-axis tick label border style\nax.tick_params(axis='y', labelborderstyle='dashed')\n\n# Set the x-axis tick label border style\nax.tick_params(axis='x', labelborderstyle='dashed')\n\n# Set the y-axis tick label border capsize\nax.tick_params(axis='y', labelbordercapsize=5)\n\n# Set the x-axis tick label border capsize\nax.tick_params(axis='x', labelbordercapsize=5)\n\n# Set the y-axis tick label border joinstyle\nax.tick_params(axis='y', labelborderjoinstyle='round')\n\n# Set the x-axis tick label border joinstyle\nax.tick_params(axis='x', labelborderjoinstyle='round')\n\n# Set the y-axis tick label border miterlimit\nax.tick_params(axis='y', labelbordermiterlimit=2)\n\n# Set the x-axis tick label border miterlimit\nax.tick_params(axis='x', labelbordermiterlimit=2)\n\n# Set the y-axis tick label border linestyle\nax.tick_params(axis='y', labelborderlinestyle='-')\n\n# Set the x-axis tick label border linestyle\nax.tick_params(axis='x', labelborderlinestyle='-')\n\n# Set the y-axis tick label border linewidth\nax.tick_params(axis='y', labelborderlinewidth=2)\n\n# Set the x-axis tick label border linewidth\nax.tick_params(axis='x', labelborderlinewidth=2)\n\n# Set the y-axis tick label border marker\nax.tick_params(axis='y', labelbordermarker='o')\n\n# Set the x-axis tick label border marker\nax.tick_params(axis='x', labelbordermarker='o')\n\n# Set the y-axis tick label border markersize\nax.tick_params(axis='y', labelbordermarkersize=5)\n\n# Set the x-axis tick label border markersize\nax.tick_params(axis='x', labelbordermarkersize=5)\n\n# Set the y-axis tick label border markeredgecolor\nax.tick_params(axis='y', labelbordermarkeredgecolor='green')\n\n# Set the x-axis tick label border markeredgecolor\nax.tick_params(axis='x', labelbordermarkeredgecolor='green')\n\n# Set the y-axis tick label border markerfacecolor\nax.tick_params(axis='y', labelbordermarkerfacecolor='green')\n\n# Set the x-axis tick label border markerfacecolor\nax.tick_params(axis='x', labelbordermarkerfacecolor='green')\n\n# Set the y-axis tick label border markeredgewidth\nax.tick_params(axis='y', labelbordermarkeredgewidth=2)\n\n# Set the x-axis tick label border markeredgewidth\nax.tick_params(axis='x', labelbordermarkeredgewidth=2)\n\n# Set the y-axis tick label border markerlinecap\nax.tick_params(axis='y', labelbordermarkerlinecap='round')\n\n# Set the x-axis tick label border markerlinecap\nax.tick_params(axis='x', labelbordermarkerlinecap='round')\n\n# Set the y-axis tick label border markerlinejoin\nax.tick_params(axis='y', labelbordermarkerlinejoin='round')\n\n# Set the x-axis tick label border markerlinejoin\nax.tick_params(axis='x', labelbordermarkerlinejoin='round')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='x', labelbordermarkerlinewidth=2)\n\n# Set the y-axis tick label border markerlinestyle\nax.tick_params(axis='y', labelbordermarkerlinestyle='-')\n\n# Set the x-axis tick label border markerlinestyle\nax.tick_params(axis='x', labelbordermarkerlinestyle='-')\n\n# Set the y-axis tick label border markerlinewidth\nax.tick_params(axis='y', labelbordermarkerlinewidth=2)\n\n# Set the x-axis tick label border markerlinewidth\nax.tick_params(axis='"}
{"file": "dataset/ori_500/errorpoint_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 7.0))\n\n# Set the title of the plot\nax.set_title('variable, asymmetric error')\n\n# Set the y-axis limits\nax.set_ylim(-30, 20)\n\n# Set the x-axis limits\nax.set_xlim(0, 20)\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(-30, 20, 2))\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 20, 5))\n\n# Set the y-axis labels\nax.set_yticklabels(['-30', '-28', '-26', '-24', '-22', '-20', '-18', '-16', '-14', '-12', '-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10', '12', '14', '16', '18', '20'])\n\n# Set the x-axis labels\nax.set_xticklabels(['0', '5', '10', '15', '20'])\n\n# Set the y-axis grid\nax.yaxis.grid(True)\n\n# Set the x-axis grid\nax.xaxis.grid(True)\n\n# Set the y-axis tick color\nax.tick_params(axis='y', colors='black')\n\n# Set the x-axis tick color\nax.tick_params(axis='x', colors='black')\n\n# Set the y-axis tick label color\nax.tick_params(axis='y', labelcolor='black')\n\n# Set the x-axis tick label color\nax.tick_params(axis='x', labelcolor='black')\n\n# Set the y-axis tick label rotation\nax.tick_params(axis='y', labelrotation=0)\n\n# Set the x-axis tick label rotation\nax.tick_params(axis='x', labelrotation=0)\n\n# Set the y-axis tick label size\nax.tick_params(axis='y', labelsize=10)\n\n# Set the x-axis tick label size\nax.tick_params(axis='x', labelsize=10)\n\n# Set the y-axis tick label font\nax.tick_params(axis='y', labelfont='Arial')\n\n# Set the x-axis tick label font\nax.tick_params(axis='x', labelfont='Arial')\n\n# Set the y-axis tick label style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label alignment\nax.tick_params(axis='y', labelalign='center')\n\n# Set the x-axis tick label alignment\nax.tick_params(axis='x', labelalign='center')\n\n# Set the y-axis tick label padding\nax.tick_params(axis='y', labelpad=10)\n\n# Set the x-axis tick label padding\nax.tick_params(axis='x', labelpad=10)\n\n# Set the y-axis tick label margin\nax.tick_params(axis='y', labelmargin=10)\n\n# Set the x-axis tick label margin\nax.tick_params(axis='x', labelmargin=10)\n\n# Set the y-axis tick label border\nax.tick_params(axis='y', labelborder='solid')\n\n# Set the x-axis tick label border\nax.tick_params(axis='x', labelborder='solid')\n\n# Set the y-axis tick label background\nax.tick_params(axis='y', labelbackground='white')\n\n# Set the x-axis tick label background\nax.tick_params(axis='x', labelbackground='white')\n\n# Set the y-axis tick label foreground\nax.tick_params(axis='y', labelforeground='black')\n\n# Set the x-axis tick label foreground\nax.tick_params(axis='x', labelforeground='black')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='ultra-condensed')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='sans-serif')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='small-caps')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=10)\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=10)\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label alignment\nax.tick_params(axis='y', labelalign='center')\n\n# Set the x-axis tick label alignment\nax.tick_params(axis='x', labelalign='center')\n\n# Set the y-axis tick label padding\nax.tick_params(axis='y', labelpad=10)\n\n# Set the x-axis tick label padding\nax.tick_params(axis='x', labelpad=10)\n\n# Set the y-axis tick label margin\nax.tick_params(axis='y', labelmargin=10)\n\n# Set the x-axis tick label margin\nax.tick_params(axis='x', labelmargin=10)\n\n# Set the y-axis tick label border\nax.tick_params(axis='y', labelborder='solid')\n\n# Set the x-axis tick label border\nax.tick_params(axis='x', labelborder='solid')\n\n# Set the y-axis tick label background\nax.tick_params(axis='y', labelbackground='white')\n\n# Set the x-axis tick label background\nax.tick_params(axis='x', labelbackground='white')\n\n# Set the y-axis tick label foreground\nax.tick_params(axis='y', labelforeground='black')\n\n# Set the x-axis tick label foreground\nax.tick_params(axis='x', labelforeground='black')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='ultra-condensed')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='sans-serif')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='small-caps')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=10)\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=10)\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label alignment\nax.tick_params(axis='y', labelalign='center')\n\n# Set the x-axis tick label alignment\nax.tick_params(axis='x', labelalign='center')\n\n# Set the y-axis tick label padding\nax.tick_params(axis='y', labelpad=10)\n\n# Set the x-axis tick label padding\nax.tick_params(axis='x', labelpad=10)\n\n# Set the y-axis tick label margin\nax.tick_params(axis='y', labelmargin=10)\n\n# Set the x-axis tick label margin\nax.tick_params(axis='x', labelmargin=10)\n\n# Set the y-axis tick label border\nax.tick_params(axis='y', labelborder='solid')\n\n# Set the x-axis tick label border\nax.tick_params(axis='x', labelborder='solid')\n\n# Set the y-axis tick label background\nax.tick_params(axis='y', labelbackground='white')\n\n# Set the x-axis tick label background\nax.tick_params(axis='x', labelbackground='white')\n\n# Set the y-axis tick label foreground\nax.tick_params(axis='y', labelforeground='black')\n\n# Set the x-axis tick label foreground\nax.tick_params(axis='x', labelforeground='black')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='ultra-condensed')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='sans-serif')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='small-caps')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=10)\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=10)\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label alignment\nax.tick_params(axis='y', labelalign='center')\n\n# Set the x-axis tick label alignment\nax.tick_params(axis='x', labelalign='center')\n\n# Set the y-axis tick label padding\nax.tick_params(axis='y', labelpad=10)\n\n# Set the x-axis tick label padding\nax.tick_params(axis='x', labelpad=10)\n\n# Set the y-axis tick label margin\nax.tick_params(axis='y', labelmargin=10)\n\n# Set the x-axis tick label margin\nax.tick_params(axis='x', labelmargin=10)\n\n# Set the y-axis tick label border\nax.tick_params(axis='y', labelborder='solid')\n\n# Set the x-axis tick label border\nax.tick_params(axis='x', labelborder='solid')\n\n# Set the y-axis tick label background\nax.tick_params(axis='y', labelbackground='white')\n\n# Set the x-axis tick label background\nax.tick_params(axis='x', labelbackground='white')\n\n# Set the y-axis tick label foreground\nax.tick_params(axis='y', labelforeground='black')\n\n# Set the x-axis tick label foreground\nax.tick_params(axis='x', labelforeground='black')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='ultra-condensed')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='sans-serif')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='small-caps')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=10)\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=10)\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label alignment\nax.tick_params(axis='y', labelalign='center')\n\n# Set the x-axis tick label alignment\nax.tick_params(axis='x', labelalign='center')\n\n# Set the y-axis tick label padding\nax.tick_params(axis='y', labelpad=10)\n\n# Set the x-axis tick label padding\nax.tick_params(axis='x', labelpad=10)\n\n# Set the y-axis tick label margin\nax.tick_params(axis='y', labelmargin=10)\n\n# Set the x-axis tick label margin\nax.tick_params(axis='x', labelmargin=10)\n\n# Set the y-axis tick label border\nax.tick_params(axis='y', labelborder='solid')\n\n# Set the x-axis tick label border\nax.tick_params(axis='x', labelborder='solid')\n\n# Set the y-axis tick label background\nax.tick_params(axis='y', labelbackground='white')\n\n# Set the x-axis tick label background\nax.tick_params(axis='x', labelbackground='white')\n\n# Set the y-axis tick label foreground\nax.tick_params(axis='y', labelforeground='black')\n\n# Set the x-axis tick label foreground\nax.tick_params(axis='x', labelforeground='black')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='ultra-condensed')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='sans-serif')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='small-caps')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=10)\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=10)\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label alignment\nax.tick_params(axis='y', labelalign='center')\n\n# Set the x-axis tick label alignment\nax.tick_params(axis='x', labelalign='center')\n\n# Set the y-axis tick label padding\nax.tick_params(axis='y', labelpad=10)\n\n# Set the x-axis tick label padding\nax.tick_params(axis='x', labelpad=10)\n\n# Set the y-axis tick label margin\nax.tick_params(axis='y', labelmargin=10)\n\n# Set the x-axis tick label margin\nax.tick_params(axis='x', labelmargin=10)\n\n# Set the y-axis tick label border\nax.tick_params(axis='y', labelborder='solid')\n\n# Set the x-axis tick label border\nax.tick_params(axis='x', labelborder='solid')\n\n# Set the y-axis tick label background\nax.tick_params(axis='y', labelbackground='white')\n\n# Set the x-axis tick label background\nax.tick_params(axis='x', labelbackground='white')\n\n# Set the y-axis tick label foreground\nax.tick_params(axis='y', labelforeground='black')\n\n# Set the x-axis tick label foreground\nax.tick_params(axis='x', labelforeground='black')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='ultra-condensed')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='sans-serif')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='small-caps')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=10)\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=10)\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label alignment\nax.tick_params(axis='y', labelalign='center')\n\n# Set the x-axis tick label alignment\nax.tick_params(axis='x', labelalign='center')\n\n# Set the y-axis tick label padding\nax.tick_params(axis='y', labelpad=10)\n\n# Set the x-axis tick label padding\nax.tick_params(axis='x', labelpad=10)\n\n# Set the y-axis tick label margin\nax.tick_params(axis='y', labelmargin=10)\n\n# Set the x-axis tick label margin\nax.tick_params(axis='x', labelmargin=10)\n\n# Set the y-axis tick label border\nax.tick_params(axis='y', labelborder='solid')\n\n# Set the x-axis tick label border\nax.tick_params(axis='x', labelborder='solid')\n\n# Set the y-axis tick label background\nax.tick_params(axis='y', labelbackground='white')\n\n# Set the x-axis tick label background\nax.tick_params(axis='x', labelbackground='white')\n\n# Set the y-axis tick label foreground\nax.tick_params(axis='y', labelforeground='black')\n\n# Set the x-axis tick label foreground\nax.tick_params(axis='x', labelforeground='black')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n#"}
{"file": "dataset/ori_500/graph_1.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Define the vertices of the polygon\nvertices = np.array([[0, 0], [1, 0], [1, 1], [0, 1], [-1, 0], [-1, -1], [0, -1]])\n\n# Draw the polygon\nax.plot(vertices[:, 0], vertices[:, 1], 'k-')\n\n# Draw the vertices\nfor vertex in vertices:\n    ax.plot(vertex[0], vertex[1], 'ko')\n\n# Draw the edges\nedges = np.array([[0, 1], [1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 0]])\nfor edge in edges:\n    ax.plot(vertices[edge, 0], vertices[edge, 1], 'k-')\n\n# Draw the labels\nlabels = ['0', '1', '0', '1', '0', '1', '0']\nfor i, label in enumerate(labels):\n    ax.text(vertices[i, 0], vertices[i, 1], label, ha='center', va='center')\n\n# Set the aspect ratio to be equal\nax.set_aspect('equal')\n\nplt.show()"}
{"file": "dataset/ori_500/graph_2.pdf", "response": "import matplotlib.pyplot as plt\nimport networkx as nx\n\n# Create a graph\nG = nx.Graph()\n\n# Add nodes\nfor i in range(100):\n    G.add_node(i)\n\n# Add edges\nfor i in range(100):\n    for j in range(i+1, 100):\n        if i % 2 == 0:\n            G.add_edge(i, j, color='blue')\n        else:\n            G.add_edge(i, j, color='gray')\n\n# Draw the graph\npos = nx.spring_layout(G)\nnx.draw_networkx_nodes(G, pos, node_color='pink', node_size=50)\nedges = G.edges()\ncolors = [G[u][v]['color'] for u,v in edges]\nnx.draw_networkx_edges(G, pos, edgelist=edges, edge_color=colors)\nplt.show()"}
{"file": "dataset/ori_500/graph_3.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Define the vertices of the polygon\nvertices = np.array([[0, 0], [1, 0], [1, 1], [0, 1]])\n\n# Define the number of sides of the polygon\nn_sides = len(vertices)\n\n# Define the radius of the circle\nr = 1\n\n# Define the angle between each vertex\ntheta = 2 * np.pi / n_sides\n\n# Define the coordinates of the vertices\nx = r * np.cos(np.arange(n_sides) * theta)\ny = r * np.sin(np.arange(n_sides) * theta)\n\n# Plot the vertices\nfor i in range(n_sides):\n    ax.plot(x[i], y[i], 'o', color='yellow')\n\n# Plot the edges\nfor i in range(n_sides):\n    ax.plot([x[i], x[(i + 1) % n_sides]], [y[i], y[(i + 1) % n_sides]], color='black')\n\n# Set the limits of the plot\nax.set_xlim(-1.5, 1.5)\nax.set_ylim(-1.5, 1.5)\n\nplt.show()"}
{"file": "dataset/ori_500/graph_4.pdf", "response": "import matplotlib.pyplot as plt\nimport networkx as nx\n\n# Create a graph\nG = nx.Graph()\n\n# Add nodes\nG.add_node(0, pos=(0, 0))\nG.add_node(1, pos=(1, 0))\nG.add_node(2, pos=(0, 1))\nG.add_node(3, pos=(1, 1))\nG.add_node(4, pos=(0.5, 1.5))\n\n# Add edges\nG.add_edge(0, 1)\nG.add_edge(0, 2)\nG.add_edge(0, 3)\nG.add_edge(0, 4)\nG.add_edge(1, 2)\nG.add_edge(1, 3)\nG.add_edge(1, 4)\nG.add_edge(2, 3)\nG.add_edge(2, 4)\nG.add_edge(3, 4)\n\n# Draw the graph\npos = nx.get_node_attributes(G, 'pos')\nnx.draw_networkx_nodes(G, pos, node_color='palevioletred', node_size=700)\nnx.draw_networkx_edges(G, pos, edge_color='gray')\nplt.axis('off')\nplt.show()"}
{"file": "dataset/ori_500/graph_5.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Draw circle\ncircle = plt.Circle((0.5, 0.5), 0.4, color='orange')\nax.add_artist(circle)\n\n# Draw triangle\ntriangle = plt.Polygon([[0.2, 0.2], [0.3, 0.7], [0.8, 0.3]], closed=True)\nax.add_patch(triangle)\n\n# Draw rectangle\nrectangle = plt.Rectangle((0.2, 0.2), 0.6, 0.6)\nax.add_patch(rectangle)\n\n# Draw ellipse\nellipse = plt.Ellipse((0.5, 0.5), 0.4, 0.2, color='orange')\nax.add_artist(ellipse)\n\n# Draw arrow\narrow = plt.Arrow(0.5, 0.5, 0.2, 0.2, width=0.05, head_width=0.1, head_length=0.1)\nax.add_patch(arrow)\n\n# Draw text\ntext = plt.Text(0.5, 0.5, '0', ha='center', va='center')\nax.add_artist(text)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Model Performance')\n\n# Define the labels for each column\nlabels = ['CoreNLP', 'Stanza', 'Biaffine', 'StackPointer', 'TowerParse']\n\n# Define the data for each column\ndata = [\n    [0.61, 0.74, 0.70, 0.70, 0.57],\n    [0.69, 0.74, 0.64, 0.67, 0.45],\n    [0.69, 0.77, 0.88, 0.62, 0.62],\n    [0.64, 0.72, 0.88, 0.54, 0.62],\n    [0.67, 0.69, 0.67, 0.45, 0.57]\n]\n\n# Define the colors for each column\ncolors = [\n    '#FFA07A', '#FFD700', '#FFA07A', '#FFD700', '#FFA07A'\n]\n\n# Plot the data\nfor i in range(len(labels)):\n    ax.barh(labels[i], data[i], color=colors[i])\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(-0.5, len(labels) - 0.5)\n\n# Set the x-axis tick labels\nax.set_xticks(np.arange(0, 1.1, 0.1))\nax.set_xticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1.0'])\n\n# Set the y-axis tick labels\nax.set_yticks(np.arange(-0.5, len(labels), 1))\nax.set_yticklabels(labels)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the color map\ncmap = plt.get_cmap('viridis')\n\n# Create a color bar\ncbar = fig.colorbar(plt.cm.ScalarMappable(cmap=cmap), ax=ax, orientation='vertical', fraction=0.046, pad=0.04)\n\n# Set the color bar limits\ncbar.set_clim(0, 100)\n\n# Set the color bar tick labels\ncbar.set_ticklabels(['0.1', '1', '10', '100'])\n\n# Set the color bar label\ncbar.set_label('Percentage')\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(['0.1', '1', '10', '100'], rotation=270)\n\n# Set the color bar orientation\ncbar"}
{"file": "dataset/ori_500/heatmap_11.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Define the data\ndata = np.array([[0.1, 0.2, 0.3, 0.4],\n                 [0.5, 0.6, 0.7, 0.8],\n                 [0.9, 1.0, 0.1, 0.2],\n                 [0.3, 0.4, 0.5, 0.6]])\n\n# Define the players\nplayers = ['D. Fox', 'T. Haliburton', 'M. Harkless', 'H. Barnes', 'C. Metu']\n\n# Plot the data\nfor i in range(data.shape[0]):\n    for j in range(data.shape[1]):\n        ax.add_patch(plt.Rectangle((j, i), 1, 1, color=plt.cm.viridis(data[i, j])))\n\n# Add the players\nax.set_xticks(np.arange(len(players)))\nax.set_yticks(np.arange(len(players)))\nax.set_xticklabels(players)\nax.set_yticklabels(players)\nax.set_xlabel('Players')\n\n# Add the colorbar\ncbar = plt.colorbar(ax.images[0])\ncbar.set_label('Colorbar Label')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_12.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Set the x-axis labels\nax.set_xticks([0, 10, 20, 30, 40, 50])\n\n# Set the y-axis labels\nax.set_yticks([0, 10, 20, 30, 40, 50])\n\n# Set the x-axis label\nax.set_xlabel('Predicted category')\n\n# Set the y-axis label\nax.set_ylabel('Labeling Function Similarity')\n\n# Set the title\nax.set_title('Labeling Function Similarity')\n\n# Set the color map\ncmap = plt.cm.viridis\n\n# Set the number of colors\nn_colors = 10\n\n# Set the color bar\ncbar = fig.colorbar(ax.imshow(np.random.rand(10, 10), cmap=cmap), ax=ax)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_13.pdf", "response": "```\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the x-axis labels\nax.set_xticks([0, 1, 2, 3])\nax.set_xticklabels(['D2', 'D1', 'D0', '='])\n\n# Set the y-axis labels\nax.set_yticks([0, 1, 2, 3, 4])\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the text\nax.set_fontsize(10)\n\n# Set the title of the plot\nax.set_title('Plot Title')\n\n# Set the x-axis limits\nax.set_xlim(-0.5, 3.5)\n\n# Set the y-axis limits\nax.set_ylim(-0.5, 4.5)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['D2', 'D1', 'D0', '='])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'])\n\n# Set the x-axis tick positions\nax.set_xticks([0, 1, 2, 3])\n\n# Set the y-axis tick positions\nax.set_yticks([0, 1, 2, 3, 4])\n\n# Set the x-axis tick rotation\nax.set_xticklabels(['D2', 'D1', 'D0', '='], rotation=45)\n\n# Set the y-axis tick rotation\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], rotation=45)\n\n# Set the x-axis tick alignment\nax.set_xticklabels(['D2', 'D1', 'D0', '='], ha='center')\n\n# Set the y-axis tick alignment\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], va='center')\n\n# Set the x-axis tick length\nax.set_xticklabels(['D2', 'D1', 'D0', '='], length=10)\n\n# Set the y-axis tick length\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], length=10)\n\n# Set the x-axis tick width\nax.set_xticklabels(['D2', 'D1', 'D0', '='], width=10)\n\n# Set the y-axis tick width\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], width=10)\n\n# Set the x-axis tick color\nax.set_xticklabels(['D2', 'D1', 'D0', '='], color='black')\n\n# Set the y-axis tick color\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], color='black')\n\n# Set the x-axis tick style\nax.set_xticklabels(['D2', 'D1', 'D0', '='], linestyle='-')\n\n# Set the y-axis tick style\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], linestyle='-')\n\n# Set the x-axis tick marker\nax.set_xticklabels(['D2', 'D1', 'D0', '='], marker='o')\n\n# Set the y-axis tick marker\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], marker='o')\n\n# Set the x-axis tick label rotation\nax.set_xticklabels(['D2', 'D1', 'D0', '='], rotation=45)\n\n# Set the y-axis tick label rotation\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], rotation=45)\n\n# Set the x-axis tick label horizontal alignment\nax.set_xticklabels(['D2', 'D1', 'D0', '='], ha='center')\n\n# Set the y-axis tick label vertical alignment\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], va='center')\n\n# Set the x-axis tick label length\nax.set_xticklabels(['D2', 'D1', 'D0', '='], length=10)\n\n# Set the y-axis tick label length\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], length=10)\n\n# Set the x-axis tick label width\nax.set_xticklabels(['D2', 'D1', 'D0', '='], width=10)\n\n# Set the y-axis tick label width\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], width=10)\n\n# Set the x-axis tick label color\nax.set_xticklabels(['D2', 'D1', 'D0', '='], color='black')\n\n# Set the y-axis tick label color\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], color='black')\n\n# Set the x-axis tick label linestyle\nax.set_xticklabels(['D2', 'D1', 'D0', '='], linestyle='-')\n\n# Set the y-axis tick label linestyle\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], linestyle='-')\n\n# Set the x-axis tick label marker\nax.set_xticklabels(['D2', 'D1', 'D0', '='], marker='o')\n\n# Set the y-axis tick label marker\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], marker='o')\n\n# Set the x-axis tick label rotation\nax.set_xticklabels(['D2', 'D1', 'D0', '='], rotation=45)\n\n# Set the y-axis tick label rotation\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], rotation=45)\n\n# Set the x-axis tick label horizontal alignment\nax.set_xticklabels(['D2', 'D1', 'D0', '='], ha='center')\n\n# Set the y-axis tick label vertical alignment\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], va='center')\n\n# Set the x-axis tick label length\nax.set_xticklabels(['D2', 'D1', 'D0', '='], length=10)\n\n# Set the y-axis tick label length\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], length=10)\n\n# Set the x-axis tick label width\nax.set_xticklabels(['D2', 'D1', 'D0', '='], width=10)\n\n# Set the y-axis tick label width\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], width=10)\n\n# Set the x-axis tick label color\nax.set_xticklabels(['D2', 'D1', 'D0', '='], color='black')\n\n# Set the y-axis tick label color\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], color='black')\n\n# Set the x-axis tick label linestyle\nax.set_xticklabels(['D2', 'D1', 'D0', '='], linestyle='-')\n\n# Set the y-axis tick label linestyle\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], linestyle='-')\n\n# Set the x-axis tick label marker\nax.set_xticklabels(['D2', 'D1', 'D0', '='], marker='o')\n\n# Set the y-axis tick label marker\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], marker='o')\n\n# Set the x-axis tick label rotation\nax.set_xticklabels(['D2', 'D1', 'D0', '='], rotation=45)\n\n# Set the y-axis tick label rotation\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], rotation=45)\n\n# Set the x-axis tick label horizontal alignment\nax.set_xticklabels(['D2', 'D1', 'D0', '='], ha='center')\n\n# Set the y-axis tick label vertical alignment\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], va='center')\n\n# Set the x-axis tick label length\nax.set_xticklabels(['D2', 'D1', 'D0', '='], length=10)\n\n# Set the y-axis tick label length\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], length=10)\n\n# Set the x-axis tick label width\nax.set_xticklabels(['D2', 'D1', 'D0', '='], width=10)\n\n# Set the y-axis tick label width\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], width=10)\n\n# Set the x-axis tick label color\nax.set_xticklabels(['D2', 'D1', 'D0', '='], color='black')\n\n# Set the y-axis tick label color\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], color='black')\n\n# Set the x-axis tick label linestyle\nax.set_xticklabels(['D2', 'D1', 'D0', '='], linestyle='-')\n\n# Set the y-axis tick label linestyle\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], linestyle='-')\n\n# Set the x-axis tick label marker\nax.set_xticklabels(['D2', 'D1', 'D0', '='], marker='o')\n\n# Set the y-axis tick label marker\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], marker='o')\n\n# Set the x-axis tick label rotation\nax.set_xticklabels(['D2', 'D1', 'D0', '='], rotation=45)\n\n# Set the y-axis tick label rotation\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], rotation=45)\n\n# Set the x-axis tick label horizontal alignment\nax.set_xticklabels(['D2', 'D1', 'D0', '='], ha='center')\n\n# Set the y-axis tick label vertical alignment\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], va='center')\n\n# Set the x-axis tick label length\nax.set_xticklabels(['D2', 'D1', 'D0', '='], length=10)\n\n# Set the y-axis tick label length\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], length=10)\n\n# Set the x-axis tick label width\nax.set_xticklabels(['D2', 'D1', 'D0', '='], width=10)\n\n# Set the y-axis tick label width\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], width=10)\n\n# Set the x-axis tick label color\nax.set_xticklabels(['D2', 'D1', 'D0', '='], color='black')\n\n# Set the y-axis tick label color\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], color='black')\n\n# Set the x-axis tick label linestyle\nax.set_xticklabels(['D2', 'D1', 'D0', '='], linestyle='-')\n\n# Set the y-axis tick label linestyle\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], linestyle='-')\n\n# Set the x-axis tick label marker\nax.set_xticklabels(['D2', 'D1', 'D0', '='], marker='o')\n\n# Set the y-axis tick label marker\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], marker='o')\n\n# Set the x-axis tick label rotation\nax.set_xticklabels(['D2', 'D1', 'D0', '='], rotation=45)\n\n# Set the y-axis tick label rotation\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], rotation=45)\n\n# Set the x-axis tick label horizontal alignment\nax.set_xticklabels(['D2', 'D1', 'D0', '='], ha='center')\n\n# Set the y-axis tick label vertical alignment\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], va='center')\n\n# Set the x-axis tick label length\nax.set_xticklabels(['D2', 'D1', 'D0', '='], length=10)\n\n# Set the y-axis tick label length\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], length=10)\n\n# Set the x-axis tick label width\nax.set_xticklabels(['D2', 'D1', 'D0', '='], width=10)\n\n# Set the y-axis tick label width\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], width=10)\n\n# Set the x-axis tick label color\nax.set_xticklabels(['D2', 'D1', 'D0', '='], color='black')\n\n# Set the y-axis tick label color\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], color='black')\n\n# Set the x-axis tick label linestyle\nax.set_xticklabels(['D2', 'D1', 'D0', '='], linestyle='-')\n\n# Set the y-axis tick label linestyle\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], linestyle='-')\n\n# Set the x-axis tick label marker\nax.set_xticklabels(['D2', 'D1', 'D0', '='], marker='o')\n\n# Set the y-axis tick label marker\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], marker='o')\n\n# Set the x-axis tick label rotation\nax.set_xticklabels(['D2', 'D1', 'D0', '='], rotation=45)\n\n# Set the y-axis tick label rotation\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], rotation=45)\n\n# Set the x-axis tick label horizontal alignment\nax.set_xticklabels(['D2', 'D1', 'D0', '='], ha='center')\n\n# Set the y-axis tick label vertical alignment\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], va='center')\n\n# Set the x-axis tick label length\nax.set_xticklabels(['D2', 'D1', 'D0', '='], length=10)\n\n# Set the y-axis tick label length\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], length=10)\n\n# Set the x-axis tick label width\nax.set_xticklabels(['D2', 'D1', 'D0', '='], width=10)\n\n# Set the y-axis tick label width\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], width=10)\n\n# Set the x-axis tick label color\nax.set_xticklabels(['D2', 'D1', 'D0', '='], color='black')\n\n# Set the y-axis tick label color\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], color='black')\n\n# Set the x-axis tick label linestyle\nax.set_xticklabels(['D2', 'D1', 'D0', '='], linestyle='-')\n\n# Set the y-axis tick label linestyle\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], linestyle='-')\n\n# Set the x-axis tick label marker\nax.set_xticklabels(['D2', 'D1', 'D0', '='], marker='o')\n\n# Set the y-axis tick label marker\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], marker='o')\n\n# Set the x-axis tick label rotation\nax.set_xticklabels(['D2', 'D1', 'D0', '='], rotation=45)\n\n# Set the y-axis tick label rotation\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], rotation=45)\n\n# Set the x-axis tick label horizontal alignment\nax.set_xticklabels(['D2', 'D1', 'D0', '='], ha='center')\n\n# Set the y-axis tick label vertical alignment\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], va='center')\n\n# Set the x-axis tick label length\nax.set_xticklabels(['D2', 'D1', 'D0', '='], length=10)\n\n# Set the y-axis tick label length\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'], length=10)\n\n# Set the x-axis tick label width\nax.set_xticklabels(['D2', 'D1', 'D0', '='], width=10)\n\n# Set the y-axis tick label width\nax.set_yticklabels(['LOH0', 'LOH1', 'LOH2', 'LMLP'],"}
{"file": "dataset/ori_500/heatmap_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 10.0))\n\n# Set the color map\ncmap = plt.cm.RdYlBu_r\n\n# Create a list of colors\ncolors = ['red', 'orange', 'yellow', 'green', 'cyan', 'blue', 'purple']\n\n# Create a list of labels\nlabels = ['LLA', 'BakLVA', 'GPTLVA', 'CODI']\n\n# Create a list of values\nvalues = [0.95, 0.75, 0.50, 0.25]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each label\nvalue_list = [values[i] for i in range(len(labels))]\n\n# Create a list of colors for each value\ncolor_map = [cmap(value_list[i]) for i in range(len(values))]\n\n# Create a list of labels for each value\nlabel_list = [labels[i] for i in range(len(values))]\n\n# Create a list of colors for each label\ncolor_list = [colors[i] for i in range(len(labels))]\n\n# Create a list of values for each"}
{"file": "dataset/ori_500/heatmap_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 8.0))\n\n# Set the x-axis labels\nax.set_xticks([1, 3, 5, 9, 12])\nax.set_xticklabels(['1', '3', '5', '9', '12'])\n\n# Set the y-axis labels\nax.set_yticks([1, 3, 5, 7, 9, 11, 12])\nax.set_yticklabels(['1', '3', '5', '7', '9', '11', '12'])\n\n# Set the title\nax.set_title('mbert\u2192sat Perplexity=7.59')\n\n# Set the color map\ncmap = plt.cm.viridis\n\n# Create a color bar\nsm = plt.cm.ScalarMappable(cmap=cmap)\nsm.set_array([])\ncbar = fig.colorbar(sm, ax=ax)\n\n# Set the color bar label\ncbar.set_label('Increase in perplexity')\n\n# Set the color bar orientation\ncbar.ax.invert_yaxis()\n\n# Set the color bar tick labels\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'])\n\n# Set the color bar tick locations\ncbar.ax.set_yticks([-2, -1, 0, 1, 2, 3, 4, 5])\n\n# Set the color bar tick colors\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], color='black')\n\n# Set the color bar tick font sizes\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontsize=10)\n\n# Set the color bar tick font weights\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontweight='bold')\n\n# Set the color bar tick font styles\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontstyle='italic')\n\n# Set the color bar tick font families\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontfamily='serif')\n\n# Set the color bar tick font sizes\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontsize=10)\n\n# Set the color bar tick font weights\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontweight='bold')\n\n# Set the color bar tick font styles\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontstyle='italic')\n\n# Set the color bar tick font families\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontfamily='serif')\n\n# Set the color bar tick font sizes\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontsize=10)\n\n# Set the color bar tick font weights\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontweight='bold')\n\n# Set the color bar tick font styles\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontstyle='italic')\n\n# Set the color bar tick font families\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontfamily='serif')\n\n# Set the color bar tick font sizes\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontsize=10)\n\n# Set the color bar tick font weights\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontweight='bold')\n\n# Set the color bar tick font styles\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontstyle='italic')\n\n# Set the color bar tick font families\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontfamily='serif')\n\n# Set the color bar tick font sizes\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontsize=10)\n\n# Set the color bar tick font weights\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontweight='bold')\n\n# Set the color bar tick font styles\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontstyle='italic')\n\n# Set the color bar tick font families\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontfamily='serif')\n\n# Set the color bar tick font sizes\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontsize=10)\n\n# Set the color bar tick font weights\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontweight='bold')\n\n# Set the color bar tick font styles\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontstyle='italic')\n\n# Set the color bar tick font families\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontfamily='serif')\n\n# Set the color bar tick font sizes\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontsize=10)\n\n# Set the color bar tick font weights\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontweight='bold')\n\n# Set the color bar tick font styles\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontstyle='italic')\n\n# Set the color bar tick font families\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontfamily='serif')\n\n# Set the color bar tick font sizes\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontsize=10)\n\n# Set the color bar tick font weights\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontweight='bold')\n\n# Set the color bar tick font styles\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontstyle='italic')\n\n# Set the color bar tick font families\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontfamily='serif')\n\n# Set the color bar tick font sizes\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontsize=10)\n\n# Set the color bar tick font weights\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontweight='bold')\n\n# Set the color bar tick font styles\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontstyle='italic')\n\n# Set the color bar tick font families\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontfamily='serif')\n\n# Set the color bar tick font sizes\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontsize=10)\n\n# Set the color bar tick font weights\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontweight='bold')\n\n# Set the color bar tick font styles\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontstyle='italic')\n\n# Set the color bar tick font families\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontfamily='serif')\n\n# Set the color bar tick font sizes\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontsize=10)\n\n# Set the color bar tick font weights\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontweight='bold')\n\n# Set the color bar tick font styles\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontstyle='italic')\n\n# Set the color bar tick font families\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontfamily='serif')\n\n# Set the color bar tick font sizes\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontsize=10)\n\n# Set the color bar tick font weights\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontweight='bold')\n\n# Set the color bar tick font styles\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontstyle='italic')\n\n# Set the color bar tick font families\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontfamily='serif')\n\n# Set the color bar tick font sizes\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontsize=10)\n\n# Set the color bar tick font weights\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontweight='bold')\n\n# Set the color bar tick font styles\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontstyle='italic')\n\n# Set the color bar tick font families\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontfamily='serif')\n\n# Set the color bar tick font sizes\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontsize=10)\n\n# Set the color bar tick font weights\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontweight='bold')\n\n# Set the color bar tick font styles\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontstyle='italic')\n\n# Set the color bar tick font families\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontfamily='serif')\n\n# Set the color bar tick font sizes\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontsize=10)\n\n# Set the color bar tick font weights\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontweight='bold')\n\n# Set the color bar tick font styles\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontstyle='italic')\n\n# Set the color bar tick font families\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontfamily='serif')\n\n# Set the color bar tick font sizes\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontsize=10)\n\n# Set the color bar tick font weights\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontweight='bold')\n\n# Set the color bar tick font styles\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontstyle='italic')\n\n# Set the color bar tick font families\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontfamily='serif')\n\n# Set the color bar tick font sizes\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontsize=10)\n\n# Set the color bar tick font weights\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontweight='bold')\n\n# Set the color bar tick font styles\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontstyle='italic')\n\n# Set the color bar tick font families\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontfamily='serif')\n\n# Set the color bar tick font sizes\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontsize=10)\n\n# Set the color bar tick font weights\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontweight='bold')\n\n# Set the color bar tick font styles\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontstyle='italic')\n\n# Set the color bar tick font families\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontfamily='serif')\n\n# Set the color bar tick font sizes\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontsize=10)\n\n# Set the color bar tick font weights\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontweight='bold')\n\n# Set the color bar tick font styles\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontstyle='italic')\n\n# Set the color bar tick font families\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontfamily='serif')\n\n# Set the color bar tick font sizes\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontsize=10)\n\n# Set the color bar tick font weights\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontweight='bold')\n\n# Set the color bar tick font styles\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontstyle='italic')\n\n# Set the color bar tick font families\ncbar.ax.set_yticklabels(['-2', '-1', '0', '1', '2', '3', '4', '5'], fontfamily='serif')\n\n# Set the color bar tick font sizes\ncbar.ax.set_yticklabels(['-2', '-1', '"}
{"file": "dataset/ori_500/heatmap_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(4.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Define the data for the heatmap\ndata = np.array([[659, 777, 247, 153, 991, 953],\n                 [807, 172, 643, 373, 665, 327],\n                 [459, 274, 856, 182, 660, 405],\n                 [784, 637, 435, 498, 303, 243],\n                 [935, 945, 388, 144, 333, 891],\n                 [729, 651, 644, 717, 733, 760],\n                 [863, 700, 650, 717, 650, 760],\n                 [292, 949, 365, 142, 711, 473]])\n\n# Create a colormap\ncmap = plt.cm.RdYlBu_r\n\n# Create a heatmap\nim = ax.imshow(data, cmap=cmap)\n\n# Add a colorbar\ncbar = fig.colorbar(im, ax=ax, orientation='vertical', fraction=0.046, pad=0.04)\ncbar.ax.set_ylabel('Sales', rotation=-90, va=\"bottom\")\n\n# Set the tick labels\nax.set_xticks(np.arange(len(['Product A Q1', 'Product A Q2', 'Product A Q3', 'Product B Q1', 'Product B Q2', 'Product B Q3'])))\nax.set_yticks(np.arange(len(['1', '2', '3', '4', '5', '6', '7', '8', '9'])))\nax.set_xticklabels(['Product A Q1', 'Product A Q2', 'Product A Q3', 'Product B Q1', 'Product B Q2', 'Product B Q3'])\nax.set_yticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the title\nax.set_title('Sales Performance Heatmap')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_17.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a random array of values\nvalues = np.random.rand(100)\n\n# Create a colormap\ncmap = plt.cm.get_cmap('viridis')\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 3.0))\n\n# Plot the values as a heatmap\nim = ax.imshow(values.reshape((10, 10)), cmap=cmap)\n\n# Add a colorbar\ncbar = fig.colorbar(im)\ncbar.ax.set_ylabel('Values', rotation=-90, va=\"bottom\")\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/heatmap_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 6.0))\n\n# Define the data for the Autoformer\ndata1 = np.array([[0.55, 0.72, 0.60, 0.54],\n                 [0.42, 0.65, 0.44, 0.89],\n                 [0.96, 0.38, 0.79, 0.53],\n                 [0.57, 0.93, 0.07, 0.09]])\n\n# Define the data for the Informer\ndata2 = np.array([[0.02, 0.83, 0.78, 0.87],\n                 [0.98, 0.64, 0.46, 0.78],\n                 [0.12, 0.64, 0.14, 0.26],\n                 [0.52, 0.41, 0.26, 0.77]])\n\n# Define the data for the Reformer\ndata3 = np.array([[0.46, 0.57, 0.02, 0.62],\n                 [0.61, 0.62, 0.94, 0.68],\n                 [0.36, 0.44, 0.70, 0.06],\n                 [0.67, 0.67, 0.21, 0.62]])\n\n# Define the data for the Transformer\ndata4 = np.array([[0.32, 0.36, 0.57, 0.44],\n                 [0.99, 0.10, 0.21, 0.16],\n                 [0.65, 0.25, 0.47, 0.24],\n                 [0.16, 0.11, 0.66, 0.14]])\n\n# Plot the Autoformer\nax.imshow(data1, cmap='Oranges', interpolation='nearest')\nax.set_title('Autoformer')\n\n# Plot the Informer\nax.imshow(data2, cmap='Oranges', interpolation='nearest')\nax.set_title('Informer')\n\n# Plot the Reformer\nax.imshow(data3, cmap='Oranges', interpolation='nearest')\nax.set_title('Reformer')\n\n# Plot the Transformer\nax.imshow(data4, cmap='Oranges', interpolation='nearest')\nax.set_title('Transformer')\n\n# Add colorbar\ncbar = ax.figure.colorbar(ax.images[0], ax=ax)\ncbar.ax.set_ylabel('Correlation coefficient', rotation=-90, va=\"bottom\")\n\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_19.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(20.0, 8.0))\n\n# Define the data for the first plot\ndata1 = [15.7, 28.1, 2.6, 14.5, 28.6, 10.5, 76.0, 2.1, 0.5, 4.1, 8.1, 9.2, 50.8, 12.3, 0.9, 6.2, 15.5, 14.3, 78.0, 11.2, 0.6, 7.8, 17.3, 13.9, 50.3, 12.0, 0.9, 7.0, 13.4, 16.3, 50.0, 12.0, 0.9, 7.0, 13.4, 16.3]\n\n# Define the data for the second plot\ndata2 = [31.5, 4.3, 2.5, 17.4, 27.1, 17.3, 35.3, 4.0, 2.2, 32.5, 27.1, 17.3, 38.6, 2.2, 0.8, 55.3, 3.1, 10.0, 44.4, 10.0, 2.2, 7.8, 22.9, 55.3, 1.0, 61.5, 2.0, 8.7, 14.9, 25.0, 13.0, 4.0]\n\n# Create a color map\ncmap = plt.cm.get_cmap('coolwarm')\n\n# Plot the data\nfor i in range(0, len(data1)):\n    ax.add_artist(plt.Circle((i%5+0.5, i//5+0.5), 0.4, color=cmap(data1[i]/100)))\n    ax.text(i%5+0.5, i//5+0.5, str(round(data1[i], 1)), ha='center', va='center')\n    ax.add_artist(plt.Circle((i%5+0.5, i//5+0.5), 0.4, color=cmap(data2[i]/100)))\n    ax.text(i%5+0.5, i//5+0.5, str(round(data2[i], 1)), ha='center', va='center')\n\n# Add labels\nax.set_xlabel('Werewolf')\nax.set_ylabel('Seer')\nax.set_title('(a) Role voting in the Werewolf game')\nax.set_title('(b) Final state of roles')\n\n# Add a color bar\nsm = plt.cm.ScalarMappable(cmap=cmap)\nsm.set_array([])\ncbar = fig.colorbar(sm)\n\nplt.show()"}
{"file": "dataset/ori_500/heatmap_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Question Type: All three types of questions')\n\n# Set the x-axis label\nax.set_xlabel('Response Action Category')\n\n# Set the y-axis label\nax.set_ylabel('Question Type')\n\n# Define the data for the plot\ndata = np.array([[169, 547, 662, 271, 145, 1248],\n                 [115, 439, 753, 239, 141, 1355],\n                 [219, 585, 557, 259, 153, 1269],\n                 [67, 941, 708, 432, 162, 732],\n                 [177, 554, 661, 235, 169, 1246]])\n\n# Define the colors for each category\ncolors = ['red', 'green', 'blue', 'yellow', 'purple', 'orange']\n\n# Plot the data\nfor i in range(data.shape[0]):\n    for j in range(data.shape[1]):\n        ax.bar(i, data[i, j], color=colors[j])\n\n# Add a color bar\ncbar = plt.colorbar(ax.images[0])\ncbar.set_label('Color Bar Label')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\ndata = np.array([[0.10, 0.00, 0.30, 0.00, 0.50, 0.00, 0.10],\n                 [0.12, 0.00, 0.44, 0.00, 0.44, 0.00, 0.00]])\n\n# Create the figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Plot the data\nfor i in range(data.shape[0]):\n    ax.bar(range(data.shape[1]), data[i], color=plt.cm.viridis(i/data.shape[0]))\n\n# Set the labels\nax.set_xticks(range(data.shape[1]))\nax.set_xticklabels(['angry', 'sad', 'disgust', 'contempt', 'anger', 'neutral', 'surprise', 'happy'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the color map\ncmap = plt.get_cmap('Blues')\n\n# Create a color bar\ncbar = fig.colorbar(plt.cm.ScalarMappable(cmap=cmap), ax=ax, orientation='vertical', fraction=0.046, pad=0.04)\n\n# Set the color bar label\ncbar.set_label('Percentage')\n\n# Set the color bar limits\ncbar.set_clim(0, 100)\n\n# Set the color bar ticks\ncbar.set_ticks([0, 25, 50, 75, 100])\n\n# Set the color bar tick labels\ncbar.set_ticklabels(['0%', '25%', '50%', '75%', '100%'])\n\n# Set the color bar orientation\ncbar.ax.set_yticklabels(cbar.get_ticklabels(), rotation=90)\n\n# Set the color bar position\ncbar.ax.set_position([0.9, 0.1, 0.03, 0.8])\n\n# Set the color bar aspect ratio\ncbar.ax.set_aspect('auto')\n\n# Set the color bar spacing\ncbar.ax.set_aspect('equal')\n\n# Set the color bar padding\ncbar.ax.set_aspect('equal')\n\n# Set the color bar alignment\ncbar.ax.set_aspect('equal')\n\n# Set the color bar anchor\ncbar.ax.set_aspect('equal')\n\n# Set the color bar frame\ncbar.ax.set_aspect('equal')\n\n# Set the color bar border\ncbar.ax.set_aspect('equal')\n\n# Set the color bar grid\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick marks\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick labels\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick positions\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick format\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick rotation\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick length\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick width\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick color\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick position\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label rotation\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label color\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font family\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font variant\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font stretch\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font size\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font weight\ncbar.ax.set_aspect('equal')\n\n# Set the color bar tick label font style\ncbar.ax.set_aspect"}
{"file": "dataset/ori_500/heatmap_22.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 3.0))\n\n# Define the data for the first subplot\ndata1 = np.array([[0, 1, 2, 3], [1, 0, 1, 2], [2, 1, 0, 1], [3, 2, 1, 0]])\nlabels1 = ['Baseline', 'Reversed Order', 'Reversed IDs']\n\n# Create a color map for the first subplot\ncmap1 = plt.cm.RdYlGn\nnorm1 = plt.Normalize(vmin=0, vmax=3)\n\n# Create a color bar for the first subplot\nsm1 = plt.cm.ScalarMappable(cmap=cmap1, norm=norm1)\nsm1.set_array([])\n\n# Create a color bar for the first subplot\ncbar1 = fig.colorbar(sm1, ax=ax, orientation='vertical')\n\n# Create a color bar for the first subplot\ncbar1.set_label('Rank')\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3'])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticks([0, 1, 2, 3])\n\n# Create a color bar for the first subplot\ncbar1.ax.set_yticklabels(['0', '1', '2', '3"}
{"file": "dataset/ori_500/heatmap_23.pdf", "response": "import matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 1)\n\n# Set the x-axis ticks\nax.set_xticks([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])\n\n# Set the y-axis ticks\nax.set_yticks([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0.10', '0.20', '0.30', '0.40', '0.50', '0.60', '0.70', '0.80', '0.90', '1.00'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.10', '0.20', '0.30', '0.40', '0.50', '0.60', '0.70', '0.80', '0.90', '1.00'])\n\n# Set the x-axis label\nax.set_xlabel('X Axis Label')\n\n# Set the y-axis label\nax.set_ylabel('Y Axis Label')\n\n# Set the title of the plot\nax.set_title('Plot Title')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/heatmap_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the plot\ndata = np.array([[0.8, 2.4, 2.5, 3.9, 0.0, 4.0, 0.0],\n                 [2.4, 0.0, 4.0, 1.0, 2.7, 0.0, 0.0],\n                 [1.1, 2.4, 0.8, 0.3, 1.9, 4.3, 0.0],\n                 [0.6, 0.0, 0.6, 0.3, 3.1, 0.0, 0.0],\n                 [0.7, 1.7, 0.6, 0.0, 2.6, 0.0, 0.0],\n                 [1.3, 2.0, 0.0, 0.0, 1.4, 0.0, 0.0],\n                 [0.1, 2.0, 0.0, 0.0, 1.9, 0.0, 0.0]])\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the color map\ncmap = plt.cm.get_cmap('Greens')\n\n# Plot the data\nfor i in range(data.shape[0]):\n    for j in range(data.shape[1]):\n        ax.add_patch(plt.Rectangle((i, j), 1, 1, color=cmap(data[i, j])))\n\n# Add the color bar\ncbar = fig.colorbar(ax.images[0], ax=ax, orientation='vertical', fraction=0.046, pad=0.04)\ncbar.set_label('harvest [t/year]')\n\n# Set the labels\nax.set_xticks(np.arange(data.shape[1]) + 0.5, minor=False)\nax.set_yticks(np.arange(data.shape[0]) + 0.5, minor=False)\nax.set_xticklabels(['Farmer Joe', 'Upland Bros.', 'Smith Gardening', 'Agrifun', 'Organic', 'BioGooLd', 'Cornley Corp.'], minor=False)\nax.set_yticklabels(['cucumber', 'tomato', 'lettuce', 'asparagus', 'potato', 'wheat', 'barley'], minor=False)\n\n# Set the title\nax.set_title('Farmers Market')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_25.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Define the data for the heatmap\ndata = [[0.8, 2.4, 2.5, 3.9, 4.0], [2.4, 0.0, 4.0, 1.0, 0.0], [1.1, 2.4, 0.8, 3.0, 0.0], [0.7, 2.6, 0.0, 0.0, 0.0], [0.1, 2.0, 0.0, 1.4, 0.0], [0.6, 0.0, 0.3, 0.0, 0.0], [0.7, 2.7, 0.6, 0.0, 0.0], [0.1, 2.0, 0.0, 1.4, 0.0]]\n\n# Create a heatmap\nim = ax.imshow(data, cmap='hot', interpolation='nearest')\n\n# Add colorbar\ncbar = ax.figure.colorbar(im, ax=ax)\ncbar.ax.set_ylabel('weekly sold copies', rotation=-90, va=\"bottom\")\n\n# Set the tick labels\nax.set_xticks(np.arange(len(['A', 'B', 'C', 'D', 'E', 'F', 'G'])))\nax.set_yticks(np.arange(len(['cucumber', 'tomato', 'lettuce', 'asparagus', 'potato', 'wheat', 'barley'])))\nax.set_xticklabels(['A', 'B', 'C', 'D', 'E', 'F', 'G'])\nax.set_yticklabels(['cucumber', 'tomato', 'lettuce', 'asparagus', 'potato', 'wheat', 'barley'])\n\n# Rotate the tick labels and set their alignment.\nplt.setp(ax.get_xticklabels(), rotation=45, ha=\"right\",\n         rotation_mode=\"anchor\")\n\n# Loop over data dimensions and create text annotations.\nfor i in range(len(['cucumber', 'tomato', 'lettuce', 'asparagus', 'potato', 'wheat', 'barley'])):\n    for j in range(len(['A', 'B', 'C', 'D', 'E', 'F', 'G'])):\n        text = ax.text(j, i, data[i][j],\n                       ha=\"center\", va=\"center\", color=\"w\")\n\nax.set_title('Heatmap of weekly sold copies')\nfig.tight_layout()\nplt.show()"}
{"file": "dataset/ori_500/heatmap_26.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\ndef plot_image(image, title):\n    fig, ax = plt.subplots(figsize=(9.0, 6.0))\n    ax.imshow(image, interpolation='none')\n    ax.set_title(title)\n    plt.show()\n\n# Generate random images for demonstration\nimages = [np.random.rand(10, 10) for _ in range(12)]\ntitles = ['None', 'none', 'nearest', 'bilinear', 'bicubic', 'spline16',\n          'spline36', 'hanning', 'hamming', 'hermite', 'kaiser', 'quadric']\n\nfor image, title in zip(images, titles):\n    plot_image(image, title)"}
{"file": "dataset/ori_500/heatmap_27.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, axs = plt.subplots(2, 1, figsize=(6.0, 4.0))\n\n# Set the title of the first subplot\naxs[0].set_title('default: no edges')\n\n# Generate random data for the first subplot\ndata = np.random.rand(10, 10)\ncmap = plt.cm.viridis\nnorm = plt.Normalize(vmin=0, vmax=6)\nsm = plt.cm.ScalarMappable(cmap=cmap, norm=norm)\nsm.set_array([])\n\n# Plot the data on the first subplot\nim = axs[0].imshow(data, cmap=cmap, norm=norm)\nfig.colorbar(sm, ax=axs[0])\n\n# Set the tick labels for the first subplot\naxs[0].set_xticks(np.arange(len(data)))\naxs[0].set_yticks(np.arange(len(data)))\naxs[0].set_xticklabels(['0', '2', '4', '6', '8', '10'])\naxs[0].set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the title of the second subplot\naxs[1].set_title('thick edges')\n\n# Generate random data for the second subplot\ndata = np.random.rand(10, 10)\ncmap = plt.cm.viridis\nnorm = plt.Normalize(vmin=0, vmax=6)\nsm = plt.cm.ScalarMappable(cmap=cmap, norm=norm)\nsm.set_array([])\n\n# Plot the data on the second subplot\nim = axs[1].imshow(data, cmap=cmap, norm=norm)\nfig.colorbar(sm, ax=axs[1])\n\n# Set the tick labels for the second subplot\naxs[1].set_xticks(np.arange(len(data)))\naxs[1].set_yticks(np.arange(len(data)))\naxs[1].set_xticklabels(['0', '2', '4', '6', '8', '10'])\naxs[1].set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_28.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Define the data\ndata = np.array([[1.5, 2.2, 1.8, 3.2, 0.5, 3.8, 0.3],\n                 [2.8, 0.5, 3.6, 1.8, 4.0, 2.2, 0.7],\n                 [1.0, 2.1, 0.9, 4.0, 1.5, 3.4, 0.5],\n                 [0.7, 0.6, 0.4, 2.3, 0.5, 4.2, 0.6],\n                 [0.9, 1.6, 0.7, 2.0, 0.5, 5.9, 0.5],\n                 [0.3, 1.9, 0.6, 1.3, 0.8, 1.8, 0.9]])\n\n# Define the labels\nlabels = ['Vendor A', 'Vendor B', 'Vendor C', 'Vendor D', 'Vendor E', 'Vendor F', 'Vendor G']\n\n# Plot the data\nfor i in range(data.shape[0]):\n    for j in range(data.shape[1]):\n        ax.text(j, i, str(round(data[i, j], 1)), ha=\"center\", va=\"center\")\n    ax.imshow(data, interpolation='nearest', aspect='auto')\n\n# Set the labels\nax.set_xticks(np.arange(len(labels)))\nax.set_yticks(np.arange(len(labels)))\nax.set_xticklabels(labels)\nax.set_yticklabels(labels)\n\n# Set the title\nax.set_title('Sales of vendors (in tons/year)')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_29.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 4.0))\n\n# Define the data\ndata = np.array([[17, 79, 4, 42],\n                 [36, 53, 5, 38],\n                 [28, 34, 0, 0],\n                 [23, 35, 75, 55]])\n\n# Create a heatmap\nim = ax.imshow(data, cmap='viridis')\n\n# Add colorbar\ncbar = ax.figure.colorbar(im, ax=ax)\ncbar.ax.set_ylabel('Degree of acceptance', rotation=-90, va=\"bottom\")\n\n# Set labels\nax.set_xticks(np.arange(len(data[0])))\nax.set_yticks(np.arange(len(data)))\nax.set_xticklabels(['Low', 'Medium', 'High'])\nax.set_yticklabels(['Low', 'Medium', 'High'])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_3.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Define the data\ndata = np.array([[0.90, 0.80, 0.70, 0.60, 0.50, 0.40, 0.30, 0.20, 0.10],\n                 [0.90, 0.80, 0.70, 0.60, 0.50, 0.40, 0.30, 0.20, 0.10],\n                 [0.90, 0.80, 0.70, 0.60, 0.50, 0.40, 0.30, 0.20, 0.10],\n                 [0.90, 0.80, 0.70, 0.60, 0.50, 0.40, 0.30, 0.20, 0.10],\n                 [0.90, 0.80, 0.70, 0.60, 0.50, 0.40, 0.30, 0.20, 0.10],\n                 [0.90, 0.80, 0.70, 0.60, 0.50, 0.40, 0.30, 0.20, 0.10],\n                 [0.90, 0.80, 0.70, 0.60, 0.50, 0.40, 0.30, 0.20, 0.10],\n                 [0.90, 0.80, 0.70, 0.60, 0.50, 0.40, 0.30, 0.20, 0.10],\n                 [0.90, 0.80, 0.70, 0.60, 0.50, 0.40, 0.30, 0.20, 0.10]])\n\n# Plot the data\nim = ax.imshow(data, cmap='viridis')\n\n# Add a colorbar\ncbar = fig.colorbar(im)\n\n# Set the tick labels\nax.set_xticks(np.arange(len(data)))\nax.set_yticks(np.arange(len(data)))\nax.set_xticklabels(['a', 'm', 'd', 'm', 'M', 'q'])\nax.set_yticklabels(['a', 'm', 'd', 'm', 'M', 'q'])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_30.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('ROC\\'s AUC')\n\n# Set the x-axis label\nax.set_xlabel('Timeshift')\n\n# Set the y-axis label\nax.set_ylabel('Scales')\n\n# Set the tick labels for the x-axis\nax.set_xticks(np.arange(13))\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(9))\nax.set_yticklabels(['0', '1', '2', '3', '4', '5', '6', '7', '8'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color map\ncmap = plt.cm.get_cmap('viridis')\n\n# Create a color bar\ncbar = fig.colorbar(ax.imshow(np.random.rand(9, 13), cmap=cmap), ax=ax)\n\n# Set the color bar label\ncbar.set_label('AUC')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_4.pdf", "response": "```\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Generate random data\nnp.random.seed(42)\ndata = np.random.rand(10, 10)\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 3.0))\n\n# Plot the data\ncax = ax.matshow(data, interpolation='nearest', cmap=plt.cm.viridis)\n\n# Add colorbar\nfig.colorbar(cax)\n\n# Set labels\nax.set_xticks(np.arange(len(data)))\nax.set_yticks(np.arange(len(data)))\nax.set_xticklabels(['0', '4', '8', '12', '16', '20', '24', '28'])\nax.set_yticklabels(['C Subject', 'C Relation', 'C Attribute', 'Q Subject', 'Q Relation', 'Last'])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_5.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 6.0))\n\n# Define the data for the heatmap\ndata = [\n    [44, 12, 0, 0],\n    [5, 42, 3, 0],\n    [0, 8, 23, 9],\n    [0, 0, 0, 44]\n]\n\n# Create a color map\ncmap = plt.cm.viridis\n\n# Create a heatmap\nim = ax.imshow(data, cmap=cmap)\n\n# Add a color bar\ncbar = ax.figure.colorbar(im, ax=ax)\ncbar.ax.set_ylabel(\"Score\", rotation=-90, va=\"bottom\")\n\n# Set the tick labels\nax.set_xticks(np.arange(len(data)))\nax.set_yticks(np.arange(len(data)))\nax.set_xticklabels([\"0\", \"1\", \"2\", \"3\"])\nax.set_yticklabels([\"0\", \"1\", \"2\", \"3\"])\n\n# Rotate the tick labels and set their alignment.\nplt.setp(ax.get_xticklabels(), rotation=45, ha=\"right\",\n         rotation_mode=\"anchor\")\n\n# Loop over data dimensions and create text annotations.\nfor i in range(len(data)):\n    for j in range(len(data)):\n        text = ax.text(j, i, data[i, j],\n                       ha=\"center\", va=\"center\", color=\"w\")\n\n# Set the title\nax.set_title('Title')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/heatmap_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Define the data\ndata = np.array([[876, 136, 435, 534, 322, 804],\n                 [75, 1737, 742, 375, 75, 1825],\n                 [76, 673, 782, 78, 421, 911],\n                 [482, 120, 843, 1170, 925, 400]])\n\n# Create a colormap\ncmap = plt.cm.get_cmap('viridis', 10)\n\n# Plot the data\nfor i in range(data.shape[0]):\n    for j in range(data.shape[1]):\n        ax.add_patch(plt.Rectangle((j, i), 1, 1, color=cmap(data[i, j])))\n\n# Set the x-axis labels\nax.set_xticks(np.arange(data.shape[1]))\nax.set_xticklabels(['Kokkos', 'RAJA', 'OMP', 'OACC', 'SYCL', 'Native Port'])\n\n# Set the y-axis labels\nax.set_yticks(np.arange(data.shape[0]))\nax.set_yticklabels(['Summit', 'Perlmutter', 'Corona', 'Frontier'])\n\n# Set the title\nax.set_title('BabelStream triad Average Memory Bandwidth (GB/s)')\n\n# Set the colorbar\ncbar = plt.colorbar(ax.images[0], ax=ax)\ncbar.set_label('Bandwidth (GB/s)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Correlation Coefficients')\n\n# Define the color map\ncmap = plt.get_cmap(\"coolwarm\")\n\n# Define the data\ndata = np.array([\n    [0.99, 0.90, 0.89, 0.88, 0.64, 0.65, 0.71, 0.82],\n    [0.90, 0.93, 0.92, 0.99, 0.67, 0.69, 0.72, 0.82],\n    [0.89, 0.93, 0.95, 1.00, 0.66, 0.68, 0.75, 0.82],\n    [0.88, 0.92, 0.95, 1.00, 0.68, 0.69, 0.72, 0.82],\n    [0.64, 0.65, 0.68, 0.68, 0.64, 0.65, 0.71, 0.82],\n    [0.65, 0.69, 0.69, 0.69, 0.65, 0.69, 0.72, 0.82],\n    [0.71, 0.72, 0.75, 0.75, 0.71, 0.72, 0.77, 0.82],\n    [0.82, 0.82, 0.82, 0.82, 0.82, 0.82, 0.82, 1.00]\n])\n\n# Plot the data\nim = ax.imshow(data, cmap=cmap)\n\n# Add a color bar\ncbar = ax.figure.colorbar(im, ax=ax)\ncbar.ax.set_ylabel('Correlation', rotation=-90, va=\"bottom\")\n\n# Set the labels\nax.set_xticks(np.arange(len(['en', 'fr', 'es', 'pt', 'bn', 'hi', 'ur', 'ar', 'zh'])))\nax.set_yticks(np.arange(len(['en', 'fr', 'es', 'pt', 'bn', 'hi', 'ur', 'ar', 'zh'])))\nax.set_xticklabels(['en', 'fr', 'es', 'pt', 'bn', 'hi', 'ur', 'ar', 'zh'])\nax.set_yticklabels(['en', 'fr', 'es', 'pt', 'bn', 'hi', 'ur', 'ar', 'zh'])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\ndata = np.array([[0.19, 0.62, 0.52, 0.39, 0.50, 0.34, 0.20],\n                 [0.19, 0.53, 0.52, 0.39, 0.50, 0.34, 0.20],\n                 [0.26, 0.53, 0.52, 0.39, 0.50, 0.34, 0.20],\n                 [0.16, 0.39, 0.50, 0.39, 0.50, 0.34, 0.20],\n                 [0.03, 0.24, 0.24, 0.34, 0.20, 0.34, 0.20],\n                 [-0.03, 0.10, -0.03, 0.06, -0.10, 0.06, 0.20],\n                 [0.07, 0.28, 0.26, 0.26, 0.20, 0.21, 0.05],\n                 [-0.03, 0.10, -0.03, 0.06, -0.10, 0.06, 0.20],\n                 [0.07, 0.28, 0.26, 0.26, 0.20, 0.21, 0.05]])\n\n# Create the figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Plot the data\nax.imshow(data, cmap='Blues')\n\n# Set the tick labels\nax.set_xticks(np.arange(len(['LexRank', 'ROUGE', 'BERTScore', 'SimCSE', 'PMI', 'GPT-3.5', 'CrossAttn', 'PPL'])))\nax.set_yticks(np.arange(len(['LEX', 'ROUGE', 'BERTScore', 'SimCSE', 'PMI', 'GPT-3.5', 'CrossAttn', 'PPL'])))\nax.set_xticklabels(['LexRank', 'ROUGE', 'BERTScore', 'SimCSE', 'PMI', 'GPT-3.5', 'CrossAttn', 'PPL'])\nax.set_yticklabels(['LEX', 'ROUGE', 'BERTScore', 'SimCSE', 'PMI', 'GPT-3.5', 'CrossAttn', 'PPL'])\n\n# Add colorbar\ncbar = ax.figure.colorbar(ax.images[0], ax=ax)\ncbar.ax.set_ylabel('Score', rotation=-90, va=\"bottom\")\n\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_9.pdf", "response": "```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Create a random matrix\nnp.random.seed(42)\ndata = np.random.rand(16, 16)\n\n# Create a colormap\ncmap = plt.cm.viridis\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 6.0))\n\n# Plot the data\nim = ax.imshow(data, cmap=cmap)\n\n# Add colorbar\ncbar = ax.figure.colorbar(im, ax=ax)\n\n# Set labels\nax.set_xlabel('Layers')\nax.set_ylabel('endofex')\nax.set_title('pythia-1b')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Define the data for the bar chart\nx = np.array([0.0, 0.2, 0.4, 0.6, 0.8])\ny = np.array([100, 90, 80, 70, 60])\n\n# Plot the bar chart\nax.bar(x, y, color='lightblue')\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('Test Winning Distance')\nax.set_ylabel('Number of Pairs')\n\n# Set the title of the plot\nax.set_title('Number of Pairs vs Test Winning Distance')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_10.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 3.0))\n\n# Generate random data for the histogram\ndata = np.random.normal(loc=0.5, scale=0.2, size=1000)\n\n# Plot the histogram\nax.hist(data, bins=20, color='blue', alpha=0.5)\nax.set_xlabel('Cosine Similarity')\nax.set_ylabel('Frequency')\n\nplt.show()"}
{"file": "dataset/ori_500/hist_11.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with multiple subplots\nfig, axs = plt.subplots(2, 2, figsize=(10.0, 8.0))\n\n# Define the data for each subplot\ndata = [\n    {'title': 'Baseline', 'x': [0.5, 1.0, 1.5, 2.0, 2.5], 'y': [0.0, 0.0, 0.0, 0.0, 0.0]},\n    {'title': 'MIRL w/ MULT', 'x': [0.5, 1.0, 1.5, 2.0, 2.5], 'y': [0.0, 0.0, 0.0, 0.0, 0.0]},\n    {'title': 'MIRL + OCLR w/ MULT', 'x': [0.5, 1.0, 1.5, 2.0, 2.5], 'y': [0.0, 0.0, 0.0, 0.0, 0.0]},\n    {'title': 'MIRL + OCLR w/ DOTLA', 'x': [0.5, 1.0, 1.5, 2.0, 2.5], 'y': [0.0, 0.0, 0.0, 0.0, 0.0]}\n]\n\n# Plot the data for each subplot\nfor i, ax in enumerate(axs.flatten()):\n    ax.plot(data[i]['x'], data[i]['y'], label=data[i]['title'])\n    ax.set_xlabel('Euclidean Distance')\n    ax.set_ylabel('Density')\n    ax.legend()\n\nplt.show()"}
{"file": "dataset/ori_500/hist_12.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with multiple subplots\nfig, axs = plt.subplots(3, 2, figsize=(7.0, 8.0))\n\n# Define the data for each subplot\ndata = [\n    (np.random.normal(loc=5, scale=1, size=100), 'MATH'),\n    (np.random.normal(loc=6, scale=1, size=100), 'MATH MaC'),\n    (np.random.normal(loc=5, scale=1, size=100), 'Llama-2'),\n    (np.random.normal(loc=6, scale=1, size=100), 'Llama-2 MaC'),\n    (np.random.normal(loc=5, scale=1, size=100), 'LLEMMMA'),\n    (np.random.normal(loc=6, scale=1, size=100), 'LLEMMMA MaC'),\n    (np.random.normal(loc=5, scale=1, size=100), 'MAMMO'),\n    (np.random.normal(loc=6, scale=1, size=100), 'MAMMO MaC')\n]\n\n# Plot the data\nfor i, (x, title) in enumerate(data):\n    axs[i // 2, i % 2].hist(x, bins=10, density=True)\n    axs[i // 2, i % 2].set_title(title + ' ' + title[-2:])\n    axs[i // 2, i % 2].set_xlabel('FKGL')\n    axs[i // 2, i % 2].set_ylabel('Density')\n\nplt.show()"}
{"file": "dataset/ori_500/hist_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Desert Animals in the Wild')\n\n# Set the labels for the x-axis and y-axis\nax.set_xlabel('Animal Weight (Tons)')\nax.set_ylabel('Frequency')\n\n# Set the tick labels for the x-axis\nax.set_xticks([0.02, 0.04, 0.06, 0.08])\nax.set_xticklabels(['0.02', '0.04', '0.06', '0.08'])\n\n# Set the tick labels for the y-axis\nax.set_yticks([1000, 10000, 100000, 1000000])\nax.set_yticklabels(['1000', '10000', '100000', '1000000'])\n\n# Set the color of the grid lines\nax.grid(color='grey', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgrey')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'orange'])\n\n# Plot the data\nax.bar([0.02, 0.04, 0.06, 0.08], [1000, 10000, 100000, 1000000], color=['blue', 'orange'])\n\n# Add a legend\nax.legend(['Camels', 'Kangaroos'], loc='upper right')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Define the data for the histogram\nx = np.array([0, 2, 4, 6, 8])\ny = np.array([1, 3, 5, 7, 9])\n\n# Plot the histogram with a specific color and edge color\nax.bar(x, y, color='blue', edgecolor='black')\n\n# Set the title of the plot\nax.set_title('Comparison of Uniform and Normal Distributions')\n\n# Set the labels for the x-axis and y-axis\nax.set_xlabel('Value')\nax.set_ylabel('Frequency')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Generate random data\nnp.random.seed(42)\ndata = np.random.normal(loc=1.97, scale=0.3, size=1000)\n\n# Plot histogram\nplt.hist(data, bins=20, color='lightblue', edgecolor='black')\n\n# Calculate median\nmedian = np.median(data)\nplt.axvline(median, color='magenta', linestyle='dashed', linewidth=2)\n\n# Add text annotations\nplt.text(2, 1200, 'Median: 1.97', color='magenta')\n\n# Set axis limits and labels\nplt.xlim(-2, 6)\nplt.xticks([-2, -1, 0, 1, 2, 3, 4, 5])\nplt.xlabel('Wind Speed (km/h)')\nplt.ylabel('Number of Measurements')\n\n# Set title\nplt.title('Histogram of Wind Speed Measurements')\n\n# Show plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Generate random data for the histogram\nnp.random.seed(42)\ndata = np.random.normal(loc=100, scale=25, size=1000)\n\n# Create a figure and axis with the specified size\nfig, ax = plt.subplots(figsize=(5.0, 4.0))\n\n# Plot the histogram with the specified parameters\nax.hist(data, bins=30, color='blue', alpha=0.7, edgecolor='black')\n\n# Set the title of the plot\nax.set_title('Baking Accuracy Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Distance to Threshold')\n\n# Set the y-axis label\nax.set_ylabel('Frequency')\n\n# Set the tick labels for the x-axis\nax.set_xticks([0.0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0])\n\n# Set the tick labels for the y-axis\nax.set_yticks([0, 25, 50, 75, 100, 125, 150])\n\n# Set the grid lines\nax.grid(True, linestyle='--', linewidth=0.5)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_17.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(16.0, 7.0))\n\n# Define the data for the first plot\nx = np.array([0.0, 0.2, 0.4, 0.6, 0.8, 1.0])\ny = np.array([100, 90, 80, 70, 60, 50])\n\n# Plot the data\nax.plot(x, y, 'o-')\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 100)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 1.1, 0.2))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 101, 10))\n\n# Set the x-axis labels\nax.set_xticklabels(['0', '0.2', '0.4', '0.6', '0.8', '1'])\n\n# Set the y-axis labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the title of the plot\nax.set_title('Number of Pairs')\n\n# Set the x-axis label\nax.set_xlabel('Test Winning Distance')\n\n# Set the y-axis label\nax.set_ylabel('Number of Pairs')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 300)\n\n# Set the y-axis limits\nax.set_ylim(0, 25)\n\n# Set the x-axis ticks\nax.set_xticks([0, 50, 100, 150, 200, 250, 300])\n\n# Set the y-axis ticks\nax.set_yticks([0, 5, 10, 15, 20, 25])\n\n# Set the x-axis labels\nax.set_xlabel('Number of Nominations')\n\n# Set the y-axis labels\nax.set_ylabel('Frequency')\n\n# Set the title of the plot\nax.set_title('Histogram of Grammy Nominations Across Expanded Categories 2019-2023')\n\n# Set the color of the histogram bars\ncolors = ['pink', 'orange', 'yellow', 'pink', 'orange', 'yellow']\n\n# Set the width of the histogram bars\nwidths = [0.5, 0.5, 0.5, 0.5, 0.5, 0.5]\n\n# Set the number of bins for the histogram\nbins = 10\n\n# Set the range of values for the histogram\nrange = (0, 300)\n\n# Set the number of categories for the histogram\ncategories = 6\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n# Set the number of nominations for each category\nnominations = [10, 15, 20, 25, 30, 35]\n\n"}
{"file": "dataset/ori_500/hist_19.pdf", "response": "```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Generate random data for MNIST\nnp.random.seed(42)\nmnist_data = np.random.normal(loc=100, scale=50, size=1000)\nmnist_data[mnist_data < 0] = 0\nmnist_data[mnist_data > 400] = 400\nmnist_data = np.round(mnist_data).astype(int)\n\n# Generate random data for FashionMNIST\nfashion_mnist_data = np.random.normal(loc=100, scale=50, size=1000)\nfashion_mnist_data[fashion_mnist_data < 0] = 0\nfashion_mnist_data[fashion_mnist_data > 400] = 400\nfashion_mnist_data = np.round(fashion_mnist_data).astype(int)\n\n# Plot MNIST data\nfig, ax = plt.subplots(figsize=(10.0, 7.0))\nax.set_title('MNIST - Defect Detection Data Distribution')\nax.set_xlabel('Defect Probability')\nax.set_ylabel('Number of Defects')\nax.plot(np.arange(0, 1, 0.01), mnist_data, 'b-', label='Non-defective')\nax.plot(np.arange(0, 1, 0.01), fashion_mnist_data, 'r-', label='Defective')\nax.legend()\nplt.show()\n\n# Plot FashionMNIST data\nfig, ax = plt.subplots(figsize=(10.0, 7.0))\nax.set_title('FashionMNIST - Defect Detection Data Distribution')\nax.set_xlabel('Defect Probability')\nax.set_ylabel('Number of Defects')\nax.plot(np.arange(0, 1, 0.01), mnist_data, 'g-', label='Non-defective')\nax.plot(np.arange(0, 1, 0.01), fashion_mnist_data, 'r-', label='Defective')\nax.legend()\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Define the data for the bar chart\nx = np.array([0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])\ny = np.array([20, 22, 23, 24, 25, 26, 27])\n\n# Plot the bar chart\nax.bar(x, y, color='blue')\n\n# Set the x-axis label\nax.set_xlabel('TM-score')\n\n# Set the y-axis label\nax.set_ylabel('Frequency')\n\n# Set the title of the plot\nax.set_title('Bar Chart of TM-score')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with multiple subplots\nfig, axs = plt.subplots(2, 2, figsize=(10.0, 8.0))\n\n# Define the data for each subplot\ndata = [\n    {'label': 'Swiss', 'color': 'tab:blue'},\n    {'label': 'New Zealand', 'color': 'tab:orange'}\n]\n\n# Loop through each subplot and plot the data\nfor i, ax in enumerate(axs.flatten()):\n    # Generate random data for the histogram\n    x = np.random.normal(loc=i+1, scale=0.5, size=100)\n    ax.hist(x, bins=10, color=data[i]['color'], alpha=0.7)\n    \n    # Set the title of the subplot\n    ax.set_title(f'({chr(97+i)}) Milk Chocolate')\n    \n    # Add a legend to the subplot\n    ax.legend(data, loc='upper right')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the bar chart\nx = np.array([0.00, 0.05, 0.10, 0.15])\ny = np.array([200, 150, 100, 50])\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(5.0, 4.0))\n\n# Plot the bar chart\nax.bar(x, y, color='brown')\n\n# Add labels and title\nax.set_xlabel('Concept Weight')\nax.set_ylabel('Count')\nax.set_title('CIFAR100 \\'Desert\\' Concept')\n\n# Add a legend\nax.legend(['Camel', 'Kangaroo'], loc='upper right')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Generate random data for the histogram\nnp.random.seed(42)\ncenter_data = np.random.normal(loc=0, scale=1, size=1000)\nrandom_data = np.random.normal(loc=5, scale=2, size=1000)\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 3.0))\n\n# Plot the histograms\nax.hist(center_data, bins=20, color='yellow', alpha=0.7, label='Center')\nax.hist(random_data, bins=20, color='blue', alpha=0.7, label='Random')\n\n# Add labels and title\nax.set_xlabel('Distance Difference (Random vs. Center)')\nax.set_ylabel('Number of Examples')\nax.set_title('Histogram of Distance Differences')\n\n# Add legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Generate random data\nnp.random.seed(42)\ndata = np.random.normal(loc=5, scale=2, size=1000)\n\n# Create histogram\nfig, ax = plt.subplots(figsize=(4.0, 3.0))\nax.hist(data, bins=10, color='orange', edgecolor='black')\n\n# Set axis limits and labels\nax.set_xlim(0, 12.5)\nax.set_ylim(0, 1500)\nax.set_xlabel('Number of Repetition')\nax.set_ylabel('Number of Clusters')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Generate random data for the histogram\nnp.random.seed(42)\ndata = np.random.normal(loc=0, scale=1, size=1000)\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 3.0))\n\n# Plot the histogram with a blue color\nax.hist(data, bins=10, color='blue', alpha=0.7)\n\n# Set the title and labels\nax.set_title('Histogram of Random Data')\nax.set_xlabel('Value')\nax.set_ylabel('Frequency')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the labels for the x and y axes\nax.set_xlabel('Confidence')\nax.set_ylabel('Accuracy in bin')\n\n# Set the ticks for the x and y axes\nax.set_xticks(np.arange(0, 1.1, 0.2))\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the limits for the x and y axes\nax.set_xlim([0, 1])\nax.set_ylim([0, 1])\n\n# Set the grid lines for the x and y axes\nax.grid(True)\n\n# Set the tick labels for the x and y axes\nax.set_xticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('Calibration Error: 0.31', fontsize=16, color='orange')\n\n# Set the font size for the x and y axis labels\nax.set_xlabel('Confidence', fontsize=12)\nax.set_ylabel('Accuracy in bin', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the font size for the title\nax.set_title('"}
{"file": "dataset/ori_500/hist_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Generate random data\nnp.random.seed(42)\ndata = np.random.normal(loc=0.5, scale=0.1, size=1000)\n\n# Create histogram\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\nax.hist(data, bins=10, color='blue', edgecolor='black')\n\n# Set labels and title\nax.set_xlabel('% images overlap')\nax.set_ylabel('Number of queries')\nax.set_title('Histogram of Image Overlap')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_9.pdf", "response": "```python\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n# Generate random data for MNIST\nnp.random.seed(42)\nmnist_data = np.random.normal(loc=0.5, scale=0.1, size=1000)\n\n# Generate random data for FashionMNIST\nfashion_mnist_data = np.random.normal(loc=0.5, scale=0.1, size=1000)\n\n# Plot MNIST data\nplt.figure(figsize=(10.0, 7.0))\nplt.hist(mnist_data, bins=30, color='blue', alpha=0.5)\nplt.title('MNIST')\nplt.xlabel('Value')\nplt.ylabel('Frequency')\nplt.show()\n\n# Plot FashionMNIST data\nplt.figure(figsize=(10.0, 7.0))\nplt.hist(fashion_mnist_data, bins=30, color='blue', alpha=0.5)\nplt.title('FashionMNIST')\nplt.xlabel('Value')\nplt.ylabel('Frequency')\nplt.show()\n```"}
{"file": "dataset/ori_500/line_1.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\nx = np.array([5, 10, 15, 20])\ny1 = np.array([20, 40, 60, 80])\ny2 = np.array([30, 50, 70, 90])\ny3 = np.array([40, 60, 80, 100])\n\n# Plot the data\nplt.plot(x, y1, 'bo-')\nplt.plot(x, y2, 'ro-')\nplt.plot(x, y3, 'go-')\n\n# Add labels and title\nplt.xlabel('SNR')\nplt.ylabel('Classification Accuracy (%)')\nplt.title('Classification Accuracy vs SNR')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_10.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 8)\n\n# Set the y-axis limits\nax.set_ylim(0, 7)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 9, 1))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 8, 1))\n\n# Set the x-axis labels\nax.set_xticklabels(['0', '0.125', '0.25', '0.375', '0.5', '0.625', '0.75', '0.875', '1'])\n\n# Set the y-axis labels\nax.set_yticklabels(['0', '1', '2', '3', '4', '5', '6', '7'])\n\n# Set the x-axis label\nax.set_xlabel('n')\n\n# Set the y-axis label\nax.set_ylabel('Performance Gain (%)')\n\n# Set the title\nax.set_title('Performance of Content, Organization, and Language')\n\n# Set the grid\nax.grid(True, linestyle='--')\n\n# Plot the data\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2, 2, 1, 1, 0, 0], 'b-')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8], [0, 1, 1, 2"}
{"file": "dataset/ori_500/line_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Effect of Vocab on Zero Shot Accuracy')\n\n# Set the labels for the x and y axes\nax.set_xlabel('Decomposition IO Norm')\nax.set_ylabel('Accuracy')\n\n# Define the data points for each line\nx = np.array([0, 20, 40, 60, 80])\ny1 = np.array([0.55, 0.60, 0.65, 0.70, 0.75])\ny2 = np.array([0.55, 0.60, 0.65, 0.70, 0.75])\ny3 = np.array([0.55, 0.60, 0.65, 0.70, 0.75])\ny4 = np.array([0.55, 0.60, 0.65, 0.70, 0.75])\ny5 = np.array([0.55, 0.60, 0.65, 0.70, 0.75])\n\n# Plot the lines with different colors and markers\nax.plot(x, y1, 'ro-', label='coco (10k)')\nax.plot(x, y2, 'go-', label='laion (10k)')\nax.plot(x, y3, 'bo-', label='coco (5k)')\nax.plot(x, y4, 'ko-', label='laion (5k)')\nax.plot(x, y5, 'yo-', label='CLIP')\n\n# Add a legend to the plot\nax.legend()\n\n# Set the limits for the x and y axes\nax.set_xlim(0, 80)\nax.set_ylim(0.55, 0.75)\n\n# Set the tick marks for the x and y axes\nax.set_xticks(np.arange(0, 81, 20))\nax.set_yticks(np.arange(0.55, 0.76, 0.05))\n\n# Set the grid lines for the plot\nax.grid(True)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect of Vocab on Zero Shot Accuracy', fontsize=12)\n\n# Set the font size for the axis labels\nax.set_xlabel('Decomposition IO Norm', fontsize=12)\nax.set_ylabel('Accuracy', fontsize=12)\n\n# Set the font size for the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the title\nax.set_title('Effect"}
{"file": "dataset/ori_500/line_12.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Define the data\nx = np.array([0.25, 0.50, 0.75, 1.00])\ny = np.array([0.03, 0.02, 0.01, 0.00])\n\n# Plot the data\nax.plot(x, y, 'o-')\n\n# Set the labels\nax.set_xlabel('Sample Ratio')\nax.set_ylabel('Std of ACC')\n\n# Add a legend\nax.legend(['MAXN=512', 'MAXN=1024', 'MAXN=2048'], loc='upper left')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_13.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig, ax = plt.subplots(figsize=(8.0, 10.0))\n\n# Plot the first line graph\nax.plot(np.arange(201), np.array([0.5, 0.4, 0.3, 0.2, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), label='base')\nax.plot(np.arange(201), np.array([0.5, 0.4, 0.3, 0.2, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), label='ours')\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('Training iterations')\nax.set_ylabel('FID (\u00b5)')\n\n# Add a legend to the plot\nax.legend()\n\n# Create a second subplot\nax2 = fig.add_subplot(312)\n\n# Plot the second line graph\nax2.plot(np.arange(201), np.array([0.5, 0.4, 0.3, 0.2, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), label='base')\nax2.plot(np.arange(201), np.array([0.5, 0.4, 0.3, 0.2, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), label='ours')\n\n# Set the x-axis and y-axis labels\nax2.set_xlabel('Training iterations')\nax2.set_ylabel('IS (\u00b5)')\n\n# Add a legend to the plot\nax2.legend()\n\n# Create a third subplot\nax3 = fig.add_subplot(313)\n\n# Plot the third line graph\nax3.plot(np.arange(201), np.array([0.5, 0.4, 0.3, 0.2, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), label='base')\nax3.plot(np.arange(201), np.array([0.5, 0.4, 0.3, 0.2, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]), label='ours')\n\n# Set the x-axis and y-axis labels\nax3.set_xlabel('Training iterations')\nax3.set_ylabel('CW-FID (\u00b5)')\n\n# Add a legend to the plot\nax3.legend()\n\nplt.show()"}
{"file": "dataset/ori_500/line_14.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Plot the data\nax.plot(x, y1, 'r-x', label='Auto-profiled')\nax.plot(x, y2, 'bo-', label='Manually-analyzed')\n\n# Add a vertical line at x=10\nax.axvline(x=10, color='orange', linestyle='--')\n\n# Add a horizontal line at y=0.75\nax.axhline(y=0.75, color='green', linestyle='--')\n\n# Add a rectangle\nrect = plt.Rectangle((10, 0.75), 18, 0.25, facecolor='lightblue', alpha=0.5)\nax.add_patch(rect)\n\n# Add a text box\nax.text(10, 0.75, 'Release new product', ha='center', va='center', rotation=90, color='cyan')\n\n# Add a circle\ncircle = plt.Circle((15, 0.75), 0.25, color='yellow')\nax.add_artist(circle)\n\n# Add a text box\nax.text(15, 0.75, 'Realize the trend', ha='center', va='center', rotation=90, color='black')\n\n# Set the labels\nax.set_xlabel('Week')\nax.set_ylabel('Normalized Value')\n\n# Set the legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_15.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Define the data\nx = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\ny1 = np.array([99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80])\ny2 = np.array([98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79])\ny3 = np.array([97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78])\ny4 = np.array([96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77])\ny5 = np.array([95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76])\ny6 = np.array([94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75])\ny7 = np.array([93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74])\ny8 = np.array([92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73])\ny9 = np.array([91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72])\ny10 = np.array([90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71])\ny11 = np.array([89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70])\ny12 = np.array([88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69])\ny13 = np.array([87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68])\ny14 = np.array([86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67])\ny15 = np.array([85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66])\ny16 = np.array([84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65])\ny17 = np.array([83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64])\ny18 = np.array([82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63])\ny19 = np.array([81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62])\ny20 = np.array([80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61])\n\n# Plot the data\nax.plot(x, y1, 's-', color='blue')\nax.plot(x, y2, 's-', color='red')\nax.plot(x, y3, 's-', color='purple')\nax.plot(x, y4, 's-', color='pink')\n\n# Set the labels\nax.set_xlabel('Task')\nax.set_ylabel('Average Accuracy (%)')\n\n# Add the legend\nax.legend(['BaCE', 'LWF', 'EWC', 'SEQ'], loc='upper left')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_16.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Define the data\nx = np.array([0.0, 0.2, 0.4, 0.6, 0.8, 1.0])\ny1 = np.array([0.99, 0.97, 0.96, 0.95, 0.93, 0.92])\ny2 = np.array([0.99, 0.97, 0.96, 0.95, 0.93, 0.92])\ny3 = np.array([0.99, 0.97, 0.96, 0.95, 0.93, 0.92])\n\n# Plot the data\nax.plot(x, y1, 'bo-', label='Oesense')\nax.plot(x, y2, 'ro-', label='KWS')\nax.plot(x, y3, 'go-', label='ECG5000')\n\n# Set the labels and title\nax.set_xlabel('Uncertainty threshold')\nax.set_ylabel('Accuracy')\nax.set_title('Comparison of models')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the x-axis and y-axis limits\nax.set_xlim(0, 120)\nax.set_ylim(10**-5, 10**-1)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('Number of Parameters')\nax.set_ylabel('Log KL Divergence')\n\n# Set the grid\nax.grid(True)\n\n# Generate the data\nx = np.linspace(0, 120, 100)\ny = np.exp(-x/10)\n\n# Plot the data\nax.plot(x, y, 'bo-', lw=2)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_18.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 4.0))\n\n# Set the title of the plot\nax.set_title('GPT-4 Evaluation')\n\n# Set the x-axis label\nax.set_xlabel('Iterations')\n\n# Set the y-axis label\nax.set_ylabel('Attack Success Rate')\n\n# Set the x-axis ticks\nax.set_xticks([0, 500, 1000, 1500, 2000])\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 1.1, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '500', '1000', '1500', '2000'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick lines\nax.spines['bottom'].set_color('red')\n\n# Set the color of the y-axis tick lines\nax.spines['left'].set_color('blue')\n\n# Set the color of the x-axis tick line width\nax.spines['bottom'].set_linewidth(2)\n\n# Set the color of the y-axis tick line width\nax.spines['left'].set_linewidth(2)\n\n# Set the color of the x-axis tick line style\nax.spines['bottom'].set_linestyle('--')\n\n# Set the color of the y-axis tick line style\nax.spines['left'].set_linestyle('--')\n\n# Set the color of the x-axis tick line capsize\nax.spines['bottom'].set_capsize(5)\n\n# Set the color of the y-axis tick line capsize\nax.spines['left'].set_capsize(5)\n\n# Set the color of the x-axis tick line joinstyle\nax.spines['bottom'].set_joinstyle('round')\n\n# Set the color of the y-axis tick line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the color of the x-axis tick line miterlimit\nax.spines['bottom'].set_miterlimit(5)\n\n# Set the color of the y-axis tick line miterlimit\nax.spines['left'].set_miterlimit(5)\n\n# Set the color of the x-axis tick line marker\nax.spines['bottom'].set_marker('o')\n\n# Set the color of the y-axis tick line marker\nax.spines['left'].set_marker('o')\n\n# Set the color of the x-axis tick line markersize\nax.spines['bottom'].set_markersize(5)\n\n# Set the color of the y-axis tick line markersize\nax.spines['left'].set_markersize(5)\n\n# Set the color of the x-axis tick line markerfacecolor\nax.spines['bottom'].set_markerfacecolor('red')\n\n# Set the color of the y-axis tick line markerfacecolor\nax.spines['left'].set_markerfacecolor('blue')\n\n# Set the color of the x-axis tick line markeredgecolor\nax.spines['bottom'].set_markeredgecolor('red')\n\n# Set the color of the y-axis tick line markeredgecolor\nax.spines['left'].set_markeredgecolor('blue')\n\n# Set the color of the x-axis tick line markeredgewidth\nax.spines['bottom'].set_markeredgewidth(2)\n\n# Set the color of the y-axis tick line markeredgewidth\nax.spines['left'].set_markeredgewidth(2)\n\n# Set the color of the x-axis tick line markeredgelinecap\nax.spines['bottom'].set_markeredgelinecap('round')\n\n# Set the color of the y-axis tick line markeredgelinecap\nax.spines['left'].set_markeredgelinecap('round')\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n# Set the color of the x-axis tick line markeredgelinejoinstyle\nax.spines['bottom'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the y-axis tick line markeredgelinejoinstyle\nax.spines['left'].set_markeredgelinejoinstyle('round')\n\n# Set the color of the x-axis tick line markeredgelinecapsize\nax.spines['bottom'].set_markeredgelinecapsize(5)\n\n# Set the color of the y-axis tick line markeredgelinecapsize\nax.spines['left'].set_markeredgelinecapsize(5)\n\n"}
{"file": "dataset/ori_500/line_19.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 4.0))\n\n# Set the x-axis label\nax.set_xlabel('fraction of training data (log scale)')\n\n# Set the y-axis label\nax.set_ylabel('test accuracy (%)')\n\n# Set the grid\nax.grid(True)\n\n# Set the x-axis limits\nax.set_xlim(1e-2, 1e0)\n\n# Set the y-axis limits\nax.set_ylim(40, 80)\n\n# Set the tick labels\nax.set_xticks([1e-2, 1e-1, 1e0])\nax.set_yticks([40, 50, 60, 70, 80])\n\n# Set the tick labels\nax.set_xticklabels(['1e-2', '1e-1', '1e0'])\nax.set_yticklabels(['40', '50', '60', '70', '80'])\n\n# Set the legend\nax.legend(['Full', 'SPT', 'VPT'], loc='upper left')\n\n# Set the line width\nax.plot([1e-2, 1e-1, 1e0], [40, 50, 60], 'bo-', linewidth=1.0)\nax.plot([1e-2, 1e-1, 1e0], [50, 60, 70], 'ro-', linewidth=1.0)\nax.plot([1e-2, 1e-1, 1e0], [60, 70, 80], 'go-', linewidth=1.0)\n\n# Set the marker size\nax.plot([1e-2, 1e-1, 1e0], [40, 50, 60], 'bo-', markersize=3.0)\nax.plot([1e-2, 1e-1, 1e0], [50, 60, 70], 'ro-', markersize=3.0)\nax.plot([1e-2, 1e-1, 1e0], [60, 70, 80], 'go-', markersize=3.0)\n\nplt.show()"}
{"file": "dataset/ori_500/line_2.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create some data\nx = np.linspace(0, 200, 10)\ny1 = np.sin(x/50)\ny2 = np.cos(x/50)\ny3 = np.tan(x/50)\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(4.0, 3.0))\n\n# Plot the data\nax.plot(x, y1, label='sin(x/50)', color='blue')\nax.plot(x, y2, label='cos(x/50)', color='red')\nax.plot(x, y3, label='tan(x/50)', color='green')\n\n# Add a legend\nax.legend()\n\n# Set the x-axis label\nax.set_xlabel('Gradient Steps (x 62.5K)')\n\n# Set the y-axis label\nax.set_ylabel('Value')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/line_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(16.0, 8.0))\n\n# Plot the data\nax.plot(ratio, performance, 'o-', color='orange')\nax.plot(ratio, performance, 'o-', color='purple')\n\n# Set the title and labels\nax.set_title('MOLHIV')\nax.set_xlabel('Ratio r')\nax.set_ylabel('Performance')\n\n# Add a legend\nax.legend(['PNA + ours', 'GIN + ours', 'PNA + GSAT', 'GIN + GSAT', 'Ours'], loc='upper left')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_21.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Define the data for the plot\nx = np.array([120, 90, 60, 30, 1])\ny = np.array([77.5, 80.0, 82.5, 85.0, 87.5])\n\n# Plot the data\nax.plot(x, y, 'o-')\n\n# Set the title and labels\nax.set_title('Top-1 Acc (%)')\nax.set_xlabel('Imbalance Ratio of Unlabeled Data')\nax.set_ylabel('Top-1 Acc (%)')\n\n# Add a legend\nax.legend(['Ours', 'ACR'])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_22.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 4.0))\n\n# Set the x-axis label\nax.set_xlabel('Ratio of 4-bit Utilization (%)')\n\n# Set the y-axis label\nax.set_ylabel('Perplexity (PPL)')\n\n# Set the title of the plot\nax.set_title('Perplexity vs. Ratio of 4-bit Utilization')\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100])\n\n# Set the tick labels for the y-axis\nax.set_yticks([5.0, 5.5, 6.0, 6.5, 7.0, 7.5])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['40', '50', '60', '70', '80', '90', '100'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['5.0', '5.5', '6.0', '6.5', '7.0', '7.5'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticks([5.0, 5.5, 6.0, 6.5, 7.0, 7.5], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['40', '50', '60', '70', '80', '90', '100'], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['5.0', '5.5', '6.0', '6.5', '7.0', '7.5'], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticks([5.0, 5.5, 6.0, 6.5, 7.0, 7.5], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['40', '50', '60', '70', '80', '90', '100'], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['5.0', '5.5', '6.0', '6.5', '7.0', '7.5'], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticks([5.0, 5.5, 6.0, 6.5, 7.0, 7.5], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['40', '50', '60', '70', '80', '90', '100'], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['5.0', '5.5', '6.0', '6.5', '7.0', '7.5'], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticks([5.0, 5.5, 6.0, 6.5, 7.0, 7.5], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['40', '50', '60', '70', '80', '90', '100'], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['5.0', '5.5', '6.0', '6.5', '7.0', '7.5'], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticks([5.0, 5.5, 6.0, 6.5, 7.0, 7.5], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['40', '50', '60', '70', '80', '90', '100'], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['5.0', '5.5', '6.0', '6.5', '7.0', '7.5'], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticks([5.0, 5.5, 6.0, 6.5, 7.0, 7.5], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['40', '50', '60', '70', '80', '90', '100'], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['5.0', '5.5', '6.0', '6.5', '7.0', '7.5'], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticks([5.0, 5.5, 6.0, 6.5, 7.0, 7.5], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['40', '50', '60', '70', '80', '90', '100'], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['5.0', '5.5', '6.0', '6.5', '7.0', '7.5'], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticks([5.0, 5.5, 6.0, 6.5, 7.0, 7.5], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['40', '50', '60', '70', '80', '90', '100'], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['5.0', '5.5', '6.0', '6.5', '7.0', '7.5'], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticks([5.0, 5.5, 6.0, 6.5, 7.0, 7.5], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['40', '50', '60', '70', '80', '90', '100'], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['5.0', '5.5', '6.0', '6.5', '7.0', '7.5'], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticks([5.0, 5.5, 6.0, 6.5, 7.0, 7.5], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['40', '50', '60', '70', '80', '90', '100'], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['5.0', '5.5', '6.0', '6.5', '7.0', '7.5'], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticks([5.0, 5.5, 6.0, 6.5, 7.0, 7.5], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['40', '50', '60', '70', '80', '90', '100'], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['5.0', '5.5', '6.0', '6.5', '7.0', '7.5'], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticks([5.0, 5.5, 6.0, 6.5, 7.0, 7.5], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['40', '50', '60', '70', '80', '90', '100'], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['5.0', '5.5', '6.0', '6.5', '7.0', '7.5'], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticks([5.0, 5.5, 6.0, 6.5, 7.0, 7.5], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['40', '50', '60', '70', '80', '90', '100'], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['5.0', '5.5', '6.0', '6.5', '7.0', '7.5'], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticks([5.0, 5.5, 6.0, 6.5, 7.0, 7.5], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['40', '50', '60', '70', '80', '90', '100'], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['5.0', '5.5', '6.0', '6.5', '7.0', '7.5'], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticks([5.0, 5.5, 6.0, 6.5, 7.0, 7.5], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['40', '50', '60', '70', '80', '90', '100'], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['5.0', '5.5', '6.0', '6.5', '7.0', '7.5'], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticks([5.0, 5.5, 6.0, 6.5, 7.0, 7.5], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['40', '50', '60', '70', '80', '90', '100'], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['5.0', '5.5', '6.0', '6.5', '7.0', '7.5'], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticks([5.0, 5.5, 6.0, 6.5, 7.0, 7.5], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['40', '50', '60', '70', '80', '90', '100'], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['5.0', '5.5', '6.0', '6.5', '7.0', '7.5'], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticks([5.0, 5.5, 6.0, 6.5, 7.0, 7.5], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['40', '50', '60', '70', '80', '90', '100'], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['5.0', '5.5', '6.0', '6.5', '7.0', '7.5'], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticks([5.0, 5.5, 6.0, 6.5, 7.0, 7.5], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['40', '50', '60', '70', '80', '90', '100'], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['5.0', '5.5', '6.0', '6.5', '7.0', '7.5'], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticks([5.0, 5.5, 6.0, 6.5, 7.0, 7.5], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['40', '50', '60', '70', '80', '90', '100'], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['5.0', '5.5', '6.0', '6.5', '7.0', '7.5'], minor=True)\n\n# Set the tick labels for the x-axis\nax.set_xticks([40, 50, 60, 70, 80, 90, 100], minor=True)\n\n# Set the tick labels for the y-axis\nax.set_y"}
{"file": "dataset/ori_500/line_23.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data points\nx = [2, 3, 5, 7]\ny = [67.32, 82.98, 89.53, 96.75]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 2.0))\n\n# Plot the data points\nax.plot(x, y, 'o-')\n\n# Set the tick labels\nax.set_xticks(x)\nax.set_xticklabels(['$2^1$', '$2^3$', '$2^5$', '$2^7$'])\n\n# Set the axis labels\nax.set_xlabel('Number of Training Objects')\nax.set_ylabel('Coverage Ratio (%)')\n\n# Set the background color\nax.set_facecolor('#f0f0f0')\n\n# Set the grid lines\nax.grid(True)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the x-axis label\nax.set_xlabel('Iterations')\n\n# Set the y-axis label\nax.set_ylabel('N-ELBO')\n\n# Set the title of the plot\nax.set_title('N-ELBO')\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([600, 650, 700, 750])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['0', '2', '4', '6', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['600', '650', '700', '750'])\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 2, 4, 6, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks(["}
{"file": "dataset/ori_500/line_25.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, axs = plt.subplots(2, figsize=(8.0, 6.0))\n\n# First subplot\naxs[0].plot([1, 2, 3, 4, 5, 6, 7, 8], [2.9, 3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6], 'bo-')\naxs[0].plot([1, 2, 3, 4, 5, 6, 7, 8], [2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7], 'go-')\naxs[0].plot([1, 2, 3, 4, 5, 6, 7, 8], [2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8], 'ro-')\naxs[0].set_title('DoN Score')\naxs[0].set_xlabel('Number of Experts')\naxs[0].set_ylabel('DoN Score')\n\n# Second subplot\naxs[1].plot([1, 2, 3, 4, 5, 6, 7, 8], [7.5, 7.6, 7.7, 7.8, 7.9, 8.0, 8.1, 8.2], 'bo-')\naxs[1].plot([1, 2, 3, 4, 5, 6, 7, 8], [6.5, 6.6, 6.7, 6.8, 6.9, 7.0, 7.1, 7.2], 'go-')\naxs[1].plot([1, 2, 3, 4, 5, 6, 7, 8], [5.5, 5.6, 5.7, 5.8, 5.9, 6.0, 6.1, 6.2], 'ro-')\naxs[1].set_title('Rainbow')\naxs[1].set_xlabel('Number of Experts')\naxs[1].set_ylabel('Rainbow')\n\n# Add legend\nfig.legend(['Baseline', 'SoftMoE', 'Top1-MoE'], loc='upper right')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_26.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\nx = np.array([256, 512, 1024, 2048, 4096, 8192, 16384])\ny1 = np.array([0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001])\ny2 = np.array([0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001])\ny3 = np.array([0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001])\ny4 = np.array([0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001])\ny5 = np.array([0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001])\ny6 = np.array([0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001])\ny7 = np.array([0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001])\ny8 = np.array([0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001, 0.0001])\n\n# Plot the data\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\nax.plot(x, y1, 'bo-', label='BPE')\nax.plot(x, y2, 'ro-', label='Wordpunct')\nax.plot(x, y3, 'go-', label='Whitespaces')\n\n# Set the labels and title\nax.set_xlabel('Vocabulary Size')\nax.set_ylabel('Test set TPR | FPR = 10^-4')\nax.set_title('Test set TPR | FPR = 10^-4')\n\n# Add a legend\nax.legend()\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_27.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the x-axis and y-axis limits\nax.set_xlim(1, 30)\nax.set_ylim(15, 55)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('Compression Rate')\nax.set_ylabel('Word Error Rate (%)')\n\n# Set the grid lines\nax.grid(True, which='both', linestyle='--')\n\n# Set the tick marks\nax.set_xticks(np.arange(1, 31, 1))\nax.set_yticks(np.arange(15, 56, 5))\n\n# Add the legend\nax.legend(['CNN', 'CIF', 'STAR'], loc='upper left')\n\n# Add the data points\nax.plot([1, 12, 18, 30], [26.0, 24.7, 30.2, 36.8], 'o-', color='lightgrey')\nax.plot([1, 12, 18, 30], [17.9, 18.0, 19.8, 22.6], 'o-', color='darkgrey')\nax.plot([1, 12, 18, 30], [15.8, 15.8, 19.8, 36.8], 'o-', color='purple')\n\n# Add the text annotations\nax.text(1, 26.0, '26.0', ha='center', va='bottom')\nax.text(12, 24.7, '24.7', ha='center', va='bottom')\nax.text(18, 30.2, '30.2', ha='center', va='bottom')\nax.text(30, 36.8, '36.8', ha='center', va='bottom')\n\nax.text(1, 17.9, '17.9', ha='center', va='bottom')\nax.text(12, 18.0, '18.0', ha='center', va='bottom')\nax.text(18, 19.8, '19.8', ha='center', va='bottom')\nax.text(30, 22.6, '22.6', ha='center', va='bottom')\n\nax.text(1, 15.8, '15.8', ha='center', va='bottom')\nax.text(12, 15.8, '15.8', ha='center', va='bottom')\nax.text(18, 19.8, '19.8', ha='center', va='bottom')\nax.text(30, 36.8, '36.8', ha='center', va='bottom')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_28.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Define the data points for the accuracy of five rounds\nx = np.array([25, 50, 75, 100, 125, 150, 175, 200])\ny = np.array([0.93, 0.94, 0.95, 0.96, 0.97, 0.98, 0.99, 1.00])\n\n# Plot the data points with specific markers and colors\nax.plot(x, y, 's-', color='r', label='PILOTE')\n\n# Define the data points for the Re-trained model\nx = np.array([25, 50, 75, 100, 125, 150, 175, 200])\ny = np.array([0.85, 0.86, 0.87, 0.88, 0.89, 0.90, 0.91, 0.92])\n\n# Plot the data points with specific markers and colors\nax.plot(x, y, 'o-', color='b', label='Re-trained model')\n\n# Define the data points for the Pre-trained model accuracy\nx = np.array([25, 50, 75, 100, 125, 150, 175, 200])\ny = np.array([0.75, 0.76, 0.77, 0.78, 0.79, 0.80, 0.81, 0.82])\n\n# Plot the data points with specific markers and colors\nax.plot(x, y, 'd--', color='g', label='Pre-trained model accuracy')\n\n# Set the x-axis label\nax.set_xlabel('Number of exemplars in class \\'Run\\'')\n\n# Set the y-axis label\nax.set_ylabel('avg. acc. of five rounds')\n\n# Set the legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_29.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(4.0, 3.0))\n\n# Define the data\nx = np.arange(21)\ny1 = np.array([0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1])\ny2 = np.array([0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1])\n\n# Plot the data\nax.plot(x, y1, label='xLLM', color='darkviolet', linestyle='--')\nax.plot(x, y2, label='Single-Pass LLM', color='red')\n\n# Add a legend\nax.legend()\n\n# Set the axis labels\nax.set_xlabel('# of Steps')\nax.set_ylabel('Avg Fidelity')\n\n# Set the tick marks\nax.set_xticks(np.arange(0, 21, 5))\nax.set_yticks(np.arange(0, 0.26, 0.05))\n\n# Set the tick labels\nax.set_xticklabels(['0', '5', '10', '15', '20'])\nax.set_yticklabels(['0.00', '0.05', '0.10', '0.15', '0.20'])\n\n# Set the background color\nax.set_facecolor('lightgrey')\n\n# Set the grid lines\nax.grid(True)\n\n# Set the axis limits\nax.set_xlim(0, 20)\nax.set_ylim(0, 0.25)\n\n# Save the figure\nplt.savefig('figure.png')"}
{"file": "dataset/ori_500/line_3.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Set the x-axis labels\nx_labels = ['All', 'MLP', 'GCN', 'NCN', 'NCN', 'NeogNN-Buddy', 'SEAL', 'Node2Vec']\n\n# Set the y-axis limits\nax.set_ylim(40, 80)\n\n# Set the x-axis limits\nax.set_xlim(0, 7)\n\n# Set the x-axis tick labels\nax.set_xticks(np.arange(len(x_labels)))\nax.set_xticklabels(x_labels)\n\n# Plot the data\nax.plot([80, 79, 78, 77, 76, 75, 74, 73], label='Hits@50')\nax.errorbar([80, 79, 78, 77, 76, 75, 74, 73], [80, 79, 78, 77, 76, 75, 74, 73], yerr=1, fmt='-o')\n\n# Add a legend\nax.legend()\n\nplt.show()"}
{"file": "dataset/ori_500/line_30.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Android')\n\n# Set the labels for the x and y axes\nax.set_xlabel('Layer')\nax.set_ylabel('Error')\n\n# Define the data points for the plot\nx = np.array([2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])\ny = np.array([0.0035, 0.0036, 0.0037, 0.0038, 0.0039, 0.0040, 0.0041, 0.0042, 0.0043, 0.0044, 0.0045])\n\n# Plot the data points\nax.plot(x, y, 'o-')\n\n# Add a legend to the plot\nax.legend(['outside-code-diff', 'inside-code-diff'], loc='upper right')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_31.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis label\nax.set_xlabel('Digit Length')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Set the title of the plot\nax.set_title('Comparison of Different Methods')\n\n# Set the tick labels for the x-axis\nax.set_xticks([6, 7, 8, 9])\nax.set_xticklabels(['6', '7', '8', '9'])\n\n# Set the tick labels for the y-axis\nax.set_yticks(np.arange(0.3, 1.1, 0.1))\nax.set_yticklabels(['0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1.0'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the legend\nax.legend(loc='upper left', bbox_to_anchor=(1,1), shadow=True, fancybox=True)\n\n# Plot the data\nax.plot([6, 7, 8, 9], [0.9, 0.8, 0.7, 0.6], 'o-', color='red')\nax.plot([6, 7, 8, 9], [0.8, 0.7, 0.6, 0.5], 'o-', color='green')\nax.plot([6, 7, 8, 9], [0.7, 0.6, 0.5, 0.4], 'o-', color='blue')\nax.plot([6, 7, 8, 9], [0.6, 0.5, 0.4, 0.3], 'o-', color='orange')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_32.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('CIFAR100 States Zero Shot Accuracy')\n\n# Set the labels for the x and y axes\nax.set_xlabel('Decomposition IO Norm')\nax.set_ylabel('Accuracy')\n\n# Set the grid lines\nax.grid(True)\n\n# Set the tick marks\nax.set_xticks(np.arange(0, 90, 10))\nax.set_yticks(np.arange(0, 0.4, 0.05))\n\n# Set the tick labels\nax.set_xticklabels(['0', '20', '40', '60', '80'])\nax.set_yticklabels(['0.200', '0.250', '0.300', '0.350', '0.400'])\n\n# Set the legend\nax.legend(['Dictionary', 'Laion', 'CLIP'], loc='upper left')\n\n# Set the line color\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], 'o-', color='orange')\n\n# Set the marker color\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], 'o', color='orange')\n\n# Set the line width\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linewidth=2)\n\n# Set the marker size\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], markersize=10)\n\n# Set the line style\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linestyle='--')\n\n# Set the line color\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], color='black')\n\n# Set the line width\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linewidth=2)\n\n# Set the marker size\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], markersize=10)\n\n# Set the line style\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linestyle='--')\n\n# Set the line color\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], color='black')\n\n# Set the line width\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linewidth=2)\n\n# Set the marker size\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], markersize=10)\n\n# Set the line style\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linestyle='--')\n\n# Set the line color\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], color='black')\n\n# Set the line width\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linewidth=2)\n\n# Set the marker size\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], markersize=10)\n\n# Set the line style\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linestyle='--')\n\n# Set the line color\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], color='black')\n\n# Set the line width\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linewidth=2)\n\n# Set the marker size\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], markersize=10)\n\n# Set the line style\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linestyle='--')\n\n# Set the line color\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], color='black')\n\n# Set the line width\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linewidth=2)\n\n# Set the marker size\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], markersize=10)\n\n# Set the line style\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linestyle='--')\n\n# Set the line color\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], color='black')\n\n# Set the line width\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linewidth=2)\n\n# Set the marker size\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], markersize=10)\n\n# Set the line style\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linestyle='--')\n\n# Set the line color\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], color='black')\n\n# Set the line width\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linewidth=2)\n\n# Set the marker size\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], markersize=10)\n\n# Set the line style\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linestyle='--')\n\n# Set the line color\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], color='black')\n\n# Set the line width\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linewidth=2)\n\n# Set the marker size\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], markersize=10)\n\n# Set the line style\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linestyle='--')\n\n# Set the line color\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], color='black')\n\n# Set the line width\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linewidth=2)\n\n# Set the marker size\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], markersize=10)\n\n# Set the line style\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linestyle='--')\n\n# Set the line color\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], color='black')\n\n# Set the line width\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linewidth=2)\n\n# Set the marker size\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], markersize=10)\n\n# Set the line style\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linestyle='--')\n\n# Set the line color\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], color='black')\n\n# Set the line width\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linewidth=2)\n\n# Set the marker size\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], markersize=10)\n\n# Set the line style\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linestyle='--')\n\n# Set the line color\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], color='black')\n\n# Set the line width\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linewidth=2)\n\n# Set the marker size\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], markersize=10)\n\n# Set the line style\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linestyle='--')\n\n# Set the line color\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], color='black')\n\n# Set the line width\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linewidth=2)\n\n# Set the marker size\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], markersize=10)\n\n# Set the line style\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], linestyle='--')\n\n# Set the line color\nax.plot([0, 20, 40, 60, 80], [0.225, 0.275, 0.325, 0.375, 0.425], color='black')\n\n#"}
{"file": "dataset/ori_500/line_33.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Define the data points for each model\nx = np.array([20, 40, 60, 80, 100])\ny1 = np.array([0.45, 0.55, 0.65, 0.75, 0.85])\ny2 = np.array([0.46, 0.56, 0.66, 0.76, 0.86])\ny3 = np.array([0.47, 0.57, 0.67, 0.77, 0.87])\ny4 = np.array([0.48, 0.58, 0.68, 0.78, 0.88])\ny5 = np.array([0.49, 0.59, 0.69, 0.79, 0.89])\n\n# Plot the data points for each model\nax.plot(x, y1, 'o-', color='orange', label='CNN')\nax.plot(x, y2, 'o-', color='red', label='CNN+HMM')\nax.plot(x, y3, 's-', color='blue', label='RF')\nax.plot(x, y4, 's-', color='green', label='RF+HMM')\n\n# Add a vertical line at x=20\nax.axvline(x=20, color='grey', linestyle='--')\n\n# Add a horizontal line at y=0.75\nax.axhline(y=0.75, color='grey', linestyle='--')\n\n# Set the labels for the axes\nax.set_xlabel('No. of Users in Development Set')\nax.set_ylabel('F1')\n\n# Set the tick marks for the axes\nax.set_xticks(x)\nax.set_yticks(np.arange(0.45, 0.90, 0.05))\n\n# Add a legend to the plot\nax.legend()\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_34.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig = plt.figure(figsize=(8.0, 7.0))\nax = fig.add_subplot(111)\n\n# Define the data for the plot\nx = np.array([2, 3, 4, 5, 6, 7, 8])\ny = np.array([27.44, 24.75, 4.54, 23.38, 22.77, 21.47, 21.51])\nz = np.array([6.74, 4.5, 3.96, 3.71, 3.49, 3.34, 2])\n\n# Plot the data\nax.plot(x, y, 'o-', label='LibriCSS (test)')\nax.plot(x, z, 'o-', label='AMI (dev)')\n\n# Set the limits and labels\nax.set_xlim([2, 8])\nax.set_ylim([2, 30])\nax.set_xlabel('Number of microphones')\nax.set_ylabel('WER (%)')\n\n# Add a legend\nax.legend(loc='best')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_35.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Define the data points\nx = np.logspace(-7, -4, 10)\ny = np.logspace(0, 2, 10)\n\n# Plot the data points\nax.plot(x, y, 'o')\n\n# Add labels and title\nax.set_xlabel('Quantization error')\nax.set_ylabel('Search window size ratio')\nax.set_title('M-LVQ-4x8-10')\n\n# Add a grid\nax.grid(True)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_36.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(15.0, 5.0))\n\n# Define the data for the plots\nx = np.linspace(0.1, 1.0, 10)\ny1 = np.sin(x)\ny2 = np.cos(x)\ny3 = np.tan(x)\n\n# Plot the data\nax.plot(x, y1, label='SPMotif-0.5')\nax.plot(x, y2, label='SPMotif-0.7')\nax.plot(x, y3, label='SPMotif-0.9')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/line_37.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Set the x-axis limits\nax.set_xlim(6, 30)\n\n# Set the y-axis limits\nax.set_ylim(74.5, 78.0)\n\n# Set the x-axis label\nax.set_xlabel('Ensemble Size')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Set the x-axis tick labels\nax.set_xticks(np.arange(6, 31, 2))\n\n# Set the y-axis tick labels\nax.set_yticks(np.arange(74.5, 79.0, 0.5))\n\n# Set the x-axis tick label rotation\nax.set_xticklabels(['6', '9', '12', '15', '18', '21', '24', '27', '30'])\n\n# Set the y-axis tick label rotation\nax.set_yticklabels(['74.5', '75.0', '75.5', '76.0', '76.5', '77.0', '77.5', '78.0'])\n\n# Set the x-axis tick label font size\nax.set_xticklabel_fontsize(10)\n\n# Set the y-axis tick label font size\nax.set_yticklabel_fontsize(10)\n\n# Set the x-axis tick label color\nax.set_xticklabel_color('black')\n\n# Set the y-axis tick label color\nax.set_yticklabel_color('black')\n\n# Set the x-axis tick label rotation mode\nax.set_xticklabel_rotation_mode('vertical')\n\n# Set the y-axis tick label rotation mode\nax.set_yticklabel_rotation_mode('horizontal')\n\n# Set the x-axis tick label rotation angle\nax.set_xticklabel_rotation_angle(0)\n\n# Set the y-axis tick label rotation angle\nax.set_yticklabel_rotation_angle(0)\n\n# Set the x-axis tick label rotation direction\nax.set_xticklabel_rotation_direction('clockwise')\n\n# Set the y-axis tick label rotation direction\nax.set_yticklabel_rotation_direction('clockwise')\n\n# Set the x-axis tick label rotation style\nax.set_xticklabel_rotation_style('normal')\n\n# Set the y-axis tick label rotation style\nax.set_yticklabel_rotation_style('normal')\n\n# Set the x-axis tick label rotation alignment\nax.set_xticklabel_rotation_alignment('center')\n\n# Set the y-axis tick label rotation alignment\nax.set_yticklabel_rotation_alignment('center')\n\n# Set the x-axis tick label rotation baseline\nax.set_xticklabel_rotation_baseline('middle')\n\n# Set the y-axis tick label rotation baseline\nax.set_yticklabel_rotation_baseline('middle')\n\n# Set the x-axis tick label rotation vertical alignment\nax.set_xticklabel_rotation_vertical_alignment('baseline')\n\n# Set the y-axis tick label rotation vertical alignment\nax.set_yticklabel_rotation_vertical_alignment('baseline')\n\n# Set the x-axis tick label rotation horizontal alignment\nax.set_xticklabel_rotation_horizontal_alignment('center')\n\n# Set the y-axis tick label rotation horizontal alignment\nax.set_yticklabel_rotation_horizontal_alignment('center')\n\n# Set the x-axis tick label rotation line height\nax.set_xticklabel_rotation_line_height(0.0)\n\n# Set the y-axis tick label rotation line height\nax.set_yticklabel_rotation_line_height(0.0)\n\n# Set the x-axis tick label rotation line width\nax.set_xticklabel_rotation_line_width(0.0)\n\n# Set the y-axis tick label rotation line width\nax.set_yticklabel_rotation_line_width(0.0)\n\n# Set the x-axis tick label rotation line capstyle\nax.set_xticklabel_rotation_line_capstyle('butt')\n\n# Set the y-axis tick label rotation line capstyle\nax.set_yticklabel_rotation_line_capstyle('butt')\n\n# Set the x-axis tick label rotation line joinstyle\nax.set_xticklabel_rotation_line_joinstyle('miter')\n\n# Set the y-axis tick label rotation line joinstyle\nax.set_yticklabel_rotation_line_joinstyle('miter')\n\n# Set the x-axis tick label rotation line miterlimit\nax.set_xticklabel_rotation_line_miterlimit(4.0)\n\n# Set the y-axis tick label rotation line miterlimit\nax.set_yticklabel_rotation_line_miterlimit(4.0)\n\n# Set the x-axis tick label rotation line dasharray\nax.set_xticklabel_rotation_line_dasharray(None)\n\n# Set the y-axis tick label rotation line dasharray\nax.set_yticklabel_rotation_line_dasharray(None)\n\n# Set the x-axis tick label rotation line dashoffset\nax.set_xticklabel_rotation_line_dashoffset(0.0)\n\n# Set the y-axis tick label rotation line dashoffset\nax.set_yticklabel_rotation_line_dashoffset(0.0)\n\n# Set the x-axis tick label rotation line linestyle\nax.set_xticklabel_rotation_line_linestyle('-')\n\n# Set the y-axis tick label rotation line linestyle\nax.set_yticklabel_rotation_line_linestyle('-')\n\n# Set the x-axis tick label rotation line linewidth\nax.set_xticklabel_rotation_line_linewidth(1.0)\n\n# Set the y-axis tick label rotation line linewidth\nax.set_yticklabel_rotation_line_linewidth(1.0)\n\n# Set the x-axis tick label rotation line color\nax.set_xticklabel_rotation_line_color('black')\n\n# Set the y-axis tick label rotation line color\nax.set_yticklabel_rotation_line_color('black')\n\n# Set the x-axis tick label rotation line marker\nax.set_xticklabel_rotation_line_marker(None)\n\n# Set the y-axis tick label rotation line marker\nax.set_yticklabel_rotation_line_marker(None)\n\n# Set the x-axis tick label rotation line markersize\nax.set_xticklabel_rotation_line_markersize(6.0)\n\n# Set the y-axis tick label rotation line markersize\nax.set_yticklabel_rotation_line_markersize(6.0)\n\n# Set the x-axis tick label rotation line markeredgecolor\nax.set_xticklabel_rotation_line_markeredgecolor('black')\n\n# Set the y-axis tick label rotation line markeredgecolor\nax.set_yticklabel_rotation_line_markeredgecolor('black')\n\n# Set the x-axis tick label rotation line markerfacecolor\nax.set_xticklabel_rotation_line_markerfacecolor('none')\n\n# Set the y-axis tick label rotation line markerfacecolor\nax.set_yticklabel_rotation_line_markerfacecolor('none')\n\n# Set the x-axis tick label rotation line markeredgewidth\nax.set_xticklabel_rotation_line_markeredgewidth(1.0)\n\n# Set the y-axis tick label rotation line markeredgewidth\nax.set_yticklabel_rotation_line_markeredgewidth(1.0)\n\n# Set the x-axis tick label rotation line markeredgelinecapstyle\nax.set_xticklabel_rotation_line_markeredgelinecapstyle('butt')\n\n# Set the y-axis tick label rotation line markeredgelinecapstyle\nax.set_yticklabel_rotation_line_markeredgelinecapstyle('butt')\n\n# Set the x-axis tick label rotation line markeredgelinejoinstyle\nax.set_xticklabel_rotation_line_markeredgelinejoinstyle('miter')\n\n# Set the y-axis tick label rotation line markeredgelinejoinstyle\nax.set_yticklabel_rotation_line_markeredgelinejoinstyle('miter')\n\n# Set the x-axis tick label rotation line markeredgelinecaplimit\nax.set_xticklabel_rotation_line_markeredgelinecaplimit(4.0)\n\n# Set the y-axis tick label rotation line markeredgelinecaplimit\nax.set_yticklabel_rotation_line_markeredgelinecaplimit(4.0)\n\n# Set the x-axis tick label rotation line markeredgelinejoinline\nax.set_xticklabel_rotation_line_markeredgelinejoinline(None)\n\n# Set the y-axis tick label rotation line markeredgelinejoinline\nax.set_yticklabel_rotation_line_markeredgelinejoinline(None)\n\n# Set the x-axis tick label rotation line markeredgelinejoinoffset\nax.set_xticklabel_rotation_line_markeredgelinejoinoffset(0.0)\n\n# Set the y-axis tick label rotation line markeredgelinejoinoffset\nax.set_yticklabel_rotation_line_markeredgelinejoinoffset(0.0)\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinecapstyle\nax.set_xticklabel_rotation_line_markeredgelinejoinlinecapstyle('butt')\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinecapstyle\nax.set_yticklabel_rotation_line_markeredgelinejoinlinecapstyle('butt')\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinstyle\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinstyle('miter')\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinstyle\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinstyle('miter')\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinecaplimit\nax.set_xticklabel_rotation_line_markeredgelinejoinlinecaplimit(4.0)\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinecaplimit\nax.set_yticklabel_rotation_line_markeredgelinejoinlinecaplimit(4.0)\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinline\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinline(None)\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinline\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinline(None)\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinoffset\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinoffset(0.0)\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinoffset\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinoffset(0.0)\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinlinecapstyle\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinlinecapstyle('butt')\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinlinecapstyle\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinlinecapstyle('butt')\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinlinejoinstyle\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinstyle('miter')\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinlinejoinstyle\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinstyle('miter')\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinlinecaplimit\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinlinecaplimit(4.0)\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinlinecaplimit\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinlinecaplimit(4.0)\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinlinejoinline\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinline(None)\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinlinejoinline\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinline(None)\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinlinejoinoffset\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinoffset(0.0)\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinlinejoinoffset\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinoffset(0.0)\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinecapstyle\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinecapstyle('butt')\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinecapstyle\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinecapstyle('butt')\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinstyle\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinstyle('miter')\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinstyle\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinstyle('miter')\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinecaplimit\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinecaplimit(4.0)\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinecaplimit\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinecaplimit(4.0)\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinline\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinline(None)\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinline\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinline(None)\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinoffset\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinoffset(0.0)\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinoffset\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinoffset(0.0)\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinecapstyle\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinecapstyle('butt')\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinecapstyle\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinecapstyle('butt')\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinejoinstyle\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinejoinstyle('miter')\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinejoinstyle\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinejoinstyle('miter')\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinecaplimit\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinecaplimit(4.0)\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinecaplimit\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinecaplimit(4.0)\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinejoinline\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinejoinline(None)\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinejoinline\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinejoinline(None)\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinejoinoffset\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinejoinoffset(0.0)\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinejoinoffset\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinejoinoffset(0.0)\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinecapstyle\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinecapstyle('butt')\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinecapstyle\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinecapstyle('butt')\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinejoinstyle\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinejoinstyle('miter')\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinejoinstyle\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinejoinstyle('miter')\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinecaplimit\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinecaplimit(4.0)\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinecaplimit\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinecaplimit(4.0)\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinejoinline\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinejoinline(None)\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinejoinline\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinejoinline(None)\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinejoinoffset\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinejoinoffset(0.0)\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinejoinoffset\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinejoinoffset(0.0)\n\n# Set the x-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinejoinlinecapstyle\nax.set_xticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinejoinlinecapstyle('butt')\n\n# Set the y-axis tick label rotation line markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinejoinlinecapstyle\nax.set_yticklabel_rotation_line_markeredgelinejoinlinejoinlinejoinlinejoinlinejoinlinejoinline"}
{"file": "dataset/ori_500/line_38.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 3.0))\n\n# Define the data\nx = np.array([3, 10, 30, 100])\ny = np.array([0.2, 0.4, 0.6, 0.8])\n\n# Plot the data\nax.plot(x, y, 'o-')\n\n# Add labels and title\nax.set_xlabel('# Epochs')\nax.set_ylabel('|MA|')\nax.set_title('Title of the plot')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/line_39.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with multiple subplots\nfig, axs = plt.subplots(3, 3, figsize=(15.0, 4.0))\n\n# Define the data for each subplot\ndata = [\n    [0.165, 0.160, 0.155, 0.150, 0.145, 0.140, 0.135, 0.130, 0.125, 0.120],\n    [0.165, 0.160, 0.155, 0.150, 0.145, 0.140, 0.135, 0.130, 0.125, 0.120],\n    [0.165, 0.160, 0.155, 0.150, 0.145, 0.140, 0.135, 0.130, 0.125, 0.120]\n]\n\n# Plot the data\nfor i in range(3):\n    for j in range(3):\n        axs[i, j].plot(data[i], 'o-')\n        axs[i, j].set_title('Traffic' if i == 0 else 'ETMm2' if i == 1 else 'ETTh2' if i == 2 else 'ECL')\n        axs[i, j].set_xlabel('pred_length=96' if j == 0 else 'pred_length=192' if j == 1 else 'pred_length=336' if j == 2 else 'pred_length=720')\n\n# Add a legend\nfig.legend(['pred_length=96', 'pred_length=192', 'pred_length=336', 'pred_length=720'], loc='lower center')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_4.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Top-1 Acc. (%)')\n\n# Set the x-axis labels\nax.set_xticks([224, 128, 64, 32])\nax.set_xticklabels(['224', '128', '64', '32'])\n\n# Set the y-axis limits\nax.set_ylim(0, 75)\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 75, 5))\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '5', '10', '15', '20', '25', '30', '35', '40', '45', '50', '55', '60', '65', '70'])\n\n# Set the y-axis grid lines\nax.grid(True, which='both', linestyle='--', linewidth=0.5)\n\n# Set the y-axis label\nax.set_ylabel('Top-1 Acc. (%)')\n\n# Set the x-axis label\nax.set_xlabel('Batch Size')\n\n# Set the font size for the title\nax.set_title('Top-1 Acc. (%)', fontsize=12)\n\n# Set the font size for the x-axis labels\nax.set_xticklabels(['224', '128', '64', '32'], fontsize=10)\n\n# Set the font size for the y-axis labels\nax.set_yticklabels(['0', '5', '10', '15', '20', '25', '30', '35', '40', '45', '50', '55', '60', '65', '70'], fontsize=10)\n\n# Set the font size for the legend\nax.legend(fontsize=10)\n\n# Set the font size for the text\nax.text(224, 70, 'Serial (n=8, m=1)', fontsize=12)\nax.text(224, 65, 'Parallel (n=2, m=4)', fontsize=12)\n\n# Set the font size for the arrow\nax.annotate('', xy=(224, 70), xytext=(224, 65), arrowprops=dict(facecolor='red', shrink=0.05))\n\n# Set the font size for the text\nax.text(224, 60, '39.1%', fontsize=12)\nax.text(224, 55, '22.9%', fontsize=12)\n\n# Set the font size for the text\nax.text(224, 50, 'ImageNet-1k', fontsize=10)\nax.text(224, 45, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, 40, 'ImageNet-1k', fontsize=10)\nax.text(224, 35, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, 30, 'ImageNet-1k', fontsize=10)\nax.text(224, 25, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, 20, 'ImageNet-1k', fontsize=10)\nax.text(224, 15, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, 10, 'ImageNet-1k', fontsize=10)\nax.text(224, 5, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, 0, 'ImageNet-1k', fontsize=10)\nax.text(224, -5, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -10, 'ImageNet-1k', fontsize=10)\nax.text(224, -15, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -20, 'ImageNet-1k', fontsize=10)\nax.text(224, -25, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -30, 'ImageNet-1k', fontsize=10)\nax.text(224, -35, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -40, 'ImageNet-1k', fontsize=10)\nax.text(224, -45, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -50, 'ImageNet-1k', fontsize=10)\nax.text(224, -55, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -60, 'ImageNet-1k', fontsize=10)\nax.text(224, -65, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -70, 'ImageNet-1k', fontsize=10)\nax.text(224, -75, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -80, 'ImageNet-1k', fontsize=10)\nax.text(224, -85, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -90, 'ImageNet-1k', fontsize=10)\nax.text(224, -95, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -100, 'ImageNet-1k', fontsize=10)\nax.text(224, -105, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -110, 'ImageNet-1k', fontsize=10)\nax.text(224, -115, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -120, 'ImageNet-1k', fontsize=10)\nax.text(224, -125, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -130, 'ImageNet-1k', fontsize=10)\nax.text(224, -135, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -140, 'ImageNet-1k', fontsize=10)\nax.text(224, -145, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -150, 'ImageNet-1k', fontsize=10)\nax.text(224, -155, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -160, 'ImageNet-1k', fontsize=10)\nax.text(224, -165, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -170, 'ImageNet-1k', fontsize=10)\nax.text(224, -175, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -180, 'ImageNet-1k', fontsize=10)\nax.text(224, -185, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -190, 'ImageNet-1k', fontsize=10)\nax.text(224, -195, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -200, 'ImageNet-1k', fontsize=10)\nax.text(224, -205, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -210, 'ImageNet-1k', fontsize=10)\nax.text(224, -215, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -220, 'ImageNet-1k', fontsize=10)\nax.text(224, -225, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -230, 'ImageNet-1k', fontsize=10)\nax.text(224, -235, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -240, 'ImageNet-1k', fontsize=10)\nax.text(224, -245, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -250, 'ImageNet-1k', fontsize=10)\nax.text(224, -255, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -260, 'ImageNet-1k', fontsize=10)\nax.text(224, -265, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -270, 'ImageNet-1k', fontsize=10)\nax.text(224, -275, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -280, 'ImageNet-1k', fontsize=10)\nax.text(224, -285, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -290, 'ImageNet-1k', fontsize=10)\nax.text(224, -295, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -300, 'ImageNet-1k', fontsize=10)\nax.text(224, -305, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -310, 'ImageNet-1k', fontsize=10)\nax.text(224, -315, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -320, 'ImageNet-1k', fontsize=10)\nax.text(224, -325, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -330, 'ImageNet-1k', fontsize=10)\nax.text(224, -335, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -340, 'ImageNet-1k', fontsize=10)\nax.text(224, -345, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -350, 'ImageNet-1k', fontsize=10)\nax.text(224, -355, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -360, 'ImageNet-1k', fontsize=10)\nax.text(224, -365, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -370, 'ImageNet-1k', fontsize=10)\nax.text(224, -375, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -380, 'ImageNet-1k', fontsize=10)\nax.text(224, -385, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -390, 'ImageNet-1k', fontsize=10)\nax.text(224, -395, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -400, 'ImageNet-1k', fontsize=10)\nax.text(224, -405, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -410, 'ImageNet-1k', fontsize=10)\nax.text(224, -415, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -420, 'ImageNet-1k', fontsize=10)\nax.text(224, -425, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -430, 'ImageNet-1k', fontsize=10)\nax.text(224, -435, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -440, 'ImageNet-1k', fontsize=10)\nax.text(224, -445, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -450, 'ImageNet-1k', fontsize=10)\nax.text(224, -455, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -460, 'ImageNet-1k', fontsize=10)\nax.text(224, -465, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -470, 'ImageNet-1k', fontsize=10)\nax.text(224, -475, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -480, 'ImageNet-1k', fontsize=10)\nax.text(224, -485, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -490, 'ImageNet-1k', fontsize=10)\nax.text(224, -495, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -500, 'ImageNet-1k', fontsize=10)\nax.text(224, -505, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -510, 'ImageNet-1k', fontsize=10)\nax.text(224, -515, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -520, 'ImageNet-1k', fontsize=10)\nax.text(224, -525, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -530, 'ImageNet-1k', fontsize=10)\nax.text(224, -535, 'ImageNet-C/P (Fog)', fontsize=10)\n\n# Set the font size for the text\nax.text(224, -540, 'ImageNet-1k', fontsize=10)\nax.text(224, -545, 'ImageNet-C"}
{"file": "dataset/ori_500/line_40.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis labels\nx_labels = ['5.0', '7.0', '10.0', '12.5', '15.0', '17.5', '20.0', '22.5', '25.0']\nax.set_xticks(np.arange(len(x_labels)))\nax.set_xticklabels(x_labels)\n\n# Set the y-axis limits\nax.set_ylim(0, 100)\n\n# Set the y-axis label\nax.set_ylabel('Classification Accuracy (%)')\n\n# Set the x-axis label\nax.set_xlabel('SNR')\n\n# Set the title of the plot\nax.set_title('Classification Accuracy vs SNR')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Text', ha='center', va='center', transform=ax.transAxes)\n\n# Set the color of the legend\nax.legend(facecolor='lightgray')\n\n# Set the color of the line\nax.plot([1, 2, 3], [4, 5, 6], 'r-')\n\n# Set the color of the marker\nax.plot([1, 2, 3], [4, 5, 6], 'ro')\n\n# Set the color of the fill\nax.fill_between([1, 2, 3], [4, 5, 6], [7, 8, 9], color='red')\n\n# Set the color of the scatter\nax.scatter([1, 2, 3], [4, 5, 6], color='blue')\n\n# Set the color of the bar\nax.bar([1, 2, 3], [4, 5, 6], color='green')\n\n# Set the color of the histogram\nax.hist([1, 2, 3], bins=3, color='yellow')\n\n# Set the color of the pie chart\nax.pie([1, 2, 3], colors=['red', 'green', 'blue'])\n\n# Set the color of the box plot\nax.boxplot([1, 2, 3], patch_artist=True, boxprops=dict(facecolor='red'))\n\n# Set the color of the violin plot\nax.violinplot([1, 2, 3], showmeans=True, showmedians=True, showextrema=True)\n\n# Set the color of the heatmap\nax.imshow([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='hot', interpolation='nearest')\n\n# Set the color of the contour plot\nax.contourf([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='coolwarm')\n\n# Set the color of the scatter plot\nax.scatter([1, 2, 3], [4, 5, 6], color='red')\n\n# Set the color of the line plot\nax.plot([1, 2, 3], [4, 5, 6], color='blue')\n\n# Set the color of the bar plot\nax.bar([1, 2, 3], [4, 5, 6], color='green')\n\n# Set the color of the histogram\nax.hist([1, 2, 3], bins=3, color='yellow')\n\n# Set the color of the pie chart\nax.pie([1, 2, 3], colors=['red', 'green', 'blue'])\n\n# Set the color of the box plot\nax.boxplot([1, 2, 3], patch_artist=True, boxprops=dict(facecolor='red'))\n\n# Set the color of the violin plot\nax.violinplot([1, 2, 3], showmeans=True, showmedians=True, showextrema=True)\n\n# Set the color of the heatmap\nax.imshow([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='hot', interpolation='nearest')\n\n# Set the color of the contour plot\nax.contourf([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='coolwarm')\n\n# Set the color of the scatter plot\nax.scatter([1, 2, 3], [4, 5, 6], color='red')\n\n# Set the color of the line plot\nax.plot([1, 2, 3], [4, 5, 6], color='blue')\n\n# Set the color of the bar plot\nax.bar([1, 2, 3], [4, 5, 6], color='green')\n\n# Set the color of the histogram\nax.hist([1, 2, 3], bins=3, color='yellow')\n\n# Set the color of the pie chart\nax.pie([1, 2, 3], colors=['red', 'green', 'blue'])\n\n# Set the color of the box plot\nax.boxplot([1, 2, 3], patch_artist=True, boxprops=dict(facecolor='red'))\n\n# Set the color of the violin plot\nax.violinplot([1, 2, 3], showmeans=True, showmedians=True, showextrema=True)\n\n# Set the color of the heatmap\nax.imshow([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='hot', interpolation='nearest')\n\n# Set the color of the contour plot\nax.contourf([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='coolwarm')\n\n# Set the color of the scatter plot\nax.scatter([1, 2, 3], [4, 5, 6], color='red')\n\n# Set the color of the line plot\nax.plot([1, 2, 3], [4, 5, 6], color='blue')\n\n# Set the color of the bar plot\nax.bar([1, 2, 3], [4, 5, 6], color='green')\n\n# Set the color of the histogram\nax.hist([1, 2, 3], bins=3, color='yellow')\n\n# Set the color of the pie chart\nax.pie([1, 2, 3], colors=['red', 'green', 'blue'])\n\n# Set the color of the box plot\nax.boxplot([1, 2, 3], patch_artist=True, boxprops=dict(facecolor='red'))\n\n# Set the color of the violin plot\nax.violinplot([1, 2, 3], showmeans=True, showmedians=True, showextrema=True)\n\n# Set the color of the heatmap\nax.imshow([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='hot', interpolation='nearest')\n\n# Set the color of the contour plot\nax.contourf([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='coolwarm')\n\n# Set the color of the scatter plot\nax.scatter([1, 2, 3], [4, 5, 6], color='red')\n\n# Set the color of the line plot\nax.plot([1, 2, 3], [4, 5, 6], color='blue')\n\n# Set the color of the bar plot\nax.bar([1, 2, 3], [4, 5, 6], color='green')\n\n# Set the color of the histogram\nax.hist([1, 2, 3], bins=3, color='yellow')\n\n# Set the color of the pie chart\nax.pie([1, 2, 3], colors=['red', 'green', 'blue'])\n\n# Set the color of the box plot\nax.boxplot([1, 2, 3], patch_artist=True, boxprops=dict(facecolor='red'))\n\n# Set the color of the violin plot\nax.violinplot([1, 2, 3], showmeans=True, showmedians=True, showextrema=True)\n\n# Set the color of the heatmap\nax.imshow([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='hot', interpolation='nearest')\n\n# Set the color of the contour plot\nax.contourf([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='coolwarm')\n\n# Set the color of the scatter plot\nax.scatter([1, 2, 3], [4, 5, 6], color='red')\n\n# Set the color of the line plot\nax.plot([1, 2, 3], [4, 5, 6], color='blue')\n\n# Set the color of the bar plot\nax.bar([1, 2, 3], [4, 5, 6], color='green')\n\n# Set the color of the histogram\nax.hist([1, 2, 3], bins=3, color='yellow')\n\n# Set the color of the pie chart\nax.pie([1, 2, 3], colors=['red', 'green', 'blue'])\n\n# Set the color of the box plot\nax.boxplot([1, 2, 3], patch_artist=True, boxprops=dict(facecolor='red'))\n\n# Set the color of the violin plot\nax.violinplot([1, 2, 3], showmeans=True, showmedians=True, showextrema=True)\n\n# Set the color of the heatmap\nax.imshow([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='hot', interpolation='nearest')\n\n# Set the color of the contour plot\nax.contourf([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='coolwarm')\n\n# Set the color of the scatter plot\nax.scatter([1, 2, 3], [4, 5, 6], color='red')\n\n# Set the color of the line plot\nax.plot([1, 2, 3], [4, 5, 6], color='blue')\n\n# Set the color of the bar plot\nax.bar([1, 2, 3], [4, 5, 6], color='green')\n\n# Set the color of the histogram\nax.hist([1, 2, 3], bins=3, color='yellow')\n\n# Set the color of the pie chart\nax.pie([1, 2, 3], colors=['red', 'green', 'blue'])\n\n# Set the color of the box plot\nax.boxplot([1, 2, 3], patch_artist=True, boxprops=dict(facecolor='red'))\n\n# Set the color of the violin plot\nax.violinplot([1, 2, 3], showmeans=True, showmedians=True, showextrema=True)\n\n# Set the color of the heatmap\nax.imshow([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='hot', interpolation='nearest')\n\n# Set the color of the contour plot\nax.contourf([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='coolwarm')\n\n# Set the color of the scatter plot\nax.scatter([1, 2, 3], [4, 5, 6], color='red')\n\n# Set the color of the line plot\nax.plot([1, 2, 3], [4, 5, 6], color='blue')\n\n# Set the color of the bar plot\nax.bar([1, 2, 3], [4, 5, 6], color='green')\n\n# Set the color of the histogram\nax.hist([1, 2, 3], bins=3, color='yellow')\n\n# Set the color of the pie chart\nax.pie([1, 2, 3], colors=['red', 'green', 'blue'])\n\n# Set the color of the box plot\nax.boxplot([1, 2, 3], patch_artist=True, boxprops=dict(facecolor='red'))\n\n# Set the color of the violin plot\nax.violinplot([1, 2, 3], showmeans=True, showmedians=True, showextrema=True)\n\n# Set the color of the heatmap\nax.imshow([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='hot', interpolation='nearest')\n\n# Set the color of the contour plot\nax.contourf([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='coolwarm')\n\n# Set the color of the scatter plot\nax.scatter([1, 2, 3], [4, 5, 6], color='red')\n\n# Set the color of the line plot\nax.plot([1, 2, 3], [4, 5, 6], color='blue')\n\n# Set the color of the bar plot\nax.bar([1, 2, 3], [4, 5, 6], color='green')\n\n# Set the color of the histogram\nax.hist([1, 2, 3], bins=3, color='yellow')\n\n# Set the color of the pie chart\nax.pie([1, 2, 3], colors=['red', 'green', 'blue'])\n\n# Set the color of the box plot\nax.boxplot([1, 2, 3], patch_artist=True, boxprops=dict(facecolor='red'))\n\n# Set the color of the violin plot\nax.violinplot([1, 2, 3], showmeans=True, showmedians=True, showextrema=True)\n\n# Set the color of the heatmap\nax.imshow([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='hot', interpolation='nearest')\n\n# Set the color of the contour plot\nax.contourf([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='coolwarm')\n\n# Set the color of the scatter plot\nax.scatter([1, 2, 3], [4, 5, 6], color='red')\n\n# Set the color of the line plot\nax.plot([1, 2, 3], [4, 5, 6], color='blue')\n\n# Set the color of the bar plot\nax.bar([1, 2, 3], [4, 5, 6], color='green')\n\n# Set the color of the histogram\nax.hist([1, 2, 3], bins=3, color='yellow')\n\n# Set the color of the pie chart\nax.pie([1, 2, 3], colors=['red', 'green', 'blue'])\n\n# Set the color of the box plot\nax.boxplot([1, 2, 3], patch_artist=True, boxprops=dict(facecolor='red'))\n\n# Set the color of the violin plot\nax.violinplot([1, 2, 3], showmeans=True, showmedians=True, showextrema=True)\n\n# Set the color of the heatmap\nax.imshow([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='hot', interpolation='nearest')\n\n# Set the color of the contour plot\nax.contourf([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='coolwarm')\n\n# Set the color of the scatter plot\nax.scatter([1, 2, 3], [4, 5, 6], color='red')\n\n# Set the color of the line plot\nax.plot([1, 2, 3], [4, 5, 6], color='blue')\n\n# Set the color of the bar plot\nax.bar([1, 2, 3], [4, 5, 6], color='green')\n\n# Set the color of the histogram\nax.hist([1, 2, 3], bins=3, color='yellow')\n\n# Set the color of the pie chart\nax.pie([1, 2, 3], colors=['red', 'green', 'blue'])\n\n# Set the color of the box plot\nax.boxplot([1, 2, 3], patch_artist=True, boxprops=dict(facecolor='red'))\n\n# Set the color of the violin plot\nax.violinplot([1, 2, 3], showmeans=True, showmedians=True, showextrema=True)\n\n# Set the color of the heatmap\nax.imshow([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='hot', interpolation='nearest')\n\n# Set the color of the contour plot\nax.contourf([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='coolwarm')\n\n# Set the color of the scatter plot\nax.scatter([1, 2, 3], [4, 5, 6], color='red')\n\n# Set the color of the line plot\nax.plot([1, 2, 3], [4, 5, 6], color='blue')\n\n# Set the color of the bar plot\nax.bar([1, 2, 3], [4, 5, 6], color='green')\n\n# Set the color of the histogram\nax.hist([1, 2, 3], bins=3, color='yellow')\n\n# Set the color of the pie chart\nax.pie([1, 2, 3], colors=['red', 'green', 'blue'])\n\n# Set the color of the box plot\nax.boxplot([1, 2, 3], patch_artist=True, boxprops=dict(facecolor='red'))\n\n# Set the color of the violin plot\nax.violinplot([1, 2, 3], showmeans=True, showmedians=True, showextrema=True)\n\n# Set the color of the heatmap\nax.imshow([[1, 2, 3], [4, 5, 6], [7, 8, 9]], cmap='hot', interpolation='"}
{"file": "dataset/ori_500/line_41.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a new figure with the specified size\nfig = plt.figure(figsize=(6.0, 8.0))\n\n# Add a subplot to the figure\nax = fig.add_subplot(111)\n\n# Generate the x values\nx = np.linspace(0, 200, 100)\n\n# Generate the y values for Line 1 (Sinusoidal)\ny1 = np.sin(x/50) + np.random.normal(0, 0.1, 100)\n\n# Plot Line 1 (Sinusoidal)\nax.plot(x, y1, label='Line 1 (Sinusoidal)', color='purple')\n\n# Generate the y values for Line 2 (Quadratic)\ny2 = 2 * x**2 + np.random.normal(0, 10, 100)\n\n# Plot Line 2 (Quadratic)\nax.plot(x, y2, label='Line 2 (Quadratic)', color='blue')\n\n# Generate the y values for Line 3 (Random Noise)\ny3 = np.random.normal(0, 1, 100)\n\n# Plot Line 3 (Random Noise)\nax.plot(x, y3, label='Line 3 (Random Noise)', color='green', marker='^')\n\n# Generate the y values for Line 4 (Exponential Focus)\ny4 = np.exp(x/100) + np.random.normal(0, 0.1, 100)\n\n# Plot Line 4 (Exponential Focus)\nax.plot(x, y4, label='Line 4 (Exponential Focus)', color='red')\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('Gradient Steps (x62.5K)')\nax.set_ylabel('Performance Value')\n\n# Set the legend\nax.legend()\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/line_42.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, axs = plt.subplots(2, 1, figsize=(10.0, 5.0))\n\n# First subplot\nx = np.array([0, 50, 100, 150, 200])\ny = np.array([0.1, 0.8, 1.2, 1.5, 1.3])\naxs[0].plot(x, y, 'bo-')\naxs[0].set_xlabel('Gradient Steps (x62.5K)')\naxs[0].set_ylabel('Value')\n\n# Second subplot\nx = np.array([0, 50, 100, 150, 200])\ny = np.array([0.99, 0.79, 0.99, 0.59, 0.49])\naxs[1].plot(x, y, 'go-')\naxs[1].set_xlabel('Gradient Steps (x62.5K)')\naxs[1].set_ylabel('Polynomial Value')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_43.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 5.0))\n\n# Plot the data\nax.plot(range(1, 10), [76.3, 74.8, 74.9, 74.8, 74.8, 74.8, 74.8, 74.8, 74.8], 'o-', color='blue')\nax.plot(range(1, 10), [76.3, 74.8, 74.9, 74.8, 74.8, 74.8, 74.8, 74.8, 74.8], 'o-', color='orange')\n\n# Set the labels\nax.set_xticks(range(1, 10))\nax.set_xticklabels(['All', 'MPL', 'GNN-BUDDY', 'GNN-REINFORCE', 'GCN', 'Node2Vec', 'Neural', 'Neural-REINFORCE', 'SEAL'])\n\n# Add a title\nax.set_title('ogbl-pa Results')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_44.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the x and y limits for the plot\nax.set_xlim(10, 60)\nax.set_ylim(1e-14, 1e-2)\n\n# Set the x and y labels for the plot\nax.set_xlabel('N')\nax.set_ylabel('Precision')\n\n# Set the grid lines for the plot\nax.grid(True, which='both', linestyle='--', linewidth=0.5)\n\n# Set the tick marks for the plot\nax.set_xticks(np.arange(10, 70, 10))\nax.set_yticks(np.arange(1e-14, 1e-2, 1e-14))\n\n# Set the legend for the plot\nax.legend(['Standard', 'Constrained', 'Experimental', 'Hypothetical'], loc='upper left')\n\n# Set the marker styles for the plot\nax.plot([10, 20, 30, 40, 50, 60], [1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10], 'o-', color='orange')\nax.plot([10, 20, 30, 40, 50, 60], [1e-12, 1e-12, 1e-12, 1e-12, 1e-12, 1e-12], 'o-', color='red')\n\n# Set the marker styles for the plot\nax.plot([10, 20, 30, 40, 50, 60], [1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10], 'o-', color='blue')\nax.plot([10, 20, 30, 40, 50, 60], [1e-12, 1e-12, 1e-12, 1e-12, 1e-12, 1e-12], 'o-', color='green')\n\n# Set the marker styles for the plot\nax.plot([10, 20, 30, 40, 50, 60], [1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10], 'o-', color='purple')\nax.plot([10, 20, 30, 40, 50, 60], [1e-12, 1e-12, 1e-12, 1e-12, 1e-12, 1e-12], 'o-', color='black')\n\n# Set the marker styles for the plot\nax.plot([10, 20, 30, 40, 50, 60], [1e-10, 1e-10, 1e-10, 1e-10, 1e-10, 1e-10], 'o-', color='cyan')\nax.plot([10, 20, 30, 40, 50, 60], [1e-12, 1e-12, 1e-12, 1e-12, 1e-12, 1e-12], 'o-', color='magenta')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_45.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, axs = plt.subplots(2, 2, figsize=(12.0, 8.0))\n\n# Define the data for each subplot\ndata = [\n    {'x': [1e-1, 2e-1, 3e-1, 4e-1, 6e-1], 'y': [1e-2, 2e-2, 3e-2, 4e-2, 5e-2], 'label': 'Standard'},\n    {'x': [1e-1, 2e-1, 3e-1, 4e-1, 6e-1], 'y': [1e-3, 2e-3, 3e-3, 4e-3, 5e-3], 'label': 'Constrained'},\n    {'x': [1e-1, 2e-1, 3e-1, 4e-1, 6e-1], 'y': [1e-4, 2e-4, 3e-4, 4e-4, 5e-4], 'label': 'Innovative'},\n    {'x': [1e-1, 2e-1, 3e-1, 4e-1, 6e-1], 'y': [1e-5, 2e-5, 3e-5, 4e-5, 5e-5], 'label': 'Experimental'}\n]\n\n# Plot the data for each subplot\nfor i, ax in enumerate(axs.flatten()):\n    ax.plot(data[i]['x'], data[i]['y'], label=data[i]['label'])\n    ax.set_xlabel('N')\n    ax.set_ylabel('Precision')\n    ax.set_title(f'Graph Variation {i+1}')\n    ax.legend()\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_46.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, axs = plt.subplots(2, 1, figsize=(6.0, 10.0))\n\n# Set the title of the first subplot\naxs[0].set_title('Daytime Activity Monitoring')\n\n# Generate the data for the first subplot\nx = np.arange(0, 26)\ny = np.sin(x/3.14)\n\n# Plot the data for the first subplot\naxs[0].plot(x, y, 'b-')\naxs[0].set_xlabel('Time (Hours)')\naxs[0].set_ylabel('Activity Level')\naxs[0].legend(['Standard Activity'])\n\n# Set the title of the second subplot\naxs[1].set_title('Nighttime Activity Monitoring')\n\n# Generate the data for the second subplot\nx = np.arange(0, 26)\ny = np.sin(x/3.14)\n\n# Plot the data for the second subplot\naxs[1].plot(x, y, 'r--')\naxs[1].set_xlabel('Time (Hours)')\naxs[1].set_ylabel('Activity Level')\naxs[1].legend(['Innovative Activity'])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_47.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Comparative Performance Analysis Over Time')\n\n# Set the x-axis label\nax.set_xlabel('Time (Months)')\n\n# Set the y-axis label\nax.set_ylabel('Performance Index')\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 13, 1))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 1.2, 0.2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the x-axis limits\nax.set_xlim(0, 12)\n\n# Set the y-axis limits\nax.set_ylim(0, 1.2)\n\n# Set the x-axis grid lines\nax.grid(True)\n\n# Set the y-axis grid lines\nax.grid(True)\n\n# Set the x-axis grid line color\nax.grid(color='gray', linestyle='--')\n\n# Set the y-axis grid line color\nax.grid(color='gray', linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='gray')\n\n# Set the y-axis grid line color\nax.grid(color='gray')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line alpha\nax.grid(alpha=0.5)\n\n# Set the"}
{"file": "dataset/ori_500/line_48.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a new figure with a specific size\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Define the data for the sales and temperature\nsales = [1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2100, 2200, 2300]\ntemperature = [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32]\n\n# Plot the sales data\nax.plot(sales, label='Monthly Sales')\n\n# Plot the temperature data\nax.plot(temperature, label='Average Temperature', linestyle='--')\n\n# Set the x-axis tick labels\nax.set_xticks(np.arange(1, 13))\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'])\n\n# Set the y-axis tick labels\nax.set_yticks(np.arange(800, 2400, 100))\n\n# Add a legend to the plot\nax.legend()\n\n# Set the title of the plot\nax.set_title('Sales and Temperature Correlation Over a Year')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_49.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create figure and axis objects\nfig, axs = plt.subplots(3, 1, figsize=(6.0, 9.0))\n\n# First subplot\naxs[0].plot([0, 2, 4, 6, 8, 10], [1.3, 0.8, 0.3, 0.8, 0.3, 1.3], 'g-')\naxs[0].set_title('Exponential Growth Over Time')\naxs[0].set_xlabel('Time')\naxs[0].set_ylabel('Value')\naxs[0].grid(True)\naxs[0].set_yticks(np.arange(-2, 1.5, 0.5))\naxs[0].set_xticks(np.arange(0, 11, 2))\naxs[0].legend(['Growth'], loc='upper left')\n\n# Second subplot\naxs[1].plot([0, 2, 4, 6, 8, 10], [1.3, 0.8, 0.3, 0.8, 0.3, 1.3], 'r-')\naxs[1].set_title('Exponential Decay Over Time')\naxs[1].set_xlabel('Time')\naxs[1].set_ylabel('Value')\naxs[1].grid(True)\naxs[1].set_yticks(np.arange(-2, 1.5, 0.5))\naxs[1].set_xticks(np.arange(0, 11, 2))\naxs[1].legend(['Decay'], loc='upper left')\n\n# Third subplot\naxs[2].plot([0, 2, 4, 6, 8, 10], [1.2, 1.0, 0.0, -1.0, 0.0, 1.2], 'b-')\naxs[2].set_title('Oscillatory Behavior Over Time')\naxs[2].set_xlabel('Time')\naxs[2].set_ylabel('Value')\naxs[2].grid(True)\naxs[2].set_yticks(np.arange(-1.2, 1.3, 0.2))\naxs[2].set_xticks(np.arange(0, 11, 2))\naxs[2].legend(['Oscillation'], loc='upper left')\n\nplt.tight_layout()\nplt.show()\n```"}
{"file": "dataset/ori_500/line_5.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Define the data points\nx = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\ny1 = np.array([0.65, 0.64, 0.63, 0.62, 0.61, 0.60, 0.59, 0.58, 0.57, 0.56])\ny2 = np.array([0.64, 0.63, 0.62, 0.61, 0.60, 0.59, 0.58, 0.57, 0.56, 0.55])\ny3 = np.array([0.63, 0.62, 0.61, 0.60, 0.59, 0.58, 0.57, 0.56, 0.55, 0.54])\n\n# Plot the data points\nax.plot(x, y1, 'bo-', label='5-shot direct')\nax.plot(x, y2, 'ro-', label='5-shot scratchpad')\nax.plot(x, y3, 'go-', label='5-shot rule-following')\n\n# Set the labels and title\nax.set_xlabel('Digit Length')\nax.set_ylabel('Accuracy')\nax.set_title('5-shot Accuracy')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_50.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create the first plot\nfig, ax = plt.subplots(figsize=(5.0, 10.0))\nax.set_title('Smoothed Representation')\nax.set_xlabel('Time')\nax.set_ylabel('Value')\nax.plot([2, 4, 6, 8, 10, 12, 14, 16, 18], [0.3, -0.1, 0.2, 0.1, 0.0, -0.1, 0.2, 0.1, 0.3], 'bo-', label='Smoothed Data')\nax.fill_between([2, 4, 6, 8, 10, 12, 14, 16, 18], [0.3, -0.1, 0.2, 0.1, 0.0, -0.1, 0.2, 0.1, 0.3], color='blue', alpha=0.2)\nax.legend(loc='upper left')\n\n# Create the second plot\nfig, ax = plt.subplots(figsize=(5.0, 10.0))\nax.set_title('First Difference of Data')\nax.set_xlabel('Time')\nax.set_ylabel('Delta Value')\nax.plot([2.5, 5.0, 7.5, 10.0, 12.5, 15.0, 17.5, 20.0], [1.0, -0.5, 0.25, -0.5, 0.25, -0.5, 0.25, -0.5], 'ro-', label='Difference Data')\nax.fill_between([2.5, 5.0, 7.5, 10.0, 12.5, 15.0, 17.5, 20.0], [1.0, -0.5, 0.25, -0.5, 0.25, -0.5, 0.25, -0.5], color='red', alpha=0.2)\nax.legend(loc='upper left')\n\n# Create the third plot\nfig, ax = plt.subplots(figsize=(5.0, 10.0))\nax.set_title('Cumulative Sum Over Time')\nax.set_xlabel('Time')\nax.set_ylabel('Cumulative Value')\nax.plot([0.0, 2.5, 5.0, 7.5, 10.0, 12.5, 15.0, 17.5, 20.0], [2.5, 2.0, 2.5, 2.0, 2.5, 2.0, 2.5, 2.0, 2.5], 'go-', label='Cumulative Sum')\nax.fill_between([0.0, 2.5, 5.0, 7.5, 10.0, 12.5, 15.0, 17.5, 20.0], [2.5, 2.0, 2.5, 2.0, 2.5, 2.0, 2.5, 2.0, 2.5], color='green', alpha=0.2)\nax.legend(loc='upper left')\nplt.show()\n```"}
{"file": "dataset/ori_500/line_51.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with three subplots\nfig, axs = plt.subplots(3, 1, figsize=(6.0, 12.0))\n\n# Sinusoidal Pattern\naxs[0].plot([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [0.0, -1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, 0.0], 'm-')\naxs[0].set_title('Sinusoidal Pattern')\naxs[0].set_xlabel('Time')\naxs[0].set_ylabel('Amplitude')\n\n# Cosine Pattern\naxs[1].plot([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [-1.0, -1.0, 0.0, 1.0, 1.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0], 'g-')\naxs[1].set_title('Cosine Pattern')\naxs[1].set_xlabel('Time')\naxs[1].set_ylabel('Amplitude')\n\n# Exponential Decay\nx = np.linspace(0, 10, 100)\ny = np.exp(-x/2)\naxs[2].plot(x, y, 'b-')\naxs[2].set_title('Exponential Decay')\naxs[2].set_xlabel('Time')\naxs[2].set_ylabel('Value')\n\nplt.tight_layout()\nplt.show()\n```"}
{"file": "dataset/ori_500/line_52.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with subplots\nfig, axs = plt.subplots(3, 2, figsize=(9.0, 6.0))\n\n# Define the data for each subplot\ndata1 = np.array([74.5, 77.5, 80.0, 85.0, 90.0])\ndata2 = np.array([79.0, 76.0, 73.0, 70.0, 67.0])\ndata3 = np.array([74.0, 77.5, 80.0, 85.0, 90.0])\ndata4 = np.array([79.0, 76.0, 73.0, 70.0, 67.0])\n\n# Plot the data for each subplot\naxs[0, 0].plot(data1)\naxs[0, 1].plot(data2)\naxs[1, 0].plot(data3)\naxs[1, 1].plot(data4)\naxs[2, 0].plot(data1)\naxs[2, 1].plot(data2)\n\n# Set the labels for each subplot\naxs[0, 0].set_title('(a) Positive bound')\naxs[0, 1].set_title('(b) Negative bound')\naxs[1, 0].set_title('(c) Fuzzy coefficient')\naxs[1, 1].set_title('(d) Contrastive loss weight')\n\n# Set the x-axis and y-axis limits for each subplot\naxs[0, 0].set_xlim(0.7, 0.9)\naxs[0, 1].set_xlim(0.1, 0.4)\naxs[1, 0].set_xlim(400, 1200)\naxs[1, 1].set_xlim(0.0, 1.0)\naxs[2, 0].set_xlim(0.7, 0.9)\naxs[2, 1].set_xlim(0.1, 0.4)\n\naxs[0, 0].set_ylim(74.0, 84.0)\naxs[0, 1].set_ylim(72.0, 82.0)\naxs[1, 0].set_ylim(72.0, 82.0)\naxs[1, 1].set_ylim(72.0, 82.0)\naxs[2, 0].set_ylim(72.0, 82.0)\naxs[2, 1].set_ylim(72.0, 82.0)\n\n# Set the tick labels for each subplot\naxs[0, 0].set_xticks(np.arange(0.7, 0.9, 0.1))\naxs[0, 1].set_xticks(np.arange(0.1, 0.4, 0.1))\naxs[1, 0].set_xticks(np.arange(400, 1200, 200))\naxs[1, 1].set_xticks(np.arange(0.0, 1.0, 0.1))\naxs[2, 0].set_xticks(np.arange(0.7, 0.9, 0.1))\naxs[2, 1].set_xticks(np.arange(0.1, 0.4, 0.1))\n\naxs[0, 0].set_yticks(np.arange(74.0, 84.0, 1.0))\naxs[0, 1].set_yticks(np.arange(72.0, 82.0, 1.0))\naxs[1, 0].set_yticks(np.arange(72.0, 82.0, 1.0))\naxs[1, 1].set_yticks(np.arange(72.0, 82.0, 1.0))\naxs[2, 0].set_yticks(np.arange(72.0, 82.0, 1.0))\naxs[2, 1].set_yticks(np.arange(72.0, 82.0, 1.0))\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_53.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with three subplots\nfig, axs = plt.subplots(3, 3, figsize=(12.0, 8.0))\n\n# Positive Bound subplot\naxs[0, 0].set_title('Positive Bound')\naxs[0, 0].plot([70, 75, 80, 85, 90], [86, 84, 82, 80, 78], 'ro-')\naxs[0, 0].set_xlabel('Threshold')\naxs[0, 0].set_ylabel('Score')\n\n# Negative Bound subplot\naxs[0, 1].set_title('Negative Bound')\naxs[0, 1].plot([0.1, 0.2, 0.3, 0.4, 0.5], [81, 80, 79, 77, 76], 'go-')\naxs[0, 1].set_xlabel('Threshold')\naxs[0, 1].set_ylabel('Score')\n\n# Contrastive Loss Weight subplot\naxs[0, 2].set_title('Contrastive Loss Weight')\naxs[0, 2].plot([0.0, 0.2, 0.4, 0.6, 0.8, 1.0], [80, 75, 70, 75, 80, 85], 'bo-')\naxs[0, 2].set_xlabel('Threshold')\naxs[0, 2].set_ylabel('Score')\n\n# Fuzzy Coefficient subplot\naxs[1, 0].set_title('Fuzzy Coefficient')\naxs[1, 0].plot([400, 600, 800, 1000, 1200], [82, 77, 75, 72, 70], 'mo-')\naxs[1, 0].set_xlabel('Threshold')\naxs[1, 0].set_ylabel('Score')\n\n# Additional Metric 1 subplot\naxs[1, 1].set_title('Additional Metric 1')\naxs[1, 1].plot([0.5, 0.6, 0.7, 0.8, 0.9], [70, 65, 60, 55, 50], 'ko-')\naxs[1, 1].set_xlabel('Threshold')\naxs[1, 1].set_ylabel('Score')\n\n# Additional Metric 2 subplot\naxs[1, 2].set_title('Additional Metric 2')\naxs[1, 2].plot([300, 500, 700, 900, 1100], [75, 70, 65, 60, 55], 'co-')\naxs[1, 2].set_xlabel('Threshold')\naxs[1, 2].set_ylabel('Score')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_54.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 4.0))\n\n# Set the x-axis labels\nax.set_xticks([0, 1, 2, 3])\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis label\nax.set_ylabel('Relaxation Level')\n\n# Set the title of the plot\nax.set_title('Dry vs Rain')\n\n# Plot the data\nax.plot([1.4, 1.2, 1.1, 1.0], 'k--')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot([1.4, 1.2, 1.1, 1.0], 'k-')\nax.plot"}
{"file": "dataset/ori_500/line_55.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 3.0))\n\n# Define the data points\nx = np.array([0, 0.125, 0.25, 0.5, 1, 2, 4, 8])\ny_content = np.array([0, 0, 0, 0, 0, 0, 0, 0])\ny_org = np.array([0, 0, 0, 0, 0, 0, 0, 0])\ny_lang = np.array([0, 0, 0, 0, 0, 0, 0, 0])\n\n# Plot the data points\nax.plot(x, y_content, 'bo-', label='Content')\nax.plot(x, y_org, 'ro-', label='Organization')\nax.plot(x, y_lang, 'go-', label='Language')\n\n# Set the x-axis tick labels\nax.set_xticks(x)\nax.set_xticklabels(['0', '0.125', '0.25', '0.5', '1', '2', '4', '8'])\n\n# Set the y-axis tick labels\nax.set_yticks(np.arange(0, 9, 1))\nax.set_yticklabels(['0', '1', '2', '3', '4', '5', '6', '7', '8'])\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_56.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with three subplots\nfig, axs = plt.subplots(1, 3, figsize=(9.0, 3.0))\n\n# Plot the first subplot\naxs[0].plot([0, 20, 40, 60, 80], [0.55, 0.60, 0.65, 0.70, 0.75], 'ro-')\naxs[0].set_title('COCO 10K')\naxs[0].set_xlabel('Decomposition IO Norm')\naxs[0].set_ylabel('Accuracy')\naxs[0].set_ylim(0.55, 0.75)\naxs[0].set_xticks([0, 20, 40, 60, 80])\naxs[0].legend(['COCO (10k)'], loc='lower right')\n\n# Plot the second subplot\nx = np.linspace(0, 80, 100)\ny = 0.6 + 0.1 * x / 80\naxs[1].plot(x, y, 'b^-')\naxs[1].set_title('LAION 10K')\naxs[1].set_xlabel('Decomposition IO Norm')\naxs[1].set_ylabel('Accuracy')\naxs[1].set_ylim(0.55, 0.75)\naxs[1].set_xticks([0, 20, 40, 60, 80])\naxs[1].legend(['LAION (10k)'], loc='lower right')\n\n# Plot the third subplot\nx = np.linspace(0, 80, 100)\ny = 0.6 + 0.1 * x / 80\nz = 0.7 + 0.1 * x / 80\naxs[2].plot(x, y, 'r^-', label='COCO (5k)')\naxs[2].plot(x, z, 'g^-', label='LAION (5k)')\naxs[2].set_title('COCO & LAION 5K')\naxs[2].set_xlabel('Decomposition IO Norm')\naxs[2].set_ylabel('Accuracy')\naxs[2].set_ylim(0.55, 0.75)\naxs[2].set_xticks([0, 20, 40, 60, 80])\naxs[2].legend(loc='lower right')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_57.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 9.0))\n\n# Plot the error rate vs learning rate\nax.plot([0.05, 0.1, 0.15, 0.2], [0.18, 0.16, 0.14, 0.12], 'bo-', label='Error Rate vs Learning Rate')\nax.set_xlabel('Parameter Rate')\nax.set_ylabel('Metric')\nax.set_title('Error Rate vs Learning Rate')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_58.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, axs = plt.subplots(1, 2, figsize=(10.0, 4.0))\n\n# Plot the first subplot\naxs[0].plot(np.random.rand(100), label='Base Model', color='blue')\naxs[0].plot(np.random.rand(100), label='Our Model', color='orange')\naxs[0].set_title('Metric 1')\naxs[0].set_xlabel('Training Iterations')\naxs[0].set_ylabel('Metric Value')\naxs[0].legend()\n\n# Plot the second subplot\naxs[1].plot(np.random.rand(100), label='Base Model', color='blue')\naxs[1].plot(np.random.rand(100), label='Our Model', color='orange')\naxs[1].set_title('Metric 2')\naxs[1].set_xlabel('Training Iterations')\naxs[1].set_ylabel('Metric Value')\naxs[1].legend()\n\nplt.show()"}
{"file": "dataset/ori_500/line_59.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Generate random data for the plot\nnp.random.seed(42)\nx = np.arange(1, 201)\ny_base = np.random.rand(200) * 0.8 + 0.2\ny_our = np.random.rand(200) * 0.8 + 0.2\n\n# Create the plot\nfig, ax = plt.subplots(figsize=(5.0, 3.0))\nax.plot(x, y_base, label='Base Model', color='cyan')\nax.plot(x, y_our, label='Our Model', color='cyan')\n\n# Set the title and labels\nax.set_title('Accuracy')\nax.set_xlabel('Training Iterations')\nax.set_ylabel('Metric Value')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_6.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(10**1, 6*10**1)\n\n# Set the y-axis limits\nax.set_ylim(10**-13, 10**-1)\n\n# Set the x-axis label\nax.set_xlabel('N')\n\n# Set the y-axis label\nax.set_ylabel('Objective Value')\n\n# Set the title of the plot\nax.set_title('Objective Value vs. N')\n\n# Set the tick labels for the x-axis\nax.set_xticks([2*10**1, 3*10**1, 4*10**1, 5*10**1, 6*10**1])\nax.set_xticklabels(['2\u00d710\u00b9', '3\u00d710\u00b9', '4\u00d710\u00b9', '5\u00d710\u00b9', '6\u00d710\u00b9'])\n\n# Set the tick labels for the y-axis\nax.set_yticks([10**-13, 10**-12, 10**-11, 10**-10, 10**-9, 10**-8, 10**-7, 10**-6, 10**-5, 10**-4, 10**-3, 10**-2, 10**-1])\nax.set_yticklabels(['10\u207b\u00b9\u00b3', '10\u207b\u00b9\u00b2', '10\u207b\u00b9\u00b9', '10\u207b\u00b9\u2070', '10\u207b\u2079', '10\u207b\u2078', '10\u207b\u2077', '10\u207b\u2076', '10\u207b\u2075', '10\u207b\u2074', '10\u207b\u00b3', '10\u207b\u00b2', '10\u207b\u00b9'])\n\n# Set the grid lines\nax.grid(True, which='both', linestyle='--')\n\n# Set the x-axis limits\nax.set_xlim(10**1, 6*10**1)\n\n# Set the y-axis limits\nax.set_ylim(10**-13, 10**-1)\n\n# Set the x-axis label\nax.set_xlabel('N')\n\n# Set the y-axis label\nax.set_ylabel('Objective Value')\n\n# Set the title of the plot\nax.set_title('Objective Value vs. N')\n\n# Set the tick labels for the x-axis\nax.set_xticks([2*10**1, 3*10**1, 4*10**1, 5*10**1, 6*10**1])\nax.set_xticklabels(['2\u00d710\u00b9', '3\u00d710\u00b9', '4\u00d710\u00b9', '5\u00d710\u00b9', '6\u00d710\u00b9'])\n\n# Set the tick labels for the y-axis\nax.set_yticks([10**-13, 10**-12, 10**-11, 10**-10, 10**-9, 10**-8, 10**-7, 10**-6, 10**-5, 10**-4, 10**-3, 10**-2, 10**-1])\nax.set_yticklabels(['10\u207b\u00b9\u00b3', '10\u207b\u00b9\u00b2', '10\u207b\u00b9\u00b9', '10\u207b\u00b9\u2070', '10\u207b\u2079', '10\u207b\u2078', '10\u207b\u2077', '10\u207b\u2076', '10\u207b\u2075', '10\u207b\u2074', '10\u207b\u00b3', '10\u207b\u00b2', '10\u207b\u00b9'])\n\n# Set the grid lines\nax.grid(True, which='both', linestyle='--')\n\n# Set the x-axis limits\nax.set_xlim(10**1, 6*10**1)\n\n# Set the y-axis limits\nax.set_ylim(10**-13, 10**-1)\n\n# Set the x-axis label\nax.set_xlabel('N')\n\n# Set the y-axis label\nax.set_ylabel('Objective Value')\n\n# Set the title of the plot\nax.set_title('Objective Value vs. N')\n\n# Set the tick labels for the x-axis\nax.set_xticks([2*10**1, 3*10**1, 4*10**1, 5*10**1, 6*10**1])\nax.set_xticklabels(['2\u00d710\u00b9', '3\u00d710\u00b9', '4\u00d710\u00b9', '5\u00d710\u00b9', '6\u00d710\u00b9'])\n\n# Set the tick labels for the y-axis\nax.set_yticks([10**-13, 10**-12, 10**-11, 10**-10, 10**-9, 10**-8, 10**-7, 10**-6, 10**-5, 10**-4, 10**-3, 10**-2, 10**-1])\nax.set_yticklabels(['10\u207b\u00b9\u00b3', '10\u207b\u00b9\u00b2', '10\u207b\u00b9\u00b9', '10\u207b\u00b9\u2070', '10\u207b\u2079', '10\u207b\u2078', '10\u207b\u2077', '10\u207b\u2076', '10\u207b\u2075', '10\u207b\u2074', '10\u207b\u00b3', '10\u207b\u00b2', '10\u207b\u00b9'])\n\n# Set the grid lines\nax.grid(True, which='both', linestyle='--')\n\n# Set the x-axis limits\nax.set_xlim(10**1, 6*10**1)\n\n# Set the y-axis limits\nax.set_ylim(10**-13, 10**-1)\n\n# Set the x-axis label\nax.set_xlabel('N')\n\n# Set the y-axis label\nax.set_ylabel('Objective Value')\n\n# Set the title of the plot\nax.set_title('Objective Value vs. N')\n\n# Set the tick labels for the x-axis\nax.set_xticks([2*10**1, 3*10**1, 4*10**1, 5*10**1, 6*10**1])\nax.set_xticklabels(['2\u00d710\u00b9', '3\u00d710\u00b9', '4\u00d710\u00b9', '5\u00d710\u00b9', '6\u00d710\u00b9'])\n\n# Set the tick labels for the y-axis\nax.set_yticks([10**-13, 10**-12, 10**-11, 10**-10, 10**-9, 10**-8, 10**-7, 10**-6, 10**-5, 10**-4, 10**-3, 10**-2, 10**-1])\nax.set_yticklabels(['10\u207b\u00b9\u00b3', '10\u207b\u00b9\u00b2', '10\u207b\u00b9\u00b9', '10\u207b\u00b9\u2070', '10\u207b\u2079', '10\u207b\u2078', '10\u207b\u2077', '10\u207b\u2076', '10\u207b\u2075', '10\u207b\u2074', '10\u207b\u00b3', '10\u207b\u00b2', '10\u207b\u00b9'])\n\n# Set the grid lines\nax.grid(True, which='both', linestyle='--')\n\n# Set the x-axis limits\nax.set_xlim(10**1, 6*10**1)\n\n# Set the y-axis limits\nax.set_ylim(10**-13, 10**-1)\n\n# Set the x-axis label\nax.set_xlabel('N')\n\n# Set the y-axis label\nax.set_ylabel('Objective Value')\n\n# Set the title of the plot\nax.set_title('Objective Value vs. N')\n\n# Set the tick labels for the x-axis\nax.set_xticks([2*10**1, 3*10**1, 4*10**1, 5*10**1, 6*10**1])\nax.set_xticklabels(['2\u00d710\u00b9', '3\u00d710\u00b9', '4\u00d710\u00b9', '5\u00d710\u00b9', '6\u00d710\u00b9'])\n\n# Set the tick labels for the y-axis\nax.set_yticks([10**-13, 10**-12, 10**-11, 10**-10, 10**-9, 10**-8, 10**-7, 10**-6, 10**-5, 10**-4, 10**-3, 10**-2, 10**-1])\nax.set_yticklabels(['10\u207b\u00b9\u00b3', '10\u207b\u00b9\u00b2', '10\u207b\u00b9\u00b9', '10\u207b\u00b9\u2070', '10\u207b\u2079', '10\u207b\u2078', '10\u207b\u2077', '10\u207b\u2076', '10\u207b\u2075', '10\u207b\u2074', '10\u207b\u00b3', '10\u207b\u00b2', '10\u207b\u00b9'])\n\n# Set the grid lines\nax.grid(True, which='both', linestyle='--')\n\n# Set the x-axis limits\nax.set_xlim(10**1, 6*10**1)\n\n# Set the y-axis limits\nax.set_ylim(10**-13, 10**-1)\n\n# Set the x-axis label\nax.set_xlabel('N')\n\n# Set the y-axis label\nax.set_ylabel('Objective Value')\n\n# Set the title of the plot\nax.set_title('Objective Value vs. N')\n\n# Set the tick labels for the x-axis\nax.set_xticks([2*10**1, 3*10**1, 4*10**1, 5*10**1, 6*10**1])\nax.set_xticklabels(['2\u00d710\u00b9', '3\u00d710\u00b9', '4\u00d710\u00b9', '5\u00d710\u00b9', '6\u00d710\u00b9'])\n\n# Set the tick labels for the y-axis\nax.set_yticks([10**-13, 10**-12, 10**-11, 10**-10, 10**-9, 10**-8, 10**-7, 10**-6, 10**-5, 10**-4, 10**-3, 10**-2, 10**-1])\nax.set_yticklabels(['10\u207b\u00b9\u00b3', '10\u207b\u00b9\u00b2', '10\u207b\u00b9\u00b9', '10\u207b\u00b9\u2070', '10\u207b\u2079', '10\u207b\u2078', '10\u207b\u2077', '10\u207b\u2076', '10\u207b\u2075', '10\u207b\u2074', '10\u207b\u00b3', '10\u207b\u00b2', '10\u207b\u00b9'])\n\n# Set the grid lines\nax.grid(True, which='both', linestyle='--')\n\n# Set the x-axis limits\nax.set_xlim(10**1, 6*10**1)\n\n# Set the y-axis limits\nax.set_ylim(10**-13, 10**-1)\n\n# Set the x-axis label\nax.set_xlabel('N')\n\n# Set the y-axis label\nax.set_ylabel('Objective Value')\n\n# Set the title of the plot\nax.set_title('Objective Value vs. N')\n\n# Set the tick labels for the x-axis\nax.set_xticks([2*10**1, 3*10**1, 4*10**1, 5*10**1, 6*10**1])\nax.set_xticklabels(['2\u00d710\u00b9', '3\u00d710\u00b9', '4\u00d710\u00b9', '5\u00d710\u00b9', '6\u00d710\u00b9'])\n\n# Set the tick labels for the y-axis\nax.set_yticks([10**-13, 10**-12, 10**-11, 10**-10, 10**-9, 10**-8, 10**-7, 10**-6, 10**-5, 10**-4, 10**-3, 10**-2, 10**-1])\nax.set_yticklabels(['10\u207b\u00b9\u00b3', '10\u207b\u00b9\u00b2', '10\u207b\u00b9\u00b9', '10\u207b\u00b9\u2070', '10\u207b\u2079', '10\u207b\u2078', '10\u207b\u2077', '10\u207b\u2076', '10\u207b\u2075', '10\u207b\u2074', '10\u207b\u00b3', '10\u207b\u00b2', '10\u207b\u00b9'])\n\n# Set the grid lines\nax.grid(True, which='both', linestyle='--')\n\n# Set the x-axis limits\nax.set_xlim(10**1, 6*10**1)\n\n# Set the y-axis limits\nax.set_ylim(10**-13, 10**-1)\n\n# Set the x-axis label\nax.set_xlabel('N')\n\n# Set the y-axis label\nax.set_ylabel('Objective Value')\n\n# Set the title of the plot\nax.set_title('Objective Value vs. N')\n\n# Set the tick labels for the x-axis\nax.set_xticks([2*10**1, 3*10**1, 4*10**1, 5*10**1, 6*10**1])\nax.set_xticklabels(['2\u00d710\u00b9', '3\u00d710\u00b9', '4\u00d710\u00b9', '5\u00d710\u00b9', '6\u00d710\u00b9'])\n\n# Set the tick labels for the y-axis\nax.set_yticks([10**-13, 10**-12, 10**-11, 10**-10, 10**-9, 10**-8, 10**-7, 10**-6, 10**-5, 10**-4, 10**-3, 10**-2, 10**-1])\nax.set_yticklabels(['10\u207b\u00b9\u00b3', '10\u207b\u00b9\u00b2', '10\u207b\u00b9\u00b9', '10\u207b\u00b9\u2070', '10\u207b\u2079', '10\u207b\u2078', '10\u207b\u2077', '10\u207b\u2076', '10\u207b\u2075', '10\u207b\u2074', '10\u207b\u00b3', '10\u207b\u00b2', '10\u207b\u00b9'])\n\n# Set the grid lines\nax.grid(True, which='both', linestyle='--')\n\n# Set the x-axis limits\nax.set_xlim(10**1, 6*10**1)\n\n# Set the y-axis limits\nax.set_ylim(10**-13, 10**-1)\n\n# Set the x-axis label\nax.set_xlabel('N')\n\n# Set the y-axis label\nax.set_ylabel('Objective Value')\n\n# Set the title of the plot\nax.set_title('Objective Value vs. N')\n\n# Set the tick labels for the x-axis\nax.set_xticks([2*10**1, 3*10**1, 4*10**1, 5*10**1, 6*10**1])\nax.set_xticklabels(['2\u00d710\u00b9', '3\u00d710\u00b9', '4\u00d710\u00b9', '5\u00d710\u00b9', '6\u00d710\u00b9'])\n\n# Set the tick labels for the y-axis\nax.set_yticks([10**-13, 10**-12, 10**-11, 10**-10, 10**-9, 10**-8, 10**-7, 10**-6, 10**-5, 10**-4, 10**-3, 10**-2, 10**-1])\nax.set_yticklabels(['10\u207b\u00b9\u00b3', '10\u207b\u00b9\u00b2', '10\u207b\u00b9\u00b9', '10\u207b\u00b9\u2070', '10\u207b\u2079', '10\u207b\u2078', '10\u207b\u2077', '10\u207b\u2076', '10\u207b\u2075', '10\u207b\u2074', '10\u207b\u00b3', '10\u207b\u00b2', '10\u207b\u00b9'])\n\n# Set the grid lines\nax.grid(True, which='both', linestyle='--')\n\n# Set the x-axis limits\nax.set_xlim(10**1, 6*10**1)\n\n# Set the y-axis limits\nax.set_ylim(10**-13, 10**-1)\n\n# Set the x-axis label\nax.set_xlabel('N')\n\n# Set the y-axis label\nax.set_ylabel('Objective Value')\n\n# Set the title of the plot\nax.set_title('Objective Value vs. N')\n\n# Set the tick labels for the x-axis\nax.set_xticks([2*10**1, 3*10**1, 4*10**1, 5*10**1, 6*10**1])\nax.set_xticklabels(['2\u00d710\u00b9', '3\u00d710\u00b9', '4\u00d710\u00b9', '5\u00d710\u00b9', '6\u00d710\u00b9'])\n\n# Set the tick labels for the y-axis\nax.set_yticks([10**-13, 10**-12, 10**-11, 10**-10, 10**-9, 10**-8, 10**-7, 10**-6, 10**-5, 10**-4, 10**-3, 10**-2, 10**-1])\nax.set_yticklabels(['10\u207b\u00b9\u00b3', '10\u207b\u00b9\u00b2', '10\u207b\u00b9\u00b9', '10\u207b\u00b9\u2070', '10\u207b\u2079', '10\u207b\u2078', '10\u207b\u2077', '10\u207b\u2076', '10\u207b\u2075', '10\u207b\u2074', '10\u207b\u00b3', '"}
{"file": "dataset/ori_500/line_60.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Performance and Efficiency Over Weeks')\n\n# Set the labels for the x and y axes\nax.set_xlabel('Weeks')\nax.set_ylabel('Performance')\n\n# Set the grid lines\nax.grid(True)\n\n# Set the tick marks\nax.set_xticks(np.arange(0, 26, 5))\nax.set_yticks(np.arange(-1.5, 1.6, 0.5))\n\n# Set the tick labels\nax.set_xticklabels(['0', '5', '10', '15', '20', '25'])\nax.set_yticklabels(['-1.5', '-1.0', '-0.5', '0.0', '0.5', '1.0', '1.5'])\n\n# Plot the data\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'r--', label='Efficiency')\nax.plot([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'b-', label='Performance')\n\n# Show the legend\nax.legend()\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_61.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the x-axis label\nax.set_xlabel('Weeks')\n\n# Set the y-axis label\nax.set_ylabel('Values')\n\n# Set the title of the plot\nax.set_title('Performance and Efficiency Analysis')\n\n# Generate random data for the performance and efficiency\nperformance = np.random.rand(25)\nefficiency = np.random.rand(25)\n\n# Plot the performance and efficiency data\nax.plot(performance, 'bo-', label='Performance')\nax.plot(efficiency, 'ro-', label='Efficiency')\n\n# Add a legend to the plot\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_62.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the plot\nx = np.array([0, 5, 10, 15, 20, 25, 30])\ny = np.array([0.0, 0.8, 0.4, 0.2, 0.0, 0.2, 0.0])\n\n# Create the plot\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\nax.plot(x, y, 'o-')\n\n# Set the title and labels\nax.set_title('Detailed Performance and Efficiency Analysis Over Weeks')\nax.set_xlabel('Weeks')\nax.set_ylabel('Efficiency')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_63.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the grid lines\nax.grid(color='grey', linestyle='-', linewidth=0.5)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('Weeks')\nax.set_ylabel('Normalized Value')\n\n# Set the title of the plot\nax.set_title('Dynamic Data Presentation Across Weeks')\n\n# Set the ticks for the x-axis\nax.set_xticks([0, 5, 10, 15, 20, 25])\n\n# Set the ticks for the y-axis\nax.set_yticks(np.arange(0, 1.1, 0.1))\n\n# Plot the data series\nax.plot([0, 5, 10, 15, 20, 25], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'o-')\nax.plot([0, 5, 10, 15, 20, 25], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'o-')\nax.plot([0, 5, 10, 15, 20, 25], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'o-')\nax.plot([0, 5, 10, 15, 20, 25], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'o-')\nax.plot([0, 5, 10, 15, 20, 25], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'o-')\n\n# Set the legend for the plot\nax.legend(['Data Series 1', 'Data Series 2 with Gradient', 'Data Series 3'], loc='upper left')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_64.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 6.0))\n\n# Define the data for the plot\nx = np.array([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\ny = np.array([90, 88, 87, 85, 83, 81, 79, 77, 75, 73])\n\n# Plot the data\nax.plot(x, y, 'o-')\n\n# Set the title and labels\nax.set_title('Average Accuracy (%)')\nax.set_xlabel('Task')\nax.set_ylabel('Average Accuracy (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_65.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 3.0))\n\n# Plot the data\nax.plot([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [98.5, 97.5, 96.5, 95.5, 94.5, 93.5, 92.5, 91.5, 90.5, 89.5], label='BaCE')\nax.plot([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [88.5, 87.5, 86.5, 85.5, 84.5, 83.5, 82.5, 81.5, 80.5, 79.5], label='EWC')\n\n# Add a legend\nax.legend()\n\n# Set the title and labels\nax.set_title('Performance Comparison: BaCE vs EWC')\nax.set_xlabel('Task')\nax.set_ylabel('Average Accuracy (%)')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/line_66.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 7.0))\n\n# Plot the data\nax.plot(x, y, 'o-')\n\n# Set the title and labels\nax.set_title('model1 Performance')\nax.set_xlabel('Iterations')\nax.set_ylabel('Success Rate')\n\n# Add a legend\nax.legend(['model1 Series 1', 'model1 Series 2'], loc='upper left')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_67.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Set the x-axis label\nax.set_xlabel('Number of microphones')\n\n# Set the y-axis label\nax.set_ylabel('WER(%)')\n\n# Set the title of the plot\nax.set_title('AMMI WER(%)')\n\n# Set the tick labels for the x-axis\nax.set_xticks([2, 3, 4, 5, 6, 7, 8])\n\n# Set the tick labels for the y-axis\nax.set_yticks([2, 3, 4, 5, 6, 7, 8, 9])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\n\n"}
{"file": "dataset/ori_500/line_68.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig = plt.figure(figsize=(8.0, 7.0))\nax = fig.add_subplot(111)\n\n# Define the data points for each line\nx = np.array([2, 3, 4, 5, 6, 7, 8])\ny1 = np.array([9, 8, 7, 6, 5, 4, 3])\ny2 = np.array([9, 8, 7, 6, 5, 4, 3])\ny3 = np.array([9, 8, 7, 6, 5, 4, 3])\ny4 = np.array([9, 8, 7, 6, 5, 4, 3])\ny5 = np.array([9, 8, 7, 6, 5, 4, 3])\ny6 = np.array([9, 8, 7, 6, 5, 4, 3])\n\n# Plot the lines with different colors and labels\nax.plot(x, y1, 'o-', color='blue', label='IHM Trend')\nax.plot(x, y2, 'o-', color='purple', label='SDM Trend')\nax.plot(x, y3, 'o-', color='orange', label='LibriCSS (test)')\nax.plot(x, y4, 'o-', color='cyan', label='AMI (dev)')\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('Number of microphones')\nax.set_ylabel('WER (%)')\n\n# Set the title of the plot\nax.set_title('AMT WER')\n\n# Add a legend to the plot\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_69.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the grid\nax.grid(True, which='both', linestyle='-', linewidth=0.5)\nax.grid(True, which='minor', linestyle=':', linewidth=0.5)\n\n# Set the tick labels\nax.set_xticks(np.arange(2, 9))\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8'])\nax.set_yticks(np.arange(0, 1.1, 0.1))\nax.set_yticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1.0'])\n\n# Set the title and labels\nax.set_title('WER (%)')\nax.set_xlabel('Number of Microphones')\nax.set_ylabel('WER (%)')\n\n# Plot the data\nax.plot([0.9, 0.7, 0.8, 0.9, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2], label='LibriCSS WER', color='#FFA500', marker='s', linestyle='dashed')\nax.plot([0.9, 0.7, 0.8, 0.9, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2], label='AMI WER', color='#0000FF', marker='s', linestyle='dashed')\nax.plot([0.9, 0.7, 0.8, 0.9, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2], label='Threshold', color='#FF0000', marker='s', linestyle='dashed')\n\n# Add the legend\nax.legend()\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_7.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 4.0))\n\n# Plot the data\nax.plot(np.random.rand(10), 'bo-')\n\n# Set the x-axis labels\nax.set_xticks([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\nax.set_xticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9'])\n\n# Set the y-axis labels\nax.set_yticks([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99])\n\n# Set the title\nax.set_title('Contrastive loss weight.')\n\nplt.show()"}
{"file": "dataset/ori_500/line_70.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create figure and axis objects\nfig, ax = plt.subplots(figsize=(12.0, 5.0))\n\n# Plot the first subplot\nax.plot([0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2], 'o-')\nax.set_xlabel('Number of Microphones')\nax.set_ylabel('WER (%)')\nax.set_title('LibriCSS WER')\nax.grid(True)\nax.set_xticks(np.arange(2, 9))\nax.set_yticks(np.arange(0.2, 1.0, 0.1))\nax.legend(['Threshold'], loc='upper right')\n\n# Plot the second subplot\nax2 = ax.twinx()\nax2.plot([0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2], 'o-')\nax2.set_xlabel('Number of Microphones')\nax2.set_ylabel('WER (%)')\nax2.set_title('AMI WER')\nax2.grid(True)\nax2.set_xticks(np.arange(2, 9))\nax2.set_yticks(np.arange(0.2, 1.0, 0.1))\nax2.legend(['Threshold'], loc='upper left')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_71.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with three subplots\nfig, axs = plt.subplots(3, 1, figsize=(6.0, 12.0))\n\n# Define the data for each subplot\ndata1 = [0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1]\ndata2 = [0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1]\ndata3 = [0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1]\n\n# Plot the first subplot\naxs[0].plot(data1, 'bo-')\naxs[0].set_title('SPMotif-0.5')\n\n# Plot the second subplot\naxs[1].plot(data2, 'go-')\naxs[1].set_title('SPMotif-0.7')\n\n# Plot the third subplot\naxs[2].plot(data3, 'ro-')\naxs[2].set_title('SPMotif-0.9')\n\nplt.tight_layout()\nplt.show()"}
{"file": "dataset/ori_500/line_72.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgreen')\n\n# Add grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the tick labels\nax.set_xticks(np.arange(0.1, 1.1, 0.1))\nax.set_yticks(np.arange(-80, 30, 10))\n\n# Set the tick labels\nax.set_xticklabels(['0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1.0'])\nax.set_yticklabels(['-80', '-70', '-60', '-50', '-40', '-30', '-20', '-10', '0', '10', '20', '30'])\n\n# Set the title and labels\nax.set_title('Dynamic Performance Trends')\nax.set_xlabel('Ratio r')\nax.set_ylabel('Performance')\n\n# Plot the data\nax.plot([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'o-', label='PNA + ours')\nax.plot([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], 'o-', label='GIN + ours')\n\n# Show the legend\nax.legend()\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_73.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with a specific size\nfig = plt.figure(figsize=(8.0, 6.0))\n\n# Add a subplot to the figure\nax = fig.add_subplot(111)\n\n# Set the title of the plot\nax.set_title('Modern Linear Performance Evaluation')\n\n# Set the x and y labels\nax.set_xlabel('Ratio r')\nax.set_ylabel('Performance')\n\n# Set the grid lines\nax.grid(True, linestyle='--', linewidth=0.5)\n\n# Set the tick marks\nax.set_xticks(np.arange(0.1, 1.1, 0.1))\nax.set_yticks(np.arange(0.1, 1.5, 0.1))\n\n# Set the tick labels\nax.set_xticklabels(['0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1.0'])\nax.set_yticklabels(['0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1.0', '1.1', '1.2', '1.3', '1.4', '1.5'])\n\n# Set the legend\nax.legend(loc='upper left', bbox_to_anchor=(1,1), fancybox=True, shadow=True)\n\n# Set the text for the legend\nax.text(0.8, 1.4, 'PNA + ours', color='blue', fontsize=12)\nax.text(0.8, 1.3, 'GIN + ours', color='orange', fontsize=12)\n\n# Set the text for the title\nax.text(0.5, 1.6, 'Modern Linear Performance Evaluation', color='black', fontsize=14)\n\n# Set the text for the axis labels\nax.text(0.05, 0.1, '0.1', color='black', fontsize=12)\nax.text(0.15, 0.1, '0.2', color='black', fontsize=12)\nax.text(0.25, 0.1, '0.3', color='black', fontsize=12)\nax.text(0.35, 0.1, '0.4', color='black', fontsize=12)\nax.text(0.45, 0.1, '0.5', color='black', fontsize=12)\nax.text(0.55, 0.1, '0.6', color='black', fontsize=12)\nax.text(0.65, 0.1, '0.7', color='black', fontsize=12)\nax.text(0.75, 0.1, '0.8', color='black', fontsize=12)\nax.text(0.85, 0.1, '0.9', color='black', fontsize=12)\nax.text(0.95, 0.1, '1.0', color='black', fontsize=12)\n\n# Set the text for the axis labels\nax.text(0.1, 0.05, '0.1', color='black', fontsize=12)\nax.text(0.1, 0.15, '0.2', color='black', fontsize=12)\nax.text(0.1, 0.25, '0.3', color='black', fontsize=12)\nax.text(0.1, 0.35, '0.4', color='black', fontsize=12)\nax.text(0.1, 0.45, '0.5', color='black', fontsize=12)\nax.text(0.1, 0.55, '0.6', color='black', fontsize=12)\nax.text(0.1, 0.65, '0.7', color='black', fontsize=12)\nax.text(0.1, 0.75, '0.8', color='black', fontsize=12)\nax.text(0.1, 0.85, '0.9', color='black', fontsize=12)\nax.text(0.1, 0.95, '1.0', color='black', fontsize=12)\n\n# Set the text for the axis labels\nax.text(0.1, 0.05, '0.1', color='black', fontsize=12)\nax.text(0.1, 0.15, '0.2', color='black', fontsize=12)\nax.text(0.1, 0.25, '0.3', color='black', fontsize=12)\nax.text(0.1, 0.35, '0.4', color='black', fontsize=12)\nax.text(0.1, 0.45, '0.5', color='black', fontsize=12)\nax.text(0.1, 0.55, '0.6', color='black', fontsize=12)\nax.text(0.1, 0.65, '0.7', color='black', fontsize=12)\nax.text(0.1, 0.75, '0.8', color='black', fontsize=12)\nax.text(0.1, 0.85, '0.9', color='black', fontsize=12)\nax.text(0.1, 0.95, '1.0', color='black', fontsize=12)\n\n# Set the text for the axis labels\nax.text(0.1, 0.05, '0.1', color='black', fontsize=12)\nax.text(0.1, 0.15, '0.2', color='black', fontsize=12)\nax.text(0.1, 0.25, '0.3', color='black', fontsize=12)\nax.text(0.1, 0.35, '0.4', color='black', fontsize=12)\nax.text(0.1, 0.45, '0.5', color='black', fontsize=12)\nax.text(0.1, 0.55, '0.6', color='black', fontsize=12)\nax.text(0.1, 0.65, '0.7', color='black', fontsize=12)\nax.text(0.1, 0.75, '0.8', color='black', fontsize=12)\nax.text(0.1, 0.85, '0.9', color='black', fontsize=12)\nax.text(0.1, 0.95, '1.0', color='black', fontsize=12)\n\n# Set the text for the axis labels\nax.text(0.1, 0.05, '0.1', color='black', fontsize=12)\nax.text(0.1, 0.15, '0.2', color='black', fontsize=12)\nax.text(0.1, 0.25, '0.3', color='black', fontsize=12)\nax.text(0.1, 0.35, '0.4', color='black', fontsize=12)\nax.text(0.1, 0.45, '0.5', color='black', fontsize=12)\nax.text(0.1, 0.55, '0.6', color='black', fontsize=12)\nax.text(0.1, 0.65, '0.7', color='black', fontsize=12)\nax.text(0.1, 0.75, '0.8', color='black', fontsize=12)\nax.text(0.1, 0.85, '0.9', color='black', fontsize=12)\nax.text(0.1, 0.95, '1.0', color='black', fontsize=12)\n\n# Set the text for the axis labels\nax.text(0.1, 0.05, '0.1', color='black', fontsize=12)\nax.text(0.1, 0.15, '0.2', color='black', fontsize=12)\nax.text(0.1, 0.25, '0.3', color='black', fontsize=12)\nax.text(0.1, 0.35, '0.4', color='black', fontsize=12)\nax.text(0.1, 0.45, '0.5', color='black', fontsize=12)\nax.text(0.1, 0.55, '0.6', color='black', fontsize=12)\nax.text(0.1, 0.65, '0.7', color='black', fontsize=12)\nax.text(0.1, 0.75, '0.8', color='black', fontsize=12)\nax.text(0.1, 0.85, '0.9', color='black', fontsize=12)\nax.text(0.1, 0.95, '1.0', color='black', fontsize=12)\n\n# Set the text for the axis labels\nax.text(0.1, 0.05, '0.1', color='black', fontsize=12)\nax.text(0.1, 0.15, '0.2', color='black', fontsize=12)\nax.text(0.1, 0.25, '0.3', color='black', fontsize=12)\nax.text(0.1, 0.35, '0.4', color='black', fontsize=12)\nax.text(0.1, 0.45, '0.5', color='black', fontsize=12)\nax.text(0.1, 0.55, '0.6', color='black', fontsize=12)\nax.text(0.1, 0.65, '0.7', color='black', fontsize=12)\nax.text(0.1, 0.75, '0.8', color='black', fontsize=12)\nax.text(0.1, 0.85, '0.9', color='black', fontsize=12)\nax.text(0.1, 0.95, '1.0', color='black', fontsize=12)\n\n# Set the text for the axis labels\nax.text(0.1, 0.05, '0.1', color='black', fontsize=12)\nax.text(0.1, 0.15, '0.2', color='black', fontsize=12)\nax.text(0.1, 0.25, '0.3', color='black', fontsize=12)\nax.text(0.1, 0.35, '0.4', color='black', fontsize=12)\nax.text(0.1, 0.45, '0.5', color='black', fontsize=12)\nax.text(0.1, 0.55, '0.6', color='black', fontsize=12)\nax.text(0.1, 0.65, '0.7', color='black', fontsize=12)\nax.text(0.1, 0.75, '0.8', color='black', fontsize=12)\nax.text(0.1, 0.85, '0.9', color='black', fontsize=12)\nax.text(0.1, 0.95, '1.0', color='black', fontsize=12)\n\n# Set the text for the axis labels\nax.text(0.1, 0.05, '0.1', color='black', fontsize=12)\nax.text(0.1, 0.15, '0.2', color='black', fontsize=12)\nax.text(0.1, 0.25, '0.3', color='black', fontsize=12)\nax.text(0.1, 0.35, '0.4', color='black', fontsize=12)\nax.text(0.1, 0.45, '0.5', color='black', fontsize=12)\nax.text(0.1, 0.55, '0.6', color='black', fontsize=12)\nax.text(0.1, 0.65, '0.7', color='black', fontsize=12)\nax.text(0.1, 0.75, '0.8', color='black', fontsize=12)\nax.text(0.1, 0.85, '0.9', color='black', fontsize=12)\nax.text(0.1, 0.95, '1.0', color='black', fontsize=12)\n\n# Set the text for the axis labels\nax.text(0.1, 0.05, '0.1', color='black', fontsize=12)\nax.text(0.1, 0.15, '0.2', color='black', fontsize=12)\nax.text(0.1, 0.25, '0.3', color='black', fontsize=12)\nax.text(0.1, 0.35, '0.4', color='black', fontsize=12)\nax.text(0.1, 0.45, '0.5', color='black', fontsize=12)\nax.text(0.1, 0.55, '0.6', color='black', fontsize=12)\nax.text(0.1, 0.65, '0.7', color='black', fontsize=12)\nax.text(0.1, 0.75, '0.8', color='black', fontsize=12)\nax.text(0.1, 0.85, '0.9', color='black', fontsize=12)\nax.text(0.1, 0.95, '1.0', color='black', fontsize=12)\n\n# Set the text for the axis labels\nax.text(0.1, 0.05, '0.1', color='black', fontsize=12)\nax.text(0.1, 0.15, '0.2', color='black', fontsize=12)\nax.text(0.1, 0.25, '0.3', color='black', fontsize=12)\nax.text(0.1, 0.35, '0.4', color='black', fontsize=12)\nax.text(0.1, 0.45, '0.5', color='black', fontsize=12)\nax.text(0.1, 0.55, '0.6', color='black', fontsize=12)\nax.text(0.1, 0.65, '0.7', color='black', fontsize=12)\nax.text(0.1, 0.75, '0.8', color='black', fontsize=12)\nax.text(0.1, 0.85, '0.9', color='black', fontsize=12)\nax.text(0.1, 0.95, '1.0', color='black', fontsize=12)\n\n# Set the text for the axis labels\nax.text(0.1, 0.05, '0.1', color='black', fontsize=12)\nax.text(0.1, 0.15, '0.2', color='black', fontsize=12)\nax.text(0.1, 0.25, '0.3', color='black', fontsize=12)\nax.text(0.1, 0.35, '0.4', color='black', fontsize=12)\nax.text(0.1, 0.45, '0.5', color='black', fontsize=12)\nax.text(0.1, 0.55, '0.6', color='black', fontsize=12)\nax.text(0.1, 0.65, '0.7', color='black', fontsize=12)\nax.text(0.1, 0.75, '0.8', color='black', fontsize=12)\nax.text(0.1, 0.85, '0.9', color='black', fontsize=12)\nax.text(0.1, 0.95, '1.0', color='black', fontsize=12)\n\n# Set the text for the axis labels\nax.text(0.1, 0.05, '0.1', color='black', fontsize=12)\nax.text(0.1, 0.15, '0.2', color='black', fontsize=12)\nax.text(0.1, 0.25, '0.3', color='black', fontsize=12)\nax.text(0.1, 0.35, '0.4', color='black', fontsize=12)\nax.text(0.1, 0.45, '0.5', color='black', fontsize=12)\nax.text(0.1, 0.55, '0.6', color='black', fontsize=12)\nax.text(0.1, 0.65, '0.7', color='black', fontsize=12)\nax.text(0.1, 0.75, '0.8', color='black', fontsize=12)\nax.text(0.1, 0.85, '0.9', color='black', fontsize=12)\nax.text(0.1, 0.95, '1.0', color='black', fontsize=12)\n\n# Set the text for the axis labels\nax.text(0.1, 0.05, '0.1', color='black', fontsize=12)\nax.text(0.1, "}
{"file": "dataset/ori_500/line_74.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the tick labels\nax.set_xticks([0.0, 0.2, 0.4, 0.6, 0.8, 1.0])\nax.set_yticks([0.0, 0.2, 0.4, 0.6, 0.8, 1.0])\n\n# Set the tick labels\nax.set_xticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the title of the plot\nax.set_title('Dynamic Model Performance')\n\n# Set the label for the x-axis\nax.set_xlabel('Ratio r')\n\n# Set the label for the y-axis\nax.set_ylabel('Performance')\n\n# Set the legend\nax.legend(loc='upper right')\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax.legend(fontsize=10)\n\n# Set the font size of the title\nax.set_title(fontsize=12)\n\n# Set the font size of the x-axis label\nax.set_xlabel(fontsize=12)\n\n# Set the font size of the y-axis label\nax.set_ylabel(fontsize=12)\n\n# Set the font size of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the font size of the legend\nax"}
{"file": "dataset/ori_500/line_75.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the grid\nax.grid(True)\n\n# Set the x-axis labels\nax.set_xticks(np.arange(5, 30, 2))\nax.set_xticklabels(['5', '7', '9', '11', '13', '15', '17', '19', '21', '23', '25', '27', '29'])\n\n# Set the y-axis labels\nax.set_yticks(np.arange(60, 85, 5))\nax.set_yticklabels(['60', '65', '70', '75', '80', '85'])\n\n# Set the title of the plot\nax.set_title('Comparison of Model Accuracies')\n\n# Set the labels for the legend\nax.legend(['Model 1 Mean Accuracy', 'Model 2 Mean Accuracy'], loc='upper left')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgrey')\n\n# Set the color of the text\nax.set_xlabel('Ensemble Size')\nax.set_ylabel('Accuracy')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=2)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both',"}
{"file": "dataset/ori_500/line_76.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with three subplots\nfig, axs = plt.subplots(3, 1, figsize=(8.0, 12.0))\n\n# First subplot\naxs[0].plot(range(10), [95, 94, 93, 92, 91, 90, 89, 88, 87, 86], 'k--')\naxs[0].plot(range(10), [90, 91, 92, 93, 94, 95, 96, 97, 98, 99], 'k--')\naxs[0].plot(range(10), [85, 86, 87, 88, 89, 90, 91, 92, 93, 94], 'k--')\naxs[0].plot(range(10), [75, 76, 77, 78, 79, 80, 81, 82, 83, 84], 'k--')\naxs[0].plot(range(10), [65, 66, 67, 68, 69, 70, 71, 72, 73, 74], 'k--')\naxs[0].plot(range(10), [55, 56, 57, 58, 59, 60, 61, 62, 63, 64], 'k--')\naxs[0].plot(range(10), [45, 46, 47, 48, 49, 50, 51, 52, 53, 54], 'k--')\naxs[0].plot(range(10), [35, 36, 37, 38, 39, 40, 41, 42, 43, 44], 'k--')\naxs[0].plot(range(10), [25, 26, 27, 28, 29, 30, 31, 32, 33, 34], 'k--')\naxs[0].plot(range(10), [15, 16, 17, 18, 19, 20, 21, 22, 23, 24], 'k--')\naxs[0].plot(range(10), [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], 'k--')\naxs[0].plot(range(10), [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], 'k--')\n\n# Second subplot\naxs[1].plot(range(10), [95, 94, 93, 92, 91, 90, 89, 88, 87, 86], 'k--')\naxs[1].plot(range(10), [90, 91, 92, 93, 94, 95, 96, 97, 98, 99], 'k--')\naxs[1].plot(range(10), [85, 86, 87, 88, 89, 90, 91, 92, 93, 94], 'k--')\naxs[1].plot(range(10), [75, 76, 77, 78, 79, 80, 81, 82, 83, 84], 'k--')\naxs[1].plot(range(10), [65, 66, 67, 68, 69, 70, 71, 72, 73, 74], 'k--')\naxs[1].plot(range(10), [55, 56, 57, 58, 59, 60, 61, 62, 63, 64], 'k--')\naxs[1].plot(range(10), [45, 46, 47, 48, 49, 50, 51, 52, 53, 54], 'k--')\naxs[1].plot(range(10), [35, 36, 37, 38, 39, 40, 41, 42, 43, 44], 'k--')\naxs[1].plot(range(10), [25, 26, 27, 28, 29, 30, 31, 32, 33, 34], 'k--')\naxs[1].plot(range(10), [15, 16, 17, 18, 19, 20, 21, 22, 23, 24], 'k--')\naxs[1].plot(range(10), [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], 'k--')\n\n# Third subplot\naxs[2].plot(range(10), [95, 94, 93, 92, 91, 90, 89, 88, 87, 86], 'k--')\naxs[2].plot(range(10), [90, 91, 92, 93, 94, 95, 96, 97, 98, 99], 'k--')\naxs[2].plot(range(10), [85, 86, 87, 88, 89, 90, 91, 92, 93, 94], 'k--')\naxs[2].plot(range(10), [75, 76, 77, 78, 79, 80, 81, 82, 83, 84], 'k--')\naxs[2].plot(range(10), [65, 66, 67, 68, 69, 70, 71, 72, 73, 74], 'k--')\naxs[2].plot(range(10), [55, 56, 57, 58, 59, 60, 61, 62, 63, 64], 'k--')\naxs[2].plot(range(10), [45, 46, 47, 48, 49, 50, 51, 52, 53, 54], 'k--')\naxs[2].plot(range(10), [35, 36, 37, 38, 39, 40, 41, 42, 43, 44], 'k--')\naxs[2].plot(range(10), [25, 26, 27, 28, 29, 30, 31, 32, 33, 34], 'k--')\naxs[2].plot(range(10), [15, 16, 17, 18, 19, 20, 21, 22, 23, 24], 'k--')\naxs[2].plot(range(10), [5, 6, 7, 8, 9, 10, 11, 12, 13, 14], 'k--')\n\n# Add legends and labels\nfor ax in axs:\n    ax.legend(['Config A - Model X', 'Config B - Model X', 'Config C - Model X'], loc='upper left')\n    ax.set_xlabel('Iteration')\n    ax.set_ylabel('Score')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_77.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with three subplots\nfig, axs = plt.subplots(3, 1, figsize=(8.0, 12.0))\n\n# Define the data for each subplot\ndata = [\n    {'label': 'Performance of Llama', 'x': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 'y': [89.0, 87.5, 85.0, 82.5, 80.0, 77.5, 75.0, 72.5, 70.0, 67.5]},\n    {'label': 'Performance of Falcon', 'x': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 'y': [72.0, 70.0, 68.0, 66.0, 64.0, 62.0, 60.0, 58.0, 56.0, 54.0]},\n    {'label': 'Performance of Qwen', 'x': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 'y': [85.0, 82.5, 80.0, 77.5, 75.0, 72.5, 70.0, 67.5, 65.0, 62.5]}\n]\n\n# Plot the data for each subplot\nfor i, ax in enumerate(axs):\n    ax.plot(data[i]['x'], data[i]['y'], label=data[i]['label'])\n    ax.set_xlabel('Iteration')\n    ax.set_ylabel('Score')\n    ax.legend()\n\nplt.show()"}
{"file": "dataset/ori_500/line_78.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with multiple subplots\nfig, axs = plt.subplots(5, 2, figsize=(10.0, 10.0))\n\n# Define the data for each subplot\ndata = [\n    {'name': 'Brand A', 'sales': [1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0], 'color': 'r'},\n    {'name': 'Brand B', 'sales': [1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0], 'color': 'c'},\n    {'name': 'Brand C', 'sales': [1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0], 'color': 'm'},\n    {'name': 'Brand D', 'sales': [1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0], 'color': 'y'},\n    {'name': 'Brand E', 'sales': [1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0, 4.5, 5.0], 'color': 'k'},\n]\n\n# Loop through each subplot and plot the data\nfor i, ax in enumerate(axs.flatten()):\n    ax.plot(data[i]['sales'], color=data[i]['color'])\n    ax.set_title(f'Brand {chr(65+i)}')\n    ax.set_xlabel('Quarter')\n    ax.set_ylabel('Sales Growth')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_79.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(18.0, 4.0))\n\n# Set the x-axis limits\nax.set_xlim(100, 700)\n\n# Set the y-axis limits\nax.set_ylim(0.0, 2.0)\n\n# Set the x-axis ticks\nax.set_xticks([100, 300, 500, 700])\n\n# Set the y-axis ticks\nax.set_yticks([0.0, 0.5, 1.0, 1.5, 2.0])\n\n# Set the x-axis label\nax.set_xlabel('Time (s)')\n\n# Set the y-axis label\nax.set_ylabel('Metric Value')\n\n# Set the title of the plot\nax.set_title('Traffic Performance')\n\n# Plot the first line\nax.plot([100, 300, 500, 700], [0.0, 0.5, 1.0, 1.5], 'o-', color='orange')\n\n# Plot the second line\nax.plot([100, 300, 500, 700], [0.0, 0.5, 1.0, 1.5], 'o-', color='blue')\n\n# Plot the third line\nax.plot([100, 300, 500, 700], [0.0, 0.5, 1.0, 1.5], 'o-', color='red')\n\n# Add a legend\nax.legend(['ECL Run 1', 'ECL Run 2'], loc='upper left')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/line_8.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the x-axis labels\nax.set_xticks(np.arange(4))\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis label\nax.set_ylabel('Relaxation Level')\n\n# Set the title\nax.set_title('Driving Style')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the grid\nax.grid(True)\n\n# Set the y-axis limits\nax.set_ylim([0.0, 1.5])\n\n# Set the x-axis limits\nax.set_xlim([0.0, 3.0])\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0.0, 1.5, 0.2))\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(4))\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0', '1.2', '1.4', '1.6'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Passive', 'Rail', 'Replay', 'Sportive'])\n\n# Set the y-axis tick parameters\nax.yaxis.set_tick_params(labelsize=12)\n\n# Set the x-axis tick parameters\nax.xaxis.set_tick_params(labelsize=12)\n\n# Set the y-axis tick"}
{"file": "dataset/ori_500/line_80.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create data\nx = np.arange(1, 6)\ny1 = np.array([20, 25, 30, 35, 40])\ny2 = np.array([25, 30, 35, 40, 45])\ny3 = np.array([30, 35, 40, 45, 50])\ny4 = np.array([35, 40, 45, 50, 55])\ny5 = np.array([40, 45, 50, 55, 60])\ny6 = np.array([45, 50, 55, 60, 65])\ny7 = np.array([50, 55, 60, 65, 70])\ny8 = np.array([55, 60, 65, 70, 75])\ny9 = np.array([60, 65, 70, 75, 80])\n\n# Create figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Plot data\nax.plot(x, y1, label='Run 1', color='purple')\nax.plot(x, y2, label='Run 2', color='teal')\n\n# Add legend\nax.legend()\n\n# Set title\nax.set_title('Category A Growth')\n\n# Set labels\nax.set_xlabel('Phase')\nax.set_ylabel('Cumulative Value')\n\n# Show plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_9.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(4e10, 3e10)\n\n# Set the y-axis limits\nax.set_ylim(1e-14, 1e-8)\n\n# Set the x-axis ticks\nax.set_xticks([4e10, 6e10, 10, 2e10, 3e10])\n\n# Set the x-axis labels\nax.set_xticklabels(['$4 \\times 10^{10}$', '$6 \\times 10^{10}$', '10', '$2 \\times 10^{10}$', '$3 \\times 10^{10}$'])\n\n# Set the y-axis ticks\nax.set_yticks([1e-14, 1e-12, 1e-10, 1e-8, 1e-6, 1e-4, 1e-2, 1e-0])\n\n# Set the y-axis labels\nax.set_yticklabels(['$1 \\times 10^{-14}$', '$1 \\times 10^{-12}$', '$1 \\times 10^{-10}$', '$1 \\times 10^{-8}$', '$1 \\times 10^{-6}$', '$1 \\times 10^{-4}$', '$1 \\times 10^{-2}$', '$1 \\times 10^{0}$'])\n\n# Set the x-axis label\nax.set_xlabel('N')\n\n# Set the y-axis label\nax.set_ylabel('Error')\n\n# Set the title of the plot\nax.set_title('Standard vs Constrained')\n\n# Set the grid lines\nax.grid(True)\n\n# Set the grid line style\nax.grid(color='gray', linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray')\n\n# Set the grid line style\nax.grid(linestyle='--')\n\n# Set the grid line width\nax.grid(linewidth=0.5)\n\n# Set the grid line color\nax.grid(color='gray"}
{"file": "dataset/ori_500/multidiff_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the pie chart\nlabels = ['Central', 'West', 'Others']\nsizes = [5, 5, 90]\ncolors = ['lightblue', 'lightgreen', 'lightcoral']\nexplode = (0.1, 0, 0)  # explode 1st slice\n\n# Plot the pie chart\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\nax.pie(sizes, explode=explode, labels=labels, colors=colors,\nautopct='%1.1f%%', shadow=True, startangle=140)\nax.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_10.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 2.0))\n\n# Create a color map\ncmap = plt.cm.get_cmap('viridis')\n\n# Create a list of colors\ncolors = [cmap(i) for i in np.linspace(0, 1, 10)]\n\n# Create a list of labels\nlabels = ['PaleSkin', 'OvalFace', 'Smiling', 'BrownHair', 'Attractive']\n\n# Create a list of values\nvalues = [0.5, 0.3, 0.7, 0.2, 0.9]\n\n# Create a list of positions\npositions = range(len(labels))\n\n# Create a bar chart\nax.barh(positions, values, align='center', color=colors)\n\n# Set the x-axis limits\nax.set_xlim(-1.0, 1.5)\n\n# Set the y-axis limits\nax.set_ylim(-0.5, len(labels)-0.5)\n\n# Set the y-axis tick labels\nax.set_yticklabels(labels)\n\n# Set the y-axis tick positions\nax.set_yticks(positions)\n\n# Set the x-axis label\nax.set_xlabel('sensitive attribute')\n\nplt.show()"}
{"file": "dataset/ori_500/multidiff_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, ax = plt.subplots(2, 1, figsize=(10.0, 6.0))\n\n# Plot the first subplot\nax[0].barh(range(5), [44.15, 44.05, 41.55, 40.9, 40.65], color='darkgreen')\nax[0].set_yticks(range(5))\nax[0].set_yticklabels(['Engstrom (M1)', 'Zhang (M2)', 'Rice (M3)', 'Rade (M4)', 'Hendrycks (M5)'])\nax[0].set_xlabel('Robust Error (%)')\n\n# Plot the second subplot\nax[1].barh(range(5), [0.00, 6.20, 4.90, 2.80, 5.40], color='darkgreen')\nax[1].set_yticks(range(5))\nax[1].set_yticklabels(['Engstrom (M1)', 'Zhang (M2)', 'Rice (M3)', 'Rade (M4)', 'Hendrycks (M5)'])\nax[1].set_xlabel('Robust Error (%)')\n\n# Add a color bar for the second subplot\ncmap = plt.cm.get_cmap('Greens')\nnorm = plt.Normalize(vmin=0, vmax=1)\ncbar = plt.colorbar(cmap(norm), ax=ax[1])\ncbar.set_label('Colorbar')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_12.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Plot the first subplot\nax.plot([0.551, 0.538], [0.744, 0.762], 'o-', color='blue')\nax.set_title('VGG16')\n\n# Plot the second subplot\nax.plot([0.394, 0.477], [0.538, 0.551], 'o-', color='red')\nax.set_title('Resnet101')\n\n# Plot the third subplot\nax.plot([0.394, 0.477], [0.538, 0.551], 'o-', color='green')\nax.set_title('Rotation Invariance')\n\n# Add a vertical line at x=90\nax.axvline(x=90, color='black', linestyle='--')\n\n# Add a vertical line at x=180\nax.axvline(x=180, color='black', linestyle='--')\n\nplt.show()"}
{"file": "dataset/ori_500/multidiff_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, ax = plt.subplots(2, 1, figsize=(8.0, 8.0))\n\n# Generate random data for the first subplot\nnp.random.seed(42)\ndata = np.random.rand(10, 10)\ncmap = plt.cm.viridis\nim = ax[0].imshow(data, cmap=cmap)\n\n# Add colorbar to the first subplot\ncbar = fig.colorbar(im, ax=ax[0])\n\n# Set the tick labels for the first subplot\nax[0].set_xticks(np.arange(len(['PaleSkin', 'OvalFace', 'Smiling', 'BrownHair', 'Attactive', 'Male', 'BigLips', 'PointyNose', 'White', 'BigNose', 'NoBeard', 'HeavyMakeup'])))\nax[0].set_yticks(np.arange(len(['PaleSkin', 'OvalFace', 'Smiling', 'BrownHair', 'Attactive', 'Male', 'BigLips', 'PointyNose', 'White', 'BigNose', 'NoBeard', 'HeavyMakeup'])))\nax[0].set_xticklabels(['PaleSkin', 'OvalFace', 'Smiling', 'BrownHair', 'Attactive', 'Male', 'BigLips', 'PointyNose', 'White', 'BigNose', 'NoBeard', 'HeavyMakeup'])\nax[0].set_yticklabels(['PaleSkin', 'OvalFace', 'Smiling', 'BrownHair', 'Attactive', 'Male', 'BigLips', 'PointyNose', 'White', 'BigNose', 'NoBeard', 'HeavyMakeup'])\n\n# Set the title and axis labels for the first subplot\nax[0].set_title('First Subplot')\nax[0].set_xlabel('sensitive attribute')\n\n# Generate random data for the second subplot\nnp.random.seed(42)\ndata = np.random.rand(10, 10)\ncmap = plt.cm.viridis\nim = ax[1].imshow(data, cmap=cmap)\n\n# Add colorbar to the second subplot\ncbar = fig.colorbar(im, ax=ax[1])\n\n# Set the tick labels for the second subplot\nax[1].set_xticks(np.arange(len(['PaleSkin', 'OvalFace', 'Smiling', 'BrownHair', 'Attactive', 'Male', 'BigLips', 'PointyNose', 'White', 'BigNose', 'NoBeard', 'HeavyMakeup'])))\nax[1].set_yticks(np.arange(len(['PaleSkin', 'OvalFace', 'Smiling', 'BrownHair', 'Attactive', 'Male', 'BigLips', 'PointyNose', 'White', 'BigNose', 'NoBeard', 'HeavyMakeup'])))\nax[1].set_xticklabels(['PaleSkin', 'OvalFace', 'Smiling', 'BrownHair', 'Attactive', 'Male', 'BigLips', 'PointyNose', 'White', 'BigNose', 'NoBeard', 'HeavyMakeup'])\nax[1].set_yticklabels(['PaleSkin', 'OvalFace', 'Smiling', 'BrownHair', 'Attactive', 'Male', 'BigLips', 'PointyNose', 'White', 'BigNose', 'NoBeard', 'HeavyMakeup'])\n\n# Set the title and axis labels for the second subplot\nax[1].set_title('Second Subplot')\nax[1].set_xlabel('sensitive attribute')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, axs = plt.subplots(2, 1, figsize=(5.0, 6.0))\n\n# First subplot\naxs[0].plot([0, 10, 20, 30, 40], [-8.0, -8.5, -9.0, -9.5, -10.0], 'k-')\naxs[0].set_title('(a) Token rarity')\naxs[0].set_xlabel('GPT2Tokenizer rank')\naxs[0].set_ylabel('Token rarity')\n\n# Add a shaded region\naxs[0].fill_between([0, 10, 20, 30, 40], [-8.0, -8.5, -9.0, -9.5, -10.0], [-8.5, -9.0, -9.5, -10.0, -10.5], color='grey', alpha=0.5)\n\n# Second subplot\naxs[1].boxplot(np.random.rand(10, 5))\naxs[1].set_title('(b) Length = 20')\naxs[1].set_xlabel('# of documents')\naxs[1].set_ylabel('Loss')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_15.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Create a bar chart\nax.bar(range(5), [0.35, 0.30, 0.25, 0.20, 0.15], color='blue')\n\n# Add labels\nax.set_xticks(range(5))\nax.set_xticklabels(['Sentiment', 'Toxicity', 'News', 'Unchanged Correct', 'New Mistake'])\n\n# Add a colorbar\ncmap = plt.cm.RdYlBu\nnorm = plt.Normalize(vmin=-1.0, vmax=1.0)\nsm = plt.cm.ScalarMappable(cmap=cmap, norm=norm)\nsm.set_array([])\nfig.colorbar(sm)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_16.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the x-axis labels\nx_labels = ['c1355', 'c1908', 'c2670', 'c3540']\nax.set_xticks(np.arange(len(x_labels)))\nax.set_xticklabels(x_labels)\n\n# Set the y-axis limits\nax.set_ylim(0, 70)\n\n# Set the y-axis label\nax.set_ylabel('# successful adv. circuits')\n\n# Set the x-axis label\nax.set_xlabel('OMLA KPAs')\n\n# Set the title of the plot\nax.set_title('OMLA KPAs')\n\n# Set the tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the grid lines\nax.grid(True)\n\n# Set the boxplot\nboxplot = ax.boxplot([np.random.normal(50, 10, 100), np.random.normal(50, 10, 100), np.random.normal(50, 10, 100), np.random.normal(50, 10, 100)], patch_artist=True)\n\n# Set the boxplot colors\nfor box in boxplot['boxes']:\n    box.set(color='black', linewidth=2)\n    box.set(facecolor='lightblue')\n\n# Set the boxplot fill patterns\nfor patch in boxplot['boxes']:\n    pattern = np.array([[0, 1], [1, 0]])\n    patch.set_hatch(pattern)\n\n# Set the boxplot line width\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker width\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot fliers\nfor flier in boxplot['fliers']:\n    flier.set(marker='o', color='red', alpha=0.5)\n\n# Set the boxplot caps\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot labels\nfor i, label in enumerate(boxplot['labels']):\n    label.set(label=label.get_text(), rotation=45)\n\n# Set the boxplot mean line\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median line\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker line\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier line\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap line\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean point\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median point\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker point\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier point\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap point\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean line\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median line\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker line\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier line\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap line\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean point\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median point\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker point\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier point\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap point\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean line\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median line\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker line\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier line\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap line\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean point\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median point\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker point\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier point\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap point\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean line\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median line\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker line\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier line\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap line\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean point\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median point\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker point\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier point\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap point\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean line\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median line\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker line\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier line\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap line\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean point\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median point\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker point\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier point\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap point\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean line\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median line\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker line\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier line\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap line\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean point\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median point\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker point\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier point\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap point\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean line\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median line\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker line\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier line\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap line\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean point\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median point\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker point\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier point\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap point\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean line\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median line\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker line\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier line\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap line\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean point\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median point\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker point\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier point\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap point\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean line\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median line\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker line\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier line\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap line\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean point\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median point\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker point\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier point\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap point\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean line\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median line\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker line\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier line\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap line\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean point\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median point\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker point\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier point\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap point\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean line\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median line\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker line\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier line\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap line\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean point\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median point\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker point\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier point\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap point\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean line\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median line\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker line\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier line\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap line\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean point\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median point\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker point\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier point\nfor flier in boxplot['fliers']:\n    flier.set(color='red', linewidth=2)\n\n# Set the boxplot cap point\nfor cap in boxplot['caps']:\n    cap.set(color='black', linewidth=2)\n\n# Set the boxplot mean line\nfor mean in boxplot['means']:\n    mean.set(color='black', linewidth=2)\n\n# Set the boxplot median line\nfor median in boxplot['medians']:\n    median.set(color='black', linewidth=2)\n\n# Set the boxplot whisker line\nfor whisker in boxplot['whiskers']:\n    whisker.set(color='black', linewidth=2)\n\n# Set the boxplot flier line\nfor"}
{"file": "dataset/ori_500/multidiff_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(10.0, 4.0))\n\n# Plot the first subplot\nax1.plot([0, 1, 2, 3, 4, 5], [0, 20, 40, 60, 80, 100], 'bo-')\nax1.set_xlabel('Study Level')\nax1.set_ylabel('Knowledge Increase (%)')\nax1.set_title('Knowledge Increase by Subject Area')\n\n# Add a legend\nax1.legend(['Education', 'Law', 'Technology'], loc='upper left')\n\n# Plot the second subplot\nax2.bar(range(len(['Education', 'Law', 'Technology', 'History', 'Geography', 'Humans', 'Finance'])), [200, 250, 150, 100, 50, 0, 0], color=['b', 'g', 'r', 'c', 'm', 'y', 'k'])\nax2.set_xlabel('Domain')\nax2.set_ylabel('Number of Publications')\nax2.set_title('Number of Publications by Domain')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, ax = plt.subplots(2, 1, figsize=(8.0, 10.0))\n\n# First subplot: Hardware, Software, AI\nax[0].plot([2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022], [0, 20, 40, 60, 80, 100, 120, 140], 'k-')\nax[0].set_xticks([2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022])\nax[0].set_yticks(np.arange(0, 150, 20))\nax[0].set_xlabel('Year')\nax[0].set_ylabel('Progress (%)')\nax[0].set_title('Technological Advancements')\n\n# Second subplot: Innovation Gaps Across Different Sectors in Technology\n# Define the data for each sector\nbig_tech_data = [60, 40, 20]\nstartups_data = [40, 20, 0]\nacademia_data = [20, 0, -20]\ngov_data = [-20, 0, -20]\n\n# Plot the box plots\nax[1].boxplot(big_tech_data, positions=[1], widths=0.6)\nax[1].boxplot(startups_data, positions=[2], widths=0.6)\nax[1].boxplot(academia_data, positions=[3], widths=0.6)\nax[1].boxplot(gov_data, positions=[4], widths=0.6)\n\n# Set the x-axis labels\nax[1].set_xticks([1, 2, 3, 4])\nax[1].set_xticklabels(['Big Tech', 'Startups', 'Academia', 'Government'])\n\n# Set the y-axis limits and ticks\nax[1].set_ylim(-20, 60)\nax[1].set_yticks(np.arange(-20, 60, 10))\n\n# Set the title of the second subplot\nax[1].set_title('Innovation Gap (%)')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, ax = plt.subplots(2, 1, figsize=(8.0, 10.0))\n\n# First subplot\nax[0].plot([0.5, 1.5, 2.5, 3.5, 4.5], [3.0, 2.5, 2.0, 1.5, 1.0], 'k|')\nax[0].set_xticks([1, 2, 3, 4, 5])\nax[0].set_xticklabels(['USA', 'UK', 'Germany', 'France', 'Italy'])\nax[0].set_yticks(np.arange(0, 4.0, 0.5))\nax[0].set_ylabel('Crime Rate per 100,000 inhabitants')\nax[0].set_title('Average Legal Crime Rates by Country')\n\n# Second subplot\nax[1].plot([0.5, 1.5, 2.5, 3.5, 4.5], [175.0, 125.0, 125.0, 150.0, 100.0], 'k|')\nax[1].set_xticks([1, 2, 3, 4, 5])\nax[1].set_xticklabels(['Theft', 'Assault', 'Fraud', 'Drug Trafficking', 'Vandalism'])\nax[1].set_yticks(np.arange(0, 200.0, 25.0))\nax[1].set_ylabel('Crime Rate per 100,000 inhabitants')\nax[1].set_title('Average Legal Crime Rates by Country')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Plot the histogram\nax.hist(np.random.normal(70, 20, 1000), bins=30, color='blue', alpha=0.5)\nax.hist(np.random.normal(90, 10, 1000), bins=30, color='orange', alpha=0.5)\n\n# Add labels and title\nax.set_xlabel('Score')\nax.set_ylabel('Number of Students')\nax.set_title('Student Performance in Schools')\n\n# Create a pie chart\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\nlabels = ['Books', 'Staff', 'Extracurricular', 'Technology', 'Facilities']\nsizes = [20, 10, 15, 30, 25]\ncolors = ['blue', 'grey', 'lightblue', 'orange', 'green']\nexplode = (0.1, 0, 0, 0, 0)  # explode 1st slice\n\n# Plot the pie chart\nax.pie(sizes, explode=explode, labels=labels, colors=colors,\nautopct='%1.1f%%', shadow=True, startangle=140)\n\n# Equal aspect ratio ensures that pie is drawn as a circle.\nax.axis('equal')  \nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, axs = plt.subplots(1, 2, figsize=(10.0, 5.0))\n\n# Left subplot\naxs[0].plot([10, 20], [10, 20], 'k-')\naxs[0].plot([10, 20], [15, 25], 'k-')\naxs[0].plot([10, 20], [20, 30], 'k-')\naxs[0].plot([10, 20], [25, 35], 'k-')\naxs[0].plot([10, 20], [30, 40], 'k-')\naxs[0].plot([10, 20], [35, 45], 'k-')\naxs[0].plot([10, 20], [40, 50], 'k-')\naxs[0].plot([10, 20], [45, 55], 'k-')\naxs[0].plot([10, 20], [50, 60], 'k-')\naxs[0].plot([10, 20], [55, 65], 'k-')\naxs[0].plot([10, 20], [60, 70], 'k-')\naxs[0].plot([10, 20], [65, 75], 'k-')\naxs[0].plot([10, 20], [70, 80], 'k-')\naxs[0].plot([10, 20], [75, 85], 'k-')\naxs[0].plot([10, 20], [80, 90], 'k-')\naxs[0].plot([10, 20], [85, 95], 'k-')\naxs[0].plot([10, 20], [90, 100], 'k-')\naxs[0].plot([10, 20], [95, 105], 'k-')\naxs[0].plot([10, 20], [100, 110], 'k-')\naxs[0].plot([10, 20], [105, 115], 'k-')\naxs[0].plot([10, 20], [110, 120], 'k-')\naxs[0].plot([10, 20], [115, 125], 'k-')\naxs[0].plot([10, 20], [120, 130], 'k-')\naxs[0].plot([10, 20], [125, 135], 'k-')\naxs[0].plot([10, 20], [130, 140], 'k-')\naxs[0].plot([10, 20], [135, 145], 'k-')\naxs[0].plot([10, 20], [140, 150], 'k-')\naxs[0].plot([10, 20], [145, 155], 'k-')\naxs[0].plot([10, 20], [150, 160], 'k-')\naxs[0].plot([10, 20], [155, 165], 'k-')\naxs[0].plot([10, 20], [160, 170], 'k-')\naxs[0].plot([10, 20], [165, 175], 'k-')\naxs[0].plot([10, 20], [170, 180], 'k-')\naxs[0].plot([10, 20], [175, 185], 'k-')\naxs[0].plot([10, 20], [180, 190], 'k-')\naxs[0].plot([10, 20], [185, 195], 'k-')\naxs[0].plot([10, 20], [190, 200], 'k-')\naxs[0].plot([10, 20], [195, 205], 'k-')\naxs[0].plot([10, 20], [200, 210], 'k-')\naxs[0].plot([10, 20], [205, 215], 'k-')\naxs[0].plot([10, 20], [210, 220], 'k-')\naxs[0].plot([10, 20], [215, 225], 'k-')\naxs[0].plot([10, 20], [220, 230], 'k-')\naxs[0].plot([10, 20], [225, 235], 'k-')\naxs[0].plot([10, 20], [230, 240], 'k-')\naxs[0].plot([10, 20], [235, 245], 'k-')\naxs[0].plot([10, 20], [240, 250], 'k-')\naxs[0].plot([10, 20], [245, 255], 'k-')\naxs[0].plot([10, 20], [250, 260], 'k-')\naxs[0].plot([10, 20], [255, 265], 'k-')\naxs[0].plot([10, 20], [260, 270], 'k-')\naxs[0].plot([10, 20], [265, 275], 'k-')\naxs[0].plot([10, 20], [270, 280], 'k-')\naxs[0].plot([10, 20], [275, 285], 'k-')\naxs[0].plot([10, 20], [280, 290], 'k-')\naxs[0].plot([10, 20], [285, 295], 'k-')\naxs[0].plot([10, 20], [290, 300], 'k-')\naxs[0].plot([10, 20], [295, 305], 'k-')\naxs[0].plot([10, 20], [300, 310], 'k-')\naxs[0].plot([10, 20], [305, 315], 'k-')\naxs[0].plot([10, 20], [310, 320], 'k-')\naxs[0].plot([10, 20], [315, 325], 'k-')\naxs[0].plot([10, 20], [320, 330], 'k-')\naxs[0].plot([10, 20], [325, 335], 'k-')\naxs[0].plot([10, 20], [330, 340], 'k-')\naxs[0].plot([10, 20], [335, 345], 'k-')\naxs[0].plot([10, 20], [340, 350], 'k-')\naxs[0].plot([10, 20], [345, 355], 'k-')\naxs[0].plot([10, 20], [350, 360], 'k-')\naxs[0].plot([10, 20], [355, 365], 'k-')\naxs[0].plot([10, 20], [360, 370], 'k-')\naxs[0].plot([10, 20], [365, 375], 'k-')\naxs[0].plot([10, 20], [370, 380], 'k-')\naxs[0].plot([10, 20], [375, 385], 'k-')\naxs[0].plot([10, 20], [380, 390], 'k-')\naxs[0].plot([10, 20], [385, 395], 'k-')\naxs[0].plot([10, 20], [390, 400], 'k-')\naxs[0].plot([10, 20], [395, 405], 'k-')\naxs[0].plot([10, 20], [400, 410], 'k-')\naxs[0].plot([10, 20], [405, 415], 'k-')\naxs[0].plot([10, 20], [410, 420], 'k-')\naxs[0].plot([10, 20], [415, 425], 'k-')\naxs[0].plot([10, 20], [420, 430], 'k-')\naxs[0].plot([10, 20], [425, 435], 'k-')\naxs[0].plot([10, 20], [430, 440], 'k-')\naxs[0].plot([10, 20], [435, 445], 'k-')\naxs[0].plot([10, 20], [440, 450], 'k-')\naxs[0].plot([10, 20], [445, 455], 'k-')\naxs[0].plot([10, 20], [450, 460], 'k-')\naxs[0].plot([10, 20], [455, 465], 'k-')\naxs[0].plot([10, 20], [460, 470], 'k-')\naxs[0].plot([10, 20], [465, 475], 'k-')\naxs[0].plot([10, 20], [470, 480], 'k-')\naxs[0].plot([10, 20], [475, 485], 'k-')\naxs[0].plot([10, 20], [480, 490], 'k-')\naxs[0].plot([10, 20], [485, 495], 'k-')\naxs[0].plot([10, 20], [490, 500], 'k-')\naxs[0].plot([10, 20], [495, 505], 'k-')\naxs[0].plot([10, 20], [500, 510], 'k-')\naxs[0].plot([10, 20], [505, 515], 'k-')\naxs[0].plot([10, 20], [510, 520], 'k-')\naxs[0].plot([10, 20], [515, 525], 'k-')\naxs[0].plot([10, 20], [520, 530], 'k-')\naxs[0].plot([10, 20], [525, 535], 'k-')\naxs[0].plot([10, 20], [530, 540], 'k-')\naxs[0].plot([10, 20], [535, 545], 'k-')\naxs[0].plot([10, 20], [540, 550], 'k-')\naxs[0].plot([10, 20], [545, 555], 'k-')\naxs[0].plot([10, 20], [550, 560], 'k-')\naxs[0].plot([10, 20], [555, 565], 'k-')\naxs[0].plot([10, 20], [560, 570], 'k-')\naxs[0].plot([10, 20], [565, 575], 'k-')\naxs[0].plot([10, 20], [570, 580], 'k-')\naxs[0].plot([10, 20], [575, 585], 'k-')\naxs[0].plot([10, 20], [580, 590], 'k-')\naxs[0].plot([10, 20], [585, 595], 'k-')\naxs[0].plot([10, 20], [590, 600], 'k-')\naxs[0].plot([10, 20], [595, 605], 'k-')\naxs[0].plot([10, 20], [600, 610], 'k-')\naxs[0].plot([10, 20], [605, 615], 'k-')\naxs[0].plot([10, 20], [610, 620], 'k-')\naxs[0].plot([10, 20], [615, 625], 'k-')\naxs[0].plot([10, 20], [620, 630], 'k-')\naxs[0].plot([10, 20], [625, 635], 'k-')\naxs[0].plot([10, 20], [630, 640], 'k-')\naxs[0].plot([10, 20], [635, 645], 'k-')\naxs[0].plot([10, 20], [640, 650], 'k-')\naxs[0].plot([10, 20], [645, 655], 'k-')\naxs[0].plot([10, 20], [650, 660], 'k-')\naxs[0].plot([10, 20], [655, 665], 'k-')\naxs[0].plot([10, 20], [660, 670], 'k-')\naxs[0].plot([10, 20], [665, 675], 'k-')\naxs[0].plot([10, 20], [670, 680], 'k-')\naxs[0].plot([10, 20], [675, 685], 'k-')\naxs[0].plot([10, 20], [680, 690], 'k-')\naxs[0].plot([10, 20], [685, 695], 'k-')\naxs[0].plot([10, 20], [690, 700], 'k-')\naxs[0].plot([10, 20], [695, 705], 'k-')\naxs[0].plot([10, 20], [700, 710], 'k-')\naxs[0].plot([10, 20], [705, 715], 'k-')\naxs[0].plot([10, 20], [710, 720], 'k-')\naxs[0].plot([10, 20], [715, 725], 'k-')\naxs[0].plot([10, 20], [720, 730], 'k-')\naxs[0].plot([10, 20], [725, 735], 'k-')\naxs[0].plot([10, 20], [730, 740], 'k-')\naxs[0].plot([10, 20], [735,"}
{"file": "dataset/ori_500/multidiff_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the first chart\nyears = ['2019', '2020', '2021', '2022']\nproducts = ['Savings', 'CDs', 'Stocks', 'Bonds', 'ETFs', 'Mutual Funds']\nvalues = [300, 200, 175, 150, 125, 100]\ncolors = ['g', 'b', 'y', 'c', 'm', 'k']\n\n# Create the first chart\nfig, ax1 = plt.subplots(figsize=(10.0, 5.0))\nax1.plot(years, values, 'o-', color='r')\nax1.set_xlabel('Year')\nax1.set_ylabel('Total Investment (%)')\nax1.set_title('Investment Growth Over Time')\n\n# Define the data for the second chart\nproducts = ['Savings', 'CDs', 'Stocks', 'Bonds', 'ETFs', 'Mutual Funds']\nvalues = [200, 175, 150, 125, 100, 75]\ncolors = ['g', 'b', 'y', 'c', 'm', 'k']\n\n# Create the second chart\nfig, ax2 = plt.subplots(figsize=(10.0, 5.0))\nax2.bar(products, values, color=colors)\nax2.set_xlabel('Product Type')\nax2.set_ylabel('Number of Accounts')\nax2.set_title('Popularity of Financial Products')\n\n# Define the data for the third chart\nproducts = ['Urban Loans', 'Rural Loans', 'Student Loans', 'Auto Loans', 'Home Loans']\nvalues = [80, 70, 60, 50, 40]\ncolors = ['b', 'r', 'g', 'c', 'm']\n\n# Create the third chart\nfig, ax3 = plt.subplots(figsize=(10.0, 5.0))\nax3.plot(products, values, 'o-', color='r')\nax3.set_xlabel('Loan Amount Distribution by Region')\nax3.set_ylabel('Frequency')\nax3.set_title('Loan Amount Distribution by Region')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_22.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, axs = plt.subplots(2, 2, figsize=(10.0, 10.0))\n\n# Plot the first subplot\naxs[0, 0].plot([80, 60, 40, 20], 'o-')\naxs[0, 0].set_title('Success Rate (%)')\naxs[0, 0].set_xlabel('Algorithms')\naxs[0, 0].set_ylabel('Success Rate (%)')\n\n# Plot the second subplot\naxs[0, 1].plot([110, 100, 90, 80, 70, 60], 'o-')\naxs[0, 1].set_title('Algorithm Efficiency (%)')\naxs[0, 1].set_xlabel('Algorithms')\naxs[0, 1].set_ylabel('Efficiency (%)')\n\n# Plot the third subplot\naxs[1, 0].plot([95, 90, 85, 80, 75, 70], 'o-')\naxs[1, 0].set_title('AI Model Adaptability')\naxs[1, 0].set_xlabel('Models')\naxs[1, 0].set_ylabel('Adaptability Score (%)')\n\n# Plot the fourth subplot\naxs[1, 1].plot([95, 90, 85, 80, 75, 70], 'o-')\naxs[1, 1].set_title('AI Model Adaptability')\naxs[1, 1].set_xlabel('Models')\naxs[1, 1].set_ylabel('Adaptability Score (%)')\n\n# Add a legend to the first subplot\naxs[0, 0].legend(['Image Recog.', 'Speech Recog.', 'Language Proc.', 'Game AI'], loc='upper left')\n\n# Add a legend to the second subplot\naxs[0, 1].legend(['Image Recog.', 'Speech Recog.', 'Language Proc.', 'Game AI'], loc='upper left')\n\n# Add a legend to the third subplot\naxs[1, 0].legend(['Model A', 'Model B', 'Model C', 'Model D'], loc='upper left')\n\n# Add a legend to the fourth subplot\naxs[1, 1].legend(['Model A', 'Model B', 'Model C', 'Model D'], loc='upper left')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_23.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create the figure and axis objects\nfig, ax = plt.subplots(figsize=(10.0, 10.0))\n\n# Plot the histogram for the traffic volume by time of day\nax.bar(range(1, 8), [200, 175, 150, 125, 100, 75, 50], color='grey', label='Traffic Volume by Time of Day')\nax.set_xlabel('Number of Vehicles')\nax.set_ylabel('Frequency')\nax.set_title('Traffic Volume by Time of Day')\n\n# Add the legend\nax.legend(loc='upper right')\n\n# Create the second subplot for the speed distribution by location\nax2 = fig.add_subplot(212)\nax2.boxplot([np.random.normal(100, 20, 100), np.random.normal(120, 20, 100)], vert=False, patch_artist=True, labels=['Urban', 'Highway'])\nax2.set_xlabel('Speed (km/h)')\nax2.set_ylabel('Location')\nax2.set_title('Speed Distribution by Location')\n\n# Create the third subplot for the elevation changes along a route\nax3 = fig.add_subplot(211)\nax3.plot(np.linspace(0, 1000, 100), np.sin(np.linspace(0, 1000, 100)), color='blue')\nax3.set_xlabel('Distance (km)')\nax3.set_ylabel('Elevation (m)')\nax3.set_title('Elevation Changes Along a Route')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Define the data for the pie chart\narts_data = [20, 15, 10, 30, 25]\narts_labels = ['Performing Arts', 'Visual Arts', 'Literature', 'Dance', 'Music']\narts_colors = ['red', 'blue', 'purple', 'orange', 'green']\n\n# Plot the pie chart\nax.pie(arts_data, labels=arts_labels, colors=arts_colors, autopct='%1.1f%%')\n\n# Set the title of the pie chart\nax.set_title('Distribution of Arts Education Programs')\n\n# Define the data for the star plot\nstar_data = [0.2, 0.4, 0.6, 0.8, 0.4, 0.2]\nstar_labels = ['Expression', 'Creativity', 'Collaboration', 'Dedication', 'Technique', 'Music']\nstar_colors = ['blue', 'purple', 'red', 'green', 'orange', 'yellow']\n\n# Plot the star plot\nax.plot(star_data, star_labels, color='black')\nax.set_rticks([0.2, 0.4, 0.6, 0.8, 1.0])\nax.set_rlabel_position(0)\nax.set_theta_offset(np.pi / 2)\nax.set_theta_direction(-1)\n\n# Set the title of the star plot\nax.set_title('Student Performance in Arts Education')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_25.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Plot the bar chart\nax.bar(range(1, 6), [2000, 3000, 4000, 5000, 6000], color='blue')\n\n# Add labels and title\nax.set_xlabel('Product')\nax.set_ylabel('Sales')\nax.set_title('Product Sales')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Generate random data for stock returns\nnp.random.seed(42)\nstock_returns = np.random.normal(loc=0, scale=1, size=1000)\n\n# Plot histogram of stock returns\nplt.figure(figsize=(10.0, 5.0))\nplt.hist(stock_returns, bins=30, color='green', alpha=0.75)\nplt.title('Histogram of Stock Returns')\nplt.xlabel('Returns')\nplt.ylabel('Frequency')\n\n# Generate random data for investment clusters\nnp.random.seed(42)\ninvestment_clusters = np.random.normal(loc=0, scale=1, size=1000)\n\n# Plot histogram of investment clusters\nplt.figure(figsize=(10.0, 5.0))\nplt.hist(investment_clusters, bins=30, color='blue', alpha=0.75)\nplt.title('Investment Clusters')\nplt.xlabel('Clusters')\nplt.ylabel('Frequency')\n\n# Show plots\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_4.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create the first plot\nfig, ax = plt.subplots(figsize=(8.0, 10.0))\nx = np.linspace(0, 5, 100)\ny = np.sin(x) * np.exp(-x/3.0)\nax.plot(x, y, 'b-')\nax.set_xlabel('Relative Year')\nax.set_ylabel('Energy Consumption (GWh)')\nax.set_title('Energy Consumption')\n\n# Create the second plot\nfig, ax = plt.subplots(subplot_kw={\"projection\": \"3d\"}, figsize=(8.0, 10.0))\nx = np.linspace(-4, 4, 100)\ny = np.linspace(-4, 4, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nsurf = ax.plot_surface(X, Y, Z, cmap='viridis')\nfig.colorbar(surf, shrink=0.5, aspect=5)\nax.set_xlabel('Relative Year')\nax.set_ylabel('Relative Month')\nax.set_zlabel('Renewable Energy Ratio (%)')"}
{"file": "dataset/ori_500/multidiff_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Draw the pie chart\nlabels = ['Ancient Scripts', 'Modern Records', 'Medieval Literature', 'Renaissance Literature']\nsizes = [15, 35, 20, 30]\ncolors = ['yellow', 'red', 'green', 'blue']\nexplode = (0.1, 0, 0, 0)  # explode 1st slice\nax.pie(sizes, explode=explode, labels=labels, colors=colors,\nautopct='%1.1f%%', shadow=True, startangle=140)\nax.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\n# Add a title\nax.set_title('Historical Document Types in Library')\n\n# Create a scatter plot\nx = np.array([1900, 1600, 1200, 1800])\ny = np.array([150, 150, 300, 200])\nax.scatter(x, y)\n\n# Add labels\nax.set_xlabel('Year')\nax.set_ylabel('Number of Documents')\n\n# Add grid\nax.grid(True)\n\n# Add text\nax.text(1900, 150, 'Ancient', fontsize=12)\nax.text(1600, 150, 'Medieval', fontsize=12)\nax.text(1200, 300, 'Modern', fontsize=12)\nax.text(1800, 200, 'Renaissance', fontsize=12)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Plot the data\nax.plot([8.5, 9.0, 9.25], [8.5, 9.0, 9.25], 'o-')\nax.set_xlabel('Luxury Brand Popularity vs Price')\nax.set_ylabel('Customer Satisfaction Distribution Across Brands')\n\n# Add a legend\nax.legend(['Louis Vuitton', 'Chanel', 'Dior'], loc='upper left')\n\n# Set the tick labels\nax.set_xticks(np.arange(1000, 2000, 1000))\nax.set_yticks(np.arange(7, 10, 0.5))\n\n# Set the tick labels\nax.set_xticklabels(['1000', '1200', '1400', '1600', '1800', '2000'])\nax.set_yticklabels(['7.5', '8.0', '8.5', '9.0', '9.5', '10.0'])\n\n# Set the title\nax.set_title('Luxury Brand Popularity vs Price vs Customer Satisfaction Distribution Across Brands')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the plots\naccuracy_data = {\n    'Zhang2020': 75.32,\n    'Addel2021': 77.11,\n    'Rice2021': 77.03,\n    'Rade2021': 76.86,\n    'Engs2019': 74.52,\n    'Hendryks2019': 57.52,\n    'Engs2019': 60.5,\n    'Zhang2020': 59.3,\n    'Rice2021': 59.1,\n    'Rade2021': 58.35,\n    'Henriques2021': 55.95,\n    'Addel2021': 55.5\n}\n\n# Create the first plot\nfig, ax = plt.subplots(figsize=(10.0, 7.0))\nax.set_title('Accuracy (%)')\nax.set_xlabel('Accuracy (%)')\nax.set_ylabel('Model')\nfor model, acc in accuracy_data.items():\n    ax.barh(model, acc, color='green')\n\n# Create the second plot\nfig, ax = plt.subplots(figsize=(10.0, 7.0))\nax.set_title('Robust Accuracy (%)')\nax.set_xlabel('Robust Accuracy (%)')\nax.set_ylabel('Model')\nfor model, acc in accuracy_data.items():\n    ax.barh(model, acc, color='red')\n\n# Create the third plot\nfig, ax = plt.subplots(figsize=(10.0, 7.0))\nax.set_title('Robust Accuracy Diff. (%)')\nax.set_xlabel('Robust Accuracy Diff. (%)')\nax.set_ylabel('Model')\nfor model, acc in accuracy_data.items():\n    ax.barh(model, acc, color='blue')\n\n# Create the fourth plot\nfig, ax = plt.subplots(figsize=(10.0, 7.0))\nax.set_title('NFR (%)')\nax.set_xlabel('NFR (%)')\nax.set_ylabel('Model')\nfor model, acc in accuracy_data.items():\n    ax.barh(model, acc, color='purple')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, axs = plt.subplots(2, 1, figsize=(7.0, 9.0))\n\n# First subplot\naxs[0].plot([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'k-')\naxs[0].set_title('Full Context')\naxs[0].set_xlabel('Generalized Variance')\naxs[0].set_ylabel('Avg Regret')\n\n# Second subplot\naxs[1].plot([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'k-')\naxs[1].set_title('No Context')\naxs[1].set_xlabel('Generalized Variance')\naxs[1].set_ylabel('Avg Regret')\n\n# Add legends\naxs[0].legend(['Random', 'Hcube', 'Sobel', 'Partial Context', 'Full Context'], loc='upper left')\naxs[1].legend(['Random', 'Hcube', 'Sobel', 'Partial Context', 'Full Context'], loc='upper left')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, axs = plt.subplots(1, 2, figsize=(10.0, 4.0))\n\n# Plot the first subplot\naxs[0].plot([0, 200], [0, 200], 'k--')\naxs[0].set_xlabel('Elo Rating')\naxs[0].set_ylabel('Correct Rating - Incorrect Rating')\naxs[0].set_title('Debater')\n\n# Add a legend\naxs[0].legend(['GPT-3.5-Turbo', 'Claude 1.3', 'Claude 2.1', 'GPT-4-Turbo'], loc='upper left')\n\n# Plot the second subplot\naxs[1].plot([0, 200], [0, 200], 'k--')\naxs[1].set_xlabel('Aggregate Elo Rating')\naxs[1].set_ylabel('Correct Rating - Incorrect Rating')\naxs[1].set_title('Judge: GPT-4-Turbo')\n\n# Add a legend\naxs[1].legend(['GPT-3.5-Turbo', 'Claude 1.3', 'Claude 2.1', 'GPT-4-Turbo'], loc='upper left')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nlabels = ['4.6%', '10.6%', '11.3%', '13.2%', '29.8%', '30.5%']\nsizes = [4.6, 10.6, 11.3, 13.2, 29.8, 30.5]\ncolors = ['grey', 'lightblue', 'yellow', 'lightgreen', 'lightcoral', 'lightskyblue']\n\n# Plot\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\nax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\nax.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the donut chart\nlabels = ['1 egg', '60 g butter', '90 g sugar', '225 g flour', '1/2 package of yeast', '100 ml milk']\nsizes = [1, 60, 90, 225, 1, 100]\ncolors = ['red', 'green', 'orange', 'blue', 'purple', 'brown']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Plot the donut chart\nax.pie(sizes, labels=labels, colors=colors, startangle=90, radius=1.5, wedgeprops=dict(width=0.5))\n\n# Add text annotations for each slice\nfor i, label in enumerate(labels):\n    ax.text(0.5, 0.5, label, ha='center', va='center', rotation=i*360/len(labels), fontsize=12)\n\n# Set the title of the chart\nax.set_title('Matplotlib bakery: A donut')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\ncategories = ['Entertainment', 'Utilities', 'Transport', 'Food', 'Others']\nvalues = [10.0, 16.7, 37.5, 29.2, 10.0]\ncolors = ['orange', 'green', 'blue', 'yellow', 'purple']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Plot the pie chart\nax.pie(values, labels=categories, colors=colors, autopct='%1.1f%%')\n\n# Set the title\nax.set_title('Expenses - Company vs. Project')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_12.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the first plot\nlabels = ['Model', 'Optimizer', 'Gradient', 'Unused']\nsizes = [15.7, 19.9, 33.0, 31.4]\ncolors = ['red', 'blue', 'green', 'orange']\nexplode = (0.1, 0, 0, 0)  # explode 1st slice\n\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\nax.pie(sizes, explode=explode, labels=labels, colors=colors,\nautopct='%1.1f%%', shadow=True, startangle=140)\nax.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()"}
{"file": "dataset/ori_500/pie_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data for Full Finetuning\nfull_finetuning_data = [25.1, 26.4, 12.6, 15.9]\nfull_finetuning_colors = ['yellow', 'lightgreen', 'orange', 'grey']\n\n# Data for QLoRA\nqlora_data = [46.2, 4.6, 5.3, 23.9]\nqlora_colors = ['yellow', 'orange', 'lightgreen', 'grey']\n\nfig, ax = plt.subplots(figsize=(5.0, 8.0))\nax.set_title('Full Finetuning')\nax.pie(full_finetuning_data, colors=full_finetuning_colors, startangle=90)\nax.axis('equal')\n\nfig, ax = plt.subplots(figsize=(5.0, 8.0))\nax.set_title('QLoRA')\nax.pie(qlora_data, colors=qlora_colors, startangle=90)\nax.axis('equal')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Fruits', 'Grains', 'Vegetables', 'Proteins']\nvalues = [25, 10, 10, 35]\ncolors = ['red', 'orange', 'green', 'blue']\n\n# Create pie chart\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\nax.pie(values, labels=categories, colors=colors, autopct='%1.1f%%')\n\n# Add title\nax.set_title('Nutritional Distribution')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nlabels = ['Education', 'Entertainment', 'Technology']\nsizes = [31.2, 35.7, 37.5]\ncolors = ['yellow', 'orange', 'green']\n\n# Plot\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\nax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\nax.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\ndogs = [20, 10, 33.3, 16.7, 40]\nhogs = [16.7, 33.3, 30, 33.3, 40]\nlogs = [10, 33.3, 16.7, 33.3, 40]\nfrogs = [33.3, 33.3, 10, 33.3, 40]\n\n# Create figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Plot data\nax.pie(dogs, labels=['Dogs 45%', 'Logs 10%', 'Frogs 15%', 'Hogs 30%'], colors=['green', 'blue', 'red', 'cyan'])\nax.pie(hogs, labels=['Dogs 45%', 'Logs 10%', 'Frogs 15%', 'Hogs 30%'], colors=['green', 'blue', 'red', 'cyan'], radius=0.8)\nax.pie(logs, labels=['Dogs 45%', 'Logs 10%', 'Frogs 15%', 'Hogs 30%'], colors=['green', 'blue', 'red', 'cyan'], radius=0.6)\nax.pie(frogs, labels=['Dogs 45%', 'Logs 10%', 'Frogs 15%', 'Hogs 30%'], colors=['green', 'blue', 'red', 'cyan'], radius=0.4)\n\n# Set aspect ratio to be equal so that pie is drawn as a circle.\nax.axis('equal') \n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nlabels = ['David', 'John', 'Marry', 'Peter']\nsizes = [11, 29, 40, 20]\ncolors = ['blue', 'orange', 'green', 'red']\n\n# Plot\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\nax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\nax.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\nlabels = ['France', 'Germany', 'Italy']\nsizes = [18, 12, 28]\ncolors = ['orange', 'blue', 'red']\n\n# Create a pie chart\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\nax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%')\n\n# Set the title\nax.set_title('Countries in Europe')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nlabels = ['26.2%', '21.4%', '19.0%', '14.3%', '13.3%', '5.7%']\nsizes = [26.2, 21.4, 19.0, 14.3, 13.3, 5.7]\ncolors = ['#8B0000', '#FF4500', '#FF6347', '#FFD700', '#FFA500', '#FFD700']\n\n# Plot\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\nax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\nax.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.title('Slice of a pie chart')\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the pie chart\nlabels = ['Psychological', 'Others', 'Market', 'Satisfactory', 'Social']\nsizes = [12.4, 35.4, 17.2, 24.7, 10.3]\ncolors = ['blue', 'green', 'lightblue', 'orange', 'pink']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Plot the pie chart\nax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%')\n\n# Set the aspect ratio of the pie chart to be equal\nax.axis('equal')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nlabels = ['Facebook', 'Instagram', 'Twitter', 'LinkedIn']\nsizes = [25, 10, 10, 10]\ncolors = ['lightblue', 'lightblue', 'lightblue', 'darkblue']\nexplode = (0.1, 0, 0, 0)  # explode 1st slice\n\n# Plot\nplt.pie(sizes, explode=explode, labels=labels, colors=colors,\nautopct='%1.1f%%', shadow=True, startangle=140)\nplt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nlabels = ['COLING', 'EACL', 'NAACL', 'EMNLP']\nsizes = [25.4, 7.4, 12.2, 20.3]\ncolors = ['lightblue', 'orange', 'purple', 'green']\nexplode = (0.1, 0, 0, 0)  # explode 1st slice\n\n# Plot\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\nax.pie(sizes, explode=explode, labels=labels, colors=colors,\nautopct='%1.1f%%', shadow=True, startangle=140)\nax.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nlabels = ['Coal', 'Other', 'Solar', 'Wind', 'Hydro']\nsizes = [25, 10, 8.3, 16.7, 15]\ncolors = ['brown', 'grey', 'yellow', 'green', 'blue']\n\n# Plot\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\nax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\nax.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\nplt.show()\n```"}
{"file": "dataset/ori_500/quiver_1.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Define the data\ndata = np.array([[-4.00, -3.22, -2.44, -2.78],\n                 [-3.88, -2.88, -2.38, -2.75],\n                 [-1.88, -1.11, -0.50, -0.25],\n                 [1.88, 0.78, 0.25, 0.75]])\n\n# Plot the data\nfor i in range(data.shape[0]):\n    for j in range(data.shape[1]):\n        ax.plot([i, j], [data[i, j], data[j, i]], 'ro-')\n\n# Set the labels\nax.set_xlabel('Language')\nax.set_ylabel('Bias')\nax.set_title('Language Bias')\n\n# Add the legend\nax.legend(['Out-group bias (Collectivism)', 'In-group bias (Individualism)'])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/quiver_2.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 4.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 10)\n\n# Set the y-axis limits\nax.set_ylim(-5, 0)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 11, 1))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(-5, 1, 1))\n\n# Set the x-axis labels\nax.set_xticklabels(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-axis labels\nax.set_yticklabels(['-5', '-4', '-3', '-2', '-1', '0'])\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Score')\n\n# Set the title\nax.set_title('Out-group bias (Collectivism)')\n\n# Set the grid\nax.grid(True)\n\n# Set the line color\nax.plot([0, 1], [0, 0], color='red')\n\n# Set the marker color\nax.plot([0, 1], [0, 0], marker='o', color='black')\n\n# Set the arrow head\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\n\n# Set the arrow tail\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color and style\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style and size\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size and width\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width and length\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length and angle\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle and rotation\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation and scale\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale and offset\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset and alpha\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha and linewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth and linestyle\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle and marker\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker and markersize\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize and markerfacecolor\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor and markeredgecolor\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, markeredgecolor, markeredgewidth and markeredgewidth\nax.plot([0, 1], [0, 0], arrowstyle='-|>', color='red')\nax.plot([0, 1], [0, 0], arrowstyle='<|-', color='red')\n\n# Set the arrow head and tail with a different color, style, size, width, length, angle, rotation, scale, offset, alpha, linewidth, linestyle, marker, markersize, markerfacecolor, marker"}
{"file": "dataset/ori_500/quiver_3.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x and y limits\nax.set_xlim(0, 1)\nax.set_ylim(0, 1)\n\n# Set the x and y labels\nax.set_xlabel('X_1')\nax.set_ylabel('X_2')\n\n# Set the x and y ticks\nax.set_xticks(np.arange(0, 1, 0.1))\nax.set_yticks(np.arange(0, 1, 0.1))\n\n# Set the x and y tick labels\nax.set_xticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6'])\nax.set_yticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6'])\n\n# Set the x and y grid\nax.grid(True)\n\n# Set the x and y grid lines\nax.xaxis.grid(True)\nax.yaxis.grid(True)\n\n# Set the x and y grid line colors\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the x and y grid line styles\nax.xaxis.grid(linestyle='--')\nax.yaxis.grid(linestyle='--')\n\n# Set the x and y grid line widths\nax.xaxis.grid(linewidth=0.5)\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x and y grid line alpha values\nax.xaxis.grid(alpha=0.5)\nax.yaxis.grid(alpha=0.5)\n\n# Set the x and y grid line markers\nax.xaxis.grid(marker='o')\nax.yaxis.grid(marker='o')\n\n# Set the x and y grid line marker sizes\nax.xaxis.grid(markersize=5)\nax.yaxis.grid(markersize=5)\n\n# Set the x and y grid line marker colors\nax.xaxis.grid(markerfacecolor='red')\nax.yaxis.grid(markerfacecolor='red')\n\n# Set the x and y grid line marker edge colors\nax.xaxis.grid(markeredgecolor='blue')\nax.yaxis.grid(markeredgecolor='blue')\n\n# Set the x and y grid line marker edge widths\nax.xaxis.grid(markeredgewidth=1)\nax.yaxis.grid(markeredgewidth=1)\n\n# Set the x and y grid line marker fill styles\nax.xaxis.grid(markerfacecolor='none')\nax.yaxis.grid(markerfacecolor='none')\n\n# Set the x and y grid line marker hatch styles\nax.xaxis.grid(markerhatch='//')\nax.yaxis.grid(markerhatch='//')\n\n# Set the x and y grid line marker rotation angles\nax.xaxis.grid(markerrotation=45)\nax.yaxis.grid(markerrotation=45)\n\n# Set the x and y grid line marker alignment\nax.xaxis.grid(markeralign='center')\nax.yaxis.grid(markeralign='center')\n\n# Set the x and y grid line marker padding\nax.xaxis.grid(markerpad=5)\nax.yaxis.grid(markerpad=5)\n\n# Set the x and y grid line marker border pad\nax.xaxis.grid(markeredgewidth=5)\nax.yaxis.grid(markeredgewidth=5)\n\n# Set the x and y grid line marker border color\nax.xaxis.grid(markeredgecolor='green')\nax.yaxis.grid(markeredgecolor='green')\n\n# Set the x and y grid line marker border style\nax.xaxis.grid(markerlinestyle='-')\nax.yaxis.grid(markerlinestyle='-')\n\n# Set the x and y grid line marker border width\nax.xaxis.grid(markerlinewidth=1)\nax.yaxis.grid(markerlinewidth=1)\n\n# Set the x and y grid line marker border alpha value\nax.xaxis.grid(markeredgealpha=0.5)\nax.yaxis.grid(markeredgealpha=0.5)\n\n# Set the x and y grid line marker border hatch style\nax.xaxis.grid(markeredgehatch='//')\nax.yaxis.grid(markeredgehatch='//')\n\n# Set the x and y grid line marker border rotation angle\nax.xaxis.grid(markeredgerotation=45)\nax.yaxis.grid(markeredgerotation=45)\n\n# Set the x and y grid line marker border alignment\nax.xaxis.grid(markeredgealign='center')\nax.yaxis.grid(markeredgealign='center')\n\n# Set the x and y grid line marker border padding\nax.xaxis.grid(markeredgepad=5)\nax.yaxis.grid(markeredgepad=5)\n\n# Set the x and y grid line marker border border pad\nax.xaxis.grid(markeredgeedgewidth=5)\nax.yaxis.grid(markeredgeedgewidth=5)\n\n# Set the x and y grid line marker border border color\nax.xaxis.grid(markeredgeedgecolor='yellow')\nax.yaxis.grid(markeredgeedgecolor='yellow')\n\n# Set the x and y grid line marker border border style\nax.xaxis.grid(markeredgeedgestyle='-')\nax.yaxis.grid(markeredgeedgestyle='-')\n\n# Set the x and y grid line marker border border width\nax.xaxis.grid(markeredgeedgewidth=1)\nax.yaxis.grid(markeredgeedgewidth=1)\n\n# Set the x and y grid line marker border border alpha value\nax.xaxis.grid(markeredgeedgealpha=0.5)\nax.yaxis.grid(markeredgeedgealpha=0.5)\n\n# Set the x and y grid line marker border border hatch style\nax.xaxis.grid(markeredgeedgehatch='//')\nax.yaxis.grid(markeredgeedgehatch='//')\n\n# Set the x and y grid line marker border border rotation angle\nax.xaxis.grid(markeredgeedgerotation=45)\nax.yaxis.grid(markeredgeedgerotation=45)\n\n# Set the x and y grid line marker border border alignment\nax.xaxis.grid(markeredgeedgealign='center')\nax.yaxis.grid(markeredgeedgealign='center')\n\n# Set the x and y grid line marker border border padding\nax.xaxis.grid(markeredgeedgepad=5)\nax.yaxis.grid(markeredgeedgepad=5)\n\n# Set the x and y grid line marker border border border pad\nax.xaxis.grid(markeredgeedgeedgewidth=5)\nax.yaxis.grid(markeredgeedgeedgewidth=5)\n\n# Set the x and y grid line marker border border border color\nax.xaxis.grid(markeredgeedgeedgecolor='purple')\nax.yaxis.grid(markeredgeedgeedgecolor='purple')\n\n# Set the x and y grid line marker border border border style\nax.xaxis.grid(markeredgeedgeedgestyle='-')\nax.yaxis.grid(markeredgeedgeedgestyle='-')\n\n# Set the x and y grid line marker border border border width\nax.xaxis.grid(markeredgeedgeedgewidth=1)\nax.yaxis.grid(markeredgeedgeedgewidth=1)\n\n# Set the x and y grid line marker border border border alpha value\nax.xaxis.grid(markeredgeedgeedgealpha=0.5)\nax.yaxis.grid(markeredgeedgeedgealpha=0.5)\n\n# Set the x and y grid line marker border border border hatch style\nax.xaxis.grid(markeredgeedgeedgehatch='//')\nax.yaxis.grid(markeredgeedgeedgehatch='//')\n\n# Set the x and y grid line marker border border border rotation angle\nax.xaxis.grid(markeredgeedgeedgerotation=45)\nax.yaxis.grid(markeredgeedgeedgerotation=45)\n\n# Set the x and y grid line marker border border border alignment\nax.xaxis.grid(markeredgeedgeedgealign='center')\nax.yaxis.grid(markeredgeedgeedgealign='center')\n\n# Set the x and y grid line marker border border border padding\nax.xaxis.grid(markeredgeedgeedgepad=5)\nax.yaxis.grid(markeredgeedgeedgepad=5)\n\n# Set the x and y grid line marker border border border border pad\nax.xaxis.grid(markeredgeedgeedgeedgewidth=5)\nax.yaxis.grid(markeredgeedgeedgeedgewidth=5)\n\n# Set the x and y grid line marker border border border border color\nax.xaxis.grid(markeredgeedgeedgeedgecolor='orange')\nax.yaxis.grid(markeredgeedgeedgeedgecolor='orange')\n\n# Set the x and y grid line marker border border border border style\nax.xaxis.grid(markeredgeedgeedgeedgestyle='-')\nax.yaxis.grid(markeredgeedgeedgeedgestyle='-')\n\n# Set the x and y grid line marker border border border border width\nax.xaxis.grid(markeredgeedgeedgeedgewidth=1)\nax.yaxis.grid(markeredgeedgeedgeedgewidth=1)\n\n# Set the x and y grid line marker border border border border alpha value\nax.xaxis.grid(markeredgeedgeedgeedgealpha=0.5)\nax.yaxis.grid(markeredgeedgeedgeedgealpha=0.5)\n\n# Set the x and y grid line marker border border border border hatch style\nax.xaxis.grid(markeredgeedgeedgeedgehatch='//')\nax.yaxis.grid(markeredgeedgeedgeedgehatch='//')\n\n# Set the x and y grid line marker border border border border rotation angle\nax.xaxis.grid(markeredgeedgeedgeedgerotation=45)\nax.yaxis.grid(markeredgeedgeedgeedgerotation=45)\n\n# Set the x and y grid line marker border border border border alignment\nax.xaxis.grid(markeredgeedgeedgeedgealign='center')\nax.yaxis.grid(markeredgeedgeedgeedgealign='center')\n\n# Set the x and y grid line marker border border border border padding\nax.xaxis.grid(markeredgeedgeedgeedgepad=5)\nax.yaxis.grid(markeredgeedgeedgeedgepad=5)\n\n# Set the x and y grid line marker border border border border border pad\nax.xaxis.grid(markeredgeedgeedgeedgeedgewidth=5)\nax.yaxis.grid(markeredgeedgeedgeedgeedgewidth=5)\n\n# Set the x and y grid line marker border border border border border color\nax.xaxis.grid(markeredgeedgeedgeedgeedgecolor='pink')\nax.yaxis.grid(markeredgeedgeedgeedgeedgecolor='pink')\n\n# Set the x and y grid line marker border border border border border style\nax.xaxis.grid(markeredgeedgeedgeedgeedgestyle='-')\nax.yaxis.grid(markeredgeedgeedgeedgeedgestyle='-')\n\n# Set the x and y grid line marker border border border border border width\nax.xaxis.grid(markeredgeedgeedgeedgeedgewidth=1)\nax.yaxis.grid(markeredgeedgeedgeedgeedgewidth=1)\n\n# Set the x and y grid line marker border border border border border alpha value\nax.xaxis.grid(markeredgeedgeedgeedgeedgealpha=0.5)\nax.yaxis.grid(markeredgeedgeedgeedgeedgealpha=0.5)\n\n# Set the x and y grid line marker border border border border border hatch style\nax.xaxis.grid(markeredgeedgeedgeedgeedgehatch='//')\nax.yaxis.grid(markeredgeedgeedgeedgeedgehatch='//')\n\n# Set the x and y grid line marker border border border border border rotation angle\nax.xaxis.grid(markeredgeedgeedgeedgeedgerotation=45)\nax.yaxis.grid(markeredgeedgeedgeedgeedgerotation=45)\n\n# Set the x and y grid line marker border border border border border alignment\nax.xaxis.grid(markeredgeedgeedgeedgeedgealign='center')\nax.yaxis.grid(markeredgeedgeedgeedgeedgealign='center')\n\n# Set the x and y grid line marker border border border border border padding\nax.xaxis.grid(markeredgeedgeedgeedgeedgepad=5)\nax.yaxis.grid(markeredgeedgeedgeedgeedgepad=5)\n\n# Set the x and y grid line marker border border border border border border pad\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgewidth=5)\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgewidth=5)\n\n# Set the x and y grid line marker border border border border border border color\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgecolor='brown')\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgecolor='brown')\n\n# Set the x and y grid line marker border border border border border border style\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgestyle='-')\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgestyle='-')\n\n# Set the x and y grid line marker border border border border border border width\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgewidth=1)\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgewidth=1)\n\n# Set the x and y grid line marker border border border border border border alpha value\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgealpha=0.5)\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgealpha=0.5)\n\n# Set the x and y grid line marker border border border border border border hatch style\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgehatch='//')\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgehatch='//')\n\n# Set the x and y grid line marker border border border border border border rotation angle\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgerotation=45)\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgerotation=45)\n\n# Set the x and y grid line marker border border border border border border alignment\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgealign='center')\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgealign='center')\n\n# Set the x and y grid line marker border border border border border border padding\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgepad=5)\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgepad=5)\n\n# Set the x and y grid line marker border border border border border border border pad\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgewidth=5)\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgewidth=5)\n\n# Set the x and y grid line marker border border border border border border border color\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgecolor='cyan')\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgecolor='cyan')\n\n# Set the x and y grid line marker border border border border border border border style\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgestyle='-')\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgestyle='-')\n\n# Set the x and y grid line marker border border border border border border border width\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgewidth=1)\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgewidth=1)\n\n# Set the x and y grid line marker border border border border border border border alpha value\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgealpha=0.5)\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgealpha=0.5)\n\n# Set the x and y grid line marker border border border border border border border hatch style\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgehatch='//')\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgehatch='//')\n\n# Set the x and y grid line marker border border border border border border border rotation angle\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgerotation=45)\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgerotation=45)\n\n# Set the x and y grid line marker border border border border border border border alignment\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgealign='center')\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgealign='center')\n\n# Set the x and y grid line marker border border border border border border border padding\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgepad=5)\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgepad=5)\n\n# Set the x and y grid line marker border border border border border border border border pad\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgewidth=5)\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgewidth=5)\n\n# Set the x and y grid line marker border border border border border border border border color\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgecolor='magenta')\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgecolor='magenta')\n\n# Set the x and y grid line marker border border border border border border border border style\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgestyle='-')\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgestyle='-')\n\n# Set the x and y grid line marker border border border border border border border border width\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgewidth=1)\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgewidth=1)\n\n# Set the x and y grid line marker border border border border border border border border alpha value\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgealpha=0.5)\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgealpha=0.5)\n\n# Set the x and y grid line marker border border border border border border border border hatch style\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgehatch='//')\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgehatch='//')\n\n# Set the x and y grid line marker border border border border border border border border rotation angle\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgerotation=45)\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgerotation=45)\n\n# Set the x and y grid line marker border border border border border border border border alignment\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgealign='center')\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgealign='center')\n\n# Set the x and y grid line marker border border border border border border border border padding\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgepad=5)\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgepad=5)\n\n# Set the x and y grid line marker border border border border border border border border border pad\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgeedgewidth=5)\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgeedgewidth=5)\n\n# Set the x and y grid line marker border border border border border border border border border color\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgeedgecolor='lime')\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgeedgecolor='lime')\n\n# Set the x and y grid line marker border border border border border border border border border style\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgeedgestyle='-')\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgeedgestyle='-')\n\n# Set the x and y grid line marker border border border border border border border border border width\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgeedgeedgewidth=1)\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgeedgeedgewidth=1)\n\n# Set the x and y grid line marker border border border border border border border border border alpha value\nax.xaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgeedgealpha=0.5)\nax.yaxis.grid(markeredgeedgeedgeedgeedgeedgeedgeedgeedgealpha=0.5)\n\n# Set the x and y grid line marker border border border border border border border border border hatch style\nax.xaxis.grid(marker"}
{"file": "dataset/ori_500/quiver_4.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\nfig, ax = plt.subplots(figsize=(5.0, 4.0))\nax.set_title('Vector Field: -F + \u03c1\u2207VF(Small \u03c1)')\nax.set_xlabel('x')\nax.set_ylabel('y')\n\n# Draw grid lines\nax.grid(True)\n\n# Draw arrows\nfor i in range(-100, 100):\n    for j in range(-100, 100):\n        x = i / 100.0\n        y = j / 100.0\n        u = -np.sin(x) * np.cos(y)\n        v = np.cos(x) * np.sin(y)\n        ax.quiver(x, y, u, v, color='blue', scale=20)"}
{"file": "dataset/ori_500/quiver_5.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\nax.set_title('Magnetic Field $\\mathbf{B}$ in Tesla units')\nax.set_xlabel('x')\nax.set_ylabel('y')\n\n# Draw dashed lines\nax.plot([-2.0, -1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5, 2.0], [-2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0, -2.0], 'k--')\nax.plot([-2.0, -1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5, 2.0], [2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0], 'k--')\n\n# Draw arrows\nfor i in range(-2, 3):\n    for j in range(-2, 3):\n        ax.arrow(i, j, 0.1, 0.1, head_width=0.05, head_length=0.05, fc='g', ec='g')\n        ax.arrow(i, j, -0.1, 0.1, head_width=0.05, head_length=0.05, fc='g', ec='g')\n        ax.arrow(i, j, 0.1, -0.1, head_width=0.05, head_length=0.05, fc='g', ec='g')\n        ax.arrow(i, j, -0.1, -0.1, head_width=0.05, head_length=0.05, fc='g', ec='g')"}
{"file": "dataset/ori_500/radar_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the scatter plot\nx = [58.5, 64.9, 66.9, 64.9, 63.4, 75.8, 72.9, 86.4]\ny = [54.3, 51.7, 61.7, 63.4, 52.0, 59.1, 78.2, 86.8]\nlabels = ['Text(0.1, 100.0, \\'TextVQA\\')', 'Text(0.7747361451096296, 100.06427876096865, \\'SQA-I\\')']\n\n# Create a scatter plot\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\nax.scatter(x, y, s=100, c='red')\nax.set_title('Text(0.1, 100.0, \\'TextVQA\\')')\n\n# Add labels\nfor i, txt in enumerate(labels):\n    ax.annotate(txt, (x[i], y[i]))\n\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\nangles = np.linspace(0, 2*np.pi, 10, endpoint=False)\nangles = np.concatenate((angles, [0]))\nangles_deg = np.degrees(angles)\n\n# Define the radii\nradii = np.array([20, 40, 60, 80])\n\n# Define the labels\nlabels = ['es', 'en', 'el', 'de', 'fr', 'hi', 'ru', 'th', 'tr', 'ur', 'vi', 'zh', 'ar', 'sw', 'bg']\n\n# Create the plot\nfig, ax = plt.subplots(figsize=(5.0, 5.0), subplot_kw={'projection': 'polar'})\nax.set_theta_offset(np.pi/2)\nax.set_theta_direction(-1)\nax.set_rticks(radii)\nax.set_rlabel_position(0)\nax.set_yticklabels(labels)\nax.plot(angles, radii, 'r-')\nax.fill(angles, radii, 'r', alpha=0.25)\nax.plot(angles, radii, 'b-', linewidth=2)\nax.fill(angles, radii, 'b', alpha=0.25)\nax.plot(angles, radii, 'g-', linewidth=2)\nax.fill(angles, radii, 'g', alpha=0.25)\nax.plot(angles, radii, 'k-', linewidth=2)\nax.fill(angles, radii, 'k', alpha=0.25)\nax.set_title('XNLI (speed-up ratio: 4)', va='bottom')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(4.0, 4.0))\n\n# Define the data\ncategories = ['Understanding', 'Questioning', 'Reasoning', 'Paraphrasing', 'Reflection']\nvalues = [10, 2, 4, 6, 8]\ncolors = ['green', 'cyan']\n\n# Draw the radar chart\nax.pie(values, labels=categories, colors=colors, startangle=90, counterclock=False)\n\n# Draw the circle\ncircle = plt.Circle((0.5, 0.5), 0.5, color='black', fill=False)\nax.add_artist(circle)\n\n# Set the title\nax.set_title('Interference')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_12.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the vertices of the triangle\nA = np.array([0.43, 0.33, 0.24])\nB = np.array([0.28, 0.24, 0.29])\nC = np.array([0.22, 0.36, 0.48])\n\n# Calculate the centroid of the triangle\ncentroid = (A + B + C) / 3\n\n# Calculate the radius of the circle\nradius = np.linalg.norm(A - centroid)\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Draw the circle\ncircle = plt.Circle((0, 0), radius, color='black')\nax.add_artist(circle)\n\n# Draw the triangle\nax.plot([A[0], B[0]], [A[1], B[1]], 'b-')\nax.plot([B[0], C[0]], [B[1], C[1]], 'b-')\nax.plot([C[0], A[0]], [C[1], A[1]], 'b-')\n\n# Draw the centroid\nax.plot(centroid[0], centroid[1], 'bo')\n\n# Set the limits of the plot\nax.set_xlim(-1, 1)\nax.set_ylim(-1, 1)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\ncategories = ['novel', 'mythology', 'general', 'movie', 'city', 'landscape', 'cultural event', 'video game', 'programming world', 'universe', 'country', 'fairy tale', 'special place']\nvalues = [0.2, 0.4, 0.6, 0.8, 0.2, 0.4, 0.6, 0.8, 0.2, 0.4, 0.6, 0.8]\ncolors = ['blue', 'green', 'red', 'purple', 'orange', 'pink', 'brown', 'cyan', 'magenta', 'yellow', 'grey', 'black']\n\n# Create the figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the radius of the circle\nradius = 1.0\n\n# Draw the circle\ncircle = plt.Circle((0, 0), radius, color='grey', fill=False)\nax.add_artist(circle)\n\n# Draw the lines\nfor i in range(len(categories)):\n    angle = (i / len(categories)) * 2 * np.pi\n    x = radius * np.cos(angle)\n    y = radius * np.sin(angle)\n    ax.plot([0, x], [0, y], color=colors[i])\n\n# Draw the labels\nfor i in range(len(categories)):\n    angle = (i / len(categories)) * 2 * np.pi\n    x = radius * np.cos(angle)\n    y = radius * np.sin(angle)\n    ax.text(x, y, categories[i], ha='center', va='center', rotation=i*30, color=colors[i])\n\n# Draw the values\nfor i in range(len(values)):\n    angle = (i / len(categories)) * 2 * np.pi\n    x = radius * np.cos(angle)\n    y = radius * np.sin(angle)\n    ax.text(x, y, str(values[i]), ha='center', va='center', rotation=i*30, color=colors[i])\n\n# Set the title\nax.set_title('Llama-2-70B')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\nsubjects = ['Math', 'Coding', 'Extraction', 'Roleplay', 'Writing', 'Reasoning', 'Humanities', 'STEM']\nscores = [4.2, 3.8, 3.5, 3.7, 3.9, 3.6, 3.4, 3.3]\ncolors = ['blue', 'orange', 'green', 'red', 'purple', 'brown', 'pink', 'gray']\n\n# Create a polar plot\nfig, ax = plt.subplots(figsize=(6.0, 6.0), subplot_kw={'projection': 'polar'})\n\n# Plot the scores\nfor i in range(len(subjects)):\n    ax.plot(np.deg2rad(45*i), scores[i], 'o', color=colors[i])\n\n# Add labels\nax.set_yticks([3.5, 4.0])\nax.set_yticklabels(['Good', 'Excellent'])\nax.set_xticks(np.deg2rad(range(0, 360, 45)))\nax.set_xticklabels(subjects)\n\n# Add a legend\nlegend_labels = ['GPT-J-6B', 'TinyLLaMA-1.1B', 'OpenLLaMA-3B', 'OpenMoE-8B/32B']\nlegend_colors = ['blue', 'orange', 'green', 'red']\nfor i in range(len(legend_labels)):\n    ax.plot([], [], marker='o', color=legend_colors[i], label=legend_labels[i])\nax.legend(loc='upper right')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\ncategories = ['Allergen', 'Material', 'Storage', 'Recall', 'Purity', 'Labeling', 'Nutrition', 'Pollution']\nmuji_scores = [3.5, 4.2, 3.8, 4.1, 3.9, 4.0, 3.7, 3.6]\nnestle_scores = [3.8, 3.6, 4.0, 3.5, 3.7, 3.9, 3.4, 3.5]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Draw the circle\ncircle = plt.Circle((0,0), 1, color='black')\nax.add_artist(circle)\n\n# Draw the labels\nfor i, category in enumerate(categories):\n    angle = (i / len(categories)) * 2 * np.pi\n    ax.text(np.cos(angle) * 0.8, np.sin(angle) * 0.8, category, ha='center', va='center')\n\n# Draw the MUJ scores\nfor i, score in enumerate(muji_scores):\n    angle = (i / len(categories)) * 2 * np.pi\n    ax.plot([0, np.cos(angle)], [0, np.sin(angle)], 'k-')\n    ax.plot(np.cos(angle), np.sin(angle), 'go', markersize=10)\n    ax.text(np.cos(angle) * 1.1, np.sin(angle) * 1.1, str(score), ha='center', va='center')\n\n# Draw the Nestle scores\nfor i, score in enumerate(nestle_scores):\n    angle = (i / len(categories)) * 2 * np.pi\n    ax.plot([0, np.cos(angle)], [0, np.sin(angle)], 'k-')\n    ax.plot(np.cos(angle), np.sin(angle), 'ro', markersize=10)\n    ax.text(np.cos(angle) * 1.1, np.sin(angle) * 1.1, str(score), ha='center', va='center')\n\n# Add the legend\nax.legend(['Nestle', 'MUJI'], loc='upper right')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_16.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the vertices of the pentagon\nvertices = np.array([[85.0, 85.0, 85.0, 85.0, 85.0],\n                     [78.7, 71.9, 64.1, 59.7, 78.0],\n                     [66.1, 66.1, 64.1, 64.1, 69.0],\n                     [50.8, 56.5, 56.5, 56.5, 56.5],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60.0, 60.0, 60.0, 60.0],\n                     [66.4, 60"}
{"file": "dataset/ori_500/radar_17.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Define the data for each subplot\ndata = [\n    [1, 2, 3, 4, 5],\n    [1, 2, 3, 4, 5],\n    [1, 2, 3, 4, 5]\n]\n\n# Define the labels for each subplot\nlabels = [\n    ['Extrusion', 'Injection', 'Blow Molding', 'Compression', 'Rotational'],\n    ['Injection', 'Injection', 'Injection', 'Injection', 'Injection'],\n    ['Blow Molding', 'Injection', 'Blow Molding', 'Compression', 'Rotational']\n]\n\n# Define the colors for each subplot\ncolors = [\n    ['red', 'green', 'blue'],\n    ['green', 'green', 'green'],\n    ['blue', 'blue', 'blue']\n]\n\n# Define the sizes for each subplot\nsizes = [\n    [1, 2, 3, 4, 5],\n    [1, 2, 3, 4, 5],\n    [1, 2, 3, 4, 5]\n]\n\n# Define the number of subplots\nnum_subplots = len(data)\n\n# Define the number of rows and columns for the subplots\nnum_rows = int(np.ceil(np.sqrt(num_subplots)))\nnum_cols = int(np.ceil(num_subplots / num_rows))\n\n# Define the subplot layout\nsubplot_layout = []\nfor i in range(num_rows):\n    for j in range(num_cols):\n        if i * num_cols + j < num_subplots:\n            subplot_layout.append((i, j))\n\n# Plot the data\nfor i, (row, col) in enumerate(subplot_layout):\n    ax[row, col].pie(data[i], labels=labels[i], colors=colors[i], autopct='%1.1f%%')\n    ax[row, col].set_title(labels[i][0])\n\nplt.show()"}
{"file": "dataset/ori_500/radar_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the title of the plot\nax.set_title('Amusement Park Comparison: Disney vs Universal Studios')\n\n# Set the x and y limits of the plot\nax.set_xlim(-1, 1)\nax.set_ylim(-1, 1)\n\n# Set the x and y ticks of the plot\nax.set_xticks(np.arange(-1, 1.1, 0.2))\nax.set_yticks(np.arange(-1, 1.1, 0.2))\n\n# Set the x and y labels of the plot\nax.set_xlabel('Disney')\nax.set_ylabel('Universal Studios')\n\n# Set the x and y grid of the plot\nax.grid(True)\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'])\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'])\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs'], rotation=45)\n\n# Set the x and y tick marks of the plot\nax.tick_params(axis='x', colors='orange')\nax.tick_params(axis='y', colors='purple')\n\n# Set the x and y tick labels of the plot\nax.set_xticklabels(['Food Quality', 'Shows', 'Family Rides', 'Thrill Rides'], rotation=45)\nax.set_yticklabels(['Staff', 'Cleanliness', 'Wait Times', 'Ticket Price', 'Souvenirs"}
{"file": "dataset/ori_500/radar_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data\ncategories = ['Creativity', 'Versatility', 'Longevity', 'Projection', 'Value', 'Sillage', 'Popularity', 'Packaging']\nvalues = [7, 5, 9, 3, 1, 5, 4, 2]\ncolors = ['gold', 'grey', 'grey', 'yellow', 'yellow', 'yellow', 'green', 'green']\n\n# Create a polar plot\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'}, figsize=(6.0, 6.0))\n\n# Plot the data\nax.bar(categories, values, color=colors)\n\n# Set the title\nax.set_title('Fashion Retailer Popularity')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Define the data for the scatter plot\nx = [59.7, 66.1, 50.8, 52.8, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64.1, 85.7, 59.3, 56.5, 50.2, 56.4, 59.7, 66.1, 71.9, 64.1, 69.9, 85.7, 71.9, 64"}
{"file": "dataset/ori_500/radar_20.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Data for the radar chart\ncategories = ['Creativity', 'Longevity', 'Versatility', 'Projection', 'Sillage', 'Value', 'Popularity']\nchanel_values = [7, 5, 9, 3, 1, 5, 1]\ndior_values = [9, 7, 3, 5, 1, 3, 1]\ngucci_values = [5, 9, 7, 3, 1, 5, 1]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(18.0, 6.0))\n\n# Plot the radar chart\nax.plot(categories, chanel_values, label='Chanel', color='blue')\nax.plot(categories, dior_values, label='Dior', color='green')\nax.plot(categories, gucci_values, label='Gucci', color='red')\n\n# Set the title of the chart\nax.set_title('Perfume Brand Comparison')\n\n# Set the labels for each category\nfor i, v in enumerate(categories):\n    ax.text(i * (2 * np.pi / len(categories)), 1, v, ha='center', va='center')\n\n# Set the limits of the axes\nax.set_xlim(-1, len(categories))\nax.set_ylim(-1, 10)\n\n# Set the ticks of the axes\nax.set_xticks(range(len(categories)))\nax.set_yticks(range(1, 10))\n\n# Set the labels of the axes\nax.set_xticklabels(categories)\nax.set_yticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9'])\n\n# Set the legend of the chart\nax.legend()\n\nplt.show()"}
{"file": "dataset/ori_500/radar_3.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the aspect ratio of the plot to be equal\nax.set_aspect('equal')\n\n# Define the radii for the circles\nouter_radius = 1.0\ninner_radius = 0.5\n\n# Define the angles for the circles\nangles = np.array([0, 90, 180, 270])\n\n# Define the radii for the circles\nradii_outer = np.array([1.0, 0.8, 0.6, 0.4])\nradii_inner = np.array([0.2, 0.4, 0.6, 0.8])\n\n# Plot the outer circle\ncircle_outer = plt.Circle((0, 0), outer_radius, color='black', fill=False)\nax.add_artist(circle_outer)\n\n# Plot the inner circle\ncircle_inner = plt.Circle((0, 0), inner_radius, color='red', fill=False)\nax.add_artist(circle_inner)\n\n# Plot the outer circle's points\nfor i in range(len(angles)):\n    ax.plot([0, outer_radius*np.cos(np.deg2rad(angles[i]))],\n            [0, outer_radius*np.sin(np.deg2rad(angles[i]))], 'k-')\n\n# Plot the inner circle's points\nfor i in range(len(angles)):\n    ax.plot([0, inner_radius*np.cos(np.deg2rad(angles[i]))],\n            [0, inner_radius*np.sin(np.deg2rad(angles[i]))], 'r-')\n\n# Set the limits of the plot\nax.set_xlim(-1.5, 1.5)\nax.set_ylim(-1.5, 1.5)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_4.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Define the data for each subplot\ndata = [\n    [1, 2, 3, 4, 5],\n    [1, 2, 3, 4, 5],\n    [1, 2, 3, 4, 5]\n]\n\n# Define the labels for each subplot\nlabels = [\n    'Fidelity(D_train)',\n    'Fidelity(D_test)',\n    'Fidelity(D_test)'\n]\n\n# Define the colors for each subplot\ncolors = [\n    'green',\n    'purple',\n    'cyan'\n]\n\n# Define the title for each subplot\ntitles = [\n    'PGM (\u03b5 = \u221e)',\n    'PrivSyn (\u03b5 = \u221e)',\n    'TVAE'\n]\n\n# Define the number of points for each subplot\nn_points = [\n    5,\n    5,\n    5\n]\n\n# Define the radius for each subplot\nradius = [\n    5,\n    5,\n    5\n]\n\n# Define the angle for each subplot\nangle = [\n    0,\n    90,\n    180\n]\n\n# Define the number of ticks for each subplot\nn_ticks = [\n    5,\n    5,\n    5\n]\n\n# Define the tick labels for each subplot\ntick_labels = [\n    ['1', '2', '3', '4', '5'],\n    ['1', '2', '3', '4', '5'],\n    ['1', '2', '3', '4', '5']\n]\n\n# Define the number of subplots\nn_subplots = len(data)\n\n# Loop through each subplot\nfor i in range(n_subplots):\n    # Set the title for the subplot\n    ax.set_title(titles[i], fontsize=12)\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i])\n    \n    # Set the tick labels for the subplot\n    tick_labels[i] = tick_labels[i]\n    \n    # Set the number of points for the subplot\n    n_points[i] = len(data[i])\n    \n    # Set the radius for the subplot\n    radius[i] = max(data[i])\n    \n    # Set the angle for the subplot\n    angle[i] = i * 90\n    \n    # Set the number of ticks for the subplot\n    n_ticks[i] = len(tick_labels[i"}
{"file": "dataset/ori_500/radar_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the aspect ratio of the plot to be equal\nax.set_aspect('equal')\n\n# Draw the circle\ncircle = plt.Circle((0, 0), 1, color='black')\nax.add_artist(circle)\n\n# Draw the grid\nax.grid(True)\n\n# Define the angles for the points\nangles = np.linspace(0, 2*np.pi, 9, endpoint=False)\nangles = np.concatenate((angles, [angles[0]]))\n\n# Define the radii for the points\nradii = [30, 40, 50, 60, 70, 80, 90, 80, 70, 60, 50, 40, 30]\n\n# Define the labels for the points\nlabels = ['[4] Heterocycle formation', '[3] C-C bond formation', '[5] Protections', '[6] Deprotetions', '[7] Reductions', '[8] Oxidations', '[9] Functional group addition, FGA', '[10] Heteroatom alkylation and arylation', '[11] Functional group interconversion, FGI']\n\n# Plot the points\nax.plot(angles, radii, 'o-', linewidth=2)\n\n# Add the labels\nfor angle, label in zip(angles, labels):\n    ax.text(angle, 1.1, label, ha='center', va='center')\n\n# Add the legend\nax.legend(['Baseline', 'Oxidations'], loc='upper right')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_6.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Set the tick marks\nax.set_xticks(np.arange(0, 1.2, 0.2))\nax.set_yticks(np.arange(0, 1.2, 0.2))\n\n# Set the tick labels\nax.set_xticklabels(['Model_A', 'Model_B', 'Model_C', 'Model_D', 'Model_E', 'Model_F'])\nax.set_yticklabels(['Model_A', 'Model_B', 'Model_C', 'Model_D', 'Model_E', 'Model_F'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the title of the plot\nax.set_title('Model Scores')\n\n# Set the labels for the legend\nlegend_labels = ['predicted_score', 'helpful_score', 'result_score', 'rating_score']\n\n# Set the colors for the legend\nlegend_colors = ['green', 'orange', 'blue', 'red']\n\n# Set the markers for the legend\nlegend_markers = ['o', 'o', 'x', 'x']\n\n# Set the line width for the legend\nlegend_linewidths = [1, 1, 1, 1]\n\n# Set the marker size for the legend\nlegend_markersizes = [5, 5, 5, 5]\n\n# Set the marker edge color for the legend\nlegend_markeredgecolors = ['black', 'black', 'black', 'black']\n\n# Set the marker face color for the legend\nlegend_markerfacecolors = ['green', 'orange', 'blue', 'red']\n\n# Set the marker edge width for the legend\nlegend_markeredgewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker face alpha for the legend\nlegend_markerfacealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge capstyle for the legend\nlegend_markeredgecapstyles = ['butt', 'butt', 'butt', 'butt']\n\n# Set the marker edge linestyle for the legend\nlegend_markeredgelines = ['-', '-', '-', '-']\n\n# Set the marker edge linewidth for the legend\nlegend_markeredgelinewidths = [1, 1, 1, 1]\n\n# Set the marker edge alpha for the legend\nlegend_markeredgealphas = [1, 1, 1, 1]\n\n# Set the marker edge hatch for the legend\nlegend_markeredgehatches = ['', '', '', '']\n\n# Set the marker edge joinstyle for the legend\nlegend_markeredgejoinstyles = ['miter', 'miter', 'miter', 'miter']\n\n# Set the marker edge cap"}
{"file": "dataset/ori_500/radar_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('3D-bar')\n\n# Set the radius of the circle\ncircle = plt.Circle((0, 0), 1, color='black', fill=False)\nax.add_artist(circle)\n\n# Set the labels for each point\nlabels = ['rose', 'candlestick', 'multi-axes', 'bubble', 'radar', 'area', 'pie', 'funnel', 'bar', 'heatmap', 'line_num', 'box']\nfor label, angle in zip(labels, np.linspace(0, 2*np.pi, len(labels))):\n    ax.text(np.cos(angle), np.sin(angle), label, ha='center', va='center')\n\n# Set the number of points\nn_points = 12\n\n# Set the radius of the points\nr = np.random.rand(n_points)\n\n# Set the angles of the points\ntheta = np.linspace(0, 2*np.pi, n_points)\n\n# Set the colors of the points\ncolors = np.random.rand(n_points, 3)\n\n# Set the sizes of the points\nsizes = 1000 * r**2\n\n# Plot the points\nax.scatter(theta, r, c=colors, s=sizes)\n\n# Set the grid\nax.grid(True)\n\n# Set the aspect ratio\nax.set_aspect('equal')\n\n# Set the limits of the plot\nax.set_xlim(-1.5, 1.5)\nax.set_ylim(-1.5, 1.5)\n\n# Set the labels for the axes\nax.set_xlabel('histogram')\nax.set_ylabel('bar_num')\n\n# Set the legend\nax.legend(['QWen-QL', 'SPHINX-V2', 'ChartLLama'], loc='best')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\n\n# Define the data for the radar chart\ncategories = ['Anomaly Detection', 'Long-horizon Forecasting', 'Short-horizon Forecasting', 'Classification']\nvalues = [4, 3, 2, 1]\n\n# Define the colors for each category\ncolors = ['blue', 'red', 'green', 'black']\n\n# Draw the radar chart\nax.pie(values, labels=categories, colors=colors, startangle=90, autopct='%1.1f%%')\n\n# Add a title\nax.set_title('Radar Chart')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_9.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Draw the circle\ncircle = plt.Circle((0, 0), 1, color='black', fill=False)\nax.add_artist(circle)\n\n# Define the vertices of the polygon\nvertices = np.array([[0.5, 0.5], [0.5, -0.5], [-0.5, -0.5], [-0.5, 0.5]])\n\n# Rotate the vertices\ntheta = np.radians(45)\nR = np.array([[np.cos(theta), -np.sin(theta)],\n              [np.sin(theta), np.cos(theta)]])\nvertices = np.dot(vertices, R)\n\n# Plot the polygon\nax.plot(vertices[:, 0], vertices[:, 1], 'b-')\n\n# Set the limits of the axes\nax.set_xlim(-1.2, 1.2)\nax.set_ylim(-1.2, 1.2)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_1.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 4.0))\n\n# Define the data for each subplot\ndata = [\n    [0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1],\n    [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2],\n    [0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0],\n    [0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0, -0.1],\n    [0.5, 0.4, 0.3, 0.2, 0.1, 0.0, -0.1, -0.2],\n    [0.4, 0.3, 0.2, 0.1, 0.0, -0.1, -0.2, -0.3],\n    [0.3, 0.2, 0.1, 0.0, -0.1, -0.2, -0.3, -0.4],\n    [0.2, 0.1, 0.0, -0.1, -0.2, -0.3, -0.4, -0.5],\n    [0.1, 0.0, -0.1, -0.2, -0.3, -0.4, -0.5, -0.6],\n    [0.0, -0.1, -0.2, -0.3, -0.4, -0.5, -0.6, -0.7],\n    [-0.1, -0.2, -0.3, -0.4, -0.5, -0.6, -0.7, -0.8],\n    [-0.2, -0.3, -0.4, -0.5, -0.6, -0.7, -0.8, -0.9],\n    [-0.3, -0.4, -0.5, -0.6, -0.7, -0.8, -0.9, -1.0]\n]\n\n# Plot the data\nfor i in range(len(data)):\n    ax.plot(data[i], label=f\"Data {i+1}\")\n\n# Add labels and title\nax.set_xlabel('Value')\nax.set_ylabel('Model-Basedness')\nax.set_title('Model-Basedness vs Value')\n\nplt.show()"}
{"file": "dataset/ori_500/scatter_10.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the title and labels\nax.set_title('ImageNet-1K Linear Probing')\nax.set_xlabel('Pre-training GPU Hours')\nax.set_ylabel('Accuracy [%]')\n\n# Set the grid\nax.grid(True)\n\n# Define the data points\nx = [0, 1000, 2000, 3000, 4000]\ny = [77, 79, 81, 83, 85]\n\n# Plot the data points\nax.plot(x, y, 'o-')\n\n# Add the text annotations\nax.text(0, 77, 'iBOT', ha='center', va='center', color='black')\nax.text(1000, 79, 'MAE', ha='center', va='center', color='black')\nax.text(2000, 81, 'D2V2', ha='center', va='center', color='black')\nax.text(3000, 83, 'MoCo v3', ha='center', va='center', color='black')\nax.text(4000, 85, 'D2V2-Refined', ha='center', va='center', color='black')\n\n# Add the legend\nax.legend(['Linear Probing'], loc='upper left')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_11.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis and y-axis limits\nax.set_xlim(10, 60)\nax.set_ylim(0.5, 0.9)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('Inference Time (seconds)')\nax.set_ylabel('Average Score')\n\n# Set the grid lines\nax.grid(True, linestyle='--', linewidth=0.5)\n\n# Add the bubble chart\nbubble_size = 200\nbubble_color = 'lightgrey'\nbubble_alpha = 0.5\nbubble_edgecolor = 'black'\nbubble_linewidth = 1\nbubble_marker = 'o'\nbubble_markersize = 10\nbubble_markerfacecolor = 'none'\nbubble_markeredgecolor = 'black'\nbubble_markeredgewidth = 1\nbubble_markeredgelinejoinstyle = 'round'\nbubble_markeredgelinecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoinstyle = 'round'\nbubble_markeredgecapstyle = 'round'\nbubble_markeredgeantialiased = True\nbubble_markerfaceantialiased = True\nbubble_markeredgejoin"}
{"file": "dataset/ori_500/scatter_12.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x and y limits\nax.set_xlim(20, 50)\nax.set_ylim(30, 60)\n\n# Set the x and y ticks\nax.set_xticks(np.arange(20, 51, 5))\nax.set_yticks(np.arange(30, 61, 5))\n\n# Set the x and y labels\nax.set_xlabel('EgoSchema VQA accuracy')\nax.set_ylabel('Perception Test VQA accuracy')\n\n# Add a title\nax.set_title('Number of parameters')\n\n# Add a grid\nax.grid(True)\n\n# Add a scatter plot\nax.scatter([20, 424, 1, 4], [59, 57, 55, 53], color='grey', s=100)\n\n# Add a circle for each model\ncircle1 = plt.Circle((20, 59), 1, color='grey')\ncircle2 = plt.Circle((424, 57), 1, color='grey')\ncircle3 = plt.Circle((1, 55), 1, color='grey')\ncircle4 = plt.Circle((4, 53), 1, color='grey')\nax.add_artist(circle1)\nax.add_artist(circle2)\nax.add_artist(circle3)\nax.add_artist(circle4)\n\n# Add a rectangle for each model\nrect1 = plt.Rectangle((20, 59), 1, 1, color='grey')\nrect2 = plt.Rectangle((424, 57), 1, 1, color='grey')\nrect3 = plt.Rectangle((1, 55), 1, 1, color='grey')\nrect4 = plt.Rectangle((4, 53), 1, 1, color='grey')\nax.add_artist(rect1)\nax.add_artist(rect2)\nax.add_artist(rect3)\nax.add_artist(rect4)\n\n# Add a text label for each model\nax.text(20, 59, '203M', fontsize=12, ha='center', va='center')\nax.text(424, 57, '424M', fontsize=12, ha='center', va='center')\nax.text(1, 55, '1B', fontsize=12, ha='center', va='center')\nax.text(4, 53, '>4B', fontsize=12, ha='center', va='center')\n\n# Add a circle for each model\ncircle1 = plt.Circle((20, 59), 1, color='grey')\ncircle2 = plt.Circle((424, 57), 1, color='grey')\ncircle3 = plt.Circle((1, 55), 1, color='grey')\ncircle4 = plt.Circle((4, 53), 1, color='grey')\nax.add_artist(circle1)\nax.add_artist(circle2)\nax.add_artist(circle3)\nax.add_artist(circle4)\n\n# Add a rectangle for each model\nrect1 = plt.Rectangle((20, 59), 1, 1, color='grey')\nrect2 = plt.Rectangle((424, 57), 1, 1, color='grey')\nrect3 = plt.Rectangle((1, 55), 1, 1, color='grey')\nrect4 = plt.Rectangle((4, 53), 1, 1, color='grey')\nax.add_artist(rect1)\nax.add_artist(rect2)\nax.add_artist(rect3)\nax.add_artist(rect4)\n\n# Add a text label for each model\nax.text(20, 59, '203M', fontsize=12, ha='center', va='center')\nax.text(424, 57, '424M', fontsize=12, ha='center', va='center')\nax.text(1, 55, '1B', fontsize=12, ha='center', va='center')\nax.text(4, 53, '>4B', fontsize=12, ha='center', va='center')\n\n# Add a circle for each model\ncircle1 = plt.Circle((20, 59), 1, color='grey')\ncircle2 = plt.Circle((424, 57), 1, color='grey')\ncircle3 = plt.Circle((1, 55), 1, color='grey')\ncircle4 = plt.Circle((4, 53), 1, color='grey')\nax.add_artist(circle1)\nax.add_artist(circle2)\nax.add_artist(circle3)\nax.add_artist(circle4)\n\n# Add a rectangle for each model\nrect1 = plt.Rectangle((20, 59), 1, 1, color='grey')\nrect2 = plt.Rectangle((424, 57), 1, 1, color='grey')\nrect3 = plt.Rectangle((1, 55), 1, 1, color='grey')\nrect4 = plt.Rectangle((4, 53), 1, 1, color='grey')\nax.add_artist(rect1)\nax.add_artist(rect2)\nax.add_artist(rect3)\nax.add_artist(rect4)\n\n# Add a text label for each model\nax.text(20, 59, '203M', fontsize=12, ha='center', va='center')\nax.text(424, 57, '424M', fontsize=12, ha='center', va='center')\nax.text(1, 55, '1B', fontsize=12, ha='center', va='center')\nax.text(4, 53, '>4B', fontsize=12, ha='center', va='center')\n\n# Add a circle for each model\ncircle1 = plt.Circle((20, 59), 1, color='grey')\ncircle2 = plt.Circle((424, 57), 1, color='grey')\ncircle3 = plt.Circle((1, 55), 1, color='grey')\ncircle4 = plt.Circle((4, 53), 1, color='grey')\nax.add_artist(circle1)\nax.add_artist(circle2)\nax.add_artist(circle3)\nax.add_artist(circle4)\n\n# Add a rectangle for each model\nrect1 = plt.Rectangle((20, 59), 1, 1, color='grey')\nrect2 = plt.Rectangle((424, 57), 1, 1, color='grey')\nrect3 = plt.Rectangle((1, 55), 1, 1, color='grey')\nrect4 = plt.Rectangle((4, 53), 1, 1, color='grey')\nax.add_artist(rect1)\nax.add_artist(rect2)\nax.add_artist(rect3)\nax.add_artist(rect4)\n\n# Add a text label for each model\nax.text(20, 59, '203M', fontsize=12, ha='center', va='center')\nax.text(424, 57, '424M', fontsize=12, ha='center', va='center')\nax.text(1, 55, '1B', fontsize=12, ha='center', va='center')\nax.text(4, 53, '>4B', fontsize=12, ha='center', va='center')\n\n# Add a circle for each model\ncircle1 = plt.Circle((20, 59), 1, color='grey')\ncircle2 = plt.Circle((424, 57), 1, color='grey')\ncircle3 = plt.Circle((1, 55), 1, color='grey')\ncircle4 = plt.Circle((4, 53), 1, color='grey')\nax.add_artist(circle1)\nax.add_artist(circle2)\nax.add_artist(circle3)\nax.add_artist(circle4)\n\n# Add a rectangle for each model\nrect1 = plt.Rectangle((20, 59), 1, 1, color='grey')\nrect2 = plt.Rectangle((424, 57), 1, 1, color='grey')\nrect3 = plt.Rectangle((1, 55), 1, 1, color='grey')\nrect4 = plt.Rectangle((4, 53), 1, 1, color='grey')\nax.add_artist(rect1)\nax.add_artist(rect2)\nax.add_artist(rect3)\nax.add_artist(rect4)\n\n# Add a text label for each model\nax.text(20, 59, '203M', fontsize=12, ha='center', va='center')\nax.text(424, 57, '424M', fontsize=12, ha='center', va='center')\nax.text(1, 55, '1B', fontsize=12, ha='center', va='center')\nax.text(4, 53, '>4B', fontsize=12, ha='center', va='center')\n\n# Add a circle for each model\ncircle1 = plt.Circle((20, 59), 1, color='grey')\ncircle2 = plt.Circle((424, 57), 1, color='grey')\ncircle3 = plt.Circle((1, 55), 1, color='grey')\ncircle4 = plt.Circle((4, 53), 1, color='grey')\nax.add_artist(circle1)\nax.add_artist(circle2)\nax.add_artist(circle3)\nax.add_artist(circle4)\n\n# Add a rectangle for each model\nrect1 = plt.Rectangle((20, 59), 1, 1, color='grey')\nrect2 = plt.Rectangle((424, 57), 1, 1, color='grey')\nrect3 = plt.Rectangle((1, 55), 1, 1, color='grey')\nrect4 = plt.Rectangle((4, 53), 1, 1, color='grey')\nax.add_artist(rect1)\nax.add_artist(rect2)\nax.add_artist(rect3)\nax.add_artist(rect4)\n\n# Add a text label for each model\nax.text(20, 59, '203M', fontsize=12, ha='center', va='center')\nax.text(424, 57, '424M', fontsize=12, ha='center', va='center')\nax.text(1, 55, '1B', fontsize=12, ha='center', va='center')\nax.text(4, 53, '>4B', fontsize=12, ha='center', va='center')\n\n# Add a circle for each model\ncircle1 = plt.Circle((20, 59), 1, color='grey')\ncircle2 = plt.Circle((424, 57), 1, color='grey')\ncircle3 = plt.Circle((1, 55), 1, color='grey')\ncircle4 = plt.Circle((4, 53), 1, color='grey')\nax.add_artist(circle1)\nax.add_artist(circle2)\nax.add_artist(circle3)\nax.add_artist(circle4)\n\n# Add a rectangle for each model\nrect1 = plt.Rectangle((20, 59), 1, 1, color='grey')\nrect2 = plt.Rectangle((424, 57), 1, 1, color='grey')\nrect3 = plt.Rectangle((1, 55), 1, 1, color='grey')\nrect4 = plt.Rectangle((4, 53), 1, 1, color='grey')\nax.add_artist(rect1)\nax.add_artist(rect2)\nax.add_artist(rect3)\nax.add_artist(rect4)\n\n# Add a text label for each model\nax.text(20, 59, '203M', fontsize=12, ha='center', va='center')\nax.text(424, 57, '424M', fontsize=12, ha='center', va='center')\nax.text(1, 55, '1B', fontsize=12, ha='center', va='center')\nax.text(4, 53, '>4B', fontsize=12, ha='center', va='center')\n\n# Add a circle for each model\ncircle1 = plt.Circle((20, 59), 1, color='grey')\ncircle2 = plt.Circle((424, 57), 1, color='grey')\ncircle3 = plt.Circle((1, 55), 1, color='grey')\ncircle4 = plt.Circle((4, 53), 1, color='grey')\nax.add_artist(circle1)\nax.add_artist(circle2)\nax.add_artist(circle3)\nax.add_artist(circle4)\n\n# Add a rectangle for each model\nrect1 = plt.Rectangle((20, 59), 1, 1, color='grey')\nrect2 = plt.Rectangle((424, 57), 1, 1, color='grey')\nrect3 = plt.Rectangle((1, 55), 1, 1, color='grey')\nrect4 = plt.Rectangle((4, 53), 1, 1, color='grey')\nax.add_artist(rect1)\nax.add_artist(rect2)\nax.add_artist(rect3)\nax.add_artist(rect4)\n\n# Add a text label for each model\nax.text(20, 59, '203M', fontsize=12, ha='center', va='center')\nax.text(424, 57, '424M', fontsize=12, ha='center', va='center')\nax.text(1, 55, '1B', fontsize=12, ha='center', va='center')\nax.text(4, 53, '>4B', fontsize=12, ha='center', va='center')\n\n# Add a circle for each model\ncircle1 = plt.Circle((20, 59), 1, color='grey')\ncircle2 = plt.Circle((424, 57), 1, color='grey')\ncircle3 = plt.Circle((1, 55), 1, color='grey')\ncircle4 = plt.Circle((4, 53), 1, color='grey')\nax.add_artist(circle1)\nax.add_artist(circle2)\nax.add_artist(circle3)\nax.add_artist(circle4)\n\n# Add a rectangle for each model\nrect1 = plt.Rectangle((20, 59), 1, 1, color='grey')\nrect2 = plt.Rectangle((424, 57), 1, 1, color='grey')\nrect3 = plt.Rectangle((1, 55), 1, 1, color='grey')\nrect4 = plt.Rectangle((4, 53), 1, 1, color='grey')\nax.add_artist(rect1)\nax.add_artist(rect2)\nax.add_artist(rect3)\nax.add_artist(rect4)\n\n# Add a text label for each model\nax.text(20, 59, '203M', fontsize=12, ha='center', va='center')\nax.text(424, 57, '424M', fontsize=12, ha='center', va='center')\nax.text(1, 55, '1B', fontsize=12, ha='center', va='center')\nax.text(4, 53, '>4B', fontsize=12, ha='center', va='center')\n\n# Add a circle for each model\ncircle1 = plt.Circle((20, 59), 1, color='grey')\ncircle2 = plt.Circle((424, 57), 1, color='grey')\ncircle3 = plt.Circle((1, 55), 1, color='grey')\ncircle4 = plt.Circle((4, 53), 1, color='grey')\nax.add_artist(circle1)\nax.add_artist(circle2)\nax.add_artist(circle3)\nax.add_artist(circle4)\n\n# Add a rectangle for each model\nrect1 = plt.Rectangle((20, 59), 1, 1, color='grey')\nrect2 = plt.Rectangle((424, 57), 1, 1, color='grey')\nrect3 = plt.Rectangle((1, 55), 1, 1, color='grey')\nrect4 = plt.Rectangle((4, 53), 1, 1, color='grey')\nax.add_artist(rect1)\nax.add_artist(rect2)\nax.add_artist(rect3)\nax.add_artist(rect4)\n\n# Add a text label for each model\nax.text(20, 59, '203M', fontsize=12, ha='center', va='center')\nax.text(424, 57, '424M', fontsize=12, ha='center', va='center')\nax.text(1, 55, '1B', fontsize=12, ha='center', va='center')\nax.text(4, 53, '>4B', fontsize=12, ha='center', va='center')\n\n# Add a circle for each model\ncircle1 = plt.Circle((20, 59), 1, color='grey')\ncircle2 = plt.Circle((424, 57), 1, color='grey')\ncircle3 = plt.Circle((1, 55), 1, color='grey')\ncircle4 = plt.Circle((4, 53), 1, color='grey')\nax.add_artist(circle1)\nax.add_artist(circle2)\nax.add_artist(circle3)\nax.add_artist(circle4)\n\n# Add a rectangle for each model\nrect1 = plt.Rectangle((20, 59), 1, 1, color='grey')\nrect2 = plt.Rectangle((424, 57), 1, 1, color='grey')\nrect3 = plt.Rectangle((1, 55), 1, 1, color='grey')\nrect4 = plt.Rectangle((4, 53), 1, 1, color='grey')\nax.add_artist(rect1)\nax.add_artist(rect2)\nax.add_artist(rect3)\nax.add_artist(rect4)\n\n# Add a text label for each model\nax.text(20, 59, '203M', fontsize=12, ha='center', va='center')\nax.text(424, 57, '424M', fontsize=12, ha='center', va='center')\nax.text(1, 55, '1B', fontsize=12, ha='center', va='center')\nax.text(4, 53, '>4B', fontsize=12,"}
{"file": "dataset/ori_500/scatter_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Average Relative Error, u')\n\n# Set the labels for the x and y axes\nax.set_xlabel('Test Case Index')\nax.set_ylabel('Average Relative Error, u')\n\n# Set the grid lines\nax.grid(True)\n\n# Set the tick marks\nax.set_xticks(np.arange(1.0, 5.5, 1.0))\nax.set_yticks(np.arange(0.0, 0.1, 0.01))\n\n# Set the tick labels\nax.set_xticklabels(['1.0', '1.5', '2.0', '2.5', '3.0', '3.5', '4.0', '4.5', '5.0'])\nax.set_yticklabels(['0.0', '0.01', '0.02', '0.03', '0.04', '0.05', '0.06', '0.07', '0.08', '0.09'])\n\n# Set the legend\nax.legend(['Single LSTM', 'Ensemble LSTM', 'CAE Reconstruction'], loc='upper left')\n\n# Set the data points\nx = [1.0, 2.0, 3.0, 4.0, 5.0]\ny = [0.01, 0.02, 0.03, 0.04, 0.05]\n\n# Plot the data points\nax.plot(x, y, 'ro-')\n\n# Set the marker size\nax.set_marker_size(10)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set the marker edge color\nax.set_marker_edge_color('green')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('blue')\n\n# Set the marker edge color\nax.set_marker_edge_color('blue')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('black')\n\n# Set the marker edge color\nax.set_marker_edge_color('black')\n\n# Set the marker edge width\nax.set_marker_edge_width(1)\n\n# Set the marker face color\nax.set_marker_face_color('green')\n\n# Set"}
{"file": "dataset/ori_500/scatter_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 3.0))\n\n# Set the title of the plot\nax.set_title('Accuracies for the ImageNet Classes (ClarifAI)')\n\n# Set the labels for the x-axis\nax.set_xlabel('Classes')\nax.set_xticks(np.arange(1, 8))\nax.set_xticklabels(['spotlight', 'sliding', 'wool', 'weasel', 'space', 'partride', 'bighorn'])\n\n# Set the labels for the y-axis\nax.set_ylabel('Accuracy')\n\n# Set the grid lines\nax.grid(True)\n\n# Set the tick marks\nax.set_yticks(np.arange(0, 1.5, 0.1))\n\n# Set the legend\nax.legend(loc='upper left', bbox_to_anchor=(1,1), title=\"Model\")\n\n# Plot the data\nax.plot([0.97, 0.98, 0.99, 0.98, 0.97, 0.96, 0.95], 'bo-', label='Majority')\nax.plot([0.94, 0.93, 0.92, 0.91, 0.90, 0.89, 0.88], 'ro-', label='Minority')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_15.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Logic Grid Puzzle(Accuracy versus token cost)')\n\n# Set the x-axis label\nax.set_xlabel('Token cost($)')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Define the data points\nx = [50, 60, 70, 80, 90]\ny = [62, 64, 66, 68, 70]\n\n# Plot the data points\nax.plot(x, y, 'ro')\n\n# Add labels to the data points\nax.text(50, 62, 'Self-refine')\nax.text(60, 64, 'CoT(maj@1)')\nax.text(70, 66, 'CoT(maj@5)')\nax.text(80, 68, 'MAD+judge')\nax.text(90, 70, 'SPP')\n\n# Set the x-axis limits\nax.set_xlim([0, 100])\n\n# Set the y-axis limits\nax.set_ylim([60, 70])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_16.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Plot the data\nax.plot(x, y, 'o')\n\n# Add labels and title\nax.set_xlabel('Efficiency (%)')\nax.set_ylabel('Carbon Reduction (kton)')\nax.set_title('Energy Sources')\n\n# Add a legend\nlegend_labels = ['Solar', 'Wind', 'Hydro', 'Geothermal', 'Biomass', 'Nuclear', 'Tidal', 'Wave']\nlegend_colors = ['yellow', 'blue', 'cyan', 'brown', 'green', 'orange', 'purple', 'red']\nfor i, label in enumerate(legend_labels):\n    ax.text(0.05, 0.95 - i * 0.1, label, color=legend_colors[i], transform=ax.transAxes)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_17.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the grid\nax.grid(True)\n\n# Set the x-axis and y-axis limits\nax.set_xlim(-30, 10)\nax.set_ylim(-10, 30)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel(r'$\\Delta$ Robust Accuracy (%)')\nax.set_ylabel(r'$\\Delta$ RNFR (%)')\n\n# Set the tick marks\nax.set_xticks(np.arange(-30, 11, 10))\nax.set_yticks(np.arange(-10, 31, 10))\n\n# Set the tick labels\nax.set_xticklabels(['-30', '-20', '-10', '0', '10'])\nax.set_yticklabels(['-10', '-5', '0', '5', '10', '15', '20', '25', '30'])\n\n# Set the tick label rotation\nax.set_xticklabels(ax.get_xticklabels(), rotation=45)\nax.set_yticklabels(ax.get_yticklabels(), rotation=45)\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xtick"}
{"file": "dataset/ori_500/scatter_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the grid\nax.grid(True)\n\n# Set the x-axis tick labels\nax.set_xticks(np.arange(2, 17, 1))\nax.set_xticklabels(['2', '4', '6', '8', '10', '12', '14', '16'])\n\n# Set the y-axis tick labels\nax.set_yticks(np.arange(80, 115, 5))\n\n# Set the title of the plot\nax.set_title('Day 1')\n\n# Set the label for the x-axis\nax.set_xlabel('Time')\n\n# Set the label for the y-axis\nax.set_ylabel('Value')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='grey')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='grey')\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_color('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_color('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_color('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_color('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_linewidth(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_linewidth(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_linewidth(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_linewidth(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_linestyle('-')\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_linestyle('-')\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_linestyle('-')\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_linestyle('-')\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_alpha(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_alpha(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_alpha(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_alpha(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_zorder(1)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_zorder(1)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_zorder(1)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_zorder(1)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_edgecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_edgecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_edgecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_edgecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_facecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_facecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_facecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_facecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_visible(True)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_visible(True)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_visible(True)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_visible(True)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_linewidth(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_linewidth(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_linewidth(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_linewidth(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_linestyle('-')\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_linestyle('-')\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_linestyle('-')\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_linestyle('-')\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_alpha(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_alpha(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_alpha(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_alpha(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_zorder(1)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_zorder(1)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_zorder(1)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_zorder(1)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_edgecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_edgecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_edgecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_edgecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_facecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_facecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_facecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_facecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_visible(True)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_visible(True)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_visible(True)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_visible(True)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_linewidth(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_linewidth(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_linewidth(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_linewidth(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_linestyle('-')\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_linestyle('-')\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_linestyle('-')\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_linestyle('-')\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_alpha(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_alpha(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_alpha(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_alpha(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_zorder(1)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_zorder(1)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_zorder(1)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_zorder(1)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_edgecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_edgecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_edgecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_edgecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_facecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_facecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_facecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_facecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_visible(True)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_visible(True)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_visible(True)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_visible(True)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_linewidth(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_linewidth(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_linewidth(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_linewidth(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_linestyle('-')\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_linestyle('-')\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_linestyle('-')\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_linestyle('-')\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_alpha(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_alpha(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_alpha(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_alpha(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_zorder(1)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_zorder(1)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_zorder(1)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_zorder(1)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_edgecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_edgecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_edgecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_edgecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_facecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_facecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_facecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_facecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_visible(True)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_visible(True)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_visible(True)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_visible(True)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_linewidth(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_linewidth(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_linewidth(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_linewidth(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_linestyle('-')\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_linestyle('-')\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_linestyle('-')\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_linestyle('-')\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_alpha(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_alpha(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_alpha(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_alpha(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_zorder(1)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_zorder(1)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_zorder(1)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_zorder(1)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_edgecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_edgecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_edgecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_edgecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_facecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_facecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_facecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_facecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_visible(True)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_visible(True)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_visible(True)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_visible(True)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_linewidth(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_linewidth(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_linewidth(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_linewidth(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_linestyle('-')\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_linestyle('-')\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_linestyle('-')\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_linestyle('-')\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_alpha(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_alpha(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_alpha(0.5)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_alpha(0.5)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_zorder(1)\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_zorder(1)\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_zorder(1)\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_zorder(1)\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_edgecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_edgecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_edgecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_edgecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['bottom'].set_facecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['left'].set_facecolor('grey')\n\n# Set the color of the x-axis tick marks\nax.spines['top'].set_facecolor('grey')\n\n# Set the color of the y-axis tick marks\nax.spines['right'].set_facecolor('grey')\n\n# Set the color of the x-axis"}
{"file": "dataset/ori_500/scatter_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the grid\nax.grid(True)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('X-axis')\nax.set_ylabel('Y-axis')\n\n# Set the x-axis and y-axis ticks\nax.set_xticks(np.arange(2, 17))\nax.set_yticks(np.arange(80, 110))\n\n# Set the x-axis and y-axis tick labels\nax.set_xticklabels(['2', '4', '6', '8', '10', '12', '14', '16'])\nax.set_yticklabels(['80', '85', '90', '95', '100', '105', '110'])\n\n# Set the x-axis and y-axis limits\nax.set_xlim([1, 17])\nax.set_ylim([75, 115])\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', length=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', length=5)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', width=2)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', width=1)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', direction='in')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', direction='in')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', pad=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', pad=5)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', rotation=0)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', rotation=0)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', length=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', length=5)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', width=2)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', width=1)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', direction='in')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', direction='in')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', pad=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', pad=5)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', rotation=0)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', rotation=0)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', length=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', length=5)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', width=2)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', width=1)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', direction='in')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', direction='in')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', pad=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', pad=5)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', rotation=0)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', rotation=0)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', length=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', length=5)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', width=2)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', width=1)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', direction='in')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', direction='in')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', pad=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', pad=5)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', rotation=0)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', rotation=0)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', length=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', length=5)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', width=2)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', width=1)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', direction='in')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', direction='in')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', pad=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', pad=5)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', rotation=0)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', rotation=0)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', length=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', length=5)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', width=2)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', width=1)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', direction='in')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', direction='in')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', pad=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', pad=5)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', rotation=0)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', rotation=0)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', length=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', length=5)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', width=2)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', width=1)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', direction='in')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', direction='in')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', pad=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', pad=5)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', rotation=0)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', rotation=0)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', length=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', length=5)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', width=2)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', width=1)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', direction='in')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', direction='in')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', pad=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', pad=5)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', rotation=0)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', rotation=0)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', length=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', length=5)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', width=2)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', width=1)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', direction='in')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', direction='in')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', pad=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', pad=5)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', rotation=0)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', rotation=0)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the x-axis and y-axis tick parameters\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the x-axis and y-axis tick parameters\nax.tick"}
{"file": "dataset/ori_500/scatter_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(4.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Energy Production Trends')\n\n# Add a legend for each energy source\nax.legend(['Solar Energy', 'Wind Energy', 'Hydropower'], loc='upper left')\n\n# Set the labels for the x and y axes\nax.set_xlabel('Installed Capacity (GW)')\nax.set_ylabel('Energy Output (TWh)')\n\n# Set the tick marks for the x and y axes\nax.set_xticks(np.arange(175, 300, 25))\nax.set_yticks(np.arange(140, 230, 20))\n\n# Set the limits for the x and y axes\nax.set_xlim(175, 300)\nax.set_ylim(140, 230)\n\n# Plot the data points for each energy source\nax.plot([175, 200, 225, 250, 275, 300], [140, 160, 180, 200, 220, 240], 'ro')\nax.plot([175, 200, 225, 250, 275, 300], [140, 160, 180, 200, 220, 240], 'bo')\nax.plot([175, 200, 225, 250, 275, 300], [140, 160, 180, 200, 220, 240], 'go')\n\n# Set the color of the lines\nax.plot([175, 200, 225, 250, 275, 300], [140, 160, 180, 200, 220, 240], 'r-')\nax.plot([175, 200, 225, 250, 275, 300], [140, 160, 180, 200, 220, 240], 'b-')\nax.plot([175, 200, 225, 250, 275, 300], [140, 160, 180, 200, 220, 240], 'g-')\n\n# Set the color of the markers\nax.plot([175, 200, 225, 250, 275, 300], [140, 160, 180, 200, 220, 240], 'ro')\nax.plot([175, 200, 225, 250, 275, 300], [140, 160, 180, 200, 220, 240], 'bo')\nax.plot([175, 200, 225, 250, 275, 300], [140, 160, 180, 200, 220, 240], 'go')\n\n# Set the color of the lines\nax.plot([175, 200, 225, 250, 275, 300], [140, 160, 180, 200, 220, 240], 'r-')\nax.plot([175, 200, 225, 250, 275, 300], [140, 160, 180, 200, 220, 240], 'b-')\nax.plot([175, 200, 225, 250, 275, 300], [140, 160, 180, 200, 220, 240], 'g-')\n\n# Set the color of the markers\nax.plot([175, 200, 225, 250, 275, 300], [140, 160, 180, 200, 220, 240], 'ro')\nax.plot([175, 200, 225, 250, 275, 300], [140, 160, 180, 200, 220, 240], 'bo')\nax.plot([175, 200, 225, 250, 275, 300], [140, 160, 180, 200, 220, 240], 'go')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Scatter plot with colorbar')\n\n# Generate random data for the scatter plot\nx = np.random.rand(100)\ny = np.random.rand(100)\nc = np.random.rand(100)\n\n# Create a scatter plot with the generated data\nscatter = ax.scatter(x, y, c=c, s=50)\n\n# Add a colorbar to the plot\ncbar = fig.colorbar(scatter)\n\n# Set the label of the colorbar\ncbar.set_label('Colorbar label')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_21.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Plot the data\nax.plot(np.random.rand(10), 'o-')\n\n# Set the title and labels\nax.set_title('LibriCSS vs Additional Data 1')\nax.set_xlabel('Number of Microphones')\nax.set_ylabel('WER (%)')\n\n# Add a legend\nax.legend(['LibriCSS WER', 'Additional Data 1'], loc='upper left')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_22.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, axs = plt.subplots(1, 2, figsize=(12.0, 6.0))\n\n# Set the title for the first subplot\naxs[0].set_title('Performance Comparison')\n\n# Set the title for the second subplot\naxs[1].set_title('Strategic Traits')\n\n# Set the x-axis label for the first subplot\naxs[0].set_xlabel('Value')\n\n# Set the y-axis label for the first subplot\naxs[0].set_ylabel('Models')\n\n# Set the x-axis label for the second subplot\naxs[1].set_xlabel('Value')\n\n# Set the y-axis label for the second subplot\naxs[1].set_ylabel('Strategic Traits')\n\n# Set the grid for the first subplot\naxs[0].grid(True)\n\n# Set the grid for the second subplot\naxs[1].grid(True)\n\n# Set the tick labels for the first subplot\naxs[0].set_xticks(np.arange(0.25, 1.0, 0.25))\naxs[0].set_yticks(np.arange(0.25, 1.0, 0.25))\n\n# Set the tick labels for the second subplot\naxs[1].set_xticks(np.arange(0.2, 1.0, 0.2))\naxs[1].set_yticks(np.arange(0.2, 1.0, 0.2))\n\n# Set the tick labels for the first subplot\naxs[0].set_xticklabels(['0.25', '0.50', '0.75', '1.00', '1.25', '1.50', '1.75', '2.00'])\naxs[0].set_yticklabels(['0.25', '0.50', '0.75', '1.00', '1.25', '1.50', '1.75', '2.00'])\n\n# Set the tick labels for the second subplot\naxs[1].set_xticklabels(['0.2', '0.4', '0.6', '0.8', '1.0'])\naxs[1].set_yticklabels(['0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the legend for the first subplot\naxs[0].legend(['Model-Basedness', 'Meta-Cognition'], loc='upper left')\n\n# Set the legend for the second subplot\naxs[1].legend(['Exploration', 'Risk Taking'], loc='upper left')\n\n# Set the text for the first subplot\naxs[0].text(0.9, 0.9, 'lama-2-70-chat', fontsize=10)\naxs[0].text(0.9, 0.8, 'lama-2-70', fontsize=10)\naxs[0].text(0.9, 0.7, 'hf-falcon@002', fontsize=10)\naxs[0].text(0.9, 0.6, 'claude-2', fontsize=10)\naxs[0].text(0.9, 0.5, 'claude-1', fontsize=10)\naxs[0].text(0.9, 0.4, 'text-davinci-002', fontsize=10)\naxs[0].text(0.9, 0.3, 'text-davinci-003', fontsize=10)\naxs[0].text(0.9, 0.2, 'gpt-4', fontsize=10)\n\n# Set the text for the second subplot\naxs[1].text(0.9, 0.9, 'lama-2-70-chat', fontsize=10)\naxs[1].text(0.9, 0.8, 'lama-2-70', fontsize=10)\naxs[1].text(0.9, 0.7, 'hf-falcon@002', fontsize=10)\naxs[1].text(0.9, 0.6, 'claude-2', fontsize=10)\naxs[1].text(0.9, 0.5, 'claude-1', fontsize=10)\naxs[1].text(0.9, 0.4, 'text-davinci-002', fontsize=10)\naxs[1].text(0.9, 0.3, 'text-davinci-003', fontsize=10)\naxs[1].text(0.9, 0.2, 'gpt-4', fontsize=10)\n\n# Set the color for the first subplot\naxs[0].plot([0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9], [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2], 'o', color='orange')\naxs[0].plot([0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9], [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2], 'o', color='blue')\naxs[0].plot([0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9], [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2], 'o', color='red')\naxs[0].plot([0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9], [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2], 'o', color='green')\naxs[0].plot([0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9], [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2], 'o', color='purple')\n\n# Set the color for the second subplot\naxs[1].plot([0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9], [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2], 'o', color='orange')\naxs[1].plot([0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9], [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2], 'o', color='blue')\naxs[1].plot([0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9], [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2], 'o', color='red')\naxs[1].plot([0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9], [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2], 'o', color='green')\naxs[1].plot([0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9], [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2], 'o', color='purple')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_23.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for each subplot\nfig, axs = plt.subplots(2, 2, figsize=(8.0, 8.0))\n\n# Model-Basedness subplot\naxs[0, 0].plot(np.random.rand(10), 'bo-')\naxs[0, 0].set_title('Model-Basedness')\naxs[0, 0].set_xlabel('Models')\naxs[0, 0].set_ylabel('Score')\naxs[0, 0].set_yticks(np.arange(0, 2.5, 0.25))\naxs[0, 0].set_xticks(np.arange(0, 10, 1))\naxs[0, 0].grid(True)\naxs[0, 0].text(0.05, 0.95, 'Model-Basedness', transform=axs[0, 0].transAxes, fontsize=14, verticalalignment='top', bbox=dict(boxstyle='round,pad=0.5', facecolor='wheat', alpha=0.5))\n\n# Meta-Cognition subplot\naxs[0, 1].plot(np.random.rand(10), 'o-')\naxs[0, 1].set_title('Meta-Cognition')\naxs[0, 1].set_xlabel('Models')\naxs[0, 1].set_ylabel('Score')\naxs[0, 1].set_yticks(np.arange(0, 2.5, 0.25))\naxs[0, 1].set_xticks(np.arange(0, 10, 1))\naxs[0, 1].grid(True)\naxs[0, 1].text(0.05, 0.95, 'Meta-Cognition', transform=axs[0, 1].transAxes, fontsize=14, verticalalignment='top', bbox=dict(boxstyle='round,pad=0.5', facecolor='yellow', alpha=0.5))\n\n# Exploration subplot\naxs[1, 0].plot(np.random.rand(10), 'go-')\naxs[1, 0].set_title('Exploration')\naxs[1, 0].set_xlabel('Models')\naxs[1, 0].set_ylabel('Score')\naxs[1, 0].set_yticks(np.arange(0, 2.5, 0.25))\naxs[1, 0].set_xticks(np.arange(0, 10, 1))\naxs[1, 0].grid(True)\naxs[1, 0].text(0.05, 0.95, 'Exploration', transform=axs[1, 0].transAxes, fontsize=14, verticalalignment='top', bbox=dict(boxstyle='round,pad=0.5', facecolor='green', alpha=0.5))\n\n# Risk Taking subplot\naxs[1, 1].plot(np.random.rand(10), 'ro-')\naxs[1, 1].set_title('Risk Taking')\naxs[1, 1].set_xlabel('Models')\naxs[1, 1].set_ylabel('Score')\naxs[1, 1].set_yticks(np.arange(0, 2.5, 0.25))\naxs[1, 1].set_xticks(np.arange(0, 10, 1))\naxs[1, 1].grid(True)\naxs[1, 1].text(0.05, 0.95, 'Risk Taking', transform=axs[1, 1].transAxes, fontsize=14, verticalalignment='top', bbox=dict(boxstyle='round,pad=0.5', facecolor='red', alpha=0.5))\n\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with three subplots\nfig, axs = plt.subplots(3, 3, figsize=(15.0, 5.0))\n\n# Scatter plot for the first subplot\naxs[0, 0].scatter(x, y, color='cyan')\naxs[0, 0].set_title('Scatter Plot - deepskyblue')\naxs[0, 0].set_xlabel('X Values')\naxs[0, 0].set_ylabel('Y Values')\n\n# Scatter plot for the second subplot\naxs[0, 1].scatter(x, y, color='magenta')\naxs[0, 1].set_title('Scatter Plot - magenta')\naxs[0, 1].set_xlabel('X Values')\naxs[0, 1].set_ylabel('Y Values')\n\n# Scatter plot for the third subplot\naxs[0, 2].scatter(x, y, color='limegreen')\naxs[0, 2].set_title('Scatter Plot - limegreen')\naxs[0, 2].set_xlabel('X Values')\naxs[0, 2].set_ylabel('Y Values')\n\n# Color scale for the first subplot\ncmap = plt.cm.get_cmap('coolwarm', 10)\nfor i in range(10):\n    axs[0, 0].plot([], [], marker='o', color=cmap(i), label=str(i))\naxs[0, 0].legend(title='Color scale for X')\n\n# Color scale for the second subplot\ncmap = plt.cm.get_cmap('coolwarm', 10)\nfor i in range(10):\n    axs[0, 1].plot([], [], marker='o', color=cmap(i), label=str(i))\naxs[0, 1].legend(title='Color scale for X')\n\n# Color scale for the third subplot\ncmap = plt.cm.get_cmap('coolwarm', 10)\nfor i in range(10):\n    axs[0, 2].plot([], [], marker='o', color=cmap(i), label=str(i))\naxs[0, 2].legend(title='Color scale for X')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_25.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(15.0, 5.0))\n\n# Set the x-axis labels\nax.set_xticks(np.arange(70, 89, 1))\nax.set_xticklabels(['70', '72', '74', '76', '78', '80', '82', '84', '86', '88'])\n\n# Set the y-axis labels\nax.set_yticks(np.arange(30, 51, 1))\nax.set_yticklabels(['30', '32', '34', '36', '38', '40', '42', '44', '46', '48', '50'])\n\n# Add a title\nax.set_title('ViTPose (sc) Performance')\n\n# Add a legend\nax.legend()\n\n# Add a scatter plot\nax.scatter([45, 45, 45, 45, 45], [45, 45, 45, 45, 45], color='orange')\n\n# Add a line plot\nax.plot([45, 45, 45, 45, 45], [45, 45, 45, 45, 45], color='green')\n\n# Add a bar chart\nax.bar([45, 45, 45, 45, 45], [45, 45, 45, 45, 45], color='blue')\n\n# Add a pie chart\nax.pie([45, 45, 45, 45, 45], colors=['red', 'green', 'blue', 'yellow', 'cyan'])\n\n# Add a histogram\nax.hist([45, 45, 45, 45, 45], bins=5, color='magenta')\n\n# Add a box plot\nax.boxplot([45, 45, 45, 45, 45], vert=False, patch_artist=True)\n\n# Add a violin plot\nax.violinplot([45, 45, 45, 45, 45], showmeans=True)\n\n# Add a scatter plot with a regression line\nax.scatter([45, 45, 45, 45, 45], [45, 45, 45, 45, 45], color='orange')\nax.plot([45, 45, 45, 45, 45], [45, 45, 45, 45, 45], color='green')\n\n# Add a scatter plot with a regression line and a confidence interval\nax.scatter([45, 45, 45, 45, 45], [45, 45, 45, 45, 45], color='orange')\nax.plot([45, 45, 45, 45, 45], [45, 45, 45, 45, 45], color='green')\nax.fill_between([45, 45, 45, 45, 45], [45, 45, 45, 45, 45], [45, 45, 45, 45, 45], alpha=0.2)\n\n# Add a scatter plot with a regression line and a confidence interval and a prediction interval\nax.scatter([45, 45, 45, 45, 45], [45, 45, 45, 45, 45], color='orange')\nax.plot([45, 45, 45, 45, 45], [45, 45, 45, 45, 45], color='green')\nax.fill_between([45, 45, 45, 45, 45], [45, 45, 45, 45, 45], [45, 45, 45, 45, 45], alpha=0.2)\nax.fill_between([45, 45, 45, 45, 45], [45, 45, 45, 45, 45], [45, 45, 45, 45, 45], alpha=0.2)\n\nplt.show()"}
{"file": "dataset/ori_500/scatter_3.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the x and y limits\nax.set_xlim(1.2, 6.0)\nax.set_ylim(10, 90)\n\n# Set the x and y labels\nax.set_xlabel('Diversity')\nax.set_ylabel('Accuracy (%)')\n\n# Set the title\nax.set_title('Token cost($)')\n\n# Set the tick labels\nax.set_xticks([1.2, 1.4, 1.6, 1.8, 2.0, 2.2, 2.4])\nax.set_yticks([10, 30, 50, 70, 90])\n\n# Set the tick labels\nax.set_xticklabels(['1.2', '1.4', '1.6', '1.8', '2.0', '2.2', '2.4'])\nax.set_yticklabels(['10', '30', '50', '70', '90'])\n\n# Set the tick label rotation\nax.set_xticklabels(ax.get_xticklabels(), rotation=45)\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='ultra-condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='ultra-condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='ultra-condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='ultra-condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='ultra-condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='ultra-condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='ultra-condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='ultra-condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='ultra-condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='ultra-condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='ultra-condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='ultra-condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='ultra-condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='ultra-condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='ultra-condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='ultra-condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='ultra-condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='ultra-condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='ultra-condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='ultra-condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='ultra-condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='ultra-condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='ultra-condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='ultra-condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_yticklabels(), color='black')\n\n# Set the tick label font weight\nax.set_xticklabels(ax.get_xticklabels(), fontweight='bold')\nax.set_yticklabels(ax.get_yticklabels(), fontweight='bold')\n\n# Set the tick label font style\nax.set_xticklabels(ax.get_xticklabels(), fontstyle='italic')\nax.set_yticklabels(ax.get_yticklabels(), fontstyle='italic')\n\n# Set the tick label font family\nax.set_xticklabels(ax.get_xticklabels(), fontfamily='sans-serif')\nax.set_yticklabels(ax.get_yticklabels(), fontfamily='sans-serif')\n\n# Set the tick label font variant\nax.set_xticklabels(ax.get_xticklabels(), fontvariant='small-caps')\nax.set_yticklabels(ax.get_yticklabels(), fontvariant='small-caps')\n\n# Set the tick label font stretch\nax.set_xticklabels(ax.get_xticklabels(), fontstretch='ultra-condensed')\nax.set_yticklabels(ax.get_yticklabels(), fontstretch='ultra-condensed')\n\n# Set the tick label font size\nax.set_xticklabels(ax.get_xticklabels(), fontsize=10)\nax.set_yticklabels(ax.get_yticklabels(), fontsize=10)\n\n# Set the tick label color\nax.set_xticklabels(ax.get_xticklabels(), color='black')\nax.set_yticklabels(ax.get_ytick"}
{"file": "dataset/ori_500/scatter_4.pdf", "response": "import numpy as np\nimport matplotlib.pyplot as plt\n\n# Generate random data\nx = np.random.rand(100)\ny = np.random.rand(100)\ncolors = np.random.rand(100)\n\n# Create a scatter plot\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\nscatter = ax.scatter(x, y, c=colors, cmap='viridis')\n\n# Add a color bar\ncbar = fig.colorbar(scatter)\ncbar.set_label('Color scale')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/scatter_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Scatter Plot of WRMSE vs BPP')\n\n# Set the labels for the x and y axes\nax.set_xlabel('Bit per pixel (BPP)')\nax.set_ylabel('WRRMSE')\n\n# Set the tick marks for the x and y axes\nax.set_xticks(np.arange(0.06, 0.21, 0.02))\nax.set_yticks(np.arange(200, 900, 200))\n\n# Set the color of the background\nax.set_facecolor('lightgrey')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the ticks\nax.tick_params(axis='both', which='major', labelsize=8)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Scatter Plot of WRMSE vs BPP', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes)\n\n# Set the color of the legend\nax.legend(loc='upper left', bbox_to_anchor=(1,1), fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the scatter points\nax.scatter(x, y, c='red')\n\n# Set the color of the line connecting the scatter points\nax.plot(x, y, 'o-')\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad=0, fancybox=True, shadow=True, ncol=1)\n\n# Set the color of the text in the legend\nax.legend(handlelength=0, handletextpad="}
{"file": "dataset/ori_500/scatter_6.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Define the number of points to plot\nnum_points = 100\n\n# Generate random data for each condition\nnp.random.seed(42)\nx_sunny = np.random.rand(num_points)\ny_sunny = np.random.rand(num_points)\nx_rainy = np.random.rand(num_points)\ny_rainy = np.random.rand(num_points)\nx_gst = np.random.rand(num_points)\ny_gst = np.random.rand(num_points)\n\n# Plot the data for each condition\nax.scatter(x_sunny, y_sunny, c='orange', label='Daytime Sunny')\nax.scatter(x_rainy, y_rainy, c='blue', label='Night Rainy')\nax.scatter(x_gst, y_gst, c='green', label='PGST')\n\n# Add a legend\nax.legend()\n\n# Set the title\nax.set_title('Random Data')\n\nplt.show()"}
{"file": "dataset/ori_500/scatter_7.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 3.0))\n\n# Set the x-axis label\nax.set_xlabel('Number of parameters (M)')\n\n# Set the y-axis label\nax.set_ylabel('NMAE (%)')\n\n# Set the title of the plot\nax.set_title('Number of params. vs. NMAE on QM9')\n\n# Define the data points\nx = [0.7, 1.0, 2.0, 3.0, 10.0, 20.0, 30.0]\ny = [0.7, 1.0, 2.0, 3.0, 10.0, 20.0, 30.0]\n\n# Plot the data points\nax.plot(x, y, 'ro')\n\n# Add labels to the data points\nax.text(0.7, 0.7, 'GPW-NO')\nax.text(1.0, 1.0, 'LNO')\nax.text(2.0, 2.0, 'InfGCN')\nax.text(3.0, 3.0, 'GNO')\nax.text(10.0, 10.0, 'DeepDFT2')\nax.text(20.0, 20.0, 'FNO')\n\n# Add a vertical dashed line at x=0.6\nax.axvline(x=0.6, color='k', linestyle='--')\n\n# Add a horizontal dashed line at y=20\nax.axhline(y=20, color='k', linestyle='--')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/scatter_8.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Legend')\n\n# Define the colors for each legend item\ncolors = ['blue', 'magenta', 'yellow', 'green', 'grey']\n\n# Loop through each color and create a scatter plot\nfor i, color in enumerate(colors):\n    # Generate random data for the scatter plot\n    x = np.random.rand(100)\n    y = np.random.rand(100)\n    ax.scatter(x, y, c=color)\n\n# Set the labels for the x and y axes\nax.set_xlabel('PC1')\nax.set_ylabel('PC2')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/scatter_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, axs = plt.subplots(2, 1, figsize=(7.0, 10.0))\n\n# DE subplot\naxs[0].set_title('DE')\naxs[0].set_ylabel('MSE')\naxs[0].set_xlabel('DE Similarity')\naxs[0].grid(True)\naxs[0].plot([0.6, 0.7, 0.8, 0.9], [0.11, 0.12, 0.13, 0.14], 'o', color='orange')\naxs[0].plot([0.6, 0.7, 0.8, 0.9], [0.09, 0.10, 0.11, 0.12], 'o', color='green')\naxs[0].plot([0.6, 0.7, 0.8, 0.9], [0.50, 0.55, 0.60, 0.65], 'o', color='blue')\n\n# PJM subplot\naxs[1].set_title('PJM')\naxs[1].set_ylabel('MSE')\naxs[1].set_xlabel('PJM Similarity')\naxs[1].grid(True)\naxs[1].plot([0.6, 0.7, 0.8, 0.9], [0.45, 0.50, 0.55, 0.60], 'o', color='green')\naxs[1].plot([0.6, 0.7, 0.8, 0.9], [0.40, 0.45, 0.50, 0.55], 'o', color='orange')\naxs[1].plot([0.6, 0.7, 0.8, 0.9], [0.45, 0.50, 0.55, 0.60], 'o', color='red')\n\n# Add legend\nfig.legend(['iTrm-All', 'iTrm-En', 'PatchTST', 'TiDE', 'TimeXer'], loc='lower center', bbox_to_anchor=(0.5, -0.05), ncol=5)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/tree_1.pdf", "response": "import matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\n\n# Set the background color of the figure\nfig.patch.set_facecolor('lightgreen')\n\n# Add a rectangle to the figure\nax.add_patch(plt.Rectangle((0, 0), 10, 5, facecolor='lightblue'))\n\n# Add text to the rectangle\nax.text(5, 2.5, 'mathworks.com 4.91%', ha='center', va='center')\n\n# Add another rectangle to the figure\nax.add_patch(plt.Rectangle((0, 5), 10, 5, facecolor='orange'))\n\n# Add text to the second rectangle\nax.text(5, 7.5, 'mathhelpboards.com 6.15%', ha='center', va='center')\n\n# Add another rectangle to the figure\nax.add_patch(plt.Rectangle((0, 10), 10, 5, facecolor='lightblue'))\n\n# Add text to the third rectangle\nax.text(5, 12.5, 'mathoverflow.net 10.91%', ha='center', va='center')\n\n# Add another rectangle to the figure\nax.add_patch(plt.Rectangle((0, 15), 10, 5, facecolor='orange'))\n\n# Add text to the fourth rectangle\nax.text(5, 17.5, 'proofwiki.org 8.54%', ha='center', va='center')\n\n# Add another rectangle to the figure\nax.add_patch(plt.Rectangle((0, 20), 10, 5, facecolor='lightblue'))\n\n# Add text to the fifth rectangle\nax.text(5, 22.5, 'mathhelpforum.com 14.21%', ha='center', va='center')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/tree_2.pdf", "response": "import matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Add a title to the plot\nax.set_title('Python Code')\n\n# Add a label to the x-axis\nax.set_xlabel('X Axis Label')\n\n# Add a label to the y-axis\nax.set_ylabel('Y Axis Label')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/tree_3.pdf", "response": "import matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\n\n# Set the background color of the figure\nfig.patch.set_facecolor('lightblue')\n\n# Add a rectangle to the figure\nax.add_patch(plt.Rectangle((0, 0), 1, 1, color='lightgreen'))\n\n# Add text to the rectangle\nax.text(0.5, 0.5, 'Adidas 13.42%', ha='center', va='center')\n\n# Add another rectangle to the figure\nax.add_patch(plt.Rectangle((1, 0), 1, 1, color='orange'))\n\n# Add text to the second rectangle\nax.text(1.5, 0.5, 'Under Armour 8.54%', ha='center', va='center')\n\n# Add another rectangle to the figure\nax.add_patch(plt.Rectangle((2, 0), 1, 1, color='red'))\n\n# Add text to the third rectangle\nax.text(2.5, 0.5, 'New Balance 6.26%', ha='center', va='center')\n\n# Add another rectangle to the figure\nax.add_patch(plt.Rectangle((0, 1), 1, 1, color='yellow'))\n\n# Add text to the fourth rectangle\nax.text(0.5, 1.5, 'Nike 30.6%', ha='center', va='center')\n\n# Add another rectangle to the figure\nax.add_patch(plt.Rectangle((1, 1), 1, 1, color='lightblue'))\n\n# Add text to the fifth rectangle\nax.text(1.5, 1.5, 'Reebok 10.91%', ha='center', va='center')\n\n# Add another rectangle to the figure\nax.add_patch(plt.Rectangle((2, 1), 1, 1, color='lightgreen'))\n\n# Add text to the sixth rectangle\nax.text(2.5, 1.5, 'Puma 14.21%', ha='center', va='center')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/tree_4.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(4.0, 6.0))\n\n# Set the background color of the figure\nfig.patch.set_facecolor('#FFD700')\n\n# Set the background color of the axis\nax.set_facecolor('#FFD700')\n\n# Set the x and y limits\nax.set_xlim(0, 10)\nax.set_ylim(0, 10)\n\n# Set the x and y ticks\nax.set_xticks(np.arange(0, 10, 1))\nax.set_yticks(np.arange(0, 10, 1))\n\n# Set the x and y labels\nax.set_xlabel('X-axis')\nax.set_ylabel('Y-axis')\n\n# Set the title\nax.set_title('My Plot')\n\nplt.show()"}
{"file": "dataset/ori_500/tree_5.pdf", "response": "```\nimport matplotlib.pyplot as plt\n\n# Define the data for each continent\ncontinents = ['European', 'Asian', 'South American', 'North American']\ndiscounts = [15, 25, 10, 20]\ncolors = ['yellow', 'pink', 'lightblue', 'lightgreen']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Plot the continents\nfor i, continent in enumerate(continents):\n    ax.text(0.5, 0.5 - i * 0.2, f'{continent} {discounts[i]}%', ha='center', va='center', fontsize=14, color='black')\n\n# Set the aspect ratio of the plot to be equal\nax.set_aspect('equal')\n\n# Remove the axis\nax.axis('off')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Set the x-axis labels\nax.set_xticks([1, 2, 3, 4, 5])\nax.set_xticklabels(['1', '2', '3', '4', '5'])\n\n# Set the y-axis label\nax.set_ylabel('Log P/Log CL')\n\n# Set the title\nax.set_title('Llama2 - Llama2 (In-Chat)')\n\n# Set the grid\nax.grid(True)\n\n# Set the boxplot data\nboxplot_data = [\n    [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, "}
{"file": "dataset/ori_500/violin_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Comparison of Scores with and without Memory')\n\n# Set the labels for the x-axis\nax.set_xlabel('Efficiency')\nax.set_xlabel('Comfort')\nax.set_xlabel('Safety')\n\n# Set the limits for the y-axis\nax.set_ylim(0, 1.0)\n\n# Set the grid lines\nax.grid(True)\n\n# Set the tick marks\nax.set_yticks(np.arange(0, 1.1, 0.2))\nax.set_xticks(np.arange(0, 3, 1))\n\n# Set the legend\nax.legend(['Without Memory', 'With Memory'], loc='upper right')\n\n# Set the color of the lines\nax.plot([0, 1, 2], [0.5, 0.7, 0.9], 'b-')\nax.plot([0, 1, 2], [0.4, 0.6, 0.8], 'r-')\n\n# Set the color of the markers\nax.plot([0, 1, 2], [0.5, 0.7, 0.9], 'bo')\nax.plot([0, 1, 2], [0.4, 0.6, 0.8], 'ro')\n\n# Set the color of the fill\nax.fill_between([0, 1, 2], [0.5, 0.7, 0.9], [0.4, 0.6, 0.8], color='b', alpha=0.5)\nax.fill_between([0, 1, 2], [0.5, 0.7, 0.9], [0.4, 0.6, 0.8], color='r', alpha=0.5)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_2.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the x-axis labels\nax.set_xticks([0, 1, 2])\nax.set_xticklabels(['Efficiency', 'Comfort', 'Safety'])\n\n# Set the y-axis label\nax.set_ylabel('Score')\n\n# Set the title\nax.set_title('Vehicle Rating')\n\n# Plot the data\nax.plot(np.random.rand(3), np.random.rand(3), 'ro')\nax.plot(np.random.rand(3), np.random.rand(3), 'bo')\n\n# Add a legend\nax.legend(['Without Memory', 'With Memory'], loc='upper left')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_3.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Plot the data\nax.plot([1, 2, 3, 4, 5], [0.0, 0.0, 0.0, 0.0, 0.0], 'k-')\nax.plot([1, 2, 3, 4, 5], [0.2, 0.2, 0.2, 0.2, 0.2], 'k-')\nax.plot([1, 2, 3, 4, 5], [0.4, 0.4, 0.4, 0.4, 0.4], 'k-')\nax.plot([1, 2, 3, 4, 5], [0.6, 0.6, 0.6, 0.6, 0.6], 'k-')\nax.plot([1, 2, 3, 4, 5], [0.8, 0.8, 0.8, 0.8, 0.8], 'k-')\nax.plot([1, 2, 3, 4, 5], [1.0, 1.0, 1.0, 1.0, 1.0], 'k-')\n\n# Set the labels\nax.set_xlabel('Length Distribution')\nax.set_ylabel('Score')\n\n# Add a legend\nax.legend(['GPT-4V(Vison)', 'GPT-4V(Vision)'], loc='upper left')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_4.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\n\n# Set the x-axis labels\nax.set_xticks([1, 2, 3])\nax.set_xticklabels(['jTrans', 'PalmTree', 'CLAP'])\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Set the y-axis limits\nax.set_ylim(0.2, 1.0)\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0.2, 1.0, 0.1))\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1.0'])\n\n# Set the x-axis limits\nax.set_xlim(0, 4)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 4, 1))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['jTrans', 'PalmTree', 'CLAP'])\n\n# Set the boxplot\nboxplot = ax.boxplot([np.random.normal(0.5, 0.1, 100), np.random.normal(0.7, 0.1, 100), np.random.normal(0.8, 0.1, 100)], patch_artist=True)\n\n# Set the boxplot colors\nboxplot['boxes'][0].set_facecolor('pink')\nboxplot['boxes'][1].set_facecolor('lightblue')\nboxplot['boxes'][2].set_facecolor('lightpurple')\n\n# Set the boxplot edge color\nboxplot['boxes'][0].set_edgecolor('black')\nboxplot['boxes'][1].set_edgecolor('black')\nboxplot['boxes'][2].set_edgecolor('black')\n\n# Set the boxplot fill color\nboxplot['boxes'][0].set_fill(True)\nboxplot['boxes'][1].set_fill(True)\nboxplot['boxes'][2].set_fill(True)\n\n# Set the boxplot whisker color\nboxplot['whiskers'][0].set_color('black')\nboxplot['whiskers'][1].set_color('black')\nboxplot['whiskers'][2].set_color('black')\nboxplot['whiskers'][3].set_color('black')\nboxplot['whiskers'][4].set_color('black')\nboxplot['whiskers'][5].set_color('black')\n\n# Set the boxplot cap color\nboxplot['caps'][0].set_color('black')\nboxplot['caps'][1].set_color('black')\nboxplot['caps'][2].set_color('black')\nboxplot['caps'][3].set_color('black')\n\n# Set the boxplot median color\nboxplot['medians'][0].set_color('black')\nboxplot['medians'][1].set_color('black')\nboxplot['medians'][2].set_color('black')\n\n# Set the boxplot fliers color\nboxplot['fliers'][0].set_color('black')\nboxplot['fliers'][1].set_color('black')\nboxplot['fliers'][2].set_color('black')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_5.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Define the data for the scatter plot\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\n\n# Plot the scatter plot\nax.scatter(x, y, color='blue')\n\n# Add a title and labels\nax.set_title('Scatter Plot')\nax.set_xlabel('X-axis')\nax.set_ylabel('Y-axis')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_6.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 10)\n\n# Set the y-axis limits\nax.set_ylim(0, 100)\n\n# Set the x-axis ticks\nax.set_xticks([0, 5, 10])\n\n# Set the y-axis ticks\nax.set_yticks([0, 20, 40, 60, 80, 100])\n\n# Set the x-axis labels\nax.set_xticklabels(['Vanilla', 'CoT'])\n\n# Set the y-axis labels\nax.set_yticklabels(['30', '50', '70', '90'])\n\n# Set the x-axis label\nax.set_xlabel('Model')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Set the title\nax.set_title('Comparison of Models')\n\n# Set the grid\nax.grid(True)\n\n# Set the boxplot\nboxplot = ax.boxplot([np.random.normal(50, 10, 100), np.random.normal(70, 10, 100)])\n\n# Set the median line\nax.plot([0, 1], [np.median(boxplot['medians'][0].get_data()[1]), np.median(boxplot['medians'][1].get_data()[1])], 'k-')\n\n# Set the mean line\nax.plot([0, 1], [np.mean(boxplot['means'][0].get_data()[1]), np.mean(boxplot['means'][1].get_data()[1])], 'k-')\n\n# Set the whiskers\nax.plot([0, 1], [np.min(boxplot['whiskers'][0].get_data()[1]), np.min(boxplot['whiskers'][1].get_data()[1])], 'k-')\nax.plot([0, 1], [np.max(boxplot['whiskers'][0].get_data()[1]), np.max(boxplot['whiskers'][1].get_data()[1])], 'k-')\n\n# Set the caps\nax.plot([0, 1], [np.min(boxplot['caps'][0].get_data()[1]), np.min(boxplot['caps'][1].get_data()[1])], 'k-')\nax.plot([0, 1], [np.max(boxplot['caps'][0].get_data()[1]), np.max(boxplot['caps'][1].get_data()[1])], 'k-')\n\n# Set the fliers\nax.plot([0, 1], [np.min(boxplot['fliers'][0].get_data()[1]), np.min(boxplot['fliers'][1].get_data()[1])], 'k-')\nax.plot([0, 1], [np.max(boxplot['fliers'][0].get_data()[1]), np.max(boxplot['fliers'][1].get_data()[1])], 'k-')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure with two subplots\nfig, axs = plt.subplots(2, 1, figsize=(8.0, 8.0))\n\n# Define the data for the first subplot\nx = np.array([0, 2, 4, 6, 8, 10])\ny = np.array([70, 65, 60, 55, 50, 45])\ncolors = np.array(['blue', 'orange'])\nlabels = ['Group $l_0$', 'AGIS']\n\n# Plot the first subplot\nfor i in range(len(x)):\n    axs[0].bar(x[i], y[i], color=colors[i], label=labels[i])\n\n# Add labels and title to the first subplot\naxs[0].set_xlabel('Number of Features')\naxs[0].set_ylabel('% Decrease in Test MSE vs. FLAM-GL')\naxs[0].set_title('% Decrease in Test MSE vs. FLAM-GL')\n\n# Define the data for the second subplot\nx = np.array([0, 2, 4, 6, 8, 10])\ny = np.array([70, 65, 60, 55, 50, 45])\ncolors = np.array(['blue', 'orange'])\nlabels = ['Group $l_0$', 'AGIS']\n\n# Plot the second subplot\nfor i in range(len(x)):\n    axs[1].bar(x[i], y[i], color=colors[i], label=labels[i])\n\n# Add labels and title to the second subplot\naxs[1].set_xlabel('Number of Features')\naxs[1].set_ylabel('% Decrease in Test MSE vs. EBM-RS')\naxs[1].set_title('% Decrease in Test MSE vs. EBM-RS')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_8.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Set the tick parameters for the x-axis\nax.tick_params(axis='x', colors='black')\n\n# Set the tick parameters for the y-axis\nax.tick_params(axis='y', colors='black')\n\n# Set the tick labels for the x-axis\nax.set_xticklabels(['Raw', '125Hz', '50Hz', '25Hz', '10Hz'])\n\n# Set the tick labels for the y-axis\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the title of the plot\nax.set_title('KCC')\n\n# Set the label for the x-axis\nax.set_xlabel('Decimated Sampling Rate')\n\n# Set the label for the y-axis\nax.set_ylabel('KCC')\n\n# Set the font size for the text\nax.text(0.0, 0.0, '0.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 0.2, '0.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 0.4, '0.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 0.6, '0.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 0.8, '0.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 1.0, '1.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 1.2, '1.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 1.4, '1.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 1.6, '1.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 1.8, '1.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 2.0, '2.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 2.2, '2.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 2.4, '2.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 2.6, '2.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 2.8, '2.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 3.0, '3.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 3.2, '3.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 3.4, '3.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 3.6, '3.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 3.8, '3.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 4.0, '4.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 4.2, '4.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 4.4, '4.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 4.6, '4.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 4.8, '4.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 5.0, '5.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 5.2, '5.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 5.4, '5.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 5.6, '5.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 5.8, '5.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 6.0, '6.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 6.2, '6.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 6.4, '6.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 6.6, '6.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 6.8, '6.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 7.0, '7.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 7.2, '7.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 7.4, '7.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 7.6, '7.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 7.8, '7.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 8.0, '8.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 8.2, '8.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 8.4, '8.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 8.6, '8.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 8.8, '8.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 9.0, '9.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 9.2, '9.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 9.4, '9.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 9.6, '9.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 9.8, '9.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 10.0, '10.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 10.2, '10.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 10.4, '10.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 10.6, '10.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 10.8, '10.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 11.0, '11.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 11.2, '11.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 11.4, '11.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 11.6, '11.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 11.8, '11.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 12.0, '12.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 12.2, '12.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 12.4, '12.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 12.6, '12.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 12.8, '12.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 13.0, '13.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 13.2, '13.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 13.4, '13.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 13.6, '13.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 13.8, '13.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 14.0, '14.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 14.2, '14.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 14.4, '14.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 14.6, '14.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 14.8, '14.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 15.0, '15.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 15.2, '15.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 15.4, '15.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 15.6, '15.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 15.8, '15.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 16.0, '16.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 16.2, '16.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 16.4, '16.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 16.6, '16.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 16.8, '16.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 17.0, '17.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 17.2, '17.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 17.4, '17.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 17.6, '17.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 17.8, '17.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 18.0, '18.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 18.2, '18.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 18.4, '18.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 18.6, '18.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 18.8, '18.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 19.0, '19.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 19.2, '19.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 19.4, '19.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 19.6, '19.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 19.8, '19.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 20.0, '20.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 20.2, '20.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 20.4, '20.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 20.6, '20.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 20.8, '20.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 21.0, '21.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 21.2, '21.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 21.4, '21.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 21.6, '21.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 21.8, '21.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 22.0, '22.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 22.2, '22.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 22.4, '22.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 22.6, '22.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 22.8, '22.8', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 23.0, '23.0', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 23.2, '23.2', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 23.4, '23.4', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 23.6, '23.6', fontsize=12)\n\n# Set the font size for the text\nax.text(0.0, 23.8, '23.8', fontsize=12)\n\n# Set the font size for the"}
{"file": "dataset/ori_500/violin_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create data for the first plot\nboys_data = np.random.normal(70, 10, 100)\ngirls_data = np.random.normal(60, 10, 100)\n\n# Create data for the second plot\nboys_data_2 = np.random.normal(75, 10, 100)\ngirls_data_2 = np.random.normal(65, 10, 100)\n\n# Create data for the third plot\nboys_data_3 = np.random.normal(80, 10, 100)\ngirls_data_3 = np.random.normal(70, 10, 100)\n\n# Create data for the fourth plot\nboys_data_4 = np.random.normal(85, 10, 100)\ngirls_data_4 = np.random.normal(75, 10, 100)\n\n# Create the first plot\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\nax.boxplot([boys_data, girls_data], vert=False)\nax.set_title('Distribution of Grades: Class 1')\nax.set_xlabel('Grades')\nax.set_yticklabels(['Boys', 'Girls'])\n\n# Create the second plot\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\nax.boxplot([boys_data_2, girls_data_2], vert=False)\nax.set_title('Distribution of Grades: Class 2')\nax.set_xlabel('Grades')\nax.set_yticklabels(['Boys', 'Girls'])\n\n# Create the third plot\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\nax.boxplot([boys_data_3, girls_data_3], vert=False)\nax.set_title('Distribution of Grades: Class 3')\nax.set_xlabel('Grades')\nax.set_yticklabels(['Boys', 'Girls'])\n\n# Create the fourth plot\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\nax.boxplot([boys_data_4, girls_data_4], vert=False)\nax.set_title('Distribution of Grades: Class 4')\nax.set_xlabel('Grades')\nax.set_yticklabels(['Boys', 'Girls'])\nplt.show()\n```"}
