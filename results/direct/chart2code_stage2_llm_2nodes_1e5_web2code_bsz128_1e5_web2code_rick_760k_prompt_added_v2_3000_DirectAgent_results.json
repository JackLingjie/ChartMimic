{"file": "dataset/ori_500/3d_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nfig = plt.figure(figsize=(7.0, 7.0))\nax = fig.add_subplot(111, projection='3d')\n\n# Data for plotting\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\nz = np.cos(x)\n\n# Plotting\nax.plot(x, y, z, 'b-')\nax.scatter(x, y, z, c='r', marker='o')\n\n# Labels\nax.set_xlabel('Time (s)')\nax.set_ylabel('Amplitude')\nax.set_zlabel('Phase')\n\n# Display\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_10.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a 3D scatter plot\nfig = plt.figure(figsize=(8.0, 6.0))\nax = fig.add_subplot(111, projection='3d')\n\n# Define the data points\nx = [0.5, 1.5, 2.5, 3.5]\ny = [0.5, 1.5, 2.5, 3.5]\nz = [0.5, 1.5, 2.5, 3.5]\ns = [100, 100, 100, 100]  # Size of the markers\n\n# Plot the data points\nax.scatter(x, y, z, s=s, c='r', marker='o')\n\n# Set the labels for the axes\nax.set_xlabel('Height')\nax.set_ylabel('Width')\nax.set_zlabel('Count')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/3d_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig = plt.figure(figsize=(8.0, 6.0))\nax = fig.add_subplot(111, projection='3d')\n\n# Define the data for the sphere\nu = np.linspace(0, 2 * np.pi, 100)\nv = np.linspace(0, np.pi, 100)\nx = 10 * np.outer(np.cos(u), np.sin(v))\ny = 10 * np.outer(np.sin(u), np.sin(v))\nz = 10 * np.outer(np.ones(np.size(u)), np.cos(v))\n\n# Plot the surface\nax.plot_surface(x, y, z, color='magenta')\n\n# Set the limits of the axes\nax.set_xlim(-15, 15)\nax.set_ylim(-15, 15)\nax.set_zlim(-15, 15)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nimport numpy as np\n\nfig = plt.figure(figsize=(8.0, 6.0))\nax = fig.add_subplot(111, projection='3d')\n\n# Data for plotting\nx = np.linspace(-4, 4, 100)\ny = np.linspace(-2, 2, 100)\nx, y = np.meshgrid(x, y)\nz = x**2 + y**2\n\n# Plot the surface\nsurf = ax.plot_surface(x, y, z, cmap='viridis')\n\n# Add some text for labels, title and custom x-axis tick labels, etc.\nax.set_xlabel('Temperature (\u00b0C)')\nax.set_ylabel('Pressure (kPa)')\nax.set_zlabel('Volume (L)')\n\n# Add points\npoints = [(0, 0, 0), (1, 1, 1), (-1, -1, -1)]\nfor point in points:\n    ax.scatter(*point, color='red')\n\n# Add line\nline = [(0, 0, 0), (1, 1, 1)]\nfor i in range(len(line)-1):\n    ax.plot([line[i][0], line[i+1][0]], [line[i][1], line[i+1][1]], [line[i][2], line[i+1][2]], color='blue')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nyears = [2010, 2012, 2014, 2016, 2018]\nprivate_schools = [0.3, 0.5, 0.7, 0.9, 0.8]\npublic_schools = [0.2, 0.4, 0.6, 0.8, 0.9]\n\n# Create a 3D plot\nfig = plt.figure(figsize=(8.0, 6.0))\nax = fig.add_subplot(111, projection='3d')\n\n# Plot the data\nfor i in range(len(years)):\n    ax.bar([years[i]], [private_schools[i]], zs=0, zdir='y', color='orange', alpha=0.5)\n    ax.bar([years[i]], [public_schools[i]], zs=1, zdir='y', color='blue', alpha=0.5)\n\n# Set labels and title\nax.set_xlabel('Year')\nax.set_ylabel('Type')\nax.set_zlabel('Student to Teacher Ratio')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the title of the plot\nax.set_title('Vaccination Incidence Rate by Age and Vaccination Number')\n\n# Set the x-axis label\nax.set_xlabel('Vaccination Number')\n\n# Set the y-axis label\nax.set_ylabel('Incidence Rate')\n\n# Set the z-axis label\nax.set_zlabel('Age')\n\n# Create a 3D scatter plot\nscatter = ax.scatter([1, 2, 3], [0.1, 0.2, 0.3], [10, 20, 30], c='r', marker='o')\n\n# Create a 3D line plot\nline = ax.plot([1, 2, 3], [0.1, 0.2, 0.3], [10, 20, 30], c='b', marker='o')\n\n# Create a 3D bar plot\nbar = ax.bar([1, 2, 3], [0.1, 0.2, 0.3], [10, 20, 30], color='g')\n\n# Create a 3D surface plot\nsurface = ax.plot_surface([1, 2, 3], [0.1, 0.2, 0.3], [10, 20, 30], cmap='viridis')\n\n# Create a 3D contour plot\ncontour = ax.contourf([1, 2, 3], [0.1, 0.2, 0.3], [10, 20, 30], cmap='plasma')\n\n# Create a 3D histogram\nhist = ax.hist([1, 2, 3], bins=[0, 1, 2, 3], weights=[0.1, 0.2, 0.3], color='y')\n\n# Create a 3D pie chart\npie = ax.pie([0.1, 0.2, 0.3], labels=['A', 'B', 'C'], colors=['r', 'g', 'b'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the first subplot\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\nax.set_title('Global AI Investment')\nax.set_xlabel('Year')\nax.set_ylabel('Investment (Billion USD)')\nx = np.arange(2010, 2020)\ny = np.random.randint(1, 10, size=10)\nax.plot(x, y, 'ro-')\n\n# Create a figure and axis for the second subplot\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\nax.set_title('AI Adoption Rate')\nax.set_xlabel('Time Since Introduction (Years)')\nax.set_ylabel('Adoption Rate (%)')\nx = np.arange(0, 10, 1)\ny = np.random.randint(1, 10, size=10)\nax.plot(x, y, 'bo-')\n\n# Display the plots\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_2.pdf", "response": "```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\n# Create a figure and a 3D subplot\nfig = plt.figure(figsize=(10.0, 7.0))\nax1 = fig.add_subplot(121, projection='3d')\nax2 = fig.add_subplot(122, projection='3d')\n\n# Define the grid of points\nx = np.linspace(-1, 1, 50)\ny = np.linspace(-1, 1, 50)\nx, y = np.meshgrid(x, y)\n\n# Define the function f(x,y)\nz = np.sin(np.sqrt(x**2 + y**2))\n\n# Plot the function f(x,y)\nsurf1 = ax1.plot_surface(x, y, z, cmap='viridis', linewidth=0, antialiased=False)\nfig.colorbar(surf1, shrink=0.5, aspect=5)\n\n# Define the solution g(x,y)\ng = np.sin(np.sqrt(x**2 + y**2)) * np.exp(-x**2 - y**2)\n\n# Plot the solution g(x,y)\nsurf2 = ax2.plot_surface(x, y, g, cmap='plasma', linewidth=0, antialiased=False)\nfig.colorbar(surf2, shrink=0.5, aspect=5)\n\n# Set the labels for the axes\nax1.set_xlabel('X Label')\nax1.set_ylabel('Y Label')\nax1.set_zlabel('Z Label')\nax2.set_xlabel('X Label')\nax2.set_ylabel('Y Label')\nax2.set_zlabel('Z Label')\n\n# Set the title of the plots\nax1.set_title('f(x)')\nax2.set_title('solution')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the plot\nax.set_title('CIFAR10 Spiking ResNet18 T=6')\n\n# Set the x-axis label\nax.set_xlabel('tau')\n\n# Set the y-axis label\nax.set_ylabel('accuracy (%)')\n\n# Define the data for the plot\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\n\n# Plot the data\nax.plot(x, y)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nimport numpy as np\n\nfig = plt.figure(figsize=(15.0, 10.0))\nax = fig.add_subplot(111, projection='3d')\n\n# Define the data for the plots\nx = np.linspace(-100, 100, 100)\ny = np.linspace(-100, 100, 100)\nx, y = np.meshgrid(x, y)\nz1 = np.sin(np.sqrt(x**2 + y**2))\nz2 = np.cos(np.sqrt(x**2 + y**2))\nz3 = np.tan(np.sqrt(x**2 + y**2))\n\n# Plot the data\nax.plot_surface(x, y, z1, cmap='coolwarm')\nax.plot_surface(x, y, z2, cmap='viridis')\nax.plot_surface(x, y, z3, cmap='plasma')\n\n# Set the labels\nax.set_xlabel('m')\nax.set_ylabel('n')\nax.set_zlabel('Freedom')\n\n# Add a color bar which maps values to colors\nfig.colorbar(ax.collections[0], ax=ax)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 7.0))\n\n# Set the limits of the plot\nax.set_xlim(0, 1)\nax.set_ylim(0, 1)\n\n# Draw a rectangle\nrectangle = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='blue')\nax.add_patch(rectangle)\n\n# Draw a circle\ncircle = plt.Circle((0.5, 0.5), 0.2, color='red')\nax.add_artist(circle)\n\n# Draw a line\nline, = ax.plot([0.1, 0.9], [0.1, 0.9], 'g-')\n\n# Draw a scatter plot\nscatter = ax.scatter([0.3, 0.7], [0.3, 0.7], color='green')\n\n# Add a legend\nax.legend(['Rectangle', 'Circle', 'Line', 'Scatter'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_6.pdf", "response": "```python\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\n\n# Create a figure and a 3D subplot\nfig = plt.figure(figsize=(8.0, 8.0))\nax = fig.add_subplot(111, projection='3d')\n\n# Define the data for the plot\nx = np.linspace(-4, 4, 100)\ny = np.linspace(-2, 2, 100)\nx, y = np.meshgrid(x, y)\nz = np.sin(np.sqrt(x**2 + y**2))\n\n# Plot the surface\nsurf = ax.plot_surface(x, y, z, cmap='coolwarm', linewidth=0, antialiased=False)\n\n# Add a color bar which maps values to colors\nfig.colorbar(surf, shrink=0.5, aspect=5)\n\n# Set labels\nax.set_xlabel('Bus')\nax.set_ylabel('Time')\nax.set_zlabel('Price')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Create a grid of subplots\ngs = fig.add_gridspec(3, 3)\n\n# Add a subplot for the main image\nmain_ax = fig.add_subplot(gs[0, :])\n\n# Add a subplot for the left column\nleft_ax = fig.add_subplot(gs[1:, 0])\n\n# Add a subplot for the right column\nright_ax = fig.add_subplot(gs[1:, 2])\n\n# Add a subplot for the bottom row\nbottom_ax = fig.add_subplot(gs[2, 1])\n\n# Set the title of the main image\nmain_ax.set_title('Main Image')\n\n# Set the title of the left column\nleft_ax.set_title('Left Column')\n\n# Set the title of the right column\nright_ax.set_title('Right Column')\n\n# Set the title of the bottom row\nbottom_ax.set_title('Bottom Row')\n\n# Set the x and y limits of the main image\nmain_ax.set_xlim([0, 10])\nmain_ax.set_ylim([0, 10])\n\n# Set the x and y limits of the left column\nleft_ax.set_xlim([0, 10])\nleft_ax.set_ylim([0, 10])\n\n# Set the x and y limits of the right column\nright_ax.set_xlim([0, 10])\nright_ax.set_ylim([0, 10])\n\n# Set the x and y limits of the bottom row\nbottom_ax.set_xlim([0, 10])\nbottom_ax.set_ylim([0, 10])\n\n# Set the aspect ratio of the main image\nmain_ax.set_aspect('equal')\n\n# Set the aspect ratio of the left column\nleft_ax.set_aspect('equal')\n\n# Set the aspect ratio of the right column\nright_ax.set_aspect('equal')\n\n# Set the aspect ratio of the bottom row\nbottom_ax.set_aspect('equal')\n\n# Set the color of the main image\nmain_ax.set_facecolor('orange')\n\n# Set the color of the left column\nleft_ax.set_facecolor('green')\n\n# Set the color of the right column\nright_ax.set_facecolor('red')\n\n# Set the color of the bottom row\nbottom_ax.set_facecolor('blue')\n\n# Set the color of the grid lines\nmain_ax.grid(True)\nleft_ax.grid(True)\nright_ax.grid(True)\nbottom_ax.grid(True)\n\n# Set the color of the tick labels\nmain_ax.tick_params(axis='both', colors='black')\nleft_ax.tick_params(axis='both', colors='black')\nright_ax.tick_params(axis='both', colors='black')\nbottom_ax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nmain_ax.tick_params(axis='both', colors='black')\nleft_ax.tick_params(axis='both', colors='black')\nright_ax.tick_params(axis='both', colors='black')\nbottom_ax.tick_params(axis='both', colors='black')\n\n# Set the color of the text\nmain_ax.text(5, 5, 'Main Image', ha='center', va='center', fontsize=14, color='white')\nleft_ax.text(5, 5, 'Left Column', ha='center', va='center', fontsize=14, color='white')\nright_ax.text(5, 5, 'Right Column', ha='center', va='center', fontsize=14, color='white')\nbottom_ax.text(5, 5, 'Bottom Row', ha='center', va='center', fontsize=14, color='white')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/3d_8.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the limits of the x and y axes\nax.set_xlim(-10, 100)\nax.set_ylim(-50, 50)\n\n# Set the labels for the x and y axes\nax.set_xlabel('Income')\nax.set_ylabel('Debt')\n\n# Create a scatter plot with random data points\nx = np.random.rand(20) * 100 - 50\ny = np.random.rand(20) * 100 - 50\nax.scatter(x, y, c='red', marker='o')\n\n# Create a line plot with random data points\nx = np.linspace(-10, 100, 100)\ny = np.sin(x / 10) * 10\nax.plot(x, y, c='blue', linestyle='--')\n\n# Create a bar chart with random data points\nx = np.arange(10)\ny = np.random.rand(10) * 100 - 50\nax.bar(x, y, color='orange')\n\n# Create a pie chart with random data points\nlabels = ['Debt', 'Income']\nsizes = [np.random.rand() * 100, np.random.rand() * 100]\nax.pie(sizes, labels=labels, colors=['yellow', 'green'], autopct='%1.1f%%')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/3d_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the x and y limits\nax.set_xlim(10, 90)\nax.set_ylim(-30, 50)\n\n# Set the x and y labels\nax.set_xlabel('Time (s)')\nax.set_ylabel('Depth (m)')\n\n# Set the x and y ticks\nax.set_xticks(np.arange(10, 100, 10))\nax.set_yticks(np.arange(-30, 60, 10))\n\n# Set the x and y grid lines\nax.grid(True)\n\n# Plot the data\nax.plot([10, 20, 30, 40, 50], [10, 20, 30, 40, 50], 'r-')\nax.plot([10, 20, 30, 40, 50], [10, 20, 30, 40, 50], 'b-')\nax.plot([10, 20, 30, 40, 50], [10, 20, 30, 40, 50], 'g-')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the x-axis limits\nax.set_xlim(-20, 20)\n\n# Set the y-axis limits\nax.set_ylim(0, 12)\n\n# Set the x-axis label\nax.set_xlabel('LR Test')\n\n# Set the y-axis label\nax.set_ylabel('Density')\n\n# Set the title of the plot\nax.set_title('Density vs LR Test')\n\n# Create a scatter plot\nx = np.linspace(-20, 20, 100)\ny = np.sin(x)\nax.scatter(x, y, color='blue')\n\n# Create a line plot\nx = np.linspace(-20, 20, 100)\ny = np.cos(x)\nax.plot(x, y, color='red')\n\n# Create a bar chart\nx = np.linspace(-20, 20, 100)\ny = np.tan(x)\nax.bar(x, y, color='green')\n\n# Create a histogram\nx = np.random.normal(0, 1, 1000)\nax.hist(x, bins=30, color='orange')\n\n# Create a pie chart\nx = [1, 2, 3, 4, 5]\ny = [10, 20, 30, 40, 50]\nax.pie(y, labels=x, colors=['blue', 'red', 'green', 'yellow', 'purple'])\n\n# Create a box plot\nx = np.random.normal(0, 1, 1000)\nax.boxplot(x, vert=False)\n\n# Create a violin plot\nx = np.random.normal(0, 1, 1000)\nax.violinplot(x)\n\n# Create a heatmap\nx = np.random.normal(0, 1, (10, 10))\nax.imshow(x, cmap='hot', interpolation='nearest')\n\n# Create a contour plot\nx = np.linspace(-20, 20, 100)\ny = np.linspace(-20, 20, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(X) + np.cos(Y)\nCS = ax.contourf(X, Y, Z, locator=plt.LogLocator(), cmap='coolwarm')\n\n# Create a stream plot\nx = np.linspace(-20, 20, 100)\ny = np.linspace(-20, 20, 100)\nX, Y = np.meshgrid(x, y)\nU = np.sin(X) + np.cos(Y)\nV = np.cos(X) - np.sin(Y)\nax.streamplot(X, Y, U, V)\n\n# Create a polar plot\ntheta = np.linspace(0, 2*np.pi, 100)\nr = np.sin(theta)\nax.polar(theta, r, color='blue')\n\n# Create a 3D plot\nfrom mpl_toolkits.mplot3d import Axes3D\nfig = plt.figure()\nax = fig.add_subplot(111, projection='3d')\nx = np.linspace(-20, 20, 100)\ny = np.linspace(-20, 20, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(X) + np.cos(Y)\nax.plot_surface(X, Y, Z, cmap='coolwarm')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Average Tracked ORB Feature Number')\n\n# Set the x-axis label\nax.set_xlabel('Average Tracked ORB Feature Number')\n\n# Set the y-axis label\nax.set_ylabel('Log (ATE RMSE)')\n\n# Create a scatter plot for each severity level\nseverity_levels = ['Low', 'Middle', 'High']\ncolors = ['blue', 'orange', 'green']\nfor i, severity in enumerate(severity_levels):\n    ax.scatter(np.random.randint(150, 400, 20), np.random.randint(-6, -2, 20), color=colors[i], label=severity)\n\n# Draw a line between the points\nx = np.linspace(150, 400, 100)\ny = -0.47 * x + 180\nax.plot(x, y, color='black')\n\n# Add a legend\nax.legend()\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 5.0))\n\n# Define the data\nx = np.linspace(-3, 0, 100)\ny = np.log(x**2 + 1)\n\n# Plot the data\nax.plot(x, y, 'b-')\n\n# Add a rectangle for the background\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgray', alpha=0.5)\nax.add_patch(rect)\n\n# Add a text annotation\nax.text(0.5, 0.5, 'Correlation: -0.47', ha='center', va='center', transform=ax.transAxes)\n\n# Set the limits of the plot\nax.set_xlim(-3, 0)\nax.set_ylim(-3, 0)\n\n# Set the labels of the axes\nax.set_xlabel('Log (Depth L1)')\nax.set_ylabel('Log (ATE RMSE)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Set the title of the plot\nax.set_title('T-test p-value = 0.0000', fontsize=14, fontweight='bold')\n\n# Set the x-axis label\nax.set_xlabel('Average Top-5 Purity of 1D Image', fontsize=12)\n\n# Set the y-axis label\nax.set_ylabel('Density', fontsize=12)\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 5)\n\n# Set the x-ticks\nax.set_xticks([0.0, 0.2, 0.4, 0.6, 0.8, 1.0])\n\n# Set the y-ticks\nax.set_yticks([0, 1, 2, 3, 4, 5])\n\n# Set the x-tick labels\nax.set_xticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the y-tick labels\nax.set_yticklabels(['0', '1', '2', '3', '4', '5'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot area\nax.set_facecolor('lightgreen')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red') \nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='red')\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('red')\nax.yaxis.label.set_color('red')\n\n# Set the color of the plot title\nax.title.set_color('red')\n\n# Set the color of the plot legend\nax.legend().get_texts()[0].set_color('red')\n\n# Set the color of the plot annotations\nax.annotate('Benign', xy=(0.2, 4), xytext=(0.4, 4),\n            arrowprops=dict(facecolor='black', shrink=0.05))\nax.annotate('BadNets', xy=(0.4, 3), xytext=(0.6, 3),\n            arrowprops=dict(facecolor='black', shrink=0.05))\nax.annotate('Benign KDE', xy=(0.6, 2), xytext=(0.8, 2),\n            arrowprops=dict(facecolor='black', shrink=0.05))\nax.annotate('BadNets KDE', xy=(0.8, 1), xytext=(1.0, 1),\n            arrowprops=dict(facecolor='black', shrink=0.05))\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Set the title of the graph\nax.set_title('Comparison of APO & APO-APEs (GPT-3 5-Turbo)')\n\n# Set the x-axis label\nax.set_xlabel('Tasks')\n\n# Set the y-axis label\nax.set_ylabel('Scores')\n\n# Define the data for the graph\nx = ['snarks', 'navigate', 'question_selection', 'object_counting']\ny = [np.random.rand(10), np.random.rand(10), np.random.rand(10), np.random.rand(10)]\n\n# Plot the data\nfor i in range(len(x)):\n    ax.plot(y[i], label=x[i])\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the graph\nax.set_title('summarization_xsum:temperature=0.3,device=cuda')\n\n# Create a rectangle for the background\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightpink')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightblue')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcyan')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightskyblue')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightsteelblue')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the count\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightseagreen')\nax.add_patch(rect)\n\n# Create a rectangle for the temperature\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the device\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the time\nrect = plt.Rectangle((0, 0), 1, 1, fc='lightcoral')\nax.add_patch(rect)\n\n#"}
{"file": "dataset/ori_500/CB_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Define the data for the pie chart\nlabels = ['Same', 'Different', 'Incomparable']\nsizes = [32, 4, 99]\ncolors = ['blue', 'orange', 'green']\n\n# Plot the pie chart\nax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%')\n\n# Set the title of the pie chart\nax.set_title('Pie Chart of Sentiment Analysis')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7, 5))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Create a scatter plot for the first dataset\nx1 = np.random.rand(10)\ny1 = np.random.rand(10)\nax.scatter(x1, y1, color='green')\n\n# Create a scatter plot for the second dataset\nx2 = np.random.rand(10)\ny2 = np.random.rand(10)\nax.scatter(x2, y2, color='red')\n\n# Add a title to the plot\nax.set_title('Algorithm Performance')\n\n# Add labels to the axes\nax.set_xlabel('Time (Seconds)')\nax.set_ylabel('Accuracy (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the first graph\nx = [2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015]\ny = [63.64, 80.08, 84.27, 88.27, 90.11, 92.00, 93.89, 95.00, 96.00, 97.00, 98.00]\n\n# Data for the second graph\nx2 = [2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015]\ny2 = [75.00, 87.20, 89.12, 90.12, 91.20, 92.00, 93.89, 94.00, 95.00, 96.00, 97.00]\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 2, figsize=(10.0, 4.0))\n\n# Plot the data on the first subplot\naxs[0].plot(x, y, 'b-')\naxs[0].set_title('Average Recall Scores by Method')\naxs[0].set_xlabel('Year')\naxs[0].set_ylabel('Scores')\n\n# Plot the data on the second subplot\naxs[1].plot(x2, y2, 'r-')\naxs[1].set_title('Average F1 Scores by Method')\naxs[1].set_xlabel('Year')\naxs[1].set_ylabel('Scores')\n\n# Add rectangles to represent the bars\nfor i in range(len(x)):\n    axs[0].add_patch(plt.Rectangle((x[i], 0), 1, y[i], color='lightblue'))\n    axs[1].add_patch(plt.Rectangle((x2[i], 0), 1, y2[i], color='lightblue'))\n\n# Add text labels to the rectangles\nfor i in range(len(x)):\n    axs[0].text(x[i], y[i], 'CodeBERT', ha='center', va='bottom')\n    axs[1].text(x2[i], y2[i], 'CodeBERT', ha='center', va='bottom')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_18.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Define the data\nx = np.array([4, 8, 12, 16, 20, 24, 28, 32])\ny = np.array([90, 92, 94, 95, 96, 97, 98, 99])\n\n# Plot the data\nax.plot(x, y, 'b-')\n\n# Add a rectangle for the legend\nrect = plt.Rectangle((0, 0), 1, 1, fc='w', ec='k')\nax.add_patch(rect)\n\n# Add text for the legend\nax.text(0.05, 0.95, 'Trained w Few-Shot Ex', transform=ax.transAxes, fontsize=12,\n        verticalalignment='top', bbox=dict(boxstyle='round,pad=0.5', facecolor='blue', alpha=0.5))\nax.text(0.05, 0.90, 'Def Deduce+Ex Gen', transform=ax.transAxes, fontsize=12,\n        verticalalignment='top', bbox=dict(boxstyle='round,pad=0.5', facecolor='red', alpha=0.5))\n\n# Set the title and labels\nax.set_title('Micro F1 Score')\nax.set_xlabel('Few-Shot K')\nax.set_ylabel('Micro F1')\n\n# Set the x-axis limits\nax.set_xlim(4, 32)\n\n# Set the y-axis limits\nax.set_ylim(80, 100)\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/CB_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(7.0, 7.0))\n\n# Set the title of the plot\nax.set_title('Car Efficiency vs Vehicle Parameter Size')\n\n# Set the x-axis label\nax.set_xlabel('Vehicle Parameter Size (units)')\n\n# Set the y-axis label\nax.set_ylabel('Efficiency (%)')\n\n# Set the x-axis limits\nax.set_xlim(0, 50)\n\n# Set the y-axis limits\nax.set_ylim(50, 85)\n\n# Set the x-axis ticks\nax.set_xticks([0, 10, 20, 30, 40, 50])\n\n# Set the y-axis ticks\nax.set_yticks([50, 60, 70, 80])\n\n# Plot the data\nax.plot([0, 10, 20, 30, 40, 50], [80, 75, 70, 65, 60, 55], 'r-')\nax.plot([0, 10, 20, 30, 40, 50], [85, 80, 75, 70, 65, 60], 'b-')\nax.plot([0, 10, 20, 30, 40, 50], [90, 85, 80, 75, 70, 65], 'g-')\n\n# Add a legend\nax.legend(['Cars', 'Trucks'])\n\n# Add a scatter plot for each car\nax.scatter([0, 10, 20, 30, 40, 50], [80, 75, 70, 65, 60, 55], color='red')\nax.scatter([0, 10, 20, 30, 40, 50], [85, 80, 75, 70, 65, 60], color='blue')\nax.scatter([0, 10, 20, 30, 40, 50], [90, 85, 80, 75, 70, 65], color='green')\n\n# Add a text annotation for each car\nax.annotate('Car A', (0, 80), color='red')\nax.annotate('Car B', (10, 75), color='red')\nax.annotate('Car C', (20, 70), color='red')\nax.annotate('Car D', (30, 65), color='red')\nax.annotate('Car E', (40, 60), color='red')\nax.annotate('Car F', (50, 55), color='red')\n\n# Add a text annotation for each truck\nax.annotate('Truck A', (0, 85), color='blue')\nax.annotate('Truck B', (10, 80), color='blue')\nax.annotate('Truck C', (20, 75), color='blue')\nax.annotate('Truck D', (30, 70), color='blue')\nax.annotate('Truck E', (40, 65), color='blue')\nax.annotate('Truck F', (50, 60), color='blue')\n\n# Add a text annotation for each car model\nax.annotate('80 Truck A', (0, 85), color='blue')\nax.annotate('85 Car E', (0, 90), color='green')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nmodels = ['GPT-2', 'Llama 2 7B', 'Llama 2 70B', 'Mixtral 8x7B', 'GPT-3.5', 'GPT-4']\nsuccess_rates = [10, 6, 16, 12, 20, 12]\ntrends = ['Simple Trend', 'Simple', 'Complex', 'Code']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Plot the success rates\nax.plot(models, success_rates, marker='o', linestyle='-', color='blue')\n\n# Add trend labels\nfor i, model in enumerate(models):\n    ax.text(i, success_rates[i], trends[i], ha='center', va='bottom')\n\n# Set the title and labels\nax.set_title('Encoding/Decoding Schelling Points by Model')\nax.set_xlabel('Model')\nax.set_ylabel('Success Rate (%)')\n\n# Set the y-axis limits\nax.set_ylim(0, 60)\n\n# Set the x-axis limits\nax.set_xlim(-1, len(models))\n\n# Set the x-axis tick labels\nax.set_xticks(range(len(models)))\nax.set_xticklabels(models)\n\n# Set the y-axis tick labels\nax.set_yticks(range(0, 61, 10))\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i in range(0, 61, 10)])\n\n# Set the y-axis tick labels\nax.set_yticklabels([str(i) + '%' for i"}
{"file": "dataset/ori_500/CB_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Calibration Curve')\n\n# Set the x-axis label\nax.set_xlabel('Reduced Probability')\n\n# Set the y-axis label\nax.set_ylabel('Fraction of Positives')\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 1)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 1.1, 0.25))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 1.1, 0.25))\n\n# Draw a line graph\nx = np.linspace(0, 1, 100)\ny = np.sin(x * np.pi / 2)\nax.plot(x, y, 'k-')\n\n# Draw a scatter plot\nx = np.random.rand(100)\ny = np.random.rand(100)\nax.scatter(x, y, c='orange', s=50)\n\n# Draw a rectangle\nrect = plt.Rectangle((0.25, 0.75), 0.5, 0.25, color='pink')\nax.add_patch(rect)\n\n# Draw a circle\ncircle = plt.Circle((0.5, 0.5), 0.1, color='pink')\nax.add_artist(circle)\n\n# Draw a polygon\npolygon = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25]], color='pink')\nax.add_patch(polygon)\n\n# Draw a star\nstar = plt.Polygon([[0.5, 0.25], [0.4, 0.35], [0.5, 0.5], [0.6, 0.35], [0.5, 0.25]], color='pink')\nax.add_patch(star)\n\n# Draw a triangle\ntriangle = plt.Polygon([[0.25, 0.75], [0.5, 0.5], [0.75, 0.75]], color='pink')\nax.add_patch(triangle)\n\n# Draw a square\nsquare = plt.Rectangle((0.25, 0.5), 0.25, 0.25, color='pink')\nax.add_patch(square)\n\n# Draw a pentagon\npentagon = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75]], color='pink')\nax.add_patch(pentagon)\n\n# Draw a hexagon\nhexagon = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.25, 0.25]], color='pink')\nax.add_patch(hexagon)\n\n# Draw a heptagon\nheptagon = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.25, 0.25], [0.5, 0.5]], color='pink')\nax.add_patch(heptagon)\n\n# Draw an octagon\noctagon = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.25, 0.25], [0.5, 0.5], [0.75, 0.5]], color='pink')\nax.add_patch(octagon)\n\n# Draw a nonagon\nnonagon = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.25, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75]], color='pink')\nax.add_patch(nonagon)\n\n# Draw a decagon\ndecagon = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.25, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25]], color='pink')\nax.add_patch(decagon)\n\n# Draw a dodecagon\ndodecagon = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.25, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25], [0.5, 0.5], [0.75, 0.5]], color='pink')\nax.add_patch(dodecagon)\n\n# Draw a trapezoid\ntrapezoid = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75]], color='pink')\nax.add_patch(trapezoid)\n\n# Draw a parallelogram\nparallelogram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75]], color='pink')\nax.add_patch(parallelogram)\n\n# Draw a rhombus\nrhombus = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75]], color='pink')\nax.add_patch(rhombus)\n\n# Draw a kite\nkite = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75]], color='pink')\nax.add_patch(kite)\n\n# Draw a pentagram\npentagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.25, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75]], color='pink')\nax.add_patch(pentagram)\n\n# Draw a hexagram\nhexagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.25, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25], [0.5, 0.5], [0.75, 0.5]], color='pink')\nax.add_patch(hexagram)\n\n# Draw a heptagram\nheptagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.25, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75]], color='pink')\nax.add_patch(heptagram)\n\n# Draw an octagram\noctagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.25, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25], [0.5, 0.5], [0.75, 0.5]], color='pink')\nax.add_patch(octagram)\n\n# Draw a nonagram\nnonagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.25, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75]], color='pink')\nax.add_patch(nonagram)\n\n# Draw a decagram\ndecagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.25, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25], [0.5, 0.5], [0.75, 0.5]], color='pink')\nax.add_patch(decagram)\n\n# Draw a dodecagram\ndodecagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.25, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25], [0.5, 0.5], [0.75, 0.5]], color='pink')\nax.add_patch(dodecagram)\n\n# Draw a trapezoid\ntrapezoid = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75]], color='pink')\nax.add_patch(trapezoid)\n\n# Draw a parallelogram\nparallelogram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75]], color='pink')\nax.add_patch(parallelogram)\n\n# Draw a rhombus\nrhombus = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75]], color='pink')\nax.add_patch(rhombus)\n\n# Draw a kite\nkite = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75]], color='pink')\nax.add_patch(kite)\n\n# Draw a pentagram\npentagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.25, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75]], color='pink')\nax.add_patch(pentagram)\n\n# Draw a hexagram\nhexagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.25, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25], [0.5, 0.5], [0.75, 0.5]], color='pink')\nax.add_patch(hexagram)\n\n# Draw a heptagram\nheptagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.25, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25], [0.5, 0.5], [0.75, 0.5]], color='pink')\nax.add_patch(heptagram)\n\n# Draw an octagram\noctagram = plt.Polygon([[0.25, 0.25], [0.5, 0.5], [0.75, 0.25], [0.75, 0.75], [0.25, 0.75], [0.25, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, 0.75], [0.5, 0.25], [0.5, 0.5], [0.75, 0.5], [0.5, "}
{"file": "dataset/ori_500/CB_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Set the background color of the plot\nax.set_facecolor('saddlebrown')\n\n# Create a circle for the logo\ncircle = plt.Circle((3, 3), 1, color='gold')\nax.add_artist(circle)\n\n# Create a rectangle for the model name\nrect = plt.Rectangle((2, 2), 2, 1, color='darkgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the model description\nrect = plt.Rectangle((2, 1), 2, 1, color='skyblue')\nax.add_patch(rect)\n\n# Create a rectangle for the model price\nrect = plt.Rectangle((2, 0), 2, 1, color='orange')\nax.add_patch(rect)\n\n# Create a rectangle for the model rating\nrect = plt.Rectangle((2, -1), 2, 1, color='lightblue')\nax.add_patch(rect)\n\n# Create a rectangle for the model reviews\nrect = plt.Rectangle((2, -2), 2, 1, color='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the model specifications\nrect = plt.Rectangle((2, -3), 2, 1, color='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the model images\nrect = plt.Rectangle((2, -4), 2, 1, color='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the model videos\nrect = plt.Rectangle((2, -5), 2, 1, color='lightpink')\nax.add_patch(rect)\n\n# Create a rectangle for the model testimonials\nrect = plt.Rectangle((2, -6), 2, 1, color='lightgrey')\nax.add_patch(rect)\n\n# Create a rectangle for the model comparisons\nrect = plt.Rectangle((2, -7), 2, 1, color='lightcyan')\nax.add_patch(rect)\n\n# Create a rectangle for the model recommendations\nrect = plt.Rectangle((2, -8), 2, 1, color='lightmagenta')\nax.add_patch(rect)\n\n# Create a rectangle for the model reviews\nrect = plt.Rectangle((2, -9), 2, 1, color='lightblue')\nax.add_patch(rect)\n\n# Create a rectangle for the model ratings\nrect = plt.Rectangle((2, -10), 2, 1, color='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the model prices\nrect = plt.Rectangle((2, -11), 2, 1, color='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the model specifications\nrect = plt.Rectangle((2, -12), 2, 1, color='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the model videos\nrect = plt.Rectangle((2, -13), 2, 1, color='lightpink')\nax.add_patch(rect)\n\n# Create a rectangle for the model testimonials\nrect = plt.Rectangle((2, -14), 2, 1, color='lightgrey')\nax.add_patch(rect)\n\n# Create a rectangle for the model comparisons\nrect = plt.Rectangle((2, -15), 2, 1, color='lightcyan')\nax.add_patch(rect)\n\n# Create a rectangle for the model recommendations\nrect = plt.Rectangle((2, -16), 2, 1, color='lightmagenta')\nax.add_patch(rect)\n\n# Create a rectangle for the model reviews\nrect = plt.Rectangle((2, -17), 2, 1, color='lightblue')\nax.add_patch(rect)\n\n# Create a rectangle for the model ratings\nrect = plt.Rectangle((2, -18), 2, 1, color='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the model prices\nrect = plt.Rectangle((2, -19), 2, 1, color='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the model specifications\nrect = plt.Rectangle((2, -20), 2, 1, color='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the model videos\nrect = plt.Rectangle((2, -21), 2, 1, color='lightpink')\nax.add_patch(rect)\n\n# Create a rectangle for the model testimonials\nrect = plt.Rectangle((2, -22), 2, 1, color='lightgrey')\nax.add_patch(rect)\n\n# Create a rectangle for the model comparisons\nrect = plt.Rectangle((2, -23), 2, 1, color='lightcyan')\nax.add_patch(rect)\n\n# Create a rectangle for the model recommendations\nrect = plt.Rectangle((2, -24), 2, 1, color='lightmagenta')\nax.add_patch(rect)\n\n# Create a rectangle for the model reviews\nrect = plt.Rectangle((2, -25), 2, 1, color='lightblue')\nax.add_patch(rect)\n\n# Create a rectangle for the model ratings\nrect = plt.Rectangle((2, -26), 2, 1, color='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the model prices\nrect = plt.Rectangle((2, -27), 2, 1, color='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the model specifications\nrect = plt.Rectangle((2, -28), 2, 1, color='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the model videos\nrect = plt.Rectangle((2, -29), 2, 1, color='lightpink')\nax.add_patch(rect)\n\n# Create a rectangle for the model testimonials\nrect = plt.Rectangle((2, -30), 2, 1, color='lightgrey')\nax.add_patch(rect)\n\n# Create a rectangle for the model comparisons\nrect = plt.Rectangle((2, -31), 2, 1, color='lightcyan')\nax.add_patch(rect)\n\n# Create a rectangle for the model recommendations\nrect = plt.Rectangle((2, -32), 2, 1, color='lightmagenta')\nax.add_patch(rect)\n\n# Create a rectangle for the model reviews\nrect = plt.Rectangle((2, -33), 2, 1, color='lightblue')\nax.add_patch(rect)\n\n# Create a rectangle for the model ratings\nrect = plt.Rectangle((2, -34), 2, 1, color='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the model prices\nrect = plt.Rectangle((2, -35), 2, 1, color='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the model specifications\nrect = plt.Rectangle((2, -36), 2, 1, color='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the model videos\nrect = plt.Rectangle((2, -37), 2, 1, color='lightpink')\nax.add_patch(rect)\n\n# Create a rectangle for the model testimonials\nrect = plt.Rectangle((2, -38), 2, 1, color='lightgrey')\nax.add_patch(rect)\n\n# Create a rectangle for the model comparisons\nrect = plt.Rectangle((2, -39), 2, 1, color='lightcyan')\nax.add_patch(rect)\n\n# Create a rectangle for the model recommendations\nrect = plt.Rectangle((2, -40), 2, 1, color='lightmagenta')\nax.add_patch(rect)\n\n# Create a rectangle for the model reviews\nrect = plt.Rectangle((2, -41), 2, 1, color='lightblue')\nax.add_patch(rect)\n\n# Create a rectangle for the model ratings\nrect = plt.Rectangle((2, -42), 2, 1, color='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the model prices\nrect = plt.Rectangle((2, -43), 2, 1, color='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the model specifications\nrect = plt.Rectangle((2, -44), 2, 1, color='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the model videos\nrect = plt.Rectangle((2, -45), 2, 1, color='lightpink')\nax.add_patch(rect)\n\n# Create a rectangle for the model testimonials\nrect = plt.Rectangle((2, -46), 2, 1, color='lightgrey')\nax.add_patch(rect)\n\n# Create a rectangle for the model comparisons\nrect = plt.Rectangle((2, -47), 2, 1, color='lightcyan')\nax.add_patch(rect)\n\n# Create a rectangle for the model recommendations\nrect = plt.Rectangle((2, -48), 2, 1, color='lightmagenta')\nax.add_patch(rect)\n\n# Create a rectangle for the model reviews\nrect = plt.Rectangle((2, -49), 2, 1, color='lightblue')\nax.add_patch(rect)\n\n# Create a rectangle for the model ratings\nrect = plt.Rectangle((2, -50), 2, 1, color='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the model prices\nrect = plt.Rectangle((2, -51), 2, 1, color='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the model specifications\nrect = plt.Rectangle((2, -52), 2, 1, color='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the model videos\nrect = plt.Rectangle((2, -53), 2, 1, color='lightpink')\nax.add_patch(rect)\n\n# Create a rectangle for the model testimonials\nrect = plt.Rectangle((2, -54), 2, 1, color='lightgrey')\nax.add_patch(rect)\n\n# Create a rectangle for the model comparisons\nrect = plt.Rectangle((2, -55), 2, 1, color='lightcyan')\nax.add_patch(rect)\n\n# Create a rectangle for the model recommendations\nrect = plt.Rectangle((2, -56), 2, 1, color='lightmagenta')\nax.add_patch(rect)\n\n# Create a rectangle for the model reviews\nrect = plt.Rectangle((2, -57), 2, 1, color='lightblue')\nax.add_patch(rect)\n\n# Create a rectangle for the model ratings\nrect = plt.Rectangle((2, -58), 2, 1, color='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the model prices\nrect = plt.Rectangle((2, -59), 2, 1, color='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the model specifications\nrect = plt.Rectangle((2, -60), 2, 1, color='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the model videos\nrect = plt.Rectangle((2, -61), 2, 1, color='lightpink')\nax.add_patch(rect)\n\n# Create a rectangle for the model testimonials\nrect = plt.Rectangle((2, -62), 2, 1, color='lightgrey')\nax.add_patch(rect)\n\n# Create a rectangle for the model comparisons\nrect = plt.Rectangle((2, -63), 2, 1, color='lightcyan')\nax.add_patch(rect)\n\n# Create a rectangle for the model recommendations\nrect = plt.Rectangle((2, -64), 2, 1, color='lightmagenta')\nax.add_patch(rect)\n\n# Create a rectangle for the model reviews\nrect = plt.Rectangle((2, -65), 2, 1, color='lightblue')\nax.add_patch(rect)\n\n# Create a rectangle for the model ratings\nrect = plt.Rectangle((2, -66), 2, 1, color='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the model prices\nrect = plt.Rectangle((2, -67), 2, 1, color='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the model specifications\nrect = plt.Rectangle((2, -68), 2, 1, color='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the model videos\nrect = plt.Rectangle((2, -69), 2, 1, color='lightpink')\nax.add_patch(rect)\n\n# Create a rectangle for the model testimonials\nrect = plt.Rectangle((2, -70), 2, 1, color='lightgrey')\nax.add_patch(rect)\n\n# Create a rectangle for the model comparisons\nrect = plt.Rectangle((2, -71), 2, 1, color='lightcyan')\nax.add_patch(rect)\n\n# Create a rectangle for the model recommendations\nrect = plt.Rectangle((2, -72), 2, 1, color='lightmagenta')\nax.add_patch(rect)\n\n# Create a rectangle for the model reviews\nrect = plt.Rectangle((2, -73), 2, 1, color='lightblue')\nax.add_patch(rect)\n\n# Create a rectangle for the model ratings\nrect = plt.Rectangle((2, -74), 2, 1, color='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the model prices\nrect = plt.Rectangle((2, -75), 2, 1, color='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the model specifications\nrect = plt.Rectangle((2, -76), 2, 1, color='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the model videos\nrect = plt.Rectangle((2, -77), 2, 1, color='lightpink')\nax.add_patch(rect)\n\n# Create a rectangle for the model testimonials\nrect = plt.Rectangle((2, -78), 2, 1, color='lightgrey')\nax.add_patch(rect)\n\n# Create a rectangle for the model comparisons\nrect = plt.Rectangle((2, -79), 2, 1, color='lightcyan')\nax.add_patch(rect)\n\n# Create a rectangle for the model recommendations\nrect = plt.Rectangle((2, -80), 2, 1, color='lightmagenta')\nax.add_patch(rect)\n\n# Create a rectangle for the model reviews\nrect = plt.Rectangle((2, -81), 2, 1, color='lightblue')\nax.add_patch(rect)\n\n# Create a rectangle for the model ratings\nrect = plt.Rectangle((2, -82), 2, 1, color='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the model prices\nrect = plt.Rectangle((2, -83), 2, 1, color='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the model specifications\nrect = plt.Rectangle((2, -84), 2, 1, color='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the model videos\nrect = plt.Rectangle((2, -85), 2, 1, color='lightpink')\nax.add_patch(rect)\n\n# Create a rectangle for the model testimonials\nrect = plt.Rectangle((2, -86), 2, 1, color='lightgrey')\nax.add_patch(rect)\n\n# Create a rectangle for the model comparisons\nrect = plt.Rectangle((2, -87), 2, 1, color='lightcyan')\nax.add_patch(rect)\n\n# Create a rectangle for the model recommendations\nrect = plt.Rectangle((2, -88), 2, 1, color='lightmagenta')\nax.add_patch(rect)\n\n# Create a rectangle for the model reviews\nrect = plt.Rectangle((2, -89), 2, 1, color='lightblue')\nax.add_patch(rect)\n\n# Create a rectangle for the model ratings\nrect = plt.Rectangle((2, -90), 2, 1, color='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the model prices\nrect = plt.Rectangle((2, -91), 2, 1, color='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the model specifications\nrect = plt.Rectangle((2, -92), 2, 1, color='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the model videos\nrect = plt.Rectangle((2, -93), 2, 1, color='lightpink')\nax.add_patch(rect)\n\n# Create a rectangle for the model testimonials\nrect = plt.Rectangle((2, -94), 2, 1, color='lightgrey')\nax.add_patch(rect)\n\n# Create a rectangle for the model comparisons\nrect = plt.Rectangle((2, -95), 2, 1, color='lightcyan')\nax.add_patch(rect)\n\n# Create a rectangle for the model recommendations\nrect = plt.Rectangle((2, -96), 2, 1, color='lightmagenta')\nax.add_patch(rect)\n\n# Create a rectangle for the model reviews\nrect = plt.Rectangle((2, -97), 2, 1, color='lightblue')\nax.add_patch(rect)\n\n# Create a rectangle for the model ratings\nrect = plt.Rectangle((2, -98), 2, 1, color='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the model prices\nrect = plt.Rectangle((2, -99), 2, 1, color='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the model specifications\nrect = plt.Rectangle((2, -100), 2, 1, color='lightyellow')\nax.add_patch(rect)\n\n# Create a rectangle for the model videos\nrect = plt.Rectangle((2, -101), 2, 1, color='lightpink')\nax.add_patch(rect)\n\n# Create a rectangle for the model testimonials\nrect = plt.Rectangle((2, -102), 2, 1, color='lightgrey')\nax.add_patch(rect)\n\n# Create a rectangle for the model comparisons\nrect = plt.Rectangle((2, -103), 2, 1, color='lightcyan')\nax.add_patch(rect)\n\n# Create a rectangle for the model recommendations\nrect = plt.Rectangle((2, -104), 2, 1, color='lightmagenta')\nax.add_patch(rect)\n\n# Create a rectangle for the model reviews\nrect = plt.Rectangle((2, -105), 2, 1, color='lightblue')\nax.add_patch(rect)\n\n# Create a rectangle for the model ratings\nrect = plt.Rectangle((2, -106), 2, 1, color='lightgreen')\nax.add_patch(rect)\n\n# Create a rectangle for the model prices\nrect = plt.Rectangle((2, -107), 2, 1, color='lightcoral')\nax.add_patch(rect)\n\n# Create a rectangle for the model specifications\nrect = plt.Rectangle((2, -108), 2, 1, color"}
{"file": "dataset/ori_500/CB_22.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the first subplot\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\nax.plot([1600, 1625, 1650, 1675, 1700, 1725], [0.005, 0.015, 0.025, 0.035, 0.045, 0.055], 'b-')\nax.set_title('Total')\nax.set_xlabel('Daily reward (Ether)')\nax.set_ylabel('Probability')\n\n# Create a figure and axis for the second subplot\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\nax.plot([1600, 1625, 1650, 1675, 1700, 1725], [0.005, 0.015, 0.025, 0.035, 0.045, 0.055], 'g-')\nax.set_title('Proposer')\nax.set_xlabel('Daily reward (Ether)')\nax.set_ylabel('Probability')\n\n# Create a figure and axis for the third subplot\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\nax.plot([1600, 1625, 1650, 1675, 1700, 1725], [0.005, 0.015, 0.025, 0.035, 0.045, 0.055], 'r-')\nax.set_title('Sync committee member')\nax.set_xlabel('Daily reward (Ether)')\nax.set_ylabel('Probability')\n\n# Create a figure and axis for the fourth subplot\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\nax.plot([1600, 1625, 1650, 1675, 1700, 1725], [0.005, 0.015, 0.025, 0.035, 0.045, 0.055], 'y-')\nax.set_title('Attestor')\nax.set_xlabel('Daily reward (Ether)')\nax.set_ylabel('Probability')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_23.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 8.0))\n\n# Set the title of the plot\nax.set_title('LlaSMol vs Trainable Parameter Size')\n\n# Set the x-axis label\nax.set_xlabel('Trainable Parameter Size (M)')\n\n# Set the y-axis label\nax.set_ylabel('RMSE')\n\n# Set the x-axis limits\nax.set_xlim(0, 150)\n\n# Set the y-axis limits\nax.set_ylim(1.15, 1.35)\n\n# Set the x-axis ticks\nax.set_xticks([0, 50, 100, 150])\n\n# Set the y-axis ticks\nax.set_yticks([1.15, 1.25, 1.35])\n\n# Add a legend to the plot\nax.legend()\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='red', label='LlaSMol Lite')\n\n# Add a line plot to the plot\nax.plot([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='blue', label='LlaSMol FNN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='green', label='LlaSMol Attn')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='purple', label='LlaSMol Large')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='orange', label='LlaSMol Plus')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='pink', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='cyan', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='magenta', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='yellow', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='black', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='white', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='gray', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='brown', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='silver', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='gold', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='lime', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='aqua', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='fuchsia', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='navy', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='maroon', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='olive', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='teal', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='indigo', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='violet', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='crimson', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='coral', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='chartreuse', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='chocolate', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='cyan', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='darkblue', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='darkgreen', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='darkgrey', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='darkkhaki', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='darkmagenta', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='darkolivegreen', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='darkorange', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='darkred', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='darksalmon', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='darkseagreen', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='darkslateblue', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='darkslategray', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='darkturquoise', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='darkviolet', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='deeppink', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='deepskyblue', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='dimgray', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='dimgrey', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='dodgerblue', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='firebrick', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='floralwhite', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='forestgreen', label='LlaSMol FPN')\n\n# Add a scatter plot to the plot\nax.scatter([10, 20, 30, 40, 50], [1.15, 1.25, 1.35, 1.15, 1.25], color='fuchsia', label='LlaSMol FPN"}
{"file": "dataset/ori_500/CB_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(40, 160)\n\n# Set the y-axis limits\nax.set_ylim(0, 0.1)\n\n# Set the x-axis label\nax.set_xlabel('Execution Duration (clock)')\n\n# Set the y-axis label\nax.set_ylabel('Distribution')\n\n# Set the title of the plot\nax.set_title('Execution Time Distribution')\n\n# Create a scatter plot for each data point\nax.scatter([40, 60, 80, 100, 120, 140, 160], [0.05, 0.07, 0.09, 0.11, 0.13, 0.15, 0.17], color='blue')\n\n# Create a line plot for the distribution\nax.plot([40, 60, 80, 100, 120, 140, 160], [0.05, 0.07, 0.09, 0.11, 0.13, 0.15, 0.17], color='red')\n\n# Add a legend\nax.legend(['Data Points', 'Distribution'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_25.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the graph\nyears = ['15x15', '20x15', '20x20', '30x20', '40x20', '50x20', '60x20']\nsales = [18, 14, 13, 12, 9, 7, 5]\nprofit = [1000, 1200, 1400, 1600, 1800, 2000, 2200]\nimprovement = [10, 8, 6, 4, 2, 0, -2]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Plot the data\nax.plot(years, sales, color='green')\nax.plot(years, profit, color='red')\nax.plot(years, improvement, color='blue')\n\n# Set the title and labels\nax.set_title('Car Sales and Profit Over Time')\nax.set_xlabel('Year')\nax.set_ylabel('Sales and Profit')\n\n# Add a legend\nax.legend(['Sales', 'Profit', 'Improvement'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_26.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7, 5))\n\n# Set the title of the plot\nax.set_title('Algorithm Performance')\n\n# Set the x-axis label\nax.set_xlabel('Algorithms')\n\n# Set the y-axis label\nax.set_ylabel('Time Cost (Seconds)')\n\n# Create a scatter plot for SEAC\nx_seac = np.random.rand(10)\ny_seac = np.random.rand(10)\nax.scatter(x_seac, y_seac, color='green', label='SEAC')\n\n# Create a scatter plot for CTCO\nx_ctco = np.random.rand(10)\ny_ctco = np.random.rand(10)\nax.scatter(x_ctco, y_ctco, color='orange', label='CTCO')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_27.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the graph\nax.set_title('Stock Price of Sports Brands')\n\n# Set the x-axis label\nax.set_xlabel('Time to Market (Days)')\n\n# Set the y-axis label\nax.set_ylabel('Stock Price ($)')\n\n# Set the x-axis limits\nax.set_xlim(0, 120)\n\n# Set the y-axis limits\nax.set_ylim(40, 120)\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax"}
{"file": "dataset/ori_500/CB_28.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='blue')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='yellow')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='grey')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='red')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='purple')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='pink')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='cyan')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='magenta')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='lime')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='olive')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='aqua')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='fuchsia')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='white')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='black')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='olive')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='aqua')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='fuchsia')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='white')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='black')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='olive')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='aqua')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='fuchsia')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='white')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='black')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='olive')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='aqua')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='fuchsia')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='white')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='black')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='olive')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='aqua')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='fuchsia')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='white')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='black')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='olive')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='aqua')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='fuchsia')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='white')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='black')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='olive')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='aqua')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='fuchsia')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='white')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='black')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='olive')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='aqua')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='fuchsia')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='white')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='black')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='olive')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='aqua')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='fuchsia')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='white')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='black')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='olive')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='aqua')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='fuchsia')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='white')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='black')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='olive')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle((0, 0), 1, 1, fc='aqua')\nax.add_patch(rect)\n\n# Create a rectangle for the map\nrect = plt.Rectangle((0, 0), 1, 1, fc='fuchsia')\nax.add_patch(rect)\n\n# Create a rectangle for the timeline\nrect = plt.Rectangle(("}
{"file": "dataset/ori_500/CB_29.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Set the title of the graph\nax.set_title('Patent Filings in 2013')\n\n# Set the x-axis label\nax.set_xlabel('Number of Patents')\n\n# Set the y-axis label\nax.set_ylabel('Year')\n\n# Create a list of technology fields\ntech_fields = ['Nano', 'Quantum Computing', 'Cybersecurity', 'VR', 'Biotech', 'Robotics', 'IoT', 'Cloud Computing', 'Blockchain', 'AI']\n\n# Create a list of years\nyears = [2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022]\n\n# Create a list of colors for each technology field\ncolors = ['skyblue', 'lightgreen', 'orange', 'purple', 'pink', 'cyan', 'yellow', 'brown', 'grey', 'red']\n\n# Create a list of values for each technology field\nvalues = [20, 10, 40, 30, 60, 70, 90, 50, 100, 120]\n\n# Create a list of values for each year\nyear_values = [[20, 10, 40, 30, 60, 70, 90, 50, 100, 120], [20, 10, 40, 30, 60, 70, 90, 50, 100, 120], [20, 10, 40, 30, 60, 70, 90, 50, 100, 120], [20, 10, 40, 30, 60, 70, 90, 50, 100, 120], [20, 10, 40, 30, 60, 70, 90, 50, 100, 120], [20, 10, 40, 30, 60, 70, 90, 50, 100, 120], [20, 10, 40, 30, 60, 70, 90, 50, 100, 120], [20, 10, 40, 30, 60, 70, 90, 50, 100, 120], [20, 10, 40, 30, 60, 70, 90, 50, 100, 120], [20, 10, 40, 30, 60, 70, 90, 50, 100, 120]]\n\n# Plot the data\nfor i in range(len(tech_fields)):\n    ax.plot(years, year_values[i], color=colors[i])\n\n# Add a legend\nax.legend(tech_fields)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the color of the background\nax.set_facecolor('lightpink')\n\n# Set the title of the graph\nax.set_title('Calibration Curve', fontsize=14, fontweight='bold')\n\n# Set the x-axis label\nax.set_xlabel('Predicted Probability', fontsize=12)\n\n# Set the y-axis label\nax.set_ylabel('Fraction of Positives', fontsize=12)\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 1)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 1.1, 0.1))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 1.1, 0.1))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1.0'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1.0'])\n\n# Set the x-axis grid lines\nax.xaxis.grid(True)\n\n# Set the y-axis grid lines\nax.yaxis.grid(True)\n\n# Set the x-axis grid line style\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the y-axis grid line style\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid line style\nax.xaxis.grid(linestyle='-')\n\n# Set the y-axis grid line style\nax.yaxis.grid(linestyle='-')\n\n# Set the x-axis grid line color\nax.xaxis.grid(color='gray')\n\n# Set the y-axis grid line color\nax.yaxis.grid(color='gray')\n\n# Set the x-axis grid line width\nax.xaxis.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.yaxis.grid(linewidth=0.5)\n\n# Set the x-axis grid"}
{"file": "dataset/ori_500/CB_30.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data\nquarters = ['Q1', 'Q2', 'Q3', 'Q4']\nearnings = [250, 300, 350, 400]\ngrowth = [10, 20, 30, 40]\n\n# Create a figure and axis\nfig, ax1 = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the color of the earnings plot\ncolor = 'tab:blue'\nax1.set_xlabel('Quarter')\nax1.set_ylabel('Earnings ($)', color=color)\nax1.plot(quarters, earnings, color=color)\nax1.tick_params(axis='y', labelcolor=color)\n\n# Create a second y-axis for the growth plot\nax2 = ax1.twinx()  \ncolor = 'tab:red'\nax2.set_ylabel('Growth (%)', color=color)  \nax2.plot(quarters, growth, color=color)\nax2.tick_params(axis='y', labelcolor=color)\n\n# Add a title and labels\nfig.tight_layout()\nplt.title('Company Earnings and Growth')\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Set the title of the plot\nax.set_title('AI Model Performance')\n\n# Set the x-axis label\nax.set_xlabel('Methods')\n\n# Set the y-axis label\nax.set_ylabel('Normalized Requirements (lower is better)')\n\n# Define the data for the plot\nx = ['Linear probing', 'BitFit', 'Prompt Tuning', 'Full finetuning', 'LoRA', 'Ours (LoSA)']\ny = [72, 74, 76, 78, 80, 82]\ncolors = ['blue', 'orange', 'green', 'red', 'purple', 'brown']\n\n# Plot the data\nfor i in range(len(x)):\n    ax.plot([i, i], [y[i], 0], color=colors[i], marker='o', markersize=10)\n\n# Set the x-ticks\nax.set_xticks(range(len(x)))\nax.set_xticklabels(x)\n\n# Set the y-limits\nax.set_ylim(0, 85)\n\n# Set the x-limits\nax.set_xlim(-1, len(x))\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Team Performance')\n\n# Set the x-axis label\nax.set_xlabel('TM-score')\n\n# Set the y-axis label\nax.set_ylabel('Sequident')\n\n# Generate random data for the plot\nx = np.random.rand(100)\ny = np.random.rand(100)\n\n# Plot the data\nax.plot(x, y, 'o')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Set the title of the plot\nax.set_title('Fish Population Data')\n\n# Set the x-axis label\nax.set_xlabel('Relative Cluster Size')\n\n# Set the y-axis label\nax.set_ylabel('Average Norm of Difference Vectors')\n\n# Set the x-axis limits\nax.set_xlim(25, 45)\n\n# Set the y-axis limits\nax.set_ylim(-10, 35)\n\n# Create a scatter plot with random data\nx = np.random.rand(100)\ny = np.random.rand(100)\nax.scatter(x, y, c='red', s=10)\n\n# Create a second scatter plot with random data\nx = np.random.rand(100)\ny = np.random.rand(100)\nax.scatter(x, y, c='green', s=10)\n\n# Create a third scatter plot with random data\nx = np.random.rand(100)\ny = np.random.rand(100)\nax.scatter(x, y, c='blue', s=10)\n\n# Create a legend for the scatter plots\nlegend_elements = [Line2D([0], [0], marker='o', color='w', label='Fish', markerfacecolor='r', markersize=10),\n                  Line2D([0], [0], marker='o', color='w', label='Species', markerfacecolor='g', markersize=10),\n                  Line2D([0], [0], marker='o', color='w', label='Cluster', markerfacecolor='b', markersize=10)]\nax.legend(handles=legend_elements, loc='upper right')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis and y-axis limits\nax.set_xlim(0, 128)\nax.set_ylim(0, 128)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('HC_first (before aging)')\nax.set_ylabel('HC_first (after aging)')\n\n# Create a scatter plot with blue dots\nax.scatter([0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120], [0, 99.6, 96.0, 99.9, 92.3, 96.0, 99.5, 90.9, 92.5, 91.3, 90.9, 92.3, 91.3, 90.9, 92.5, 91.3], color='blue')\n\n# Create a line plot with black lines\nax.plot([0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120], [0, 99.6, 96.0, 99.9, 92.3, 96.0, 99.5, 90.9, 92.5, 91.3, 90.9, 92.3, 91.3, 90.9, 92.5, 91.3], color='black')\n\n# Add a title to the plot\nax.set_title('Heart Rate Change Over Time')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/CB_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Set the title of the plot\nax.set_title('TMS Score vs Sequence ID')\n\n# Set the x-axis label\nax.set_xlabel('Sequence ID')\n\n# Set the y-axis label\nax.set_ylabel('TMS Score')\n\n# Set the x-axis limits\nax.set_xlim(0, 10)\n\n# Set the y-axis limits\nax.set_ylim(0, 1)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 11, 1))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 1.1, 0.1))\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the"}
{"file": "dataset/ori_500/CB_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nyears = [4211, 2411, 2141, 1124]\nvalues = [0.9628, 0.9604, 0.9624, 0.9592]\nsums = [0.9641, 0.9641, 0.962, 0.9561]\n\n# Create figure and axis objects\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Plot the data\nax.plot(years, values, 'b-o', label='Values')\nax.plot(years, sums, 'r-o', label='Sum (SRCC + PLCC)')\n\n# Set the title and labels\nax.set_title('SRCC and PLCC values with their sum for different modes')\nax.set_xlabel('Modes')\nax.set_ylabel('Values')\n\n# Add a legend\nax.legend()\n\n# Set the y-axis limits\nax.set_ylim(0.9561, 0.9641)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(2, 2, figsize=(10.0, 3.0))\n\n# Set the title for each subplot\naxs[0, 0].set_title('IIID-1 SDMT')\naxs[0, 1].set_title('NIID-2 SDST')\naxs[1, 0].set_title('NIID-4 UBSDT')\naxs[1, 1].set_title('NIID-5 UBSDST')\n\n# Create a color map for the scatter plot\ncmap = plt.cm.get_cmap('viridis', 8)\n\n# Create a scatter plot for each subplot\nfor i in range(2):\n    for j in range(2):\n        axs[i, j].scatter(np.random.rand(10), np.random.rand(10), c=np.random.rand(10), cmap=cmap)\n        axs[i, j].set_xlim([0, 3])\n        axs[i, j].set_ylim([0, 3])\n\n# Add a legend to the figure\nfig.legend(['Depth', 'Edge', 'Normals', 'Semseg'], loc='upper right')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Compact Spiral with Elliptical Hollow Center')\n\n# Create a color bar\ncbar = fig.colorbar(ax)\n\n# Create a scatter plot\nscatter = ax.scatter(0, 0, c='black', s=100)\n\n# Set the limits of the x and y axes\nax.set_xlim(-10, 10)\nax.set_ylim(-10, 10)\n\n# Set the labels for the x and y axes\nax.set_xlabel('X-axis')\nax.set_ylabel('Y-axis')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Set the title of the plot\nax.set_title('DAXPY memory bandwidth')\n\n# Set the x and y labels\nax.set_xlabel('Flops/s')\nax.set_ylabel('Flops/byte')\n\n# Set the x and y limits\nax.set_xlim(10**-1, 10**1)\nax.set_ylim(10**-1, 10**1)\n\n# Set the x and y ticks\nax.set_xticks([10**-1, 10**0, 10**1])\nax.set_yticks([10**-1, 10**0, 10**1])\n\n# Set the x and y tick labels\nax.set_xticklabels(['10^-1', '10^0', '10^1'])\nax.set_yticklabels(['10^-1', '10^0', '10^1'])\n\n# Set the grid\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the axes\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('"}
{"file": "dataset/ori_500/HR_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('f(x) = 0.5x^2 + 0.1x + 0.01')\n\n# Set the x-axis label\nax.set_xlabel('x')\n\n# Set the y-axis label\nax.set_ylabel('f(x)')\n\n# Set the x-axis limits\nax.set_xlim(0.45, 0.75)\n\n# Set the y-axis limits\nax.set_ylim(0.45, 0.75)\n\n# Set the x-axis ticks\nax.set_xticks([0.5, 0.6, 0.7])\n\n# Set the y-axis ticks\nax.set_yticks([0.5, 0.6, 0.7])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0.5', '0.6', '0.7'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.5', '0.6', '0.7'])\n\n# Set the x-axis grid lines\nax.grid(True)\n\n# Set the y-axis grid lines\nax.grid(True)\n\n# Set the x-axis color\nax.spines['left'].set_color('red')\n\n# Set the y-axis color\nax.spines['bottom'].set_color('blue')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('--')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('--')\n\n# Set the x-axis line color\nax.spines['left'].set_color('green')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('yellow')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(3)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(3)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-.')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-.')\n\n# Set the x-axis line color\nax.spines['left'].set_color('purple')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(4)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(4)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle(':')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle(':')\n\n# Set the x-axis line color\nax.spines['left'].set_color('pink')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('brown')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(5)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(5)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('cyan')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('magenta')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(6)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(6)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('lime')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(7)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(7)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('gold')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('black')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(8)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(8)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('white')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('gray')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(9)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(9)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('navy')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('maroon')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(10)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(10)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('aqua')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(11)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(11)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('olive')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(12)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(12)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(13)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(13)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(14)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(14)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(15)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(15)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(16)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(16)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(17)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(17)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(18)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(18)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(19)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(19)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(20)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(20)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(21)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(21)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(22)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(22)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(23)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(23)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(24)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(24)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(25)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(25)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(26)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(26)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(27)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(27)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(28)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(28)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(29)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(29)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(30)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(30)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(31)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(31)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(32)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(32)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(33)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(33)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line color\nax.spines['left'].set_color('silver')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('silver')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(34)\n\n"}
{"file": "dataset/ori_500/HR_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Define the data for the plot\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\n\n# Plot the data\nax.plot(x, y)\n\n# Set the title of the plot\nax.set_title('Sine Wave')\n\n# Set the x and y labels\nax.set_xlabel('Time (s)')\nax.set_ylabel('Amplitude')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Qwen-VL-Max')\n\n# Create a color map for the levels\ncmap = plt.get_cmap('tab20')\n\n# Create a scatter plot with the data\nscatter = ax.scatter(np.random.rand(10), np.random.rand(10), c=np.random.rand(10), cmap=cmap)\n\n# Add a color bar to the plot\ncbar = fig.colorbar(scatter)\ncbar.set_label('Level')\n\n# Set the limits of the x and y axes\nax.set_xlim([0, 1])\nax.set_ylim([0, 1])\n\n# Set the labels of the x and y axes\nax.set_xlabel('X-axis')\nax.set_ylabel('Y-axis')\n\n# Set the aspect ratio of the plot\nax.set_aspect('equal')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 2, figsize=(10.0, 4.0))\n\n# Define the data for the plots\nx = np.logspace(1, 2, 100)\ny1 = 10**np.random.uniform(1, 5, 100)\ny2 = 10**np.random.uniform(1, 5, 100)\ny3 = 10**np.random.uniform(1, 5, 100)\n\n# Plot the data\naxs[0].plot(x, y1, 'o-', color='purple')\naxs[0].plot(x, y2, 'o-', color='pink')\naxs[0].plot(x, y3, 'o-', color='orange')\naxs[0].set_xscale('log')\naxs[0].set_yscale('log')\naxs[0].set_xlabel('number of matvecs m')\naxs[0].set_ylabel('approximation error ||A - A\u0302||F')\naxs[0].set_title('Approximation Error')\n\n# Define the data for the second subplot\ny4 = 10**np.random.uniform(1, 5, 100)\ny5 = 10**np.random.uniform(1, 5, 100)\ny6 = 10**np.random.uniform(1, 5, 100)\n\n# Plot the data\naxs[1].plot(x, y4, 'o-', color='purple')\naxs[1].plot(x, y5, 'o-', color='pink')\naxs[1].plot(x, y6, 'o-', color='orange')\naxs[1].set_xscale('log')\naxs[1].set_yscale('log')\naxs[1].set_xlabel('number of matvecs m')\naxs[1].set_ylabel('sparse recovery error ||S\u0302A \u2212 A\u0302||F')\naxs[1].set_title('Sparse Recovery Error')\n\n# Add legends\naxs[0].legend(['s = 19', 's = 50', 's = 76'], loc='upper left')\naxs[1].legend(['s = 142', 's = 232'], loc='upper right')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Draw a circle\ncircle = plt.Circle((0.5, 0.5), 0.4, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle\nrectangle = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='lightgreen')\nax.add_artist(rectangle)\n\n# Draw a triangle\ntriangle = plt.Polygon([[0.3, 0.7], [0.7, 0.7], [0.5, 0.9]], color='lightblue')\nax.add_artist(triangle)\n\n# Draw a star\nstar = plt.Polygon([[0.5, 0.1], [0.4, 0.3], [0.6, 0.3], [0.5, 0.5], [0.4, 0.7], [0.6, 0.7]], color='lightcoral')\nax.add_artist(star)\n\n# Draw a pentagon\npentagon = plt.Polygon([[0.2, 0.2], [0.4, 0.3], [0.4, 0.5], [0.2, 0.5], [0.3, 0.4]], color='lightsalmon')\nax.add_artist(pentagon)\n\n# Set the aspect ratio of the plot to be equal\nax.set_aspect('equal')\n\n# Set the limits of the plot\nax.set_xlim(0, 1)\nax.set_ylim(0, 1)\n\n# Remove the axes\nax.axis('off')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Define the data\nx = np.linspace(0, 100, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\ny3 = np.tan(x)\ny4 = np.exp(x)\ny5 = np.log(x)\n\n# Plot the data\nax.plot(x, y1, 'g-', label='Sine Wave')\nax.plot(x, y2, 'r-', label='Cosine Wave')\nax.plot(x, y3, 'b-', label='Tangent Wave')\nax.plot(x, y4, 'y-', label='Exponential Wave')\nax.plot(x, y5, 'm-', label='Logarithmic Wave')\n\n# Set the title and labels\nax.set_title('Trigonometric Functions')\nax.set_xlabel('X-axis')\nax.set_ylabel('Y-axis')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Uncertainty in Thermal Conductivity Measurements')\n\n# Set the x-axis label\nax.set_xlabel('Sample Number')\n\n# Set the y-axis label\nax.set_ylabel('Thermal Conductivity (W/m.K)')\n\n# Create a grid\nax.grid(True)\n\n# Create a scatter plot\nx = np.arange(10)\ny = np.random.rand(10)\nax.scatter(x, y, color='blue')\n\n# Create a bar chart\nx = np.arange(6)\ny = np.random.rand(6)\nax.bar(x, y, color='green')\n\n# Create a line chart\nx = np.arange(10)\ny = np.random.rand(10)\nax.plot(x, y, color='red')\n\n# Create a histogram\nx = np.random.rand(100)\nax.hist(x, bins=10, color='purple')\n\n# Create a pie chart\nx = np.array([1, 2, 3, 4, 5])\ny = np.array([1, 2, 3, 4, 5])\nax.pie(y, labels=x, colors=['cyan', 'magenta', 'yellow', 'black', 'white'])\n\n# Create a box plot\nx = np.random.rand(10)\nax.boxplot(x, vert=False, patch_artist=True)\n\n# Create a heatmap\nx = np.random.rand(10, 10)\nax.imshow(x, cmap='hot', interpolation='nearest')\n\n# Create a contour plot\nx = np.linspace(-5, 5, 100)\ny = np.linspace(-5, 5, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nCS = ax.contourf(X, Y, Z, locator=plt.LogLocator(), cmap='viridis')\n\n# Create a scatter plot with error bars\nx = np.arange(10)\ny = np.random.rand(10)\nyerr = np.random.rand(10)\nax.errorbar(x, y, yerr=yerr, fmt='o', color='blue')\n\n# Create a bar chart with error bars\nx = np.arange(6)\ny = np.random.rand(6)\nyerr = np.random.rand(6)\nax.bar(x, y, yerr=yerr, color='green')\n\n# Create a line chart with error bars\nx = np.arange(10)\ny = np.random.rand(10)\nyerr = np.random.rand(10)\nax.errorbar(x, y, yerr=yerr, fmt='o', color='red')\n\n# Create a histogram with error bars\nx = np.random.rand(100)\nyerr = np.random.rand(100)\nax.errorbar(x, yerr=yerr, fmt='o', color='purple')\n\n# Create a pie chart with error bars\nx = np.array([1, 2, 3, 4, 5])\ny = np.array([1, 2, 3, 4, 5])\nyerr = np.random.rand(5)\nax.pie(y, yerr=yerr, labels=x, colors=['cyan', 'magenta', 'yellow', 'black', 'white'])\n\n# Create a box plot with error bars\nx = np.random.rand(10)\nyerr = np.random.rand(10)\nax.boxplot(x, yerr=yerr, vert=False, patch_artist=True)\n\n# Create a heatmap with error bars\nx = np.random.rand(10, 10)\nyerr = np.random.rand(10, 10)\nax.imshow(x, yerr=yerr, cmap='hot', interpolation='nearest')\n\n# Create a contour plot with error bars\nx = np.linspace(-5, 5, 100)\ny = np.linspace(-5, 5, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nCS = ax.contourf(X, Y, Z, locator=plt.LogLocator(), cmap='viridis')\nax.errorbar(X, Y, yerr=yerr, fmt='o', color='blue')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\ngames = ['I', 'II', 'III', 'IV', 'V']\nscores = [28, 20, 10, 20, 28]\nplayer_a_scores = [35, 26, 20, 22, 30]\nplayer_b_scores = [20, 20, 10, 25, 28]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7, 5))\n\n# Plot the scores\nax.plot(games, scores, label='Scores')\n\n# Plot the player A scores\nax.bar(games, player_a_scores, color='green', alpha=0.5, label='Player A')\n\n# Plot the player B scores\nax.bar(games, player_b_scores, color='darkgreen', alpha=0.5, label='Player B')\n\n# Set the title and labels\nax.set_title('Scores by number of game and players')\nax.set_xlabel('Games')\nax.set_ylabel('Score')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_2.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the limits of the axes\nax.set_xlim(-6, 6)\nax.set_ylim(-6, 6)\n\n# Draw a rectangle\nrectangle = plt.Rectangle((-3, -3), 6, 6, color='red')\nax.add_patch(rectangle)\n\n# Draw a circle\ncircle = plt.Circle((0, 0), 2, color='blue')\nax.add_artist(circle)\n\n# Draw a line\nline = plt.Line2D([-3, 3], [-3, 3], color='green')\nax.add_line(line)\n\n# Draw a scatter plot\nx = np.random.rand(10)\ny = np.random.rand(10)\nscatter = ax.scatter(x, y, color='black')\n\n# Add a color bar\ncbar = fig.colorbar(scatter)\ncbar.set_label('Time')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/HR_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Set the title of the plot\nax.set_title('Player Performance')\n\n# Set the x-axis label\nax.set_xlabel('Player')\n\n# Set the y-axis label\nax.set_ylabel('Average Amount Sent ($)')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3, 4])\n\n# Set the x-tick labels\nax.set_xticklabels(['Female Player', 'Male Player', 'LLM Player', 'Person Player'])\n\n# Set the y-ticks\nax.set_yticks(np.arange(3, 8, 0.5))\n\n# Set the y-tick labels\nax.set_yticklabels(['3.0', '3.5', '4.0', '4.5', '5.0', '5.5', '6.0', '6.5', '7.0', '7.5', '8.0'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='red')\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the title\nax.title.set_color('red')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('red')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('red')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Female Player', 'Male Player', 'LLM Player', 'Person Player'], color='red')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['3.0', '3.5', '4.0', '4.5', '5.0', '5.5', '6.0', '6.5', '7.0', '7.5', '8.0'], color='red')\n\n# Set the color of the grid lines\nax.grid(color='red', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='red')\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the title\nax.title.set_color('red')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('red')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('red')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Female Player', 'Male Player', 'LLM Player', 'Person Player'], color='red')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['3.0', '3.5', '4.0', '4.5', '5.0', '5.5', '6.0', '6.5', '7.0', '7.5', '8.0'], color='red')\n\n# Set the color of the grid lines\nax.grid(color='red', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='red')\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the title\nax.title.set_color('red')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('red')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('red')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Female Player', 'Male Player', 'LLM Player', 'Person Player'], color='red')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['3.0', '3.5', '4.0', '4.5', '5.0', '5.5', '6.0', '6.5', '7.0', '7.5', '8.0'], color='red')\n\n# Set the color of the grid lines\nax.grid(color='red', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='red')\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the title\nax.title.set_color('red')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('red')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('red')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Female Player', 'Male Player', 'LLM Player', 'Person Player'], color='red')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['3.0', '3.5', '4.0', '4.5', '5.0', '5.5', '6.0', '6.5', '7.0', '7.5', '8.0'], color='red')\n\n# Set the color of the grid lines\nax.grid(color='red', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='red')\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the title\nax.title.set_color('red')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('red')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('red')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Female Player', 'Male Player', 'LLM Player', 'Person Player'], color='red')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['3.0', '3.5', '4.0', '4.5', '5.0', '5.5', '6.0', '6.5', '7.0', '7.5', '8.0'], color='red')\n\n# Set the color of the grid lines\nax.grid(color='red', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='red')\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the title\nax.title.set_color('red')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('red')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('red')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Female Player', 'Male Player', 'LLM Player', 'Person Player'], color='red')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['3.0', '3.5', '4.0', '4.5', '5.0', '5.5', '6.0', '6.5', '7.0', '7.5', '8.0'], color='red')\n\n# Set the color of the grid lines\nax.grid(color='red', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='red')\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the title\nax.title.set_color('red')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('red')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('red')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Female Player', 'Male Player', 'LLM Player', 'Person Player'], color='red')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['3.0', '3.5', '4.0', '4.5', '5.0', '5.5', '6.0', '6.5', '7.0', '7.5', '8.0'], color='red')\n\n# Set the color of the grid lines\nax.grid(color='red', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='red')\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the title\nax.title.set_color('red')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('red')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('red')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Female Player', 'Male Player', 'LLM Player', 'Person Player'], color='red')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['3.0', '3.5', '4.0', '4.5', '5.0', '5.5', '6.0', '6.5', '7.0', '7.5', '8.0'], color='red')\n\n# Set the color of the grid lines\nax.grid(color='red', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='red')\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the title\nax.title.set_color('red')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('red')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('red')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Female Player', 'Male Player', 'LLM Player', 'Person Player'], color='red')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['3.0', '3.5', '4.0', '4.5', '5.0', '5.5', '6.0', '6.5', '7.0', '7.5', '8.0'], color='red')\n\n# Set the color of the grid lines\nax.grid(color='red', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='red')\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the title\nax.title.set_color('red')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('red')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('red')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Female Player', 'Male Player', 'LLM Player', 'Person Player'], color='red')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['3.0', '3.5', '4.0', '4.5', '5.0', '5.5', '6.0', '6.5', '7.0', '7.5', '8.0'], color='red')\n\n# Set the color of the grid lines\nax.grid(color='red', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='red')\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the title\nax.title.set_color('red')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('red')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('red')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Female Player', 'Male Player', 'LLM Player', 'Person Player'], color='red')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['3.0', '3.5', '4.0', '4.5', '5.0', '5.5', '6.0', '6.5', '7.0', '7.5', '8.0'], color='red')\n\n# Set the color of the grid lines\nax.grid(color='red', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='red')\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the title\nax.title.set_color('red')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('red')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('red')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Female Player', 'Male Player', 'LLM Player', 'Person Player'], color='red')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['3.0', '3.5', '4.0', '4.5', '5.0', '5.5', '6.0', '6.5', '7.0', '7.5', '8.0'], color='red')\n\n# Set the color of the grid lines\nax.grid(color='red', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='red')\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the title\nax.title.set_color('red')\n\n# Set the color of the x-label\nax.xaxis.label.set_color('red')\n\n# Set the color of the y-label\nax.yaxis.label.set_color('red')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Female Player', 'Male Player', 'LLM Player', 'Person Player'], color='red')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['3.0', '3.5', '4.0', '4.5', '5.0', '5.5', '6.0', '6.5', '7.0', '7.5', '8.0'], color='red')\n\n# Set the color of the grid lines\nax.grid(color='red', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgreen')\n\n# Set the color of the border\nax.spines['bottom'].set_color('red')\nax.spines['top'].set_color('red')\nax.spines['right'].set_color('red')\nax.spines['left'].set_color('red')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='red')\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the title\nax.title.set_color('red"}
{"file": "dataset/ori_500/HR_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nfig, ax = plt.subplots(figsize=(7.0, 5.0))\nax.set_title('Endurance Race Performance Analysis')\n\n# Athlete Jim\nx = np.arange(0, 100, 10)\ny = np.random.randint(10, 20, size=10)\nax.plot(x, y, 'g-')\nax.fill_between(x, y, color='green', alpha=0.3)\nax.text(50, 15, 'Athlete Jim', ha='center', va='bottom')\n\n# Athlete Bill\nx = np.arange(0, 100, 10)\ny = np.random.randint(10, 20, size=10)\nax.plot(x, y, 'g-')\nax.fill_between(x, y, color='green', alpha=0.3)\nax.text(50, 15, 'Athlete Bill', ha='center', va='bottom')\n\n# Race interrupted due to weather\nx = np.array([0, 100])\ny = np.array([150, 150])\nax.plot(x, y, 'r-', linewidth=5)\nax.text(50, 160, 'Race interrupted due to weather', ha='center', va='bottom')\n\n# Legend\nlegend_elements = [Line2D([0], [0], marker='o', color='w', label='Running', markerfacecolor='green', markersize=10),\n                  Line2D([0], [0], marker='o', color='w', label='Interrupted', markerfacecolor='red', markersize=10),\n                  Line2D([0], [0], marker='o', color='w', label='Rest', markerfacecolor='orange', markersize=10),\n                  Line2D([0], [0], marker='o', color='w', label='Running2', markerfacecolor='green', markersize=10)]\nax.legend(handles=legend_elements, loc='upper left')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_22.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 5.0))\n\n# Create a scatter plot\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Set the title of the plot\nax.set_title('Comparative Distribution of Three Different Groups')\n\n# Set the x and y labels\nax.set_xlabel('Number of Observations')\nax.set_ylabel('Value Range')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_23.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nx = [-150, -120, -100, -75, -50, -35, -135, -100, -50, 0, 50, 75, 100, 125, 150]\ny = [350, 150, -50, -120, 200, 75, -135, -100, -50, 0, 50, 75, 100, 125, 150]\n\n# Plot\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\nax.plot(x, y, 'k-')\nax.set_xlim(-150, 150)\nax.set_ylim(700, 1300)\nax.set_xlabel('Time (s)')\nax.set_ylabel('Waterfall Height (m)')\nax.grid(True)\n\n# Bar chart\nbar_width = 20\nbar_positions = range(len(x))\nbar_heights = [350, 150, -50, -120, 200, 75, -135, -100, -50, 0, 50, 75, 100, 125, 150]\nbar_colors = ['green', 'red', 'green', 'red', 'green', 'red', 'green', 'red', 'green', 'red', 'green', 'red', 'green', 'red', 'green']\n\nfor i in bar_positions:\n    ax.bar(bar_positions[i], bar_heights[i], width=bar_width, color=bar_colors[i])\n\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('tripcolor of Delaunay triangulation, flat shading')\n\n# Create a grid of points\nx = np.linspace(-1, 1, 100)\ny = np.linspace(-1, 1, 100)\nX, Y = np.meshgrid(x, y)\n\n# Create a random function for Z values\nZ = np.sin(X**2 + Y**2)\n\n# Create a Delaunay triangulation\nfrom scipy.spatial import Delaunay\ntri = Delaunay(np.vstack([X.ravel(), Y.ravel()]).T)\n\n# Create a color map\ncmap = plt.cm.viridis\n\n# Create a tripcolor plot\nim = ax.tripcolor(tri, Z.ravel(), cmap=cmap)\n\n# Add a color bar\nfig.colorbar(im)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_25.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('NonUniformImage class')\n\n# Create a grid of subplots\ngs = fig.add_gridspec(2, 2)\n\n# Create a subplot for the first image\nax1 = fig.add_subplot(gs[0, 0])\nax1.imshow(np.random.rand(10, 10), cmap='Oranges')\nax1.set_title('nearest')\n\n# Create a subplot for the second image\nax2 = fig.add_subplot(gs[0, 1])\nax2.imshow(np.random.rand(10, 10), cmap='Purples')\nax2.set_title('nearest')\n\n# Create a subplot for the third image\nax3 = fig.add_subplot(gs[1, 0])\nax3.imshow(np.random.rand(10, 10), cmap='Blues')\nax3.set_title('bilinear')\n\n# Create a subplot for the fourth image\nax4 = fig.add_subplot(gs[1, 1])\nax4.imshow(np.random.rand(10, 10), cmap='Reds')\nax4.set_title('bilinear')\n\n# Set the x-axis and y-axis limits\nax.set_xlim(-4, 4)\nax.set_ylim(-4, 4)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data for the plots\nx = np.arange(10)\ny1 = np.random.randint(200, 600, 10)\ny2 = np.random.randint(200, 600, 10)\ny3 = np.random.randint(200, 600, 10)\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 2, figsize=(10, 4))\n\n# Plot the data\naxs[0].bar(x, y1, color='blue')\naxs[0].set_title('Flickr30k')\naxs[0].set_xlabel('Number of bits')\naxs[0].set_ylabel('Recall sum')\n\naxs[1].bar(x, y2, color='green')\naxs[1].set_title('MS-COCO')\naxs[1].set_xlabel('Number of bits')\naxs[1].set_ylabel('Recall sum')\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((0, 0), 1, 1, fc='red')\naxs[0].add_patch(rect)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Denser Points with Perfectly Circular Error Ellipses')\n\n# Set the x-axis label\nax.set_xlabel('x (m)')\n\n# Set the y-axis label\nax.set_ylabel('y (m)')\n\n# Set the x-axis limits\nax.set_xlim(0, 25)\n\n# Set the y-axis limits\nax.set_ylim(0, 30)\n\n# Set the x-axis ticks\nax.set_xticks(range(0, 26, 5))\n\n# Set the y-axis ticks\nax.set_yticks(range(0, 31, 5))\n\n# Draw a circle at the origin\ncircle = plt.Circle((0, 0), 1, color='black')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (10, 10)\nline, = ax.plot([0, 10], [0, 10], 'r-')\n\n# Draw a circle around the point (10, 10)\ncircle = plt.Circle((10, 10), 1, color='blue')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (20, 20)\nline, = ax.plot([0, 20], [0, 20], 'b-')\n\n# Draw a circle around the point (20, 20)\ncircle = plt.Circle((20, 20), 1, color='green')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (25, 25)\nline, = ax.plot([0, 25], [0, 25], 'g-')\n\n# Draw a circle around the point (25, 25)\ncircle = plt.Circle((25, 25), 1, color='red')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (15, 15)\nline, = ax.plot([0, 15], [0, 15], 'k-')\n\n# Draw a circle around the point (15, 15)\ncircle = plt.Circle((15, 15), 1, color='purple')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (5, 5)\nline, = ax.plot([0, 5], [0, 5], 'c-')\n\n# Draw a circle around the point (5, 5)\ncircle = plt.Circle((5, 5), 1, color='orange')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (10, 10)\nline, = ax.plot([0, 10], [0, 10], 'm-')\n\n# Draw a circle around the point (10, 10)\ncircle = plt.Circle((10, 10), 1, color='brown')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (20, 20)\nline, = ax.plot([0, 20], [0, 20], 'y-')\n\n# Draw a circle around the point (20, 20)\ncircle = plt.Circle((20, 20), 1, color='pink')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (25, 25)\nline, = ax.plot([0, 25], [0, 25], 'w-')\n\n# Draw a circle around the point (25, 25)\ncircle = plt.Circle((25, 25), 1, color='gray')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (15, 15)\nline, = ax.plot([0, 15], [0, 15], 'k-')\n\n# Draw a circle around the point (15, 15)\ncircle = plt.Circle((15, 15), 1, color='purple')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (5, 5)\nline, = ax.plot([0, 5], [0, 5], 'c-')\n\n# Draw a circle around the point (5, 5)\ncircle = plt.Circle((5, 5), 1, color='orange')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (10, 10)\nline, = ax.plot([0, 10], [0, 10], 'm-')\n\n# Draw a circle around the point (10, 10)\ncircle = plt.Circle((10, 10), 1, color='brown')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (20, 20)\nline, = ax.plot([0, 20], [0, 20], 'y-')\n\n# Draw a circle around the point (20, 20)\ncircle = plt.Circle((20, 20), 1, color='pink')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (25, 25)\nline, = ax.plot([0, 25], [0, 25], 'w-')\n\n# Draw a circle around the point (25, 25)\ncircle = plt.Circle((25, 25), 1, color='gray')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (15, 15)\nline, = ax.plot([0, 15], [0, 15], 'k-')\n\n# Draw a circle around the point (15, 15)\ncircle = plt.Circle((15, 15), 1, color='purple')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (5, 5)\nline, = ax.plot([0, 5], [0, 5], 'c-')\n\n# Draw a circle around the point (5, 5)\ncircle = plt.Circle((5, 5), 1, color='orange')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (10, 10)\nline, = ax.plot([0, 10], [0, 10], 'm-')\n\n# Draw a circle around the point (10, 10)\ncircle = plt.Circle((10, 10), 1, color='brown')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (20, 20)\nline, = ax.plot([0, 20], [0, 20], 'y-')\n\n# Draw a circle around the point (20, 20)\ncircle = plt.Circle((20, 20), 1, color='pink')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (25, 25)\nline, = ax.plot([0, 25], [0, 25], 'w-')\n\n# Draw a circle around the point (25, 25)\ncircle = plt.Circle((25, 25), 1, color='gray')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (15, 15)\nline, = ax.plot([0, 15], [0, 15], 'k-')\n\n# Draw a circle around the point (15, 15)\ncircle = plt.Circle((15, 15), 1, color='purple')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (5, 5)\nline, = ax.plot([0, 5], [0, 5], 'c-')\n\n# Draw a circle around the point (5, 5)\ncircle = plt.Circle((5, 5), 1, color='orange')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (10, 10)\nline, = ax.plot([0, 10], [0, 10], 'm-')\n\n# Draw a circle around the point (10, 10)\ncircle = plt.Circle((10, 10), 1, color='brown')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (20, 20)\nline, = ax.plot([0, 20], [0, 20], 'y-')\n\n# Draw a circle around the point (20, 20)\ncircle = plt.Circle((20, 20), 1, color='pink')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (25, 25)\nline, = ax.plot([0, 25], [0, 25], 'w-')\n\n# Draw a circle around the point (25, 25)\ncircle = plt.Circle((25, 25), 1, color='gray')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (15, 15)\nline, = ax.plot([0, 15], [0, 15], 'k-')\n\n# Draw a circle around the point (15, 15)\ncircle = plt.Circle((15, 15), 1, color='purple')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (5, 5)\nline, = ax.plot([0, 5], [0, 5], 'c-')\n\n# Draw a circle around the point (5, 5)\ncircle = plt.Circle((5, 5), 1, color='orange')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (10, 10)\nline, = ax.plot([0, 10], [0, 10], 'm-')\n\n# Draw a circle around the point (10, 10)\ncircle = plt.Circle((10, 10), 1, color='brown')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (20, 20)\nline, = ax.plot([0, 20], [0, 20], 'y-')\n\n# Draw a circle around the point (20, 20)\ncircle = plt.Circle((20, 20), 1, color='pink')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (25, 25)\nline, = ax.plot([0, 25], [0, 25], 'w-')\n\n# Draw a circle around the point (25, 25)\ncircle = plt.Circle((25, 25), 1, color='gray')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (15, 15)\nline, = ax.plot([0, 15], [0, 15], 'k-')\n\n# Draw a circle around the point (15, 15)\ncircle = plt.Circle((15, 15), 1, color='purple')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (5, 5)\nline, = ax.plot([0, 5], [0, 5], 'c-')\n\n# Draw a circle around the point (5, 5)\ncircle = plt.Circle((5, 5), 1, color='orange')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (10, 10)\nline, = ax.plot([0, 10], [0, 10], 'm-')\n\n# Draw a circle around the point (10, 10)\ncircle = plt.Circle((10, 10), 1, color='brown')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (20, 20)\nline, = ax.plot([0, 20], [0, 20], 'y-')\n\n# Draw a circle around the point (20, 20)\ncircle = plt.Circle((20, 20), 1, color='pink')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (25, 25)\nline, = ax.plot([0, 25], [0, 25], 'w-')\n\n# Draw a circle around the point (25, 25)\ncircle = plt.Circle((25, 25), 1, color='gray')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (15, 15)\nline, = ax.plot([0, 15], [0, 15], 'k-')\n\n# Draw a circle around the point (15, 15)\ncircle = plt.Circle((15, 15), 1, color='purple')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (5, 5)\nline, = ax.plot([0, 5], [0, 5], 'c-')\n\n# Draw a circle around the point (5, 5)\ncircle = plt.Circle((5, 5), 1, color='orange')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (10, 10)\nline, = ax.plot([0, 10], [0, 10], 'm-')\n\n# Draw a circle around the point (10, 10)\ncircle = plt.Circle((10, 10), 1, color='brown')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (20, 20)\nline, = ax.plot([0, 20], [0, 20], 'y-')\n\n# Draw a circle around the point (20, 20)\ncircle = plt.Circle((20, 20), 1, color='pink')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (25, 25)\nline, = ax.plot([0, 25], [0, 25], 'w-')\n\n# Draw a circle around the point (25, 25)\ncircle = plt.Circle((25, 25), 1, color='gray')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (15, 15)\nline, = ax.plot([0, 15], [0, 15], 'k-')\n\n# Draw a circle around the point (15, 15)\ncircle = plt.Circle((15, 15), 1, color='purple')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (5, 5)\nline, = ax.plot([0, 5], [0, 5], 'c-')\n\n# Draw a circle around the point (5, 5)\ncircle = plt.Circle((5, 5), 1, color='orange')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (10, 10)\nline, = ax.plot([0, 10], [0, 10], 'm-')\n\n# Draw a circle around the point (10, 10)\ncircle = plt.Circle((10, 10), 1, color='brown')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (20, 20)\nline, = ax.plot([0, 20], [0, 20], 'y-')\n\n# Draw a circle around the point (20, 20)\ncircle = plt.Circle((20, 20), 1, color='pink')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (25, 25)\nline, = ax.plot([0, 25], [0, 25], 'w-')\n\n# Draw a circle around the point (25, 25)\ncircle = plt.Circle((25, 25), 1, color='gray')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (15, 15)\nline, = ax.plot([0, 15], [0, 15], 'k-')\n\n# Draw a circle around the point (15, 15)\ncircle = plt.Circle((15, 15), 1, color='purple')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (5, 5)\nline, = ax.plot([0, 5], [0, 5], 'c-')\n\n# Draw a circle around the point (5, 5)\ncircle = plt.Circle((5, 5), 1, color='orange')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (10, 10)\nline, = ax.plot([0, 10], [0, 10], 'm-')\n\n# Draw a circle around the point (10, 10)\ncircle = plt.Circle((10, 10), 1, color='brown')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (20, 20)\nline, = ax.plot([0, 20], [0, 20], 'y-')\n\n# Draw a circle around the point (20, 20)\ncircle = plt.Circle((20, 20), 1, color='pink')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (25, 25)\nline, = ax.plot([0, 25], [0, 25], 'w-')\n\n# Draw a circle around the point (25, 25)\ncircle = plt.Circle((25, 25), 1, color='gray')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (15, 15)\nline, = ax.plot([0, 15], [0, 15], 'k-')\n\n# Draw a circle around the point (15, 15)\ncircle = plt.Circle((15, 15), 1, color='purple')\nax.add_artist(circle)\n\n# Draw a line from the origin to the point (5, 5)\nline, = ax.plot([0, 5], [0, 5], 'c-')\n\n# Draw a circle around the point (5, 5)\ncircle"}
{"file": "dataset/ori_500/HR_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Define the number of points\nn = 100\n\n# Create a circle\ntheta = np.linspace(0, 2*np.pi, n)\nx = np.cos(theta)\ny = np.sin(theta)\n\n# Plot the circle\nax.plot(x, y, 'b-')\n\n# Add a legend\nax.legend(['Circle'])\n\n# Set the aspect ratio to be equal\nax.set_aspect('equal')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Set the color map for the plot\ncmap = plt.get_cmap('coolwarm')\n\n# Create a grid of values for the x and y axes\nx = np.linspace(0, 2, 100)\ny = np.linspace(0, 2, 100)\nX, Y = np.meshgrid(x, y)\n\n# Calculate the z values using a simple function\nZ = np.sin(X) * np.cos(Y)\n\n# Plot the surface plot\nsurf = ax.plot_surface(X, Y, Z, cmap=cmap)\n\n# Add a color bar which maps values to colors\nfig.colorbar(surf, shrink=0.5, aspect=5)\n\n# Set the title of the plot\nax.set_title('3D Surface Plot')\n\n# Set the labels for the x and y axes\nax.set_xlabel('\u03b1')\nax.set_ylabel('\u03b2')\nax.set_zlabel('\u0394t')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the first subplot\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Create a scatter plot with random data\nx = np.random.rand(50)\ny = np.random.rand(50)\nax.scatter(x, y)\n\n# Set the title of the subplot\nax.set_title('Utility distribution per topic')\n\n# Create a second subplot next to the first one\nfig, ax2 = plt.subplots(figsize=(8.0, 4.0))\n\n# Create a scatter plot with random data\nx2 = np.random.rand(50)\ny2 = np.random.rand(50)\nax2.scatter(x2, y2)\n\n# Set the title of the subplot\nax2.set_title('User preference matrix (M)')\n\n# Create a third subplot next to the second one\nfig, ax3 = plt.subplots(figsize=(8.0, 4.0))\n\n# Create a scatter plot with random data\nx3 = np.random.rand(50)\ny3 = np.random.rand(50)\nax3.scatter(x3, y3)\n\n# Set the title of the subplot\nax3.set_title('Users(U)')\n\n# Create a fourth subplot next to the third one\nfig, ax4 = plt.subplots(figsize=(8.0, 4.0))\n\n# Create a scatter plot with random data\nx4 = np.random.rand(50)\ny4 = np.random.rand(50)\nax4.scatter(x4, y4)\n\n# Set the title of the subplot\nax4.set_title('Items(C)')\n\n# Show the plots\nplt.show()\n```"}
{"file": "dataset/ori_500/HR_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 4))\n\n# Set the x-axis limits\nax.set_xlim(-2, 4)\n\n# Set the y-axis limits\nax.set_ylim(-2, 4)\n\n# Set the x-axis label\nax.set_xlabel('Reactive-2 payoff')\n\n# Set the y-axis label\nax.set_ylabel('Memory-2 payoff')\n\n# Set the title of the plot\nax.set_title('Reactive-2 vs Memory-2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 1], color='red', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='blue', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='green', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='purple', label='num. of points = 1')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='orange', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='cyan', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='magenta', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='yellow', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='black', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='white', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='gray', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='brown', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='pink', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='silver', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='gold', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='lime', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='navy', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='maroon', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='olive', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='teal', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='coral', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='crimson', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='cyan', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='fuchsia', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='gold', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='indigo', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='ivory', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='khaki', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='lavender', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='lime', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='magenta', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='navy', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='olive', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='orange', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='pink', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='purple', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='red', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='silver', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='tan', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='teal', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='tomato', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='turquoise', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='violet', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='wheat', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='yellow', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='yellowgreen', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='yellow', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='yellowgreen', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='yellow', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='yellowgreen', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='yellow', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='yellowgreen', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='yellow', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='yellowgreen', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='yellow', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='yellowgreen', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='yellow', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='yellowgreen', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='yellow', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='yellowgreen', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='yellow', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='yellowgreen', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='yellow', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='yellowgreen', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='yellow', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='yellowgreen', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='yellow', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='yellowgreen', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='yellow', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='yellowgreen', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='yellow', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='yellowgreen', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='yellow', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='yellowgreen', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='yellow', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='yellowgreen', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='yellow', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='yellowgreen', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='yellow', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='yellowgreen', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='yellow', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='yellowgreen', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='yellow', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='yellowgreen', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='yellow', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='yellowgreen', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='yellow', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='yellowgreen', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='yellow', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='yellowgreen', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='yellow', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='yellowgreen', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='yellow', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='yellowgreen', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 1, 2], color='yellow', label='num. of points = 3')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 1], color='yellowgreen', label='num. of points = 2')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [2, 3, 2], color='yellow', label='num. of points = 4')\n\n# Create a scatter plot\nax.scatter([1, 2, 3], [1, 2, 3], color='yellowgreen', label='num. of points = 5')\n\n# Create a scatter plot\nax.scatter"}
{"file": "dataset/ori_500/HR_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 4))\n\n# Create a scatter plot\nx = np.random.rand(50)\ny = np.random.rand(50)\nax.scatter(x, y)\n\n# Set the title of the plot\nax.set_title('Model = Vicuna')\n\n# Set the x and y labels\nax.set_xlabel('Permeability Reduction')\nax.set_ylabel('Porosity')\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='blue', alpha=0.3)\nax.add_patch(rect)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/PIP_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the background color of the plot\nax.set_facecolor('pink')\n\n# Set the title of the plot\nax.set_title('Stock Market Analysis')\n\n# Set the x-axis label\nax.set_xlabel('\u0394 Robust Accuracy (%)')\n\n# Set the y-axis label\nax.set_ylabel('\u0394 RNFR (%)')\n\n# Create a scatter plot\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y, c='green', marker='^')\n\n# Create a line plot\nx = np.linspace(-40, 10, 100)\ny = np.sin(x)\nax.plot(x, y, c='blue')\n\n# Create a bar chart\nx = np.arange(1, 6)\ny = np.random.randint(1, 10, 5)\nax.bar(x, y, color='orange')\n\n# Create a histogram\nx = np.random.randn(1000)\nax.hist(x, bins=30, color='gray')\n\n# Create a pie chart\nx = [10, 20, 30, 40]\nlabels = ['Apple', 'Banana', 'Cherry', 'Date']\nax.pie(x, labels=labels, colors=['red', 'yellow', 'pink', 'brown'])\n\n# Create a box plot\nx = np.random.rand(10, 4)\nax.boxplot(x)\n\n# Create a violin plot\nx = np.random.rand(10, 4)\nax.violinplot(x)\n\n# Create a heatmap\nx = np.random.rand(10, 10)\nax.imshow(x, cmap='hot', interpolation='nearest')\n\n# Create a contour plot\nx = np.linspace(-10, 10, 100)\ny = np.linspace(-10, 10, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nCS = ax.contourf(X, Y, Z, locator=plt.LogLocator(), cmap='coolwarm')\n\n# Create a stream plot\nx = np.linspace(-10, 10, 100)\ny = np.linspace(-10, 10, 100)\nX, Y = np.meshgrid(x, y)\nU = np.cos(Y)\nV = np.sin(X)\nax.streamplot(X, Y, U, V)\n\n# Create a polar plot\ntheta = np.linspace(0, 2*np.pi, 100)\nr = np.linspace(0, 1, 100)\ntheta, r = np.meshgrid(theta, r)\nax.polar(theta, r)\n\n# Create a 3D plot\nfrom mpl_toolkits.mplot3d import Axes3D\nx = np.linspace(-10, 10, 100)\ny = np.linspace(-10, 10, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nax = fig.add_subplot(111, projection='3d')\nax.plot_surface(X, Y, Z, cmap='viridis')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/PIP_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Exponential Scale')\n\n# Set the x-axis label\nax.set_xlabel('Gradient Steps (x 62.5K)')\n\n# Set the y-axis label\nax.set_ylabel('Exponential Scale')\n\n# Create a scatter plot with random data\nax.scatter(np.random.rand(10), np.random.rand(10), color='green')\n\n# Create a line plot with random data\nax.plot(np.random.rand(10), np.random.rand(10), color='red')\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.2, 0.2), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.4, 0.4), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.6, 0.6), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.8, 0.8), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.9, 0.9), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.1, 0.1), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.3, 0.3), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.5, 0.5), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.7, 0.7), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.9, 0.9), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.1, 0.1), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.3, 0.3), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.5, 0.5), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.7, 0.7), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.9, 0.9), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.1, 0.1), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.3, 0.3), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.5, 0.5), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.7, 0.7), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.9, 0.9), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.1, 0.1), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.3, 0.3), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.5, 0.5), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.7, 0.7), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.9, 0.9), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.1, 0.1), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.3, 0.3), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.5, 0.5), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.7, 0.7), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.9, 0.9), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.1, 0.1), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.3, 0.3), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.5, 0.5), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.7, 0.7), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.9, 0.9), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.1, 0.1), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.3, 0.3), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.5, 0.5), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.7, 0.7), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.9, 0.9), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.1, 0.1), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.3, 0.3), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.5, 0.5), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.7, 0.7), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.9, 0.9), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.1, 0.1), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.3, 0.3), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.5, 0.5), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.7, 0.7), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.9, 0.9), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.1, 0.1), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.3, 0.3), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.5, 0.5), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.7, 0.7), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.9, 0.9), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.1, 0.1), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.3, 0.3), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.5, 0.5), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.7, 0.7), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.9, 0.9), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.1, 0.1), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.3, 0.3), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.5, 0.5), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.7, 0.7), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.9, 0.9), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.1, 0.1), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.3, 0.3), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.5, 0.5), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.7, 0.7), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.9, 0.9), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.1, 0.1), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.3, 0.3), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.5, 0.5), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.7, 0.7), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.9, 0.9), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.1, 0.1), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.3, 0.3), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.5, 0.5), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.7, 0.7), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.9, 0.9), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.1, 0.1), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.3, 0.3), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.5, 0.5), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.7, 0.7), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.9, 0.9), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.1, 0.1), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.3, 0.3), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.5, 0.5), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.7, 0.7), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.9, 0.9), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.1, 0.1), 0.3, 0.3, color='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.3, 0.3), 0.3, 0.3, color='green')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.5, 0.5), 0.3, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a rectangle patch with random data\nrect = plt.Rectangle((0.7, 0.7), 0.3, 0.3, color='blue')\nax.add"}
{"file": "dataset/ori_500/PIP_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Predicted vs Actual')\n\n# Set the x-axis label\nax.set_xlabel('Maximum Predicted Probability')\n\n# Set the y-axis label\nax.set_ylabel('Number of Examples')\n\n# Set the x-axis limits\nax.set_xlim([0, 1])\n\n# Set the y-axis limits\nax.set_ylim([0, 2000])\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 1.1, 0.1))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 2001, 500))\n\n# Set the grid\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis border\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis border\nax.spines['left'].set_color('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis border\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis border\nax.spines['left'].set_color('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis border\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis border\nax.spines['left'].set_color('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis border\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis border\nax.spines['left'].set_color('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis border\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis border\nax.spines['left'].set_color('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis border\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis border\nax.spines['left'].set_color('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis border\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis border\nax.spines['left'].set_color('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis border\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis border\nax.spines['left'].set_color('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis border\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis border\nax.spines['left'].set_color('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis border\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis border\nax.spines['left'].set_color('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis border\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis border\nax.spines['left'].set_color('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis border\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis border\nax.spines['left'].set_color('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis border\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis border\nax.spines['left'].set_color('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis border\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis border\nax.spines['left'].set_color('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis border\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis border\nax.spines['left'].set_color('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis border\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis border\nax.spines['left'].set_color('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis border\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis border\nax.spines['left'].set_color('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis border\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis border\nax.spines['left'].set_color('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis border\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis border\nax.spines['left'].set_color('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis border\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis border\nax.spines['left'].set_color('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick"}
{"file": "dataset/ori_500/PIP_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Bias Score by Data Type and Model')\n\n# Set the x-axis label\nax.set_xlabel('Data Type')\n\n# Set the y-axis label\nax.set_ylabel('Bias Score')\n\n# Define the data points\nx = ['INT8', 'INT4', 'INT2']\ny = [9.3, 9.1, 9.0]\n\n# Plot the data points\nax.plot(x, y, 'ro-')\n\n# Add a legend\nax.legend(['Model1', 'Model2', 'Model3'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/PIP_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Predicted vs Actual')\n\n# Set the x-axis label\nax.set_xlabel('Maximum Predicted Probability')\n\n# Set the y-axis label\nax.set_ylabel('Number of Examples')\n\n# Set the x-axis limits\nax.set_xlim(0, 0.6)\n\n# Set the y-axis limits\nax.set_ylim(0, 1500)\n\n# Set the x-axis ticks\nax.set_xticks([0.25, 0.35, 0.45, 0.55])\n\n# Set the y-axis ticks\nax.set_yticks([500, 1000, 1500])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0.25', '0.35', '0.45', '0.55'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['500', '1000', '1500'])\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n#"}
{"file": "dataset/ori_500/PIP_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(2**6, 2**11)\n\n# Set the y-axis limits\nax.set_ylim(0, 400000)\n\n# Set the x-axis label\nax.set_xlabel('Width of Layer')\n\n# Set the y-axis label\nax.set_ylabel('Empirical Lipschitz Constant')\n\n# Create a list of colors for the lines\ncolors = ['green', 'blue', 'purple']\n\n# Create a list of labels for the lines\nlabels = ['Cos | n0 = 200', 'Cos | n0 = 400', 'ReLU | n0 = 200', 'ReLU | n0 = 400']\n\n# Create a list of line styles\nlinestyles = ['-', '--', '-.', ':']\n\n# Create a list of markers\nmarkers = ['o', 's', '^', 'D']\n\n# Create a list of x values\nx_values = [2**6, 2**7, 2**8, 2**9, 2**10, 2**11]\n\n# Create a list of y values\ny_values = [100000, 200000, 300000, 400000, 500000, 600000]\n\n# Plot the lines\nfor i in range(len(colors)):\n    ax.plot(x_values, y_values, color=colors[i], linestyle=linestyles[i], marker=markers[i], label=labels[i])\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/PIP_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Plot the data\nax.plot([0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000], [7000, 6500, 6000, 5500, 5000, 4500, 4000, 3500, 3000, 2500, 2000], 'r-')\nax.plot([0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000], [7000, 6500, 6000, 5500, 5000, 4500, 4000, 3500, 3000, 2500, 2000], 'g-')\nax.plot([0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000], [7000, 6500, 6000, 5500, 5000, 4500, 4000, 3500, 3000, 2500, 2000], 'b-')\n\n# Set the title and labels\nax.set_title('Stock Prices')\nax.set_xlabel('Time Steps')\nax.set_ylabel('Stock Price')\n\n# Add legends\nax.legend(['WI', 'ISQ', 'WIQL', 'Greedy'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/PIP_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Plot the data\nax.plot([0, 25, 50, 75, 100, 125, 150, 175, 200], [0.55, 0.50, 0.45, 0.40, 0.35, 0.30, 0.25, 0.20, 0.15], color='blue')\nax.plot([0, 25, 50, 75, 100, 125, 150, 175, 200], [0.50, 0.45, 0.40, 0.35, 0.30, 0.25, 0.20, 0.15, 0.10], color='orange')\n\n# Set the title and labels\nax.set_title('Discounted Cumulative Reward')\nax.set_xlabel('Time Steps')\nax.set_ylabel('Discounted Cumulative Reward')\n\n# Add a legend\nax.legend(['WI', 'ISQ'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/PIP_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Set the x-axis and y-axis limits\nax.set_xlim(-4, 4)\nax.set_ylim(-4, 4)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('X-axis')\nax.set_ylabel('Y-axis')\n\n# Set the title of the plot\nax.set_title('Scatter Plot with Colored Points')\n\n# Create a scatter plot with different colors for each point\ncolors = ['orange', 'blue', 'green']\nfor i, color in enumerate(colors):\n    ax.scatter(np.random.rand(10), np.random.rand(10), color=color, label=f'Category {i+1}')\n\n# Add a legend to the plot\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/PIP_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the limits of the plot\nax.set_xlim(-8, 8)\nax.set_ylim(-8, 8)\n\n# Draw a rectangle\nrectangle = plt.Rectangle((-2, -2), 4, 4, color='blue')\nax.add_patch(rectangle)\n\n# Draw a circle\ncircle = plt.Circle((0, 0), 1, color='red')\nax.add_artist(circle)\n\n# Draw a scatter plot\nx = np.random.rand(50)\ny = np.random.rand(50)\nax.scatter(x, y, color='green')\n\n# Draw a line\nline = plt.Line2D([-2, 2], [0, 0], color='black')\nax.add_line(line)\n\n# Draw a polygon\npolygon = plt.Polygon([[0, 0], [1, 1], [2, 0]], color='yellow')\nax.add_patch(polygon)\n\n# Draw a star\nstar = plt.Polygon([[0, 0], [1, 1], [2, 0], [1, -1], [0, 0]], color='orange')\nax.add_patch(star)\n\n# Draw a triangle\ntriangle = plt.Polygon([[0, 0], [1, 1], [0, 1]], color='purple')\nax.add_patch(triangle)\n\n# Draw a rectangle with a hole\nrectangle_with_hole = plt.Rectangle((-2, -2), 4, 4, color='blue', fill=False)\nax.add_patch(rectangle_with_hole)\n\n# Draw a circle with a hole\ncircle_with_hole = plt.Circle((0, 0), 1, color='red', fill=False)\nax.add_artist(circle_with_hole)\n\n# Draw a scatter plot with a hole\nx = np.random.rand(50)\ny = np.random.rand(50)\nax.scatter(x, y, color='green', edgecolor='black')\n\n# Draw a line with a hole\nline = plt.Line2D([-2, 2], [0, 0], color='black', linestyle='--')\nax.add_line(line)\n\n# Draw a polygon with a hole\npolygon_with_hole = plt.Polygon([[0, 0], [1, 1], [2, 0], [1, -1], [0, 0]], color='yellow', fill=False)\nax.add_patch(polygon_with_hole)\n\n# Draw a star with a hole\nstar_with_hole = plt.Polygon([[0, 0], [1, 1], [2, 0], [1, -1], [0, 0]], color='orange', fill=False)\nax.add_patch(star_with_hole)\n\n# Draw a triangle with a hole\ntriangle_with_hole = plt.Polygon([[0, 0], [1, 1], [0, 1]], color='purple', fill=False)\nax.add_patch(triangle_with_hole)\n\nplt.show()\n```"}
{"file": "dataset/ori_500/area_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('#f2f2f2')\n\n# Set the title of the plot\nax.set_title('Fitness Tracker', fontsize=16)\n\n# Set the x-axis label\nax.set_xlabel('Time (in minutes)', fontsize=14)\n\n# Set the y-axis label\nax.set_ylabel('Calories Burned', fontsize=14)\n\n# Set the x-ticks\nax.set_xticks([0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60])\n\n# Set the y-ticks\nax.set_yticks([0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax"}
{"file": "dataset/ori_500/area_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 10.0))\n\n# Set the title of the plot\nax.set_title('Stock Market Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Time Step')\n\n# Set the y-axis label\nax.set_ylabel('Stock Price')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3])\n\n# Set the y-ticks\nax.set_yticks([0, 10, 20, 30, 40, 50])\n\n# Set the x-tick labels\nax.set_xticklabels(['0', '1', '2', '3'])\n\n# Set the y-tick labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50'])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the color of the tick labels\n"}
{"file": "dataset/ori_500/area_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Dynamic Effect of Vocab on Zero Shot Accuracy')\n\n# Set the x-axis label\nax.set_xlabel('Deposition IO Norm')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Create a list of data points for the x-axis\nx = [0, 20, 40, 60, 80]\n\n# Create a list of data points for the y-axis\ny = [0.53, 0.75, 0.70, 0.65, 0.55]\n\n# Plot the data points\nax.plot(x, y)\n\n# Add a legend\nax.legend(['clip', 'laion (5k)', 'coco (5k)', 'laion (10k)', 'coco (10k)'])\n\n# Set the color of the line\nax.plot(x, y, color='black')\n\n# Set the color of the markers\nax.plot(x, y, marker='o', color='red')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the grid\nax.grid(color='#dcdcdc', linestyle='-')\n\n# Set the color of the axes\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the legend\nax.legend_.get_texts()[0].set_color('black')\n\n# Set the color of the grid lines\nax.grid(True, which='major', linestyle='-', linewidth='0.5', color='black')\n\n# Set the color of the markers\nax.plot(x, y, marker='o', color='red')\n\n# Set the color of the line\nax.plot(x, y, color='black')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the grid\nax.grid(color='#dcdcdc', linestyle='-')\n\n# Set the color of the axes\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the legend\nax.legend_.get_texts()[0].set_color('black')\n\n# Set the color of the grid lines\nax.grid(True, which='major', linestyle='-', linewidth='0.5', color='black')\n\n# Set the color of the markers\nax.plot(x, y, marker='o', color='red')\n\n# Set the color of the line\nax.plot(x, y, color='black')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the grid\nax.grid(color='#dcdcdc', linestyle='-')\n\n# Set the color of the axes\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the legend\nax.legend_.get_texts()[0].set_color('black')\n\n# Set the color of the grid lines\nax.grid(True, which='major', linestyle='-', linewidth='0.5', color='black')\n\n# Set the color of the markers\nax.plot(x, y, marker='o', color='red')\n\n# Set the color of the line\nax.plot(x, y, color='black')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the grid\nax.grid(color='#dcdcdc', linestyle='-')\n\n# Set the color of the axes\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the legend\nax.legend_.get_texts()[0].set_color('black')\n\n# Set the color of the grid lines\nax.grid(True, which='major', linestyle='-', linewidth='0.5', color='black')\n\n# Set the color of the markers\nax.plot(x, y, marker='o', color='red')\n\n# Set the color of the line\nax.plot(x, y, color='black')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the grid\nax.grid(color='#dcdcdc', linestyle='-')\n\n# Set the color of the axes\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the legend\nax.legend_.get_texts()[0].set_color('black')\n\n# Set the color of the grid lines\nax.grid(True, which='major', linestyle='-', linewidth='0.5', color='black')\n\n# Set the color of the markers\nax.plot(x, y, marker='o', color='red')\n\n# Set the color of the line\nax.plot(x, y, color='black')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the grid\nax.grid(color='#dcdcdc', linestyle='-')\n\n# Set the color of the axes\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the legend\nax.legend_.get_texts()[0].set_color('black')\n\n# Set the color of the grid lines\nax.grid(True, which='major', linestyle='-', linewidth='0.5', color='black')\n\n# Set the color of the markers\nax.plot(x, y, marker='o', color='red')\n\n# Set the color of the line\nax.plot(x, y, color='black')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the grid\nax.grid(color='#dcdcdc', linestyle='-')\n\n# Set the color of the axes\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the legend\nax.legend_.get_texts()[0].set_color('black')\n\n# Set the color of the grid lines\nax.grid(True, which='major', linestyle='-', linewidth='0.5', color='black')\n\n# Set the color of the markers\nax.plot(x, y, marker='o', color='red')\n\n# Set the color of the line\nax.plot(x, y, color='black')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the grid\nax.grid(color='#dcdcdc', linestyle='-')\n\n# Set the color of the axes\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the legend\nax.legend_.get_texts()[0].set_color('black')\n\n# Set the color of the grid lines\nax.grid(True, which='major', linestyle='-', linewidth='0.5', color='black')\n\n# Set the color of the markers\nax.plot(x, y, marker='o', color='red')\n\n# Set the color of the line\nax.plot(x, y, color='black')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the grid\nax.grid(color='#dcdcdc', linestyle='-')\n\n# Set the color of the axes\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the legend\nax.legend_.get_texts()[0].set_color('black')\n\n# Set the color of the grid lines\nax.grid(True, which='major', linestyle='-', linewidth='0.5', color='black')\n\n# Set the color of the markers\nax.plot(x, y, marker='o', color='red')\n\n# Set the color of the line\nax.plot(x, y, color='black')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the grid\nax.grid(color='#dcdcdc', linestyle='-')\n\n# Set the color of the axes\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the legend\nax.legend_.get_texts()[0].set_color('black')\n\n# Set the color of the grid lines\nax.grid(True, which='major', linestyle='-', linewidth='0.5', color='black')\n\n# Set the color of the markers\nax.plot(x, y, marker='o', color='red')\n\n# Set the color of the line\nax.plot(x, y, color='black')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the grid\nax.grid(color='#dcdcdc', linestyle='-')\n\n# Set the color of the axes\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the legend\nax.legend_.get_texts()[0].set_color('black')\n\n# Set the color of the grid lines\nax.grid(True, which='major', linestyle='-', linewidth='0.5', color='black')\n\n# Set the color of the markers\nax.plot(x, y, marker='o', color='red')\n\n# Set the color of the line\nax.plot(x, y, color='black')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the grid\nax.grid(color='#dcdcdc', linestyle='-')\n\n# Set the color of the axes\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the legend\nax.legend_.get_texts()[0].set_color('black')\n\n# Set the color of the grid lines\nax.grid(True, which='major', linestyle='-', linewidth='0.5', color='black')\n\n# Set the color of the markers\nax.plot(x, y, marker='o', color='red')\n\n# Set the color of the line\nax.plot(x, y, color='black')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the grid\nax.grid(color='#dcdcdc', linestyle='-')\n\n# Set the color of the axes\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the legend\nax.legend_.get_texts()[0].set_color('black')\n\n# Set the color of the grid lines\nax.grid(True, which='major', linestyle='-', linewidth='0.5', color='black')\n\n# Set the color of the markers\nax.plot(x, y, marker='o', color='red')\n\n# Set the color of the line\nax.plot(x, y, color='black')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the grid\nax.grid(color='#dcdcdc', linestyle='-')\n\n# Set the color of the axes\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the legend\nax.legend_.get_texts()[0].set_color('black')\n\n# Set the color of the grid lines\nax.grid(True, which='major', linestyle='-', linewidth='0.5', color='black')\n\n# Set the color of the markers\nax.plot(x, y, marker='o', color='red')\n\n# Set the color of the line\nax.plot(x, y, color='black')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the grid\nax.grid(color='#dcdcdc', linestyle='-')\n\n# Set the color of the axes\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the legend\nax.legend_.get_texts()[0].set_color('black')\n\n# Set the color of the grid lines\nax.grid(True, which='major', linestyle='-', linewidth='0.5', color='black')\n\n# Set the color of the markers\nax.plot(x, y, marker='o', color='red')\n\n# Set the color of the line\nax.plot(x, y, color='black')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the grid\nax.grid(color='#dcdcdc', linestyle='-')\n\n# Set the color of the axes\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the legend\nax.legend_.get_texts()[0].set_color('black')\n\n# Set the color of the grid lines\nax.grid(True, which='major', linestyle='-', linewidth='0.5', color='black')\n\n# Set the color of the markers\nax.plot(x, y, marker='o', color='red')\n\n# Set"}
{"file": "dataset/ori_500/area_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Cumulative Performance Gain by Augmentation Level')\n\n# Create a bar chart for each augmentation level\naugmentation_levels = ['Content', 'Organization', 'Language']\nperformance_gains = [5, 7, 6]\nbar_width = 0.35\nindex = np.arange(len(augmentation_levels))\nbar1 = ax.bar(index, performance_gains, bar_width, label='Performance Gain (%)')\n\n# Add some text for labels, title, and custom x-axis tick labels, etc.\nax.set_xlabel('Augmentation Level')\nax.set_ylabel('Performance Gain (%)')\nax.set_xticks(index)\nax.set_xticklabels(augmentation_levels)\nax.legend()\n\n# Create a line chart for each augmentation level\nline1 = ax.plot([0, 1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6], label='Line 1', color='orange')\nline2 = ax.plot([0, 1, 2, 3, 4, 5], [2, 3, 4, 5, 6, 7], label='Line 2', color='green')\n\n# Add some text for labels, title, and custom x-axis tick labels, etc.\nax.set_xlabel('n')\nax.set_ylabel('Performance Gain (%)')\nax.set_xticks([0, 1, 2, 3, 4, 5])\nax.set_xticklabels(['0', '1', '2', '3', '4', '5'])\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/area_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nyears = [1950, 1960, 1970, 1980, 1990, 2000, 2010]\npopulations = [1000, 1500, 2000, 3000, 4000, 5000, 6000]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Plot the data\nax.plot(years, populations, 'b-')\n\n# Set the title and labels\nax.set_title('World population')\nax.set_xlabel('Year')\nax.set_ylabel('Number of people (millions)')\n\n# Add a legend\nax.legend(['Africa', 'Americas', 'Asia', 'Europe', 'Oceania'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data for the plots\nx = [0, 20, 40, 60]\ny1 = [0.3, 0.4, 0.5, 0.6]\ny2 = [0.1, 0.2, 0.3, 0.4]\ny3 = [0.5, 0.6, 0.7, 0.8]\ny4 = [0.2, 0.3, 0.4, 0.5]\ny5 = [0.1, 0.2, 0.3, 0.4]\ny6 = [0.6, 0.7, 0.8, 0.9]\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(7.0, 5.0))\n\n# Plot the data\nax.plot(x, y1, color='blue', label='Notre-Dame de Paris')\nax.plot(x, y2, color='green', label='Demi-Gods and Semi-Devils')\nax.plot(x, y3, color='red', label='The Count of Monte Cristo')\nax.plot(x, y4, color='cyan', label='Game of Thrones')\nax.plot(x, y5, color='magenta', label='Attack on Titan')\n\n# Set the limits of the x-axis\nax.set_xlim(0, 60)\n\n# Set the limits of the y-axis\nax.set_ylim(0, 1)\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Fashion Accuracy')\n\n# Set the x-axis label\nax.set_xlabel('Fashion Items')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy (%)')\n\n# Define the data for the plot\nfashion_items = ['Which', 'What', 'How', 'Will', 'Are', 'Is', 'Choose', 'Select', 'Identify', 'Fill']\naccuracy = [55, 45, 35, 25, 15, 50, 40, 30, 20, 10]\n\n# Plot the data\nax.bar(fashion_items, accuracy, color='skyblue')\n\n# Set the limits of the y-axis\nax.set_ylim(0, 60)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_100.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(15, 5))\n\n# Create a bar chart\nax.bar(['Product A', 'Product B', 'Product C', 'Product D', 'Product E'], [80, 60, 40, 20, 0], color='blue')\n\n# Set the title of the chart\nax.set_title('Average Monthly Sales by Product Across Regions')\n\n# Set the x-axis label\nax.set_xlabel('Products')\n\n# Set the y-axis label\nax.set_ylabel('Sales')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('lavender')\n\n# Set the x-axis limits\nax.set_xlim(0, 45)\n\n# Set the y-axis limits\nax.set_ylim(-1, 0.75)\n\n# Set the x-axis ticks\nax.set_xticks([0, 9, 19, 29, 39, 49])\n\n# Set the y-axis ticks\nax.set_yticks([-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75])\n\n# Set the x-axis labels\nax.set_xticklabels(['0-9', '10-19', '20-29', '30-39', '40-49'])\n\n# Set the y-axis labels\nax.set_yticklabels(['-1.00', '-0.75', '-0.50', '-0.25', '0.00', '0.25', '0.50', '0.75'])\n\n# Set the title of the plot\nax.set_title('Speaker Comparison')\n\n# Set the labels for the x and y axes\nax.set_xlabel('Length')\nax.set_ylabel('Price')\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((0, 0), 10, 1, color='blue')\nax.add_patch(rect)\n\n# Add another rectangle to the plot\nrect = plt.Rectangle((10, 0), 10, 1, color='blue')\nax.add_patch(rect)\n\n# Add another rectangle to the plot\nrect = plt.Rectangle((20, 0), 10, 1, color='blue')\nax.add_patch(rect)\n\n# Add another rectangle to the plot\nrect = plt.Rectangle((30, 0), 10, 1, color='blue')\nax.add_patch(rect)\n\n# Add another rectangle to the plot\nrect = plt.Rectangle((40, 0), 10, 1, color='blue')\nax.add_patch(rect)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nbeauty_data = [2.2, 11.2, 19.9]\nmovie_lens_data = [3.0, 4.1, 5.1]\nyelp_data = [4.8, 4.4, 4.1]\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 3, figsize=(10.0, 4.0))\n\n# Plot the data\naxs[0].bar(range(len(beauty_data)), beauty_data)\naxs[1].bar(range(len(movie_lens_data)), movie_lens_data)\naxs[2].bar(range(len(yelp_data)), yelp_data)\n\n# Set the title of each subplot\naxs[0].set_title('Beauty')\naxs[1].set_title('MovieLens-1M')\naxs[2].set_title('Yelp')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nmodels = ['Bactrian-X', 'Lima-X', 'Bactrian-X', 'Lima-X']\nimprovement = [3.5, 2.3, 1.5, 0.8]\nprices = [4.4, 2.3, 1.5, 0.8]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Plot the data\nax.bar(models, improvement, color='blue')\nax.plot(models, prices, color='red')\n\n# Add a title and labels\nax.set_title('ENDEFRRITES sampled')\nax.set_xlabel('Model')\nax.set_ylabel('Improvement [%]')\n\n# Add a legend\nlegend_elements = [Line2D([0], [0], marker='o', color='w', label='Price', markerfacecolor='r', markersize=10)]\nax.legend(handles=legend_elements)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Pheme F1-score')\n\n# Set the x-axis label\nax.set_xlabel('Pheme')\n\n# Set the y-axis label\nax.set_ylabel('F1-score')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3, 4, 5, 6])\n\n# Set the x-tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'WSDMS', 'DELL'])\n\n# Set the y-ticks\nax.set_yticks(np.arange(0.75, 0.95, 0.05))\n\n# Set the y-tick labels\nax.set_yticklabels(['0.75', '0.80', '0.85', '0.90'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n"}
{"file": "dataset/ori_500/bar_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Human Labeling and Agreement Bias Checking')\n\n# Set the x-axis labels\nax.set_xticks([1, 2, 3, 4, 5, 6])\nax.set_xticklabels(['1', '2', '3', '4', '5', '6'])\n\n# Set the y-axis label\nax.set_ylabel('Scores')\n\n# Set the y-axis limits\nax.set_ylim(0, 50)\n\n# Set the y-axis ticks\nax.set_yticks([0, 10, 20, 30, 40, 50])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='orange', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='pink', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='cyan')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='magenta')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='yellow')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='brown')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='lime', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='silver', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='gold')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='navy')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='teal')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='indigo')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='violet', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='white', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='grey')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='silver')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='gold')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='navy', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='teal', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='indigo')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='violet')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='white')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='silver', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='gold')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='navy')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='teal')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='indigo')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='violet', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='white', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='grey')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='silver')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='gold')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='navy', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='teal', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='indigo')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='violet')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='white')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='silver', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='gold')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='navy')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='teal')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='indigo')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='violet', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='white', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='grey')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='silver')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='gold')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='navy', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='teal', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='indigo')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='violet')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='white')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='silver', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='gold')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='navy')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='teal')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='indigo')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='violet', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='white', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='grey')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='silver')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='gold')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='navy', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='teal', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='indigo')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='violet')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='white')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='silver', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='gold')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='navy')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='teal')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='indigo')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='violet', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='white', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='grey')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='silver')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='gold')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='navy', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='teal', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='indigo')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='violet')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='white')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='silver', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='gold')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='navy')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='teal')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='indigo')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='violet', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='white', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='grey')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='silver')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='gold')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='navy', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='teal', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='indigo')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='violet')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='white')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='silver', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='gold')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='navy')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='teal')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='indigo')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='violet', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='white', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='grey')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='silver')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='gold')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='navy', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='teal', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='indigo')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='violet')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='white')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='silver', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='gold')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='navy')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='teal')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='indigo')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='violet', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='white', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='grey')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='silver')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='gold')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='navy', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='teal', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='indigo')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='violet')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='white')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(color='grey', linestyle='--', linewidth=0.5)\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(color='silver', linestyle='--', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='gold')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='navy')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='teal"}
{"file": "dataset/ori_500/bar_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\nax.set_title('Resonance Preference Plot for rich-context')\n\n# Create a bar chart with two bars\nx = ['s1', 's2']\ny = [700, 800]\nax.bar(x, y, color='blue')\n\n# Add labels to the x-axis\nax.set_xlabel('Count')\nax.set_xticks([0, 1])\nax.set_xticklabels(['0', '1'])\n\n# Add labels to the y-axis\nax.set_ylabel('Count')\nax.set_yticks([0, 200, 400, 600, 800])\nax.set_yticklabels(['0', '200', '400', '600', '800'])\n\n# Add a legend\nax.legend(['Role', 'gpt4', 'gpt4-cot'], loc='upper right')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nbrands = ['LLaMA-2-7B', 'Evol-Instruct-70k', 'Evol-Instruct-AlpaGasus-1k', 'Evol-Instruct-1k-longest', 'LIMA-1k']\naccuracies = [53.0, 51.3, 56.4, 56.4, 53.0]\ntasks = ['ARC', 'MMLU', 'TruthfulQ&A', 'Winogrande', 'Average']\nscores = [73.1, 70.4, 73.2, 72.8, 71.8]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Plot the data\nax.barh(brands, accuracies, color='skyblue')\nax.barh(tasks, scores, color='pink')\n\n# Set the labels and title\nax.set_xlabel('Accuracy (%)')\nax.set_title('Model Accuracy by Brand and Task')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the x-axis limits\nax.set_xlim(35, 75)\n\n# Set the y-axis limits\nax.set_ylim(35, 75)\n\n# Set the x-axis ticks\nax.set_xticks(range(35, 80, 5))\n\n# Set the y-axis ticks\nax.set_yticks(range(35, 80, 5))\n\n# Set the x-axis labels\nax.set_xlabel('Time (s)')\n\n# Set the y-axis labels\nax.set_ylabel('Speed (mph)')\n\n# Set the title of the plot\nax.set_title('Car Performance Comparison')\n\n# Create a list of car names\ncar_names = ['GSM8K', 'MNLI', 'race@High']\n\n# Create a list of car colors\ncar_colors = ['blue', 'cyan', 'darkblue']\n\n# Create a list of car speeds\ncar_speeds = [60, 65, 62]\n\n# Create a list of car times\ncar_times = [45, 50, 55]\n\n# Create a bar chart for each car\nfor i in range(len(car_names)):\n    ax.barh(car_names[i], car_speeds[i], color=car_colors[i])\n    ax.text(car_speeds[i] + 1, i, str(car_times[i]) + ' s', va='center')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nmatches = ['DLMA-7B VS. LLAMAa-7B', 'DLMA-7B VS. CD-7B', 'DLMA-7B VS. RLAIF-7B', 'DLMA-7B VS. RLCD-7B', 'DLMA-13B VS. LLAMAa-13B', 'DLMA-13B VS. CD-13B', 'DLMA-13B VS. RLAIF-13B', 'DLMA-13B VS. RLCD-13B']\nwin_rates = [60.2, 60.2, 46.8, 34.7, 62.5, 62.5, 62.5, 30.9]\ntie_rates = [28.8, 28.8, 39.1, 39.1, 27.7, 27.7, 27.7, 38.7]\nloss_rates = [11.0, 11.0, 14.1, 26.2, 9.8, 9.8, 9.8, 14.5]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Plot the data\nfor i in range(len(matches)):\n    ax.barh(matches[i], win_rates[i], color='green')\n    ax.barh(matches[i], tie_rates[i], left=win_rates[i], color='blue')\n    ax.barh(matches[i], loss_rates[i], left=[win_rates[i] + tie_rates[i] for _ in range(len(matches))], color='red')\n\n# Set the title and labels\nax.set_title('DLMA VS. Baseline Methods On HHH (Evaluated by GPT4)')\nax.set_xlabel('Win Rate (%)')\nax.set_ylabel('Match')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_2.pdf", "response": "import matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 3.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 40)\n\n# Set the y-axis limits\nax.set_ylim(0, 10)\n\n# Set the x-axis ticks\nax.set_xticks([0, 10, 20, 30, 40])\n\n# Set the y-axis ticks\nax.set_yticks([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n\n# Set the x-axis labels\nax.set_xticklabels(['0', '10', '20', '30', '40'])\n\n# Set the y-axis labels\nax.set_yticklabels(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the title of the plot\nax.set_title('Gait Distribution Over Time: Policy ORC=111')\n\n# Set the color of the gait distribution lines\ngait_distribution_colors = ['green', 'red', 'blue', 'purple', 'brown', 'orange', 'grey']\n\n# Set the width of the gait distribution lines\ngait_distribution_widths = [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5]\n\n# Set the labels for the gait distribution lines\ngait_distribution_labels = ['trot', 'pace', 'bound', 'pronk', 'transition', 'gait', 'policy']\n\n# Plot the gait distribution lines\nfor i in range(len(gait_distribution_colors)):\n    ax.plot(range(0, 41), [i]*41, color=gait_distribution_colors[i], linewidth=gait_distribution_widths[i], label=gait_distribution_labels[i])\n\n# Add a legend to the plot\nax.legend()\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/bar_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\ngames = ['LIMA', 'Vicuna', 'Koala', 'Wizardlm', 'Self-Instruct']\nwins = [68, 82, 68, 72, 68]\nratings = [24, 15, 22, 19, 23]\npopularity = [8, 3, 10, 9, 9]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Plot bars\nax.bar(games, wins, color='navy')\n\n# Add labels and title\nax.set_xlabel('Games')\nax.set_ylabel('Wins')\nax.set_title('Game Wins by Game')\n\n# Add ratings and popularity\nfor i, v in enumerate(ratings):\n    ax.text(i, v + 1, str(v), ha='center', va='bottom')\n\nfor i, v in enumerate(popularity):\n    ax.text(i, v - 1, str(v), ha='center', va='top')\n\n# Show plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the charts\nbenefits_data = [14.8, 29.6, 29.6, 18.5, 8.4]\nreliability_data = [9.4, 24.1, 24.1, 40.7, 27.8, 9.3]\nsecurity_data = [8.3, 14.8, 14.8, 40.7, 16.7, 9.3]\nprivacy_data = [24.1, 29.6, 29.6, 20.4, 16.7, 9.3]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Plot the data\nax.bar(range(len(benefits_data)), benefits_data, color='red')\nax.bar(range(len(reliability_data)), reliability_data, color='orange')\nax.bar(range(len(security_data)), security_data, color='grey')\nax.bar(range(len(privacy_data)), privacy_data, color='blue')\n\n# Set the labels\nax.set_xticks(range(len(benefits_data)))\nax.set_xticklabels(['Strong Disagree', 'Disagree', 'Neutral', 'Agree', 'Strong Agree'])\n\n# Set the title\nax.set_title('Eye Movement')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_22.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 10.0))\n\n# Set the title of the plot\nax.set_title('Stock Market Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Rotation Angle (\u00b0)')\n\n# Set the y-axis label\nax.set_ylabel('Rate of Change (%)')\n\n# Set the x-ticks\nax.set_xticks(np.arange(-150, 151, 30))\n\n# Set the y-ticks\nax.set_yticks(np.arange(-20, 41, 10))\n\n# Set the color of the x-axis labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='purple')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='purple')\n\n# Set the color of the x-axis grid lines\nax.grid"}
{"file": "dataset/ori_500/bar_23.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Ratings of Language Models on a Scale from 1-4')\n\n# Set the x-axis label\nax.set_xlabel('Language Models')\n\n# Set the y-axis label\nax.set_ylabel('Ratings')\n\n# Define the data for the bar chart\nx = ['GPT4', 'GPT-few-shot', 'GPT3.5', 'StarCoder', 'Code Llama', 'NCL']\ny = [3.2, 2.8, 2.5, 2.7, 2.6, 2.4]\n\n# Define the colors for the bars\ncolors = ['blue', 'orange', 'red', 'pink', 'green', 'purple']\n\n# Create the bar chart\nax.bar(x, y, color=colors)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nmodels = ['Majority', 'Flan-T5', 'GPT-3.5', 'GPT-4', 'Wizard13b', 'Vicuna13b', 'Mistral17b']\naccuracies = [0.302, 0.601, 0.468, 0.653, 0.384, 0.379, 0.364]\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\nax.bar(models, accuracies, color='blue')\n\n# Set the title and labels\nax.set_title('Model Accuracy')\nax.set_xlabel('Models')\nax.set_ylabel('Accuracy')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_25.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Set the title of the plot\nax.set_title('GPT4-as-a-judge')\n\n# Set the x-axis label\nax.set_xlabel('Time (s)')\n\n# Set the y-axis label\nax.set_ylabel('Voltage (V)')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3, 4])\n\n# Set the y-ticks\nax.set_yticks([0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100])\n\n# Set the x-tick labels\nax.set_xticklabels(['0', '1', '2', '3', '4'])\n\n# Set the y-tick labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the background color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot area\nax.set_facecolor('lightblue')\n\n# Set the background color of the plot"}
{"file": "dataset/ori_500/bar_26.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nemotions = ['Ang', 'Ct', 'Dis', 'Fea', 'Joy', 'Ntr', 'Sad', 'Sur']\nsentiments = ['negative', 'positive', 'none', 'mixed']\nvalues = [120, 150, 300, 200, 250, 350, 180, 90]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Sentiment Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Emotions')\n\n# Set the y-axis label\nax.set_ylabel('Sentiment Values')\n\n# Create a bar chart\nax.bar(emotions, values, color='red')\n\n# Add a legend\nax.legend(sentiments)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_27.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nbrands = ['GPT-4V', 'RoboCodeX']\nsuccess_rates = [0.95, 0.85]\noccupancy_errors = [0.02, 0.03]\ngrounding_errors = [0.01, 0.02]\ngripper_collision_errors = [0.01, 0.01]\ntrajectory_optimization_errors = [0.01, 0.01]\ngrasping_failed = [0.01, 0.01]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 3.0))\n\n# Plot bars\nax.barh(brands, success_rates, color='green', label='Success')\nax.barh(brands, occupancy_errors, left=success_rates, color='orange', label='Occupancy Error')\nax.barh(brands, grounding_errors, left=[s + o for s, o in zip(success_rates, occupancy_errors)], color='gray', label='Grounding Error')\nax.barh(brands, gripper_collision_errors, left=[s + o + g for s, o, g in zip(success_rates, occupancy_errors, grounding_errors)], color='yellow', label='Gripper collision')\nax.barh(brands, trajectory_optimization_errors, left=[s + o + g + gc for s, o, g, gc in zip(success_rates, occupancy_errors, grounding_errors, gripper_collision_errors)], color='blue', label='Trajectory optimization Error')\nax.barh(brands, grasping_failed, left=[s + o + g + gc + to for s, o, g, gc, to in zip(success_rates, occupancy_errors, grounding_errors, gripper_collision_errors, trajectory_optimization_errors)], color='purple', label='Grasping failed')\n\n# Set labels and title\nax.set_xlabel('Percentage of total trials')\nax.set_title('Robotics Success Rate Comparison')\n\n# Show legend\nax.legend()\n\n# Show plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_28.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Transmission Delay (ms)')\n\n# Set the x-axis label\nax.set_xlabel('Datasets')\n\n# Set the y-axis label\nax.set_ylabel('Transmission Delay (ms)')\n\n# Set the x-ticks\nax.set_xticks([1, 2, 3, 4])\n\n# Set the x-tick labels\nax.set_xticklabels(['VOC 2012', 'DEEPJSCC w/ ofdm', 'OURS', 'COCO 2017'])\n\n# Set the y-ticks\nax.set_yticks([0, 1, 2, 3, 4, 5])\n\n# Set the y-tick labels\nax.set_yticklabels(['0', '1', '2', '3', '4', '5'])\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'JPEG', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'DEEPJSCC w/ ofdm', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'OURS', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'COCO 2017', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '0', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '1', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '2', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '3', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '4', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '5', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '6', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '7', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '8', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '9', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '10', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '11', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '12', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '13', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '14', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '15', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '16', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '17', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '18', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '19', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '20', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '21', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '22', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '23', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '24', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '25', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '26', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '27', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '28', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '29', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '30', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '31', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '32', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '33', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '34', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '35', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '36', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '37', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '38', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '39', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '40', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '41', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '42', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '43', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '44', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '45', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '46', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '47', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '48', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '49', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '50', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '51', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '52', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '53', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '54', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '55', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '56', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '57', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '58', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '59', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '60', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '61', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '62', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '63', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '64', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '65', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '66', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '67', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '68', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '69', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '70', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '71', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='black')\n\n# Set the color of the text\nax.text(0.5, 0.5, '72', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center"}
{"file": "dataset/ori_500/bar_29.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Restaurant Menu')\n\n# Set the x-axis label\nax.set_xlabel('PDEs')\n\n# Set the y-axis label\nax.set_ylabel('Log L2')\n\n# Set the x-ticks\nax.set_xticks([1, 2, 3, 4, 5])\n\n# Set the x-tick labels\nax.set_xticklabels(['Wave', 'Diffusion', 'Heat', 'Poison', 'Burgers'])\n\n# Set the y-ticks\nax.set_yticks([1.0, 1.5, 2.0, 2.5, 3.0, 3.5, 4.0])\n\n# Set the y-tick labels\nax.set_yticklabels(['1e-4', '1e-3', '1e-2', '1e-1', '1e-0', '1e+1', '1e+2'])\n\n# Set the color of the x-tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-tick labels\nax.tick_params(axis='y', colors='red')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('red')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'RBF-INT', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='blue')\nax.text(0.5, 0.5, 'RBF-POL', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='red')\nax.text(0.5, 0.5, 'RBF-COM', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='orange')\n\n# Set the color of the bars\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='blue')\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='red')\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='orange')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='blue'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='red'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='orange'))\n\n# Set the color of the text\nax.text(0.5, 0.5, 'RBF-INT', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='blue')\nax.text(0.5, 0.5, 'RBF-POL', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='red')\nax.text(0.5, 0.5, 'RBF-COM', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='orange')\n\n# Set the color of the bars\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='blue')\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='red')\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='orange')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='blue'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='red'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='orange'))\n\n# Set the color of the text\nax.text(0.5, 0.5, 'RBF-INT', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='blue')\nax.text(0.5, 0.5, 'RBF-POL', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='red')\nax.text(0.5, 0.5, 'RBF-COM', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='orange')\n\n# Set the color of the bars\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='blue')\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='red')\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='orange')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='blue'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='red'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='orange'))\n\n# Set the color of the text\nax.text(0.5, 0.5, 'RBF-INT', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='blue')\nax.text(0.5, 0.5, 'RBF-POL', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='red')\nax.text(0.5, 0.5, 'RBF-COM', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='orange')\n\n# Set the color of the bars\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='blue')\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='red')\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='orange')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='blue'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='red'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='orange'))\n\n# Set the color of the text\nax.text(0.5, 0.5, 'RBF-INT', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='blue')\nax.text(0.5, 0.5, 'RBF-POL', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='red')\nax.text(0.5, 0.5, 'RBF-COM', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='orange')\n\n# Set the color of the bars\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='blue')\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='red')\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='orange')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='blue'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='red'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='orange'))\n\n# Set the color of the text\nax.text(0.5, 0.5, 'RBF-INT', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='blue')\nax.text(0.5, 0.5, 'RBF-POL', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='red')\nax.text(0.5, 0.5, 'RBF-COM', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='orange')\n\n# Set the color of the bars\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='blue')\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='red')\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='orange')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='blue'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='red'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='orange'))\n\n# Set the color of the text\nax.text(0.5, 0.5, 'RBF-INT', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='blue')\nax.text(0.5, 0.5, 'RBF-POL', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='red')\nax.text(0.5, 0.5, 'RBF-COM', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='orange')\n\n# Set the color of the bars\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='blue')\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='red')\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='orange')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='blue'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='red'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='orange'))\n\n# Set the color of the text\nax.text(0.5, 0.5, 'RBF-INT', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='blue')\nax.text(0.5, 0.5, 'RBF-POL', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='red')\nax.text(0.5, 0.5, 'RBF-COM', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='orange')\n\n# Set the color of the bars\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='blue')\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='red')\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='orange')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='blue'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='red'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='orange'))\n\n# Set the color of the text\nax.text(0.5, 0.5, 'RBF-INT', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='blue')\nax.text(0.5, 0.5, 'RBF-POL', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='red')\nax.text(0.5, 0.5, 'RBF-COM', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='orange')\n\n# Set the color of the bars\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='blue')\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='red')\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='orange')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='blue'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='red'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='orange'))\n\n# Set the color of the text\nax.text(0.5, 0.5, 'RBF-INT', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='blue')\nax.text(0.5, 0.5, 'RBF-POL', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='red')\nax.text(0.5, 0.5, 'RBF-COM', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='orange')\n\n# Set the color of the bars\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='blue')\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='red')\nax.bar([1, 2, 3, 4, 5], [1.0, 1.5, 2.0, 2.5, 3.0], color='orange')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='blue'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='red'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='orange'))\n\n# Set the color of the text\nax.text(0.5, 0.5, 'RBF-INT', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='blue')\nax.text(0.5, 0.5, 'RBF-POL', horizontalalignment='center', verticalalignment='center', transform=ax"}
{"file": "dataset/ori_500/bar_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nlive_data = [975, 975, 975, 975, 975, 975, 975, 975, 975, 975]\nsrocc_data = [975, 975, 975, 975, 975, 975, 975, 975, 975, 975]\nciq_data = [975, 975, 975, 975, 975, 975, 975, 975, 975, 975]\ntid2013_data = [975, 975, 975, 975, 975, 975, 975, 975, 975, 975]\nlive_m_data = [975, 975, 975, 975, 975, 975, 975, 975, 975, 975]\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(2, 2, figsize=(10, 3))\n\n# Plot the data\naxs[0, 0].plot(live_data, 'b-o')\naxs[0, 1].plot(srocc_data, 'r-o')\naxs[1, 0].plot(ciq_data, 'g-o')\naxs[1, 1].plot(tid2013_data, 'y-o')\n\n# Set the title of each subplot\naxs[0, 0].set_title('LIVE')\naxs[0, 1].set_title('CSIQ')\naxs[1, 0].set_title('TID2013')\naxs[1, 1].set_title('LIVE-M')\n\n# Set the y-axis label\naxs[0, 0].set_ylabel('Metric Values')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_30.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nx = ['Mixtral-8x7b-Instruct', 'GPT-3.5', 'GPT-4']\ny = [6.11, 28.33, 31.11]\nz = [85.0, 56.11, 60.56]\nw = [44.44, 42.78, 42.78]\n\n# Create a figure and a set of subplots\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Plot the data\nax.plot(x, y, color='red')\nax.plot(x, z, color='blue')\nax.plot(x, w, color='purple')\n\n# Set the title and labels\nax.set_title('One-Pass Rate (%)')\nax.set_xlabel('Model')\nax.set_ylabel('One-Pass Rate (%)')\n\n# Add a legend\nax.legend(['Zero-shot', 'One-shot', 'DS-Agent'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_31.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nlabels = ['LMM-based vs. TPLM-based', 'LMM-based vs. Template', 'LMM-based vs. Markdown', 'TPLM-based vs. Template', 'TPLM-based vs. Markdown', 'Markdown vs. Template']\nwin_rates = [17.0, 20.0, 25.0, 30.5, 31.5, 19.5]\ntie_rates = [54.0, 67.5, 56.5, 57.5, 54.5, 61.0]\nloss_rates = [29.0, 12.5, 18.5, 12.0, 14.0, 19.5]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Plot the data\nax.barh(labels, win_rates, color='skyblue', label='Win')\nax.barh(labels, tie_rates, left=win_rates, color='palegreen', label='Tie')\nax.barh(labels, loss_rates, left=[x+y for x,y in zip(win_rates, tie_rates)], color='coral', label='Loss')\n\n# Set the labels and title\nax.set_xlabel('Percentage')\nax.set_title('Comparison of LMM-based vs. TPLM-based, LMM-based vs. Template, LMM-based vs. Markdown, TPLM-based vs. Template, TPLM-based vs. Markdown, and Markdown vs. Template')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_32.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nnames = ['Combat Spider', 'Milky Cow', 'Shear Sheep']\nprobabilities = [0.72, 0.74, 0.56]\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(6.0, 2.0))\nax.bar(names, probabilities, color='blue')\n\n# Set the title and labels\nax.set_title('Probability of Improvement over VLM Image Encoder Baseline Returns')\nax.set_xlabel('Model')\nax.set_ylabel('Probability of Improvement')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_33.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nx = [0, 1, 2, 3, 4]\ny = [100, 60, 48.1, 100, 91.7]\nerr = [10, 10, 10, 10, 10]\nerr2 = [10, 10, 10, 10, 10]\n\n# Create figure and axis objects\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Plot data\nax.plot(x, y, 'o-')\n\n# Set labels and title\nax.set_xlabel('Steps')\nax.set_ylabel('Scores')\nax.set_title('Instruction Following Results In Different Steps (gpt-3.5-turbo)')\n\n# Add error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='r', elinewidth=3, capsize=0)\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='g', elinewidth=3, capsize=0)\n\n# Set x-axis limits\nax.set_xlim([0, 5])\n\n# Set y-axis limits\nax.set_ylim([0, 12])\n\n# Set x-axis ticks\nax.set_xticks(range(0, 5, 1))\n\n# Set y-axis ticks\nax.set_yticks(range(0, 13, 1))\n\n# Set grid\nax.grid(True)\n\n# Set color of the lines\nax.plot(x, y, color='blue')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the background\nax.set_facecolor('lightgrey')\n\n# Set color of the text\nax.set_color_cycle(['black', 'blue', 'green', 'red'])\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr=err2, fmt='o', ecolor='green')\n\n# Set color of the error bars\nax.errorbar(x, y, yerr=err, fmt='o', ecolor='red')\nax.errorbar(x, y, yerr"}
{"file": "dataset/ori_500/bar_34.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Product Performance')\n\n# Set the x-axis label\nax.set_xlabel('Products')\n\n# Set the y-axis label\nax.set_ylabel('Performance (%)')\n\n# Set the x-ticks\nax.set_xticks(range(len(products)))\nax.set_xticklabels(products)\n\n# Set the y-limits\nax.set_ylim(0, 100)\n\n# Set the grid\nax.grid(True)\n\n# Set the background color\nax.set_facecolor('#F5F5DC')\n\n# Set the border color\nax.spines['bottom'].set_color('#8B4513')\nax.spines['top'].set_color('#8B4513')\nax.spines['right'].set_color('#8B4513')\nax.spines['left'].set_color('#8B4513')\n\n# Set the bar colors\nbar_colors = ['blue', 'yellow', 'blue', 'green', 'orange', 'brown', 'purple', 'pink', 'cyan', 'grey', 'black', 'red', 'lime', 'magenta', 'silver', 'gold', 'navy', 'olive', 'maroon', 'teal', 'coral', 'azure', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver', 'silver',"}
{"file": "dataset/ori_500/bar_35.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nbrands = ['Random', 'Llama2', 'Mistral']\nscores = [5.52, 5.53, 5.83]\ncolors = ['purple', 'brown', 'green']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Plot the data\nax.bar(brands, scores, color=colors)\n\n# Set the title and labels\nax.set_title('MT-Bench Score Comparison')\nax.set_xlabel('Brands')\nax.set_ylabel('MT-Bench Score')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_36.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nx = [100, 1000]\ny = [49.98, 49.63]\nyerr = [0.02, 0.02]\n\n# Create figure and axis objects\nfig, ax = plt.subplots(figsize=(6.61, 5.23))\n\n# Plot data\nax.errorbar(x, y, yerr=yerr, fmt='o', capsize=5)\n\n# Set title and labels\nax.set_title('Random Sampling')\nax.set_xlabel('Number of Clusters')\nax.set_ylabel('MMSE')\n\n# Set x-axis limits\nax.set_xlim(0, 1000)\n\n# Set y-axis limits\nax.set_ylim(47, 53)\n\n# Set grid\nax.grid(True)\n\n# Show plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_37.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data\nyears = ['ResNet18', 'AlexNet', 'ResNet50']\nspeedups = [7.4, 6.1, 4.3]\nperturbations = [0, 4.8, 7.8]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 4.0))\n\n# Plot the speedup data\nax.bar(years, speedups, color='skyblue')\n\n# Plot the perturbation data\nfor i, year in enumerate(years):\n    ax.text(i, speedups[i] + 0.5, f'{perturbations[i]}%', ha='center', va='bottom')\n\n# Set the title and labels\nax.set_title('Perturbation')\nax.set_xlabel('Year')\nax.set_ylabel('Speedup')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_38.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 5.0))\n\n# Set the title of the plot\nax.set_title('LeetCode, DS-6.7b')\n\n# Set the x-axis label\nax.set_xlabel('Time (ms)')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy (%)')\n\n# Set the x-ticks\nax.set_xticks([1, 2, 3, 4, 5, 6, 7])\n\n# Set the x-tick labels\nax.set_xticklabels(['CL-7b', 'CL-13b', 'CL-34b', 'DS-6.7b', 'DS-33b', 'SC'])\n\n# Set the y-ticks\nax.set_yticks([0, 20, 40, 60, 80, 100])\n\n# Set the y-tick labels\nax.set_yticklabels(['0%', '20%', '40%', '60%', '80%', '100%'])\n\n# Set the color of the x-axis\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis\nax.spines['left'].set_color('green')\n\n# Set the color of the top and right spines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the text\nax.text(0.5, 0.95, 'Correct', transform=ax.transAxes, fontsize=12, verticalalignment='top')\nax.text(0.5, 0.90, 'Counterfeit (Test-Passing)', transform=ax.transAxes, fontsize=12, verticalalignment='top')\nax.text(0.5, 0.85, 'Counterfeit (Test-Failing)', transform=ax.transAxes, fontsize=12, verticalalignment='top')\nax.text(0.5, 0.80, 'Counterfeit (Test-Failing), Confused', transform=ax.transAxes, fontsize=12, verticalalignment='top')\n\n# Set the color of the bars\nax.bar([1, 2, 3, 4, 5, 6], [80, 60, 40, 20, 0, 100], color='lightgreen')\nax.bar([1, 2, 3, 4, 5, 6], [70, 50, 30, 10, 0, 90], color='lightblue')\nax.bar([1, 2, 3, 4, 5, 6], [60, 40, 20, 0, 0, 80], color='lightcoral')\nax.bar([1, 2, 3, 4, 5, 6], [50, 30, 10, 0, 0, 70], color='lightsalmon')\nax.bar([1, 2, 3, 4, 5, 6], [40, 20, 0, 0, 0, 60], color='lightseagreen')\nax.bar([1, 2, 3, 4, 5, 6], [30, 10, 0, 0, 0, 50], color='lightpink')\nax.bar([1, 2, 3, 4, 5, 6], [20, 0, 0, 0, 0, 40], color='lightyellow')\nax.bar([1, 2, 3, 4, 5, 6], [10, 0, 0, 0, 0, 30], color='lightcyan')\nax.bar([1, 2, 3, 4, 5, 6], [0, 0, 0, 0, 0, 20], color='lightgrey')\nax.bar([1, 2, 3, 4, 5, 6], [0, 0, 0, 0, 0, 10], color='lightblue')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_39.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\ngames = ['Vicuna', 'Koala', 'WizardLM', 'SInstruct', 'LIMA']\nwins = [53, 80, 116, 99, 179]\nrecosts = [6, 33, 49, 50, 23]\nties = [21, 67, 53, 103, 98]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Plot bars for wins and recosts\nax.bar(games, wins, color='coral')\nax.bar(games, recosts, bottom=wins, color='orange')\n\n# Plot bars for ties\nfor i, v in enumerate(ties):\n    ax.text(i, wins[i] + recosts[i], str(v), ha='center', va='bottom')\n\n# Set labels and title\nax.set_xlabel('Games')\nax.set_ylabel('Wins and Recosts')\nax.set_title('Game Performance')\n\n# Show plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nbrands = ['CometKiwi', 'LaBSE', 'IF', 'Max', 'Ppl', 'STARE', 'Wass Combo', 'ALTI+', 'STARE']\nsales = [35.15, 26.86, 26.08, 19.08, 22.09, 20.67, 58.99, 66.19, 58.99]\naggregations = [35.15, 26.86, 26.08, 19.08, 22.09, 20.67, 58.99, 66.19, 58.99]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Plot the data\nax.bar(brands, sales, color='green')\nax.plot(brands, aggregations, color='red')\n\n# Set the title and labels\nax.set_title('FPR@90TPR on Guerreiro et al. 2022')\nax.set_xlabel('Brands')\nax.set_ylabel('Sales')\n\n# Add a rectangle around the aggregated values\nfor i, v in enumerate(aggregations):\n    ax.text(i, v + 1, str(v), ha='center', va='bottom')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_40.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Literal', 'Assignment', 'Operator', 'Comment', 'Exception Handling', 'Method Call', 'Return', 'Variable', 'External Class', 'Argument', 'Conditional Block', 'Loop', 'Conditional Statement', 'Variable Declaration', 'Method Declaration', 'Parameter']\nvalues = [20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160]\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\nax.bar(categories, values, color='blue')\n\n# Set the title and labels\nax.set_title('Relative Difference in Machine vs. Human Focus on Semantic Categories')\nax.set_xlabel('Semantic Category')\nax.set_ylabel('Difference (%)')\n\n# Rotate the x-axis labels for better visibility\nplt.xticks(rotation=45)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_41.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data for the plots\nx = np.arange(5, 21, 5)\ny1 = [66.3, 61.9, 53.8, 10.1, 13.6, 13.7]\ny2 = [49.3, 45.7, 41.6, 31.5, 36.3, 36.5]\ny3 = [48.0, 42.6, 36.5, 30.6, 22.3, 25.9]\ny4 = [49.5, 40.2, 42.8, 36.8, 30.6, 22.5]\ny5 = [43.8, 40.2, 42.6, 36.5, 30.6, 22.5]\ny6 = [43.4, 40.2, 42.8, 36.5, 30.6, 22.5]\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(3, 2, figsize=(14.0, 4.0))\n\n# Plot the data\naxs[0, 0].plot(x, y1, 'b-')\naxs[0, 0].set_title('Truthful: Misleading = 2:0')\naxs[0, 0].set_xlabel('Time (s)')\naxs[0, 0].set_ylabel('Amplitude')\n\naxs[0, 1].plot(x, y2, 'r-')\naxs[0, 1].set_title('Truthful: Misleading = 2:1')\naxs[0, 1].set_xlabel('Time (s)')\naxs[0, 1].set_ylabel('Amplitude')\n\naxs[1, 0].plot(x, y3, 'b-')\naxs[1, 0].set_title('Truthful: Misleading = 2:2')\naxs[1, 0].set_xlabel('Time (s)')\naxs[1, 0].set_ylabel('Amplitude')\n\naxs[1, 1].plot(x, y4, 'r-')\naxs[1, 1].set_title('Misleading: Truthful = 1:2')\naxs[1, 1].set_xlabel('Time (s)')\naxs[1, 1].set_ylabel('Amplitude')\n\naxs[2, 0].plot(x, y5, 'b-')\naxs[2, 0].set_title('Misleading: Truthful = 0:2')\naxs[2, 0].set_xlabel('Time (s)')\naxs[2, 0].set_ylabel('Amplitude')\n\naxs[2, 1].plot(x, y6, 'r-')\naxs[2, 1].set_title('Misleading: Truthful = -1:-2')\naxs[2, 1].set_xlabel('Time (s)')\naxs[2, 1].set_ylabel('Amplitude')\n\n# Set the color of the axes\nfor ax in axs.flat:\n    ax.set_facecolor('lightgray')\n\n# Set the color of the grid lines\nfor ax in axs.flat:\n    ax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the labels\nfor ax in axs.flat:\n    ax.label_outer()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_42.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the graph\nx = ['PROST', 'ARC-easy', 'COMVE', 'OpenBookQA', 'SCIQ', 'NumSense', 'CoQA', 'ComQA2.0', 'ComTz', 'CyC', 'Winogventi', 'Com2Sense', 'CODAH', 'WSC', 'ARC-challenge', 'SocialIQA', 'HellaSWAG-wikiHow', 'Al2Sci-elem', 'Winogrande', 'PIQA', 'QuaRel', 'QuaC', 'SC', 'ST', 'alphaNLI', 'SWAG']\ny = [3.4, 3.1, 2.9, 2.7, 2.6, 2.5, 2.4, 2.3, 2.2, 2.1, 2.0, 1.9, 1.8, 1.7, 1.6, 1.5, 1.4, 1.3, 1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Plot the data\nax.plot(x, y)\n\n# Set the title of the graph\nax.set_title('Model = Vicuna')\n\n# Set the x-axis label\nax.set_xlabel('\u0394Acc (with Styles) - Acc (without Rules)')\n\n# Set the y-axis label\nax.set_ylabel('\u0394Acc')\n\n# Set the color of the lines\nax.plot(x, y, color='blue')\n\n# Set the color of the markers\nax.plot(x, y, 'o', color='orange')\n\n# Set the color of the grid\nax.grid(color='green')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_43.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the title of the plot\nax.set_title('MedMCQA')\n\n# Create a bar chart with the data\nax.bar(['LSTM', 'Zephyr', 'Eisenstein', 'Weyland', 'Qwen', 'Med-Palm', 'Med-PAm', 'GPT-4', 'Gemini Pro'], [72.3, 64.9, 56.1, 49.3, 45.6, 43.2, 40.2, 38.0, 37.7], color='brown')\n\n# Set the x-axis label\nax.set_xlabel('Model')\n\n# Set the y-axis label\nax.set_ylabel('Performance Score (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_44.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data\ncategories = ['AFAN', 'AFBE', 'AFCE', 'AFAO', 'AFEX', 'AFEG', 'AFPK', 'AFPO', 'AFPP', 'AFPR', 'AFSL', 'AFSC', 'AFSF', 'AFTH', 'AFVT', 'AFWS', 'AFWT', 'DAH', 'IC', 'SS']\nnla_values = [25, 30, 40, 15, 25, 35, 45, 20, 30, 40, 25, 35, 45, 20, 30, 40, 25, 35, 45]\ngpt_values = [45, 40, 50, 10, 20, 30, 40, 15, 25, 35, 20, 30, 40, 15, 25, 35, 20, 30, 40]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Plot the data\nax.bar(categories, nla_values, color='blue')\nax.bar(categories, gpt_values, bottom=nla_values, color='orange')\n\n# Set the title and labels\nax.set_title('NLA vs GPT Values')\nax.set_xlabel('Categories')\nax.set_ylabel('Values')\n\n# Rotate the x-axis labels for better visibility\nplt.xticks(rotation=90)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_45.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 7.0))\n\n# Set the title of the plot\nax.set_title('Taboo')\n\n# Set the x-axis label\nax.set_xlabel('Num of Constraint Words')\n\n# Set the y-axis label\nax.set_ylabel('Score')\n\n# Define the data for the plot\nx = [3, 5, 7, 9, 11]\ny = [2.5, 2.8, 3.2, 3.5, 4.0]\n\n# Plot the data\nax.plot(x, y, 'o-')\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2, 1, color='pink'),\n    plt.Rectangle((5, 0), 2, 1, color='pink'),\n    plt.Rectangle((7, 0), 2, 1, color='pink'),\n    plt.Rectangle((9, 0), 2, 1, color='pink'),\n    plt.Rectangle((11, 0), 2, 1, color='pink')\n]\n\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Add rectangles to the plot\nrectangles = [\n    plt.Rectangle((3, 0), 2"}
{"file": "dataset/ori_500/bar_46.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nbrands = ['Lavila', 'Video-LLaMA', 'BLIP1', 'BLIP2 Model', 'LLaVA', 'OSCaR', 'GPT4V']\nsales = [85.93, 73.93, 70.56, 69.87, 68.76, 67.65, 66.54]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Plot the data\nax.bar(brands, sales, color='skyblue')\n\n# Set the title and labels\nax.set_title('Human Study')\nax.set_xlabel('Brands')\nax.set_ylabel('Sales (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_47.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\ndata = {\n    'HH': [22, 50, 28],\n    'Reddit': [25, 40, 30],\n    'IMDB': [30, 60, 10],\n    'Avg': [26, 50, 24]\n}\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(13, 6))\n\n# Plot the data\nfor key, value in data.items():\n    ax.bar(key, value[0], color='red')\n    ax.bar(key, value[1], bottom=value[0], color='orange')\n    ax.bar(key, value[2], bottom=[value[0] + value[1]] * len(value), color='pink')\n\n# Set the x-axis limits\nax.set_xlim(0, 100)\n\n# Set the y-axis limits\nax.set_ylim(0, 100)\n\n# Set the title of the plot\nax.set_title('COPR v.s. Golden (Human Eval)')\n\n# Set the labels of the x-axis\nax.set_xlabel('Time (in seconds)')\n\n# Set the labels of the y-axis\nax.set_ylabel('Score (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_48.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 6.0))\n\n# Set the title of the plot\nax.set_title('a')\n\n# Create a bar chart with the data\nax.bar(['Accuracy', 'Unfairness'], [0.32, 0.12], color='blue')\n\n# Set the y-axis limits\nax.set_ylim(0, 0.4)\n\n# Set the x-axis limits\nax.set_xlim(-0.5, 2.5)\n\n# Set the y-axis label\nax.set_ylabel('Score')\n\n# Set the x-axis label\nax.set_xlabel('Metrics')\n\n# Create a second subplot\nfig, ax = plt.subplots(figsize=(5.0, 6.0))\n\n# Set the title of the plot\nax.set_title('b')\n\n# Create a bar chart with the data\nax.bar(['Accuracy', 'Unfairness'], [0.18, 0.10], color='blue')\n\n# Set the y-axis limits\nax.set_ylim(0, 0.2)\n\n# Set the x-axis limits\nax.set_xlim(-0.5, 2.5)\n\n# Set the y-axis label\nax.set_ylabel('Score')\n\n# Set the x-axis label\nax.set_xlabel('Metrics')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_49.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Top-1 Accuracy by Resolution and Method')\n\n# Set the x-axis label\nax.set_xlabel('Resolutions')\n\n# Set the y-axis label\nax.set_ylabel('Top-1 Accuracy (%)')\n\n# Define the data for the plots\nresolutions = ['224', '256', '320', '384', '448', '512', '576', '640']\naccuracies = [29, 29, 29, 29, 29, 29, 29, 29]\nmethods = ['ImageNet-1k', 'ImageNet (F)', 'PAC-FNO', 'PAC-FNO']\n\n# Create a bar chart for each method\nfor i, method in enumerate(methods):\n    ax.bar(resolutions, accuracies, color='blue', alpha=0.5)\n    ax.text(0.5, 80, method, ha='center', va='center', fontsize=12)\n\n# Add a horizontal line at the top of the plot\nax.axhline(y=80, color='blue', linestyle='-')\n\n# Add a vertical line at the bottom of the plot\nax.axvline(x=0, color='blue', linestyle='-')\n\n# Add a rectangle to represent the accuracy of the model\nrect = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect)\n\n# Add a text box to display the accuracy of the model\nax.text(0.5, 0.5, '29%', ha='center', va='center', fontsize=12, color='white')\n\n# Add a red arrow to indicate the direction of the accuracy\narrow = plt.Arrow(0.5, 0.5, 0.5, 0.5, width=0.1, head_width=0.2, head_length=0.2, fc='red', ec='red')\nax.add_patch(arrow)\n\n# Add a text box to display the accuracy of the model\nax.text(0.5, 0.5, '87%', ha='center', va='center', fontsize=12, color='white')\n\n# Add a red arrow to indicate the direction of the accuracy\narrow = plt.Arrow(0.5, 0.5, 0.5, 0.5, width=0.1, head_width=0.2, head_length=0.2, fc='red', ec='red')\nax.add_patch(arrow)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nx = ['Level 1', 'Level 2', 'Level 3', 'Level 4']\ny = [50, 50, 50, 50]\ncolors = ['yellow', 'blue', 'red', 'pink']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 3.0))\n\n# Plot the data\nax.bar(x, y, color=colors)\n\n# Set the title and labels\nax.set_title('Player Performance')\nax.set_xlabel('Levels')\nax.set_ylabel('Average Uploads')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_50.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Define the data\nx = np.linspace(0, 1, 100)\ny = np.sin(x)\n\n# Plot the data\nax.plot(x, y)\n\n# Set the title and labels\nax.set_title('Sine Wave')\nax.set_xlabel('Time (s)')\nax.set_ylabel('Amplitude')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_51.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data\ncategories = ['Cleaning / laundry', 'Casting/knitting', 'Baker', 'Carpenter', 'Making Bricks', 'Gardening', 'Construction/renovation', 'Household management', 'Scooter mechanic', 'Farmer']\nviews = [5375, 4190, 3543, 3216, 2915, 2548, 2343, 2158, 2060, 2008]\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\nax.bar(categories, views, color='darkblue')\n\n# Set the title and labels\nax.set_title('Number of Videos by Profession')\nax.set_xlabel('Profession')\nax.set_ylabel('Number of Videos')\n\n# Rotate the x-axis labels for better visibility\nplt.xticks(rotation=45)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_52.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data for each category\ncategories = ['greeting', 'request', 'criticism', 'apology', 'persuasion', 'thanking', 'leave-taking']\nsentiments = ['synthetic data', 'human-authored data']\ngreeting_sentiment = [8, 16]\nrequest_sentiment = [31, 28]\ncriticism_sentiment = [24, 11]\napology_sentiment = [7, 5]\npersuasion_sentiment = [10, 15]\nthanking_sentiment = [10, 16]\nleave_taking_sentiment = [10, 9]\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Plot the bar chart\nax.bar(categories, [greeting_sentiment[0], request_sentiment[0], criticism_sentiment[0], apology_sentiment[0], persuasion_sentiment[0], thanking_sentiment[0], leave_taking_sentiment[0]], color='blue')\nax.bar(categories, [greeting_sentiment[1], request_sentiment[1], criticism_sentiment[1], apology_sentiment[1], persuasion_sentiment[1], thanking_sentiment[1], leave_taking_sentiment[1]], bottom=[greeting_sentiment[0], request_sentiment[0], criticism_sentiment[0], apology_sentiment[0], persuasion_sentiment[0], thanking_sentiment[0], leave_taking_sentiment[0]], color='red')\n\n# Set the title and labels\nax.set_title('Sentiment Analysis of Social Media Posts')\nax.set_xlabel('Categories')\nax.set_ylabel('Sentiment Scores')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_53.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Context: The human body can tolerate only a')\n\n# Set the x-axis label\nax.set_xlabel('Word')\n\n# Set the y-axis label\nax.set_ylabel('Probability')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n\n# Set the x-tick labels\nax.set_xticklabels(['small', 'certain', 'little', 'fraction', 'limited', 'a', 'few', 'new', 'specific', 'substantial', 'tiny', 'very', 'slight', 'rather', 'moderate', 'large', 'handful', 'low'])\n\n# Set the y-ticks\nax.set_yticks([0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])\n\n# Set the y-tick labels\nax.set_yticklabels(['0%', '10%', '20%', '30%', '40%', '50%', '60%', '70%', '80%', '90%', '100%'])\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=12, colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=12, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--', linewidth=2, color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--', linewidth=2, color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=12, colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=12, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--', linewidth=2, color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--', linewidth=2, color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=12, colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=12, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--', linewidth=2, color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--', linewidth=2, color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=12, colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=12, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--', linewidth=2, color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--', linewidth=2, color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=12, colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=12, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--', linewidth=2, color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--', linewidth=2, color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=12, colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=12, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--', linewidth=2, color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--', linewidth=2, color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=12, colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=12, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--', linewidth=2, color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--', linewidth=2, color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=12, colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=12, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--', linewidth=2, color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--', linewidth=2, color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=12, colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=12, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--', linewidth=2, color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--', linewidth=2, color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=12, colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=12, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--', linewidth=2, color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--', linewidth=2, color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=12, colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=12, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--', linewidth=2, color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--', linewidth=2, color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=12, colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=12, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--', linewidth=2, color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--', linewidth=2, color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=12, colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=12, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--', linewidth=2, color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--', linewidth=2, color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=12, colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=12, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--', linewidth=2, color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--', linewidth=2, color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=12, colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=12, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--', linewidth=2, color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--', linewidth=2, color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=12, colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=12, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--', linewidth=2, color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--', linewidth=2, color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=12, colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=12, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--', linewidth=2, color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--', linewidth=2, color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=12, colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=12, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--', linewidth=2, color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--', linewidth=2, color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=12, colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelsize=12, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', linestyle='--', linewidth=2, color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', linestyle='--', linewidth=2, color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', length=10, width=2, direction='inout', colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', length=10, width=2, direction='inout', colors='blue')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelsize=12, colors='red')\n\n# Set the color of the y-axis tick labels"}
{"file": "dataset/ori_500/bar_54.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the bar chart\nmodels = ['Convertible', 'Coupe', 'Sedan', 'Truck', 'SUV']\nprobabilities = [0.75, 0.85, 0.95, 0.80, 0.90]\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(6.0, 2.0))\nax.bar(models, probabilities, color='blue')\n\n# Add labels and title\nax.set_xlabel('Car Models')\nax.set_ylabel('Probability of Improvement')\nax.set_title('Probability of Improvement over VLM Image Encoder Baseline Returns')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_55.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data\nemotions = ['Disapproval', 'Joy', 'Relief', 'Gratitude', 'Annoyance', 'Nervousness', 'Pride', 'Sadness', 'Unboredom', 'Amusement']\nfrequencies = [2.1, 3.0, 3.5, 3.5, 6.0, 6.0, 6.6, 6.7, 7.0, 7.6]\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\nax.bar(emotions, frequencies, color='coral')\n\n# Set the title and labels\nax.set_title('Emotion Frequency')\nax.set_xlabel('Emotion')\nax.set_ylabel('Frequency (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_56.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Number of Videos by Profession')\n\n# Create a bar chart with the data\nax.bar(['Making Bricks', 'Carpenter', 'Baker', 'Crafting/Knitting', 'Cleaning/Laundry', 'Gardening'], [4500, 6000, 7000, 5000, 6500, 8000], color='blue')\n\n# Set the x-axis label\nax.set_xlabel('Profession')\n\n# Set the y-axis label\nax.set_ylabel('Number of Videos')\n\n# Set the x-tick labels\nax.set_xticklabels(['Making Bricks', 'Carpenter', 'Baker', 'Crafting/Knitting', 'Cleaning/Laundry', 'Gardening'])\n\n# Set the y-tick labels\nax.set_yticklabels([0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_57.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the title of the graph\nax.set_title('Global Economy')\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Value')\n\n# Set the x-axis limits\nax.set_xlim(0, 50)\n\n# Set the y-axis limits\nax.set_ylim(0, 50)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 51, 5))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 51, 5))\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='"}
{"file": "dataset/ori_500/bar_58.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the graph\nax.set_title('Real Estate Prices')\n\n# Set the x-axis label\nax.set_xlabel('Year')\n\n# Set the y-axis label\nax.set_ylabel('Price')\n\n# Set the x-axis limits\nax.set_xlim(90, 80)\n\n# Set the y-axis limits\nax.set_ylim(0, 70)\n\n# Create a vertical line at the center of the graph\nax.axvline(x=85, color='grey', linestyle='--')\n\n# Create a horizontal line at the center of the graph\nax.axhline(y=35, color='grey', linestyle='--')\n\n# Create a rectangle for each city\nrectangles = [\n    plt.Rectangle((82, 60), 4, 10, color='red'),\n    plt.Rectangle((82, 50), 4, 10, color='pink'),\n    plt.Rectangle((82, 40), 4, 10, color='orange'),\n    plt.Rectangle((82, 30), 4, 10, color='yellow'),\n    plt.Rectangle((82, 20), 4, 10, color='lightblue'),\n    plt.Rectangle((82, 10), 4, 10, color='blue')\n]\n\n# Add rectangles to the graph\nfor rect in rectangles:\n    ax.add_patch(rect)\n\n# Display the graph\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_59.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Relative Difference in Machine vs. Human Focus on Semantic Categories')\n\n# Create a bar chart with the data\ncategories = ['External Class', 'Argument', 'Loop', 'Conditional Statement', 'Variable Declaration', 'Method Declaration', 'Parameter']\nvalues = [80, 70, 60, 50, 40, 30, 20]\nax.bar(categories, values, color='blue')\n\n# Add a color bar to the right of the plot\ncbar = fig.colorbar(ax.images[0])\ncbar.set_label('Difference (%)')\n\n# Set the x-axis label\nax.set_xlabel('Semantic Category')\n\n# Set the y-axis label\nax.set_ylabel('Difference (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data\nemotions = ['Disappointment', 'Embarrassment', 'Oblivious', 'Delight', 'Excitement', 'Disapproval', 'Joy', 'Relief', 'Gratitude', 'Annoyance', 'Nervousness', 'Pride', 'Sadness', 'Unboredom', 'Amusement']\nfrequencies = [7, 6, 5, 4, 3, 2, 1, 0.5, 0.3, 0.2, 0.1, 0.05, 0.03, 0.01]\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\nax.bar(emotions, frequencies, color='skyblue')\n\n# Set the title and labels\nax.set_title('Emotion Frequency')\nax.set_xlabel('Emotion')\nax.set_ylabel('Frequency (%)')\n\n# Rotate the x-axis labels for better visibility\nplt.xticks(rotation=90)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_60.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the title of the graph\nax.set_title('Yelp')\n\n# Set the x-axis label\nax.set_xlabel('Year')\n\n# Set the y-axis label\nax.set_ylabel('Sentiment Score')\n\n# Define the data for the graph\nx = [-20, -15, -10, -5, 0, 5, 10, 15, 20]\ny = [4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8, 4.8]\n\n# Plot the data\nax.plot(x, y, 'ro-')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_61.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the title of the graph\nax.set_title('Tech Industry Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Year')\n\n# Set the y-axis label\nax.set_ylabel('Value')\n\n# Set the x-axis limits\nax.set_xlim([0, 3250])\n\n# Set the y-axis limits\nax.set_ylim([0, 3250])\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 3251, 500))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 3251, 500))\n\n# Set the x-axis grid\nax.grid(True)\n\n# Set the y-axis grid\nax.grid(True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['2000', '2005', '2010', '2015', '2020', '2025', '2030'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['2000', '2005', '2010', '2015', '2020', '2025', '2030'])\n\n# Set the x-axis tick rotation\nax.tick_params(axis='x', rotation=45)\n\n# Set the y-axis tick rotation\nax.tick_params(axis='y', rotation=45)\n\n# Set the x-axis tick color\nax.tick_params(axis='x', colors='red')\n\n# Set the y-axis tick color\nax.tick_params(axis='y', colors='blue')\n\n# Set the x-axis tick label color\nax.tick_params(axis='x', labelcolor='green')\n\n# Set the y-axis tick label color\nax.tick_params(axis='y', labelcolor='purple')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle='italic')\n\n# Set the y-axis tick label font style\nax.tick_params(axis='y', labelstyle='italic')\n\n# Set the x-axis tick label font family\nax.tick_params(axis='x', labelfamily='serif')\n\n# Set the y-axis tick label font family\nax.tick_params(axis='y', labelfamily='sans-serif')\n\n# Set the x-axis tick label font variant\nax.tick_params(axis='x', labelvariant='small-caps')\n\n# Set the y-axis tick label font variant\nax.tick_params(axis='y', labelvariant='normal')\n\n# Set the x-axis tick label font stretch\nax.tick_params(axis='x', labelstretch='ultra-condensed')\n\n# Set the y-axis tick label font stretch\nax.tick_params(axis='y', labelstretch='condensed')\n\n# Set the x-axis tick label font size\nax.tick_params(axis='x', labelsize=12)\n\n# Set the y-axis tick label font size\nax.tick_params(axis='y', labelsize=12)\n\n# Set the x-axis tick label font weight\nax.tick_params(axis='x', labelweight='bold')\n\n# Set the y-axis tick label font weight\nax.tick_params(axis='y', labelweight='bold')\n\n# Set the x-axis tick label font style\nax.tick_params(axis='x', labelstyle"}
{"file": "dataset/ori_500/bar_62.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Sentiment Analysis')\n\n# Set the x-axis labels\nax.set_xlabel('Sentiment')\nax.set_ylabel('Percentage')\n\n# Define the data for each sentiment\nsentiments = ['greeting', 'request', 'criticism', 'apology', 'persuasion', 'thanking', 'leave-taking']\npercentages = [12, 35, 28, 15, 18, 14, 16]\n\n# Create a bar chart\nbars = ax.bar(sentiments, percentages, color='blue')\n\n# Add text annotations to the bars\nfor bar in bars:\n    yval = bar.get_height()\n    ax.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), va='bottom')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_63.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Scores by Category Over Time')\n\n# Define the categories and their scores\ncategories = ['Time 0', 'Time 20', 'Time 40', 'Time 60']\nscores = [0.7, 0.5, 0.3, 0.1]\n\n# Plot the data\nax.bar(categories, scores, color='blue')\n\n# Set the x-axis label\nax.set_xlabel('Categories')\n\n# Set the y-axis label\nax.set_ylabel('Scores')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_64.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 7.0))\n\n# Set the title of the plot\nax.set_title('Air Quality Metrics by Region')\n\n# Define the regions and their corresponding air quality metrics\nregions = ['North', 'East', 'South', 'West']\nmetrics = [92.15, 54.46, 90.45, 100.45]\n\n# Create a bar chart with the regions and metrics\nax.bar(regions, metrics, color='skyblue')\n\n# Set the x-axis label\nax.set_xlabel('Regions')\n\n# Set the y-axis label\nax.set_ylabel('Air Quality Metrics (ppm)')\n\n# Set the x-tick labels\nax.set_xticks(range(len(regions)))\nax.set_xticklabels(regions)\n\n# Set the y-tick labels\nax.set_yticks(range(0, 101, 10))\nax.set_yticklabels([str(i) for i in range(0, 101, 10)])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_65.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Scores by group and constraint word count')\n\n# Define the data for the bar chart\nbar_width = 0.25\nindex = range(1, 7)\nconstraint_words = ['3 Constraint Words', '5 Constraint Words', '7 Constraint Words', '9 Constraint Words', '11 Constraint Words', '13 Constraint Words']\nscores = [-2.2, -2.0, -1.8, -1.6, -1.4, -1.2]\n\n# Create a bar chart with the scores\nbars = ax.bar(index, scores, bar_width, color='orange')\n\n# Add labels to the bars\nfor bar in bars:\n    yval = bar.get_height()\n    ax.text(bar.get_x() + bar_width / 2, yval, round(yval, 2), va='bottom')\n\n# Set the x-axis labels\nax.set_xticks([i + bar_width for i in index])\nax.set_xticklabels(constraint_words)\n\n# Set the y-axis label\nax.set_ylabel('Score')\n\n# Set the x-axis limits\nax.set_xlim([min(index)-bar_width, max(index)+bar_width])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_66.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Negative GDP Growth Rates by Country and Year')\n\n# Set the x-axis label\nax.set_xlabel('GDP Growth Rate (%)')\n\n# Set the y-axis label\nax.set_ylabel('Country')\n\n# Define the data for the bars\ncountries = ['USA', 'China', 'Germany', 'Brazil']\ngdp_growth_rates = [-2.5, -1.8, -1.2, -0.9]\n\n# Create a bar chart with the data\nbars = ax.barh(countries, gdp_growth_rates, color='blue')\n\n# Add labels to each bar\nfor bar in bars:\n    width = bar.get_width()\n    ax.text(width, bar.get_y() + bar.get_height()/2, f'{width:.1f}', va='center', ha='left')\n\n# Set the limits of the x-axis\nax.set_xlim(-3, 0)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_67.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nmodels = ['GPT4V', 'OSCAR', 'LLaMA', 'BLIP2', 'BLIP1', 'Video-LLaMA', 'LaVLA']\nperformance = [82.5, 73.93, 31.79, 4.64, 4.64, 0.71, 0.0]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\n\n# Plot the data\nax.bar(models, performance, color='blue')\n\n# Set the title of the plot\nax.set_title('Human Study')\n\n# Set the x-axis label\nax.set_xlabel('Model')\n\n# Set the y-axis label\nax.set_ylabel('Performance (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_68.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['Traffic Flow', 'Accident Rate', 'Public Transport Usage', 'Road Condition']\nvalues = [50, 20, 40, 80]\ncolors = ['blue', 'cyan', 'green', 'purple']\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(10, 6))\nax.bar(categories, values, color=colors)\n\n# Set the title and labels\nax.set_title('Stacked Bar Chart of Transportation Data')\nax.set_xlabel('Categories')\nax.set_ylabel('Values')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_69.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 7.0))\n\n# Set the title of the chart\nax.set_title('Enhanced Stacked Bar Chart with Textures and Annotated Values')\n\n# Set the x-axis label\nax.set_xlabel('Product Categories')\n\n# Set the y-axis label\nax.set_ylabel('Sales Units')\n\n# Define the data for the bar chart\ncategories = ['Category A', 'Category B', 'Category C', 'Category D', 'Category E', 'Category F', 'Category G']\nsales = [80, 60, 40, 20, 0, 20, 40]\ncolors = ['red', 'orange', 'pink', 'yellow', 'lightblue', 'green', 'purple']\n\n# Create a stacked bar chart\nbar_width = 0.5\nindex = range(len(categories))\nfor i in range(len(categories)):\n    ax.bar(index[i], sales[i], bar_width, bottom=sum(sales[:i]), color=colors[i])\n\n# Add text annotations to each bar\nfor i in range(len(categories)):\n    ax.text(index[i], sum(sales[:i]) + sales[i]/2, categories[i], ha='center', va='center')\n\n# Set the limits of the x-axis\nax.set_xlim(-bar_width, len(categories)-bar_width)\n\n# Set the limits of the y-axis\nax.set_ylim(0, 100)\n\n# Set the grid lines\nax.grid(True)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\ncategories = ['SEQ', 'REPLAY', 'MTL']\naccuracies = [0.83, 0.6, 0.11]\nembeddings = [0.75, 0.25, 0.0]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Plot the data\nax.bar(categories, accuracies, color='lightblue')\nax.plot(categories, embeddings, marker='o', linestyle='--', color='orange')\n\n# Set the title and labels\nax.set_title('Feature Embedding Distance')\nax.set_xlabel('Categories')\nax.set_ylabel('Feature Embedding Distance (%)')\n\n# Add a legend\nax.legend(['Probing FGT', 'Observed FGT', 'Feature Embedding Distance'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_70.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Human Labeling and Agreement Bias Checking')\n\n# Set the x-axis label\nax.set_xlabel('Human Annotator')\n\n# Set the y-axis label\nax.set_ylabel('Scores')\n\n# Set the x-ticks\nax.set_xticks([1, 2, 3, 4, 5, 6])\n\n# Set the x-tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6'])\n\n# Set the y-ticks\nax.set_yticks(np.arange(0, 51, 10))\n\n# Set the y-tick labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f8ff')\n\n# Set the color of the border\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the scores\nscores = [10, 8, 12, 10, 6, 8, 12, 15, 10, 7, 12, 10, 15, 10, 8, 12, 10, 10, 12, 10, 10]\ncolors = ['cyan', 'lightgreen', 'limegreen', 'darkgreen', 'darkseagreen', 'lightblue', 'skyblue', 'aqua', 'teal', 'navy', 'darkblue', 'purple', 'magenta', 'red', 'orange', 'yellow', 'gold', 'silver', 'gray', 'black']\nfor i, score in enumerate(scores):\n    ax.bar(i, score, color=colors[i % len(colors)])\n\n# Set the color of the legend\nax.legend(['Score 1', 'Score 2', 'Score 3', 'Score 4', 'Score 5'], loc='upper left', bbox_to_anchor=(1,1), fancybox=True, shadow=True)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_71.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Product Sales Data')\n\n# Set the x-axis label\nax.set_xlabel('Products')\n\n# Set the y-axis label\nax.set_ylabel('Sales')\n\n# Set the x-ticks\nax.set_xticks([1, 2, 3, 4, 5, 6, 7])\n\n# Set the x-tick labels\nax.set_xticklabels(['Coreutis', 'Gzip', 'Scp', 'Libq', 'Mcf', 'Omnet.', 'Perl.'])\n\n# Set the y-ticks\nax.set_yticks([0, 20, 40, 60, 80, 100])\n\n# Set the y-tick labels\nax.set_yticklabels(['0%', '20%', '40%', '60%', '80%', '100%'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the background color\nax.set_facecolor('#f0f0f0')\n\n# Set the border color\nax.spines['bottom'].set_color('#000000')\nax.spines['top'].set_color('#000000')\nax.spines['right'].set_color('#000000')\nax.spines['left'].set_color('#000000')\n\n# Set the bar colors\nbar_colors = ['#008000', '#ffff00', '#0000ff', '#008080', '#ff00ff', '#000080', '#808000']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the bar positions\nbar_positions = [1, 2, 3, 4, 5, 6, 7]\n\n# Set the bar heights\nbar_heights = [90, 80, 70, 60, 50, 40, 30]\n\n# Set the bar labels\nbar_labels = ['RegOpt', 'BIopt', 'LoopOpt', 'RegOpt', 'BIopt', 'LoopOpt', 'RegOpt']\n\n# Set the bar colors\nbar_colors = ['green', 'yellow', 'blue']\n\n# Set the bar width\nbar_width = 0.5\n\n# Set the"}
{"file": "dataset/ori_500/bar_72.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nbrands = ['Bactrian-X EN', 'Lima-X DE', 'Bactrian-X FR', 'Lima-X IT', 'Bactrian-X ES']\nimprovement = [3.5, 2.3, 4.4, 1.3, 0.7]\nlanguages = ['EN', 'DE', 'FR', 'IT', 'ES']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Plot the bar chart\nax.bar(brands, improvement, color='blue')\n\n# Add labels and title\nax.set_xlabel('Model with Language')\nax.set_ylabel('Improvement [%]')\nax.set_title('Model Performance Improvement by Language')\n\n# Add a color bar for languages\nsm = plt.cm.ScalarMappable(cmap='coolwarm', norm=plt.Normalize(vmin=0, vmax=len(languages)))\nsm._A = []\ncbar = fig.colorbar(sm)\ncbar.set_ticks(range(len(languages)))\ncbar.set_ticklabels(languages)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_73.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the graph\nax.set_title('Dow Jones Index vs Nasdaq Index')\n\n# Set the x-axis label\nax.set_xlabel('Fiscal Quarter')\n\n# Set the y-axis label\nax.set_ylabel('Index Change (%)')\n\n# Set the x-ticks\nax.set_xticks([1, 2, 3, 4, 5])\n\n# Set the x-tick labels\nax.set_xticklabels(['Q1', 'Q2', 'Q3', 'Q4', 'Q5'])\n\n# Set the y-limits\nax.set_ylim(-5, 5)\n\n# Set the y-ticks\nax.set_yticks([-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n\n# Set the y-tick labels\nax.set_yticklabels(['-5', '-4', '-3', '-2', '-1', '0', '1', '2', '3', '4', '5'])\n\n# Set the background color\nax.set_facecolor('#f0f0f0')\n\n# Set the grid lines\nax.grid(True)\n\n# Set the line width\nax.spines['top'].set_linewidth(2)\nax.spines['bottom'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\n\n# Set the line color\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the line style\nax.spines['top'].set_linestyle('-')\nax.spines['bottom'].set_linestyle('-')\nax.spines['left'].set_linestyle('-')\nax.spines['right'].set_linestyle('-')\n\n# Set the line cap\nax.spines['top'].set_capstyle('round')\nax.spines['bottom'].set_capstyle('round')\nax.spines['left'].set_capstyle('round')\nax.spines['right'].set_capstyle('round')\n\n# Set the line join\nax.spines['top'].set_joinstyle('round')\nax.spines['bottom'].set_joinstyle('round')\nax.spines['left'].set_joinstyle('round')\nax.spines['right'].set_joinstyle('round')\n\n# Set the line dash pattern\nax.spines['top'].set_dashes([2, 2])\nax.spines['bottom'].set_dashes([2, 2])\nax.spines['left'].set_dashes([2, 2])\nax.spines['right'].set_dashes([2, 2])\n\n# Set the line dash cap\nax.spines['top'].set_dashcapstyle('round')\nax.spines['bottom'].set_dashcapstyle('round')\nax.spines['left'].set_dashcapstyle('round')\nax.spines['right'].set_dashcapstyle('round')\n\n# Set the line dash join\nax.spines['top'].set_dashjoinstyle('round')\nax.spines['bottom'].set_dashjoinstyle('round')\nax.spines['left'].set_dashjoinstyle('round')\nax.spines['right'].set_dashjoinstyle('round')\n\n# Set the line dash pattern\nax.spines['top'].set_dashes([2, 2])\nax.spines['bottom'].set_dashes([2, 2])\nax.spines['left'].set_dashes([2, 2])\nax.spines['right'].set_dashes([2, 2])\n\n# Set the line dash cap\nax.spines['top'].set_dashcapstyle('round')\nax.spines['bottom'].set_dashcapstyle('round')\nax.spines['left'].set_dashcapstyle('round')\nax.spines['right'].set_dashcapstyle('round')\n\n# Set the line dash join\nax.spines['top'].set_dashjoinstyle('round')\nax.spines['bottom'].set_dashjoinstyle('round')\nax.spines['left'].set_dashjoinstyle('round')\nax.spines['right'].set_dashjoinstyle('round')\n\n# Set the line dash pattern\nax.spines['top'].set_dashes([2, 2])\nax.spines['bottom'].set_dashes([2, 2])\nax.spines['left'].set_dashes([2, 2])\nax.spines['right'].set_dashes([2, 2])\n\n# Set the line dash cap\nax.spines['top'].set_dashcapstyle('round')\nax.spines['bottom'].set_dashcapstyle('round')\nax.spines['left'].set_dashcapstyle('round')\nax.spines['right'].set_dashcapstyle('round')\n\n# Set the line dash join\nax.spines['top'].set_dashjoinstyle('round')\nax.spines['bottom'].set_dashjoinstyle('round')\nax.spines['left'].set_dashjoinstyle('round')\nax.spines['right'].set_dashjoinstyle('round')\n\n# Set the line dash pattern\nax.spines['top'].set_dashes([2, 2])\nax.spines['bottom'].set_dashes([2, 2])\nax.spines['left'].set_dashes([2, 2])\nax.spines['right'].set_dashes([2, 2])\n\n# Set the line dash cap\nax.spines['top'].set_dashcapstyle('round')\nax.spines['bottom'].set_dashcapstyle('round')\nax.spines['left'].set_dashcapstyle('round')\nax.spines['right'].set_dashcapstyle('round')\n\n# Set the line dash join\nax.spines['top'].set_dashjoinstyle('round')\nax.spines['bottom'].set_dashjoinstyle('round')\nax.spines['left'].set_dashjoinstyle('round')\nax.spines['right'].set_dashjoinstyle('round')\n\n# Set the line dash pattern\nax.spines['top'].set_dashes([2, 2])\nax.spines['bottom'].set_dashes([2, 2])\nax.spines['left'].set_dashes([2, 2])\nax.spines['right'].set_dashes([2, 2])\n\n# Set the line dash cap\nax.spines['top'].set_dashcapstyle('round')\nax.spines['bottom'].set_dashcapstyle('round')\nax.spines['left'].set_dashcapstyle('round')\nax.spines['right'].set_dashcapstyle('round')\n\n# Set the line dash join\nax.spines['top'].set_dashjoinstyle('round')\nax.spines['bottom'].set_dashjoinstyle('round')\nax.spines['left'].set_dashjoinstyle('round')\nax.spines['right'].set_dashjoinstyle('round')\n\n# Set the line dash pattern\nax.spines['top'].set_dashes([2, 2])\nax.spines['bottom'].set_dashes([2, 2])\nax.spines['left'].set_dashes([2, 2])\nax.spines['right'].set_dashes([2, 2])\n\n# Set the line dash cap\nax.spines['top'].set_dashcapstyle('round')\nax.spines['bottom'].set_dashcapstyle('round')\nax.spines['left'].set_dashcapstyle('round')\nax.spines['right'].set_dashcapstyle('round')\n\n# Set the line dash join\nax.spines['top'].set_dashjoinstyle('round')\nax.spines['bottom'].set_dashjoinstyle('round')\nax.spines['left'].set_dashjoinstyle('round')\nax.spines['right'].set_dashjoinstyle('round')\n\n# Set the line dash pattern\nax.spines['top'].set_dashes([2, 2])\nax.spines['bottom'].set_dashes([2, 2])\nax.spines['left'].set_dashes([2, 2])\nax.spines['right'].set_dashes([2, 2])\n\n# Set the line dash cap\nax.spines['top'].set_dashcapstyle('round')\nax.spines['bottom'].set_dashcapstyle('round')\nax.spines['left'].set_dashcapstyle('round')\nax.spines['right'].set_dashcapstyle('round')\n\n# Set the line dash join\nax.spines['top'].set_dashjoinstyle('round')\nax.spines['bottom'].set_dashjoinstyle('round')\nax.spines['left'].set_dashjoinstyle('round')\nax.spines['right'].set_dashjoinstyle('round')\n\n# Set the line dash pattern\nax.spines['top'].set_dashes([2, 2])\nax.spines['bottom'].set_dashes([2, 2])\nax.spines['left'].set_dashes([2, 2])\nax.spines['right'].set_dashes([2, 2])\n\n# Set the line dash cap\nax.spines['top'].set_dashcapstyle('round')\nax.spines['bottom'].set_dashcapstyle('round')\nax.spines['left'].set_dashcapstyle('round')\nax.spines['right'].set_dashcapstyle('round')\n\n# Set the line dash join\nax.spines['top'].set_dashjoinstyle('round')\nax.spines['bottom'].set_dashjoinstyle('round')\nax.spines['left'].set_dashjoinstyle('round')\nax.spines['right'].set_dashjoinstyle('round')\n\n# Set the line dash pattern\nax.spines['top'].set_dashes([2, 2])\nax.spines['bottom'].set_dashes([2, 2])\nax.spines['left'].set_dashes([2, 2])\nax.spines['right'].set_dashes([2, 2])\n\n# Set the line dash cap\nax.spines['top'].set_dashcapstyle('round')\nax.spines['bottom'].set_dashcapstyle('round')\nax.spines['left'].set_dashcapstyle('round')\nax.spines['right'].set_dashcapstyle('round')\n\n# Set the line dash join\nax.spines['top'].set_dashjoinstyle('round')\nax.spines['bottom'].set_dashjoinstyle('round')\nax.spines['left'].set_dashjoinstyle('round')\nax.spines['right'].set_dashjoinstyle('round')\n\n# Set the line dash pattern\nax.spines['top'].set_dashes([2, 2])\nax.spines['bottom'].set_dashes([2, 2])\nax.spines['left'].set_dashes([2, 2])\nax.spines['right'].set_dashes([2, 2])\n\n# Set the line dash cap\nax.spines['top'].set_dashcapstyle('round')\nax.spines['bottom'].set_dashcapstyle('round')\nax.spines['left'].set_dashcapstyle('round')\nax.spines['right'].set_dashcapstyle('round')\n\n# Set the line dash join\nax.spines['top'].set_dashjoinstyle('round')\nax.spines['bottom'].set_dashjoinstyle('round')\nax.spines['left'].set_dashjoinstyle('round')\nax.spines['right'].set_dashjoinstyle('round')\n\n# Set the line dash pattern\nax.spines['top'].set_dashes([2, 2])\nax.spines['bottom'].set_dashes([2, 2])\nax.spines['left'].set_dashes([2, 2])\nax.spines['right'].set_dashes([2, 2])\n\n# Set the line dash cap\nax.spines['top'].set_dashcapstyle('round')\nax.spines['bottom'].set_dashcapstyle('round')\nax.spines['left'].set_dashcapstyle('round')\nax.spines['right'].set_dashcapstyle('round')\n\n# Set the line dash join\nax.spines['top'].set_dashjoinstyle('round')\nax.spines['bottom'].set_dashjoinstyle('round')\nax.spines['left'].set_dashjoinstyle('round')\nax.spines['right'].set_dashjoinstyle('round')\n\n# Set the line dash pattern\nax.spines['top'].set_dashes([2, 2])\nax.spines['bottom'].set_dashes([2, 2])\nax.spines['left'].set_dashes([2, 2])\nax.spines['right'].set_dashes([2, 2])\n\n# Set the line dash cap\nax.spines['top'].set_dashcapstyle('round')\nax.spines['bottom'].set_dashcapstyle('round')\nax.spines['left'].set_dashcapstyle('round')\nax.spines['right'].set_dashcapstyle('round')\n\n# Set the line dash join\nax.spines['top'].set_dashjoinstyle('round')\nax.spines['bottom'].set_dashjoinstyle('round')\nax.spines['left'].set_dashjoinstyle('round')\nax.spines['right'].set_dashjoinstyle('round')\n\n# Set the line dash pattern\nax.spines['top'].set_dashes([2, 2])\nax.spines['bottom'].set_dashes([2, 2])\nax.spines['left'].set_dashes([2, 2])\nax.spines['right'].set_dashes([2, 2])\n\n# Set the line dash cap\nax.spines['top'].set_dashcapstyle('round')\nax.spines['bottom'].set_dashcapstyle('round')\nax.spines['left'].set_dashcapstyle('round')\nax.spines['right'].set_dashcapstyle('round')\n\n# Set the line dash join\nax.spines['top'].set_dashjoinstyle('round')\nax.spines['bottom'].set_dashjoinstyle('round')\nax.spines['left'].set_dashjoinstyle('round')\nax.spines['right'].set_dashjoinstyle('round')\n\n# Set the line dash pattern\nax.spines['top'].set_dashes([2, 2])\nax.spines['bottom'].set_dashes([2, 2])\nax.spines['left'].set_dashes([2, 2])\nax.spines['right'].set_dashes([2, 2])\n\n# Set the line dash cap\nax.spines['top'].set_dashcapstyle('round')\nax.spines['bottom'].set_dashcapstyle('round')\nax.spines['left'].set_dashcapstyle('round')\nax.spines['right'].set_dashcapstyle('round')\n\n# Set the line dash join\nax.spines['top'].set_dashjoinstyle('round')\nax.spines['bottom'].set_dashjoinstyle('round')\nax.spines['left'].set_dashjoinstyle('round')\nax.spines['right'].set_dashjoinstyle('round')\n\n# Set the line dash pattern\nax.spines['top'].set_dashes([2, 2])\nax.spines['bottom'].set_dashes([2, 2])\nax.spines['left'].set_dashes([2, 2])\nax.spines['right'].set_dashes([2, 2])\n\n# Set the line dash cap\nax.spines['top'].set_dashcapstyle('round')\nax.spines['bottom'].set_dashcapstyle('round')\nax.spines['left'].set_dashcapstyle('round')\nax.spines['right'].set_dashcapstyle('round')\n\n# Set the line dash join\nax.spines['top'].set_dashjoinstyle('round')\nax.spines['bottom'].set_dashjoinstyle('round')\nax.spines['left'].set_dashjoinstyle('round')\nax.spines['right'].set_dashjoinstyle('round')\n\n# Set the line dash pattern\nax.spines['top'].set_dashes([2, 2])\nax.spines['bottom'].set_dashes([2, 2])\nax.spines['left'].set_dashes([2, 2])\nax.spines['right'].set_dashes([2, 2])\n\n# Set the line dash cap\nax.spines['top'].set_dashcapstyle('round')\nax.spines['bottom'].set_dashcapstyle('round')\nax.spines['left'].set_dashcapstyle('round')\nax.spines['right'].set_dashcapstyle('round')\n\n# Set the line dash join\nax.spines['top'].set_dashjoinstyle('round')\nax.spines['bottom'].set_dashjoinstyle('round')\nax.spines['left'].set_dashjoinstyle('round')\nax.spines['right'].set_dashjoinstyle('round')\n\n# Set the line dash pattern\nax.spines['top'].set_dashes([2, 2])\nax.spines['bottom'].set_dashes([2, 2])\nax.spines['left'].set_dashes([2, 2])\nax.spines['right'].set_dashes([2, 2])\n\n# Set the line dash cap\nax.spines['top'].set_dashcapstyle('round')\nax.spines['bottom'].set_dashcapstyle('round')\nax.spines['left'].set_dashcapstyle('round')\nax.spines['right'].set_dashcapstyle('round')\n\n# Set the line dash join\nax.spines['top'].set_dashjoinstyle('round')\nax.spines['bottom'].set_dashjoinstyle('round')\nax.spines['left'].set_dashjoinstyle('round')\nax.spines['right'].set_dashjoinstyle('round')\n\n# Set the line dash pattern\nax.spines['top'].set_dashes([2, 2])\nax.spines['bottom'].set_dashes([2, 2])\nax.spines['left'].set_dashes([2, 2])\nax.spines['right'].set_dashes([2, 2])\n\n# Set the line dash cap\nax.spines['top'].set_dashcapstyle('round')\nax.spines['bottom'].set_dashcapstyle('round')\nax.spines['left'].set_dashcapstyle('round')\nax.spines['right'].set_dashcapstyle('round')\n\n# Set the line dash join\nax.spines['top'].set_dashjoinstyle('round')\nax.spines['bottom'].set_dashjoinstyle('round')\nax.spines['left'].set_dashjoinstyle('round')\nax.spines['right'].set_dashjoinstyle('round')\n\n# Set the line dash pattern\nax.spines['top'].set_dashes([2, 2])\nax.spines['bottom'].set_dashes([2, 2])\nax.spines['left'].set_dashes([2, 2])\nax.spines['right'].set_dashes([2, 2])\n\n# Set the line dash cap\nax.spines['top'].set_dashcapstyle('round')\nax.spines['bottom'].set_dashcapstyle('round')\nax.spines['left'].set_dashcapstyle('round')\nax.spines['right'].set_dashcapstyle('round')\n\n# Set the line dash join\nax.spines['top'].set_dashjoinstyle('round')\nax.spines['bottom'].set_dashjoinstyle('round')\nax.spines['left'].set_dashjoinstyle('round')\nax.spines['right'].set_dashjoinstyle('round')\n\n# Set the line dash pattern\nax.spines['top'].set_dashes([2, 2])\nax.spines['bottom'].set_dashes([2, 2])\nax.spines['left'].set"}
{"file": "dataset/ori_500/bar_74.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nx = ['E16.6', 'L26.8', 'D19.7', 'L22.2']\ny = [39.4, 35.18, 30.84, 34.06]\ny2 = [35.1, 34.06, 33.0, 32.0, 30.0, 28.0, 26.82, 24.27, 22.2, 20.0, 18.84, 16.96, 14.66, 12.0, 9.0, 7.0]\ny3 = [35.0, 34.06, 33.0, 32.0, 30.0, 28.0, 26.82, 24.27, 22.2, 20.0, 18.84, 16.96, 14.66, 12.0, 9.0, 7.0]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Plot the data\nax.plot(x, y, label='Series 1')\nax.plot(x, y2, label='Series 2')\nax.plot(x, y3, label='Series 3')\n\n# Set the title and labels\nax.set_title('Stock Prices')\nax.set_xlabel('Date')\nax.set_ylabel('Price')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_75.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\ntruthful = [30.1, 34, 43.7]\nmisleading = [46.3, 57.9, 53.8, 20, 19.4]\nx = range(len(truthful))\n\n# Create figure and axis objects\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Plot data\nax.bar(x, truthful, color='pink', label='Truthful Recall')\nax.bar(x, misleading, bottom=truthful, color='black', label='Misleading Recall')\n\n# Set labels and title\nax.set_xlabel('Recall')\nax.set_ylabel('Percentage')\nax.set_title('Truthful:Misleading = 2:1')\nax.legend()\n\n# Set y-axis limits\nax.set_ylim(0, 60)\n\n# Show plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_76.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Environmental Impact by Sector')\n\n# Set the x-axis label\nax.set_xlabel('Industry Sectors')\n\n# Set the y-axis label\nax.set_ylabel('Pollution Emissions (thousands of metric tons)')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3, 4])\nax.set_xticklabels(['Light Industry', 'Heavy Industry', 'Transportation', 'Residential', 'Manufacturing'])\n\n# Set the y-ticks\nax.set_yticks(range(-1600, 1000, 200))\nax.set_yticklabels(['-1600', '-1400', '-1200', '-1000', '-800', '-600', '-400', '-200', '0', '200', '400', '600', '800', '1000'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightblue')\n\n# Set the color of the border\nax.spines['top'].set_color('gray')\nax.spines['bottom'].set_color('gray')\nax.spines['left'].set_color('gray')\nax.spines['right'].set_color('gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='gray')\nax.tick_params(axis='y', colors='gray')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', bottom=False, top=False, left=False, right=False)\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Current Year', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='navy', fontsize=12)\nax.text(0.5, 0.5, 'Previous Year', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, color='orange', fontsize=12)\n\n# Set the color of the bars\nax.bar([0, 1, 2, 3, 4], [1200, 1400, 1600, 1800, 2000], color='orange', edgecolor='black')\nax.bar([0, 1, 2, 3, 4], [1000, 1200, 1400, 1600, 1800], color='navy', edgecolor='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0, -1600), 1, 1600, color='orange', fill=True, alpha=0.5))\nax.add_patch(plt.Rectangle((1, -1600), 1, 1600, color='navy', fill=True, alpha=0.5))\nax.add_patch(plt.Rectangle((2, -1600), 1, 1600, color='orange', fill=True, alpha=0.5))\nax.add_patch(plt.Rectangle((3, -1600), 1, 1600, color='navy', fill=True, alpha=0.5))\nax.add_patch(plt.Rectangle((4, -1600), 1, 1600, color='orange', fill=True, alpha=0.5))\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_77.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Average City Temperatures')\n\n# Create a bar chart with the data\nax.bar(['Beijing', 'Shanghai', 'Guangzhou', 'Shenzhen', 'Chengdu'], [12, 15, 18, 22, 17], color='skyblue')\n\n# Set the x-axis label\nax.set_xlabel('City')\n\n# Set the y-axis label\nax.set_ylabel('Average Temperature (\u00b0C)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_78.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nregions = ['Region 1', 'Region 2', 'Region 3', 'Region 4']\nemissions_2020 = [120, 150, 180, 210]\nemissions_2021 = [130, 160, 190, 220]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Plot the data\nax.plot(regions, emissions_2020, label='2020 Emissions')\nax.plot(regions, emissions_2021, label='2021 Emissions')\n\n# Set the title and labels\nax.set_title('Annual Pollution Emission Reductions')\nax.set_xlabel('Regions')\nax.set_ylabel('Emissions')\n\n# Add a legend\nax.legend()\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_79.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data for the bar charts\ndata = {\n    'Question 1': [26, 32, 17, 15, 10, 26],\n    'Question 2': [13, 10, 29, 15, 10, 22],\n    'Question 3': [37, 35, 11, 15, 9, 32],\n    'Question 4': [33, 14, 13, 11, 10, 29],\n    'Question 5': [40, 14, 13, 12, 21, 21]\n}\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Plot the bar charts\nfor i, (question, values) in enumerate(data.items()):\n    ax.barh(question, values, color=plt.cm.tab20(i*2), label=question)\n\n# Add a legend\nax.legend()\n\n# Set the title and labels\nax.set_title('Survey Results')\nax.set_xlabel('Percentage')\nax.set_ylabel('Questions')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the x-axis labels\nx_labels = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']\n\n# Set the y-axis values\ny_values = [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0]\n\n# Plot the data\nax.plot(x_labels, y_values, color='blue')\n\n# Add a horizontal line at the mean value\nmean_value = sum(y_values) / len(y_values)\nax.axhline(mean_value, color='red')\n\n# Set the title and labels\nax.set_title('Model Accuracy Over Time')\nax.set_xlabel('Top-10 super families in training dataset')\nax.set_ylabel('Model accuracy')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_80.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the plot\nax.set_title('Taboo')\n\n# Create a color bar for the legend\ncbar = fig.colorbar(plt.cm.ScalarMappable(cmap='Blues'), ax=ax)\n\n# Create a grid of subplots\ngs = ax.grid(True)\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y, c=y, cmap='Blues')\n\n# Set the x-axis label\nax.set_xlabel('Num of Constraint Words')\n\n# Set the y-axis label\nax.set_ylabel('Score')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_81.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nbrands = ['LLaMA', 'Vicuna', 'Alpaca', 'WizardLM']\nrewards = [46.3, 56.9, 53.8, 43.7]\nmisleading_rewards = [30.1, 34, 40, 20]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Plot the data\nax.bar(brands, rewards, color='blue')\nax.bar(brands, misleading_rewards, bottom=rewards, color='pink')\n\n# Add labels and title\nax.set_xlabel('Brands')\nax.set_ylabel('Misleading Recalls')\nax.set_title('Truthful: Misleading Recalls = 2:0')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_82.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the bar chart\nbrands = ['Toyota', 'Honda', 'Ford', 'Chevrolet', 'Dodge', 'BMW', 'Audi', 'Mercedes-Benz', 'Jaguar', 'Lexus']\nprobabilities = [25, 30, 15, 20, 25, 28, 22, 24, 26, 29]\n\n# Create a bar chart\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\nax.bar(brands, probabilities, color='blue')\n\n# Set the title and labels\nax.set_title('Probability of Improvement over VLM Image Encoder Baseline Returns')\nax.set_xlabel('Car Brands')\nax.set_ylabel('Probability of Improvement')\n\n# Rotate the x-axis labels for better visibility\nplt.xticks(rotation=45)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_83.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the first chart\nemotions = ['Disapproval', 'Joy', 'Relief', 'Gratitude', 'Annoyance', 'Nervousness', 'Pride', 'Sadness', 'Unbothered', 'Amusement']\nmetrics = [2.1, 3.0, 3.5, 3.5, 6.0, 6.0, 6.7, 7.0, 7.0, 7.6]\ncolors = ['red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet', 'pink', 'brown', 'grey']\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Plot the bar chart\nax.bar(emotions, metrics, color=colors)\n\n# Set the title and labels\nax.set_title('Emotion Frequency Distribution')\nax.set_xlabel('Emotion')\nax.set_ylabel('Frequency Metric 1 (%)')\n\n# Show the plot\nplt.show()\n\n# Data for the second chart\nmetrics2 = [7.1, 7.0, 6.5, 6.5, 5.5, 5.0, 5.0, 4.6, 4.6, 3.7, 3.0, 2.6]\n\n# Create a new figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Plot the bar chart\nax.bar(emotions, metrics2, color=colors)\n\n# Set the title and labels\nax.set_title('Emotion Frequency Distribution')\nax.set_xlabel('Emotion')\nax.set_ylabel('Frequency Metric 2 (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_84.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the title of the plot\nax.set_title('Top 3 Video Games by Player Rating')\n\n# Set the x-axis label\nax.set_xlabel('Player Rating')\n\n# Set the y-axis label\nax.set_ylabel('Game Title')\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 1)\n\n# Set the x-axis ticks\nax.set_xticks([0, 0.25, 0.5, 0.75, 1])\n\n# Set the y-axis ticks\nax.set_yticks([0, 0.25, 0.5, 0.75, 1])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '0.25', '0.5', '0.75', '1'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '0.25', '0.5', '0.75', '1'])\n\n# Set the x-axis grid lines\nax.grid(True, which='both', linestyle='--', linewidth=0.5)\n\n# Set the y-axis grid lines\nax.grid(True, which='both', linestyle='--', linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey', linestyle='--', linewidth=0.5)\n\n# Set the y-axis grid line color\nax.grid(color='grey', linestyle='--', linewidth=0.5)\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(linewidth=0.5)\n\n# Set the x-axis grid line color\nax.grid(color='grey')\n\n# Set the y-axis grid line color\nax.grid(color='grey')\n\n# Set the x-axis grid line style\nax.grid(linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(linewidth=0"}
{"file": "dataset/ori_500/bar_85.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the graph\nax.set_title('Energy Consumption and Production')\n\n# Set the x-axis label\nax.set_xlabel('Year')\n\n# Set the y-axis label\nax.set_ylabel('Energy Consumption (TWh)')\n\n# Set the x-ticks\nax.set_xticks([0, 500, 1000, 1500, 2000])\n\n# Set the y-ticks\nax.set_yticks([0, 500, 1000, 1500, 2000])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the width of the border\nax.spines['top'].set_linewidth(0.5)\nax.spines['bottom'].set_linewidth(0.5)\nax.spines['left'].set_linewidth(0.5)\nax.spines['right'].set_linewidth(0.5)\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the legend\nax.legend().get_texts()[0].set_color('black')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, 0.45, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.4, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, 0.35, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, 0.3, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, 0.25, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.2, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, 0.15, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, 0.1, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, 0.05, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.0, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -0.05, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -0.1, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -0.15, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -0.2, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -0.25, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -0.3, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -0.35, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -0.4, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -0.45, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -0.5, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -0.55, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -0.6, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -0.65, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -0.7, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -0.75, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -0.8, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -0.85, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -0.9, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -0.95, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -1.0, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -1.05, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -1.1, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -1.15, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -1.2, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -1.25, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -1.3, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -1.35, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -1.4, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -1.45, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -1.5, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -1.55, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -1.6, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -1.65, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -1.7, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -1.75, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -1.8, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -1.85, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -1.9, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -1.95, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -2.0, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -2.05, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -2.1, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -2.15, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -2.2, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -2.25, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -2.3, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -2.35, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -2.4, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -2.45, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -2.5, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -2.55, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -2.6, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='tan')\n\n# Set the color of the text\nax.text(0.5, -2.65, 'Electricity Consumption (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Set the color of the text\nax.text(0.5, -2.7, 'Total Energy Consumption (10^2 PJ)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='red')\n\n# Set the color of the text\nax.text(0.5, -2.75, 'Electricity Production (10^1 TWh)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='blue')\n\n# Set the color of the text\nax.text(0.5, -2.8, 'Renewable Energy Ratio (%)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=1"}
{"file": "dataset/ori_500/bar_86.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Sentiment Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Sentiment')\n\n# Set the y-axis label\nax.set_ylabel('Percentage')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3, 4])\n\n# Set the x-tick labels\nax.set_xticklabels(['synthetic data', 'human-authored data', 'synthetic data', 'human-authored data', 'synthetic data'])\n\n# Set the y-ticks\nax.set_yticks([0, 5, 10, 15, 20, 25, 30])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20%', '-10%', '0%', '10%', '20%', '30%', '40%'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the bar width\nbar_width = 0.35\n\n# Set the positions of the bars\nindex = [0, 1, 2, 3, 4]\n\n# Set the colors of the bars\ncolors = ['blue', 'green', 'red', 'purple', 'orange']\n\n# Set the labels of the bars\nlabels = ['leave-taking', 'thanking', 'persuasion', 'apology', 'criticism', 'request', 'greeting']\n\n# Set the values of the bars\nvalues = [10, 10, 10, 7, 24, 31, 8]\n\n# Set the heights of the bars\nheights = [9, 16, 15, 5, 11, 28, 16]\n\n# Plot the bars\nfor i in range(len(labels)):\n    ax.bar(index[i], heights[i], bar_width, color=colors[i], label=labels[i])\n\n# Show the legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_87.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Stock Market Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Stock Price')\n\n# Set the x-axis limits\nax.set_xlim(-10, 10)\n\n# Set the y-axis limits\nax.set_ylim(-5, 20)\n\n# Set the x-axis ticks\nax.set_xticks(range(-10, 11, 2))\n\n# Set the y-axis ticks\nax.set_yticks(range(-5, 21, 2))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['-10', '-8', '-6', '-4', '-2', '0', '2', '4', '6', '8', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['-5', '-3', '-1', '1', '3', '5', '7', '9', '11', '13', '15', '17', '19', '21'])\n\n# Set the x-axis grid lines\nax.grid(axis='x')\n\n# Set the y-axis grid lines\nax.grid(axis='y')\n\n# Set the x-axis grid line color\nax.grid(axis='x', color='gray')\n\n# Set the y-axis grid line color\nax.grid(axis='y', color='gray')\n\n# Set the x-axis grid line style\nax.grid(axis='x', linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(axis='y', linestyle='--')\n\n# Set the x-axis grid line width\nax.grid(axis='x', linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(axis='y', linewidth=0.5)\n\n# Set the x-axis grid line alpha\nax.grid(axis='x', alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(axis='y', alpha=0.5)\n\n# Set the x-axis grid line zorder\nax.grid(axis='x', zorder=1)\n\n# Set the y-axis grid line zorder\nax.grid(axis='y', zorder=1)\n\n# Set the x-axis grid line visible\nax.grid(axis='x', visible=True)\n\n# Set the y-axis grid line visible\nax.grid(axis='y', visible=True)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='major')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='major')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='minor')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='minor')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', zorder=1)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', zorder=1)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', visible=True)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', visible=True)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', zorder=1)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', zorder=1)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', visible=True)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', visible=True)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', zorder=1)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', zorder=1)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', visible=True)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', visible=True)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', zorder=1)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', zorder=1)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', visible=True)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', visible=True)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', zorder=1)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', zorder=1)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', visible=True)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', visible=True)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', zorder=1)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', zorder=1)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', visible=True)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', visible=True)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', zorder=1)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', zorder=1)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', visible=True)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', visible=True)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', zorder=1)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', zorder=1)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', visible=True)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', visible=True)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', zorder=1)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', zorder=1)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', visible=True)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', visible=True)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', zorder=1)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', zorder=1)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', visible=True)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', visible=True)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', zorder=1)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', zorder=1)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', visible=True)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', visible=True)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', zorder=1)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', zorder=1)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', visible=True)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', visible=True)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', zorder=1)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', zorder=1)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', visible=True)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', visible=True)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', alpha=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', alpha=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', zorder=1)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', zorder=1)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', visible=True)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', visible=True)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linewidth=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linewidth=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both',"}
{"file": "dataset/ori_500/bar_88.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Scores by group and constraint word count')\n\n# Create a bar chart with the scores\nax.bar(['3 Constraint Words', '5 Constraint Words', '7 Constraint Words', '10 Constraint Words'], [0.2, 0.4, 0.6, 0.8], color='blue')\nax.bar(['3 Constraint Words', '5 Constraint Words', '7 Constraint Words', '10 Constraint Words'], [-0.2, -0.4, -0.6, -0.8], color='green')\nax.bar(['3 Constraint Words', '5 Constraint Words', '7 Constraint Words', '10 Constraint Words'], [-0.4, -0.6, -0.8, -1.0], color='purple')\nax.bar(['3 Constraint Words', '5 Constraint Words', '7 Constraint Words', '10 Constraint Words'], [-0.6, -0.8, -1.0, -1.2], color='orange')\nax.bar(['3 Constraint Words', '5 Constraint Words', '7 Constraint Words', '10 Constraint Words'], [-0.8, -1.0, -1.2, -1.4], color='cyan')\nax.bar(['3 Constraint Words', '5 Constraint Words', '7 Constraint Words', '10 Constraint Words'], [-1.0, -1.2, -1.4, -1.6], color='pink')\nax.bar(['3 Constraint Words', '5 Constraint Words', '7 Constraint Words', '10 Constraint Words'], [-1.2, -1.4, -1.6, -1.8], color='red')\n\n# Set the x-axis label\nax.set_xlabel('Score')\n\n# Set the y-axis label\nax.set_ylabel('Constraint Word Count')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_89.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the graph\nax.set_title('Superhero Power Levels')\n\n# Set the x-axis label\nax.set_xlabel('Top-10 Superheroes in Training Dataset')\n\n# Set the y-axis label\nax.set_ylabel('Power Level')\n\n# Set the x-ticks\nax.set_xticks([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n\n# Set the x-tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the y-ticks\nax.set_yticks([0, 0.2, 0.4, 0.6, 0.8, 1])\n\n# Set the y-tick labels\nax.set_yticklabels(['0', '0.2', '0.4', '0.6', '0.8', '1'])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightblue')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the line\nax.plot([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], color='red')\n\n# Set the color of the bars\nax.bar([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [0.2, 0.4, 0.6, 0.8, 1, 1.2, 1.4, 1.6, 1.8, 2], color='blue')\n\n# Set the color of the scatter plot\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], color='green')\n\n# Set the color of the pie chart\nax.pie([0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], colors=['red', 'blue', 'green', 'yellow', 'purple', 'orange', 'pink', 'brown', 'cyan', 'magenta'])\n\n# Set the color of the histogram\nax.hist([0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], bins=10, color='gray')\n\n# Set the color of the boxplot\nax.boxplot([0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], patch_artist=True, boxprops=dict(facecolor='blue'))\n\n# Set the color of the violin plot\nax.violinplot([0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], showmeans=True)\n\n# Set the color of the heatmap\nax.imshow([[0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9]], cmap='hot', interpolation='nearest')\n\n# Set the color of the contour plot\nax.contourf([0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [[0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9]], cmap='coolwarm')\n\n# Set the color of the streamplot\nax.streamplot([0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [[0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9]], [[0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9]])\n\n# Set the color of the quiver plot\nax.quiver([0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [[0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9]], [[0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9]])\n\n# Set the color of the polar plot\nax.polar([0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], color='red')\n\n# Set the color of the 3D plot\nax.plot_surface([0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [[0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9]], color='blue')\n\n# Set the color of the 3D scatter plot\nax.scatter3D([0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], color='green')\n\n# Set the color of the 3D bar plot\nax.bar3d([0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], color='blue')\n\n# Set the color of the 3D contour plot\nax.contour3D([0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [[0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9]], color='red')\n\n# Set the color of the 3D streamplot\nax.streamplot3D([0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [[0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9]], [[0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9]], color='green')\n\n# Set the color of the 3D quiver plot\nax.quiver3D([0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [[0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9]], [[0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9]], color='blue')\n\n# Set the color of the 3D polar plot\nax.plot3D([0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [[0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9]], color='red')\n\n# Set the color of the 3D heatmap\nax.imshow3D([[0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9]], cmap='hot', interpolation='nearest')\n\n# Set the color of the 3D contour plot\nax.contour3D([0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [[0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9]], cmap='coolwarm')\n\n# Set the color of the 3D streamplot\nax.streamplot3D([0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [[0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9]], [[0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9]], color='green')\n\n# Set the color of the 3D quiver plot\nax.quiver3D([0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [[0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9]], [[0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9]], color='blue')\n\n# Set the color of the 3D polar plot\nax.plot3D([0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [[0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9]], color='red')\n\n# Set the color of the 3D 3D plot\nax.plot3D([0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9], [[0.1, 0.3, 0.5, 0.7, 0.9, 1.1, 1.3, 1.5, 1.7, 1.9]], color='blue')\n\n# Set the color of the 3D 3D scatter plot\nax.scatter"}
{"file": "dataset/ori_500/bar_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the title of the plot\nax.set_title('GENIA')\n\n# Set the x-axis label\nax.set_xlabel('Error Correction Rate (%)')\n\n# Set the y-axis label\nax.set_ylabel('Time (ms)')\n\n# Set the x-axis limits\nax.set_xlim(0, 100)\n\n# Set the y-axis limits\nax.set_ylim(0, 100)\n\n# Create a bar chart\nax.bar(['Type', 'Span', 'T&S', 'Spurious', 'Total'], [50, 40, 30, 20, 10], color='blue')\n\n# Create a scatter plot\nax.scatter(['Type', 'Span', 'T&S', 'Spurious', 'Total'], [70, 60, 50, 40, 30], color='red')\n\n# Create a line plot\nax.plot(['Type', 'Span', 'T&S', 'Spurious', 'Total'], [80, 70, 60, 50, 40], color='green')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_90.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nmodels = ['GPT4V', 'OSCAR', 'LLaMA', 'BLIP2', 'BLIP1', 'Video-LLaMA', 'Lavila']\nscores_a = [82.5, 73.93, 31.79, 4.64, 4.64, 0.71, 0.0]\nscores_b = [20, 25, 30, 35, 40, 45, 50]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\n\n# Plot the scores\nax.bar(models, scores_a, color='red')\nax.bar(models, scores_b, bottom=scores_a, color='blue')\n\n# Set the title and labels\nax.set_title('Human Study')\nax.set_xlabel('Model')\nax.set_ylabel('Score A (%)')\n\n# Add a horizontal line for each model\nfor i, model in enumerate(models):\n    ax.axhline(y=scores_a[i], color='black', linestyle='-')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_91.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Set the color of the rectangle\nax.set_facecolor('lightgrey')\n\n# Set the title of the plot\nax.set_title('Political Party Sentiment Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Pheme')\n\n# Set the y-axis label\nax.set_ylabel('Macro F1-score')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3, 4, 5])\n\n# Set the x-tick labels\nax.set_xticklabels(['GCN', 'RvNN', 'Hyphen', 'GET', 'LMM', 'GNN'])\n\n# Set the y-ticks\nax.set_yticks([70, 80, 90])\n\n# Set the y-tick labels\nax.set_yticklabels(['.70', '.80', '.90'])\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((0, 0), 1, 1, color='blue'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((1, 0), 1, 1, color='orange'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((2, 0), 1, 1, color='red'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((3, 0), 1, 1, color='green'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((4, 0), 1, 1, color='purple'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((5, 0), 1, 1, color='pink'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((6, 0), 1, 1, color='brown'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((7, 0), 1, 1, color='cyan'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((8, 0), 1, 1, color='magenta'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((9, 0), 1, 1, color='yellow'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((10, 0), 1, 1, color='white'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((11, 0), 1, 1, color='black'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((12, 0), 1, 1, color='silver'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((13, 0), 1, 1, color='gold'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((14, 0), 1, 1, color='lime'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((15, 0), 1, 1, color='teal'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((16, 0), 1, 1, color='navy'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((17, 0), 1, 1, color='maroon'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((18, 0), 1, 1, color='olive'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((19, 0), 1, 1, color='aqua'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((20, 0), 1, 1, color='fuchsia'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((21, 0), 1, 1, color='silver'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((22, 0), 1, 1, color='gold'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((23, 0), 1, 1, color='lime'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((24, 0), 1, 1, color='teal'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((25, 0), 1, 1, color='navy'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((26, 0), 1, 1, color='maroon'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((27, 0), 1, 1, color='olive'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((28, 0), 1, 1, color='aqua'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((29, 0), 1, 1, color='fuchsia'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((30, 0), 1, 1, color='silver'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((31, 0), 1, 1, color='gold'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((32, 0), 1, 1, color='lime'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((33, 0), 1, 1, color='teal'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((34, 0), 1, 1, color='navy'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((35, 0), 1, 1, color='maroon'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((36, 0), 1, 1, color='olive'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((37, 0), 1, 1, color='aqua'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((38, 0), 1, 1, color='fuchsia'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((39, 0), 1, 1, color='silver'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((40, 0), 1, 1, color='gold'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((41, 0), 1, 1, color='lime'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((42, 0), 1, 1, color='teal'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((43, 0), 1, 1, color='navy'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((44, 0), 1, 1, color='maroon'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((45, 0), 1, 1, color='olive'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((46, 0), 1, 1, color='aqua'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((47, 0), 1, 1, color='fuchsia'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((48, 0), 1, 1, color='silver'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((49, 0), 1, 1, color='gold'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((50, 0), 1, 1, color='lime'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((51, 0), 1, 1, color='teal'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((52, 0), 1, 1, color='navy'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((53, 0), 1, 1, color='maroon'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((54, 0), 1, 1, color='olive'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((55, 0), 1, 1, color='aqua'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((56, 0), 1, 1, color='fuchsia'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((57, 0), 1, 1, color='silver'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((58, 0), 1, 1, color='gold'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((59, 0), 1, 1, color='lime'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((60, 0), 1, 1, color='teal'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((61, 0), 1, 1, color='navy'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((62, 0), 1, 1, color='maroon'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((63, 0), 1, 1, color='olive'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((64, 0), 1, 1, color='aqua'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((65, 0), 1, 1, color='fuchsia'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((66, 0), 1, 1, color='silver'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((67, 0), 1, 1, color='gold'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((68, 0), 1, 1, color='lime'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((69, 0), 1, 1, color='teal'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((70, 0), 1, 1, color='navy'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((71, 0), 1, 1, color='maroon'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((72, 0), 1, 1, color='olive'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((73, 0), 1, 1, color='aqua'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((74, 0), 1, 1, color='fuchsia'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((75, 0), 1, 1, color='silver'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((76, 0), 1, 1, color='gold'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((77, 0), 1, 1, color='lime'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((78, 0), 1, 1, color='teal'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((79, 0), 1, 1, color='navy'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((80, 0), 1, 1, color='maroon'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((81, 0), 1, 1, color='olive'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((82, 0), 1, 1, color='aqua'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((83, 0), 1, 1, color='fuchsia'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((84, 0), 1, 1, color='silver'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((85, 0), 1, 1, color='gold'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((86, 0), 1, 1, color='lime'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((87, 0), 1, 1, color='teal'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((88, 0), 1, 1, color='navy'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((89, 0), 1, 1, color='maroon'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((90, 0), 1, 1, color='olive'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((91, 0), 1, 1, color='aqua'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((92, 0), 1, 1, color='fuchsia'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((93, 0), 1, 1, color='silver'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((94, 0), 1, 1, color='gold'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((95, 0), 1, 1, color='lime'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((96, 0), 1, 1, color='teal'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((97, 0), 1, 1, color='navy'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((98, 0), 1, 1, color='maroon'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((99, 0), 1, 1, color='olive'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((100, 0), 1, 1, color='aqua'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((101, 0), 1, 1, color='fuchsia'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((102, 0), 1, 1, color='silver'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((103, 0), 1, 1, color='gold'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((104, 0), 1, 1, color='lime'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((105, 0), 1, 1, color='teal'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((106, 0), 1, 1, color='navy'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((107, 0), 1, 1, color='maroon'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((108, 0), 1, 1, color='olive'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((109, 0), 1, 1, color='aqua'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((110, 0), 1, 1, color='fuchsia'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((111, 0), 1, 1, color='silver'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((112, 0), 1, 1, color='gold'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((113, 0), 1, 1, color='lime'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((114, 0), 1, 1, color='teal'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((115, 0), 1, 1, color='navy'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((116, 0), 1, 1, color='maroon'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((117, 0), 1, 1, color='olive'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((118, 0), 1, 1, color='aqua'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((119, 0), 1, 1, color='fuchsia'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((120, 0), 1, 1, color='silver'))\n\n# Set the color of the rectangle\nax.add_patch(plt.Rectangle((121, 0), 1"}
{"file": "dataset/ori_500/bar_92.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\nax.set_title('Resonance Preference Plot for rich-context')\n\n# Data for plot 1\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'b-')\nax.fill_between(x, y, color='blue', alpha=0.2)\nax.text(0, 900, 'human', fontsize=12, color='blue')\n\n# Data for plot 2\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'g-')\nax.fill_between(x, y, color='green', alpha=0.2)\nax.text(0, 900, 'gpt4', fontsize=12, color='green')\n\n# Data for plot 3\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'r-')\nax.fill_between(x, y, color='red', alpha=0.2)\nax.text(0, 900, 'gpt4-cot', fontsize=12, color='red')\n\n# Data for plot 4\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'c-')\nax.fill_between(x, y, color='cyan', alpha=0.2)\nax.text(0, 900, 'human', fontsize=12, color='cyan')\n\n# Data for plot 5\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'm-')\nax.fill_between(x, y, color='magenta', alpha=0.2)\nax.text(0, 900, 'gpt4', fontsize=12, color='magenta')\n\n# Data for plot 6\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'y-')\nax.fill_between(x, y, color='yellow', alpha=0.2)\nax.text(0, 900, 'gpt4-cot', fontsize=12, color='yellow')\n\n# Data for plot 7\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'k-')\nax.fill_between(x, y, color='black', alpha=0.2)\nax.text(0, 900, 'human', fontsize=12, color='black')\n\n# Data for plot 8\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'w-')\nax.fill_between(x, y, color='white', alpha=0.2)\nax.text(0, 900, 'gpt4', fontsize=12, color='white')\n\n# Data for plot 9\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'b-')\nax.fill_between(x, y, color='blue', alpha=0.2)\nax.text(0, 900, 'gpt4-cot', fontsize=12, color='blue')\n\n# Data for plot 10\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'g-')\nax.fill_between(x, y, color='green', alpha=0.2)\nax.text(0, 900, 'human', fontsize=12, color='green')\n\n# Data for plot 11\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'r-')\nax.fill_between(x, y, color='red', alpha=0.2)\nax.text(0, 900, 'gpt4', fontsize=12, color='red')\n\n# Data for plot 12\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'c-')\nax.fill_between(x, y, color='cyan', alpha=0.2)\nax.text(0, 900, 'gpt4-cot', fontsize=12, color='cyan')\n\n# Data for plot 13\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'm-')\nax.fill_between(x, y, color='magenta', alpha=0.2)\nax.text(0, 900, 'human', fontsize=12, color='magenta')\n\n# Data for plot 14\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'y-')\nax.fill_between(x, y, color='yellow', alpha=0.2)\nax.text(0, 900, 'gpt4', fontsize=12, color='yellow')\n\n# Data for plot 15\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'k-')\nax.fill_between(x, y, color='black', alpha=0.2)\nax.text(0, 900, 'gpt4-cot', fontsize=12, color='black')\n\n# Data for plot 16\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'w-')\nax.fill_between(x, y, color='white', alpha=0.2)\nax.text(0, 900, 'human', fontsize=12, color='white')\n\n# Data for plot 17\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'b-')\nax.fill_between(x, y, color='blue', alpha=0.2)\nax.text(0, 900, 'gpt4', fontsize=12, color='blue')\n\n# Data for plot 18\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'g-')\nax.fill_between(x, y, color='green', alpha=0.2)\nax.text(0, 900, 'gpt4-cot', fontsize=12, color='green')\n\n# Data for plot 19\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'r-')\nax.fill_between(x, y, color='red', alpha=0.2)\nax.text(0, 900, 'human', fontsize=12, color='red')\n\n# Data for plot 20\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'c-')\nax.fill_between(x, y, color='cyan', alpha=0.2)\nax.text(0, 900, 'gpt4', fontsize=12, color='cyan')\n\n# Data for plot 21\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'm-')\nax.fill_between(x, y, color='magenta', alpha=0.2)\nax.text(0, 900, 'gpt4-cot', fontsize=12, color='magenta')\n\n# Data for plot 22\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'y-')\nax.fill_between(x, y, color='yellow', alpha=0.2)\nax.text(0, 900, 'human', fontsize=12, color='yellow')\n\n# Data for plot 23\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'k-')\nax.fill_between(x, y, color='black', alpha=0.2)\nax.text(0, 900, 'gpt4', fontsize=12, color='black')\n\n# Data for plot 24\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'w-')\nax.fill_between(x, y, color='white', alpha=0.2)\nax.text(0, 900, 'gpt4-cot', fontsize=12, color='white')\n\n# Data for plot 25\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'b-')\nax.fill_between(x, y, color='blue', alpha=0.2)\nax.text(0, 900, 'human', fontsize=12, color='blue')\n\n# Data for plot 26\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'g-')\nax.fill_between(x, y, color='green', alpha=0.2)\nax.text(0, 900, 'gpt4', fontsize=12, color='green')\n\n# Data for plot 27\nx = [0, 100, 200, 300, 400, 500, 600, 700, 800]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900]\nax.plot(x, y, 'r-')\nax.fill_between(x, y, color='red', alpha=0.2)\nax.text(0, 900"}
{"file": "dataset/ori_500/bar_93.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the first graph\neffort_data = [20.4, 29.6, 20.4, 20.4, 20.4, 9.3]\nbrainwave_data = [7.1, 38.1, 14.3, 16.7, 0, 20.4, 20.4, 9.3]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 3.0))\n\n# Plot the data\nax.bar(range(len(effort_data)), effort_data, color='red')\nax.bar(range(len(brainwave_data)), brainwave_data, color='green')\n\n# Set the labels\nax.set_xlabel('Time (s)')\nax.set_ylabel('Effort/Brainwave (%)')\n\n# Set the title\nax.set_title('Eye Movement')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_94.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Stock Market Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Rate of Gain Change[%]')\n\n# Create a bar chart\nbars = ax.bar(range(10), [20, 30, 40, 50, 60, 70, 80, 90, 100, 110], color='blue')\n\n# Add labels to the bars\nfor bar in bars:\n    yval = bar.get_height()\n    ax.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom')\n\n# Set the x-ticks\nax.set_xticks(range(10))\nax.set_xticklabels(['0.5', '0.6', '0.7', '0.8', '0.9', '1.0', '1.1', '1.2', '1.3', '1.4'])\n\n# Set the y-limits\nax.set_ylim([0, 100])\n\n# Set the y-ticks\nax.set_yticks(range(0, 101, 10))\n\n# Set the y-tick labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the x-tick labels\nax.set_xticklabels(['-150', '-120', '-90', '-60', '-30', '0', '30', '60', '90', '120'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50', '60', '70', '80', '90', '100'])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20', '30', '40', '50',"}
{"file": "dataset/ori_500/bar_95.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nbrands = ['Bactrian-X EN', 'Lima-X DE', 'Bactrian-X FR', 'Lima-X IT', 'Bactrian-X ES']\nperformance = [3.5, 2.3, 4.4, 1.3, -0.7]\nimprovement = [-1.0, 0.3, 3.4, -3.3, -2.7]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Plot the data\nax.plot(performance, improvement, 'o-')\n\n# Set the title and labels\nax.set_title('Model Performance Improvement by Language')\nax.set_xlabel('Performance [m/s]')\nax.set_ylabel('Improvement [%]')\n\n# Add a color bar\ncbar = fig.colorbar(ax.images[0])\ncbar.set_label('Language')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_96.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Truthful: Misleading = 2:0')\n\n# Create a bar chart with the data\nax.bar(['Random', 'Ours', 'SOTA'], [66.3, 61.9, 53.8], color='blue')\nax.bar(['Random', 'Ours', 'SOTA'], [10.1, 13.6, 13.7], color='red')\n\n# Set the y-axis limits\nax.set_ylim(-80, 80)\n\n# Add a grid\nax.grid(True)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_97.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Human Labeling and Agreement Bias Checking 1')\n\n# Create a bar chart with the data\nax.bar(range(1, 7), [50, 40, 30, 20, 10, 0], color='pink')\n\n# Set the x-axis labels\nax.set_xticks(range(1, 7))\nax.set_xticklabels(['1', '2', '3', '4', '5', '6'])\n\n# Set the y-axis label\nax.set_ylabel('Scores')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_98.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nmodels = ['Model A', 'Model B', 'Model C', 'Model D', 'Model E', 'Model F', 'Model G', 'Model H', 'Model I']\nscores = [54.9, 38.3, 71.5, 79.2, 70.3, 54.5, 52.9, 42.4, 92.6, 89.2, 83.3, 96.4, 83.3, 71.1, 64.6, 43.8, 87.1, 8.7, 2.0, 1.2]\ncolors = ['green', 'orange', 'brown', 'red', 'blue', 'cyan', 'magenta', 'yellow']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Plot the data\nfor i, model in enumerate(models):\n    ax.bar(model, scores[i], color=colors[i % len(colors)])\n\n# Set the title and labels\nax.set_title('Performance Comparison by Model')\nax.set_xlabel('Models')\nax.set_ylabel('Scores')\n\n# Add a legend\nax.legend(['Contrastive Search', 'Beam Search'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/bar_99.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the first graph\nx = ['Traffic Flow', 'Accident Rate', 'Public Transport Usage', 'Road Conditions', 'Public Satisfaction']\ny = [150.0, 180.0, 75.0, 90.0, 80.0]\ncolors = ['orange', 'orange', 'orange', 'orange', 'orange']\n\n# Data for the second graph\nx2 = ['Traffic Flow', 'Accident Rate', 'Public Transport Usage', 'Road Conditions', 'Public Satisfaction']\ny2 = [2.5, 2.0, 1.5, 2.0, 1.0]\ncolors2 = ['lightblue', 'lightblue', 'lightblue', 'lightblue', 'lightblue']\n\n# Data for the third graph\nx3 = ['Traffic Flow', 'Accident Rate', 'Public Transport Usage', 'Road Conditions', 'Public Satisfaction']\ny3 = [60.0, 55.0, 70.0, 65.0, 72.0]\ncolors3 = ['lightgreen', 'lightgreen', 'lightgreen', 'lightgreen', 'lightgreen']\n\n# Data for the fourth graph\nx4 = ['Traffic Flow', 'Accident Rate', 'Public Transport Usage', 'Road Conditions', 'Public Satisfaction']\ny4 = [80.0, 75.0, 90.0, 85.0, 88.0]\ncolors4 = ['yellow', 'yellow', 'yellow', 'yellow', 'yellow']\n\nfig, axs = plt.subplots(2, 2, figsize=(10.0, 8.0))\n\naxs[0, 0].bar(x, y, color=colors)\naxs[0, 0].set_title('Dataset 1')\naxs[0, 0].set_xlabel('Metrics')\naxs[0, 0].set_ylabel('Values')\n\naxs[0, 1].bar(x2, y2, color=colors2)\naxs[0, 1].set_title('Dataset 2')\naxs[0, 1].set_xlabel('Metrics')\naxs[0, 1].set_ylabel('Values')\n\naxs[1, 0].bar(x3, y3, color=colors3)\naxs[1, 0].set_title('Dataset 3')\naxs[1, 0].set_xlabel('Metrics')\naxs[1, 0].set_ylabel('Values')\n\naxs[1, 1].bar(x4, y4, color=colors4)\naxs[1, 1].set_title('Dataset 4')\naxs[1, 1].set_xlabel('Metrics')\naxs[1, 1].set_ylabel('Values')\n\nplt.tight_layout()\nplt.show()\n```"}
{"file": "dataset/ori_500/box_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\nax.set_title('Dominance')\nax.set_xlabel('SAM Rating')\nax.set_ylabel('Color')\n\n# Define the colors and their corresponding SAM ratings\ncolors = ['neutral', 'yellow high', 'yellow low', 'green high', 'green low', 'blue high', 'blue low', 'red high', 'red low', 'orange']\nsam_ratings = [5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\n\n# Create a bar chart with the SAM ratings\nbars = ax.bar(colors, sam_ratings, color='blue')\n\n# Add labels to each bar\nfor bar in bars:\n    yval = bar.get_height()\n    ax.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/box_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(9.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Daily Activity Durations')\n\n# Create a bar chart for gaming duration\ngaming_duration = [20, 30, 40, 50, 60]\ngaming_intensity = [10, 20, 30, 40, 50]\nax.bar(gaming_duration, gaming_intensity, color='blue', label='Gaming Duration')\n\n# Create a bar chart for exercise duration\nexercise_duration = [20, 30, 40, 50, 60]\nexercise_intensity = [15, 25, 35, 45, 55]\nax.bar(exercise_duration, exercise_intensity, color='green', label='Exercise Duration')\n\n# Create a bar chart for reading duration\nreading_duration = [20, 30, 40, 50, 60]\nreading_intensity = [12, 22, 32, 42, 52]\nax.bar(reading_duration, reading_intensity, color='yellow', label='Reading Duration')\n\n# Create a bar chart for music playtime\nmusic_playtime = [20, 30, 40, 50, 60]\nmusic_intensity = [18, 28, 38, 48, 58]\nax.bar(music_playtime, music_intensity, color='cyan', label='Music Playtime')\n\n# Add a legend to the plot\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Llama-70b (T2TT) vs Llama-70b (S2TT)')\n\n# Set the x-axis label\nax.set_xlabel('Llama-70b (T2TT)')\n\n# Set the y-axis label\nax.set_ylabel('Llama-70b (S2TT)')\n\n# Set the x-axis limits\nax.set_xlim(15, 25)\n\n# Set the y-axis limits\nax.set_ylim(15, 25)\n\n# Set the x-axis ticks\nax.set_xticks([15, 20, 25])\n\n# Set the y-axis ticks\nax.set_yticks([15, 20, 25])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['15', '20', '25'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['15', '20', '25'])\n\n# Set the x-axis grid lines\nax.grid(True)\n\n# Set the y-axis grid lines\nax.grid(True)\n\n# Set the x-axis line color\nax.spines['left'].set_color('orange')\n\n# Set the y-axis line color\nax.spines['bottom'].set_color('orange')\n\n# Set the x-axis line width\nax.spines['left'].set_linewidth(2)\n\n# Set the y-axis line width\nax.spines['bottom'].set_linewidth(2)\n\n# Set the x-axis line style\nax.spines['left'].set_linestyle('-')\n\n# Set the y-axis line style\nax.spines['bottom'].set_linestyle('-')\n\n# Set the x-axis line capstyle\nax.spines['left'].set_capstyle('round')\n\n# Set the y-axis line capstyle\nax.spines['bottom'].set_capstyle('round')\n\n# Set the x-axis line joinstyle\nax.spines['left'].set_joinstyle('round')\n\n# Set the y-axis line joinstyle\nax.spines['bottom'].set_joinstyle('round')\n\n# Set the x-axis line dashcap\nax.spines['left'].set_dashcapstyle('round')\n\n# Set the y-axis line dashcap\nax.spines['bottom'].set_dashcapstyle('round')\n\n# Set the x-axis line dashjoin\nax.spines['left'].set_dashjoinstyle('round')\n\n# Set the y-axis line dashjoin\nax.spines['bottom'].set_dashjoinstyle('round')\n\n# Set the x-axis line dashoffset\nax.spines['left'].set_dashoffset(0.0)\n\n# Set the y-axis line dashoffset\nax.spines['bottom'].set_dashoffset(0.0)\n\n# Set the x-axis line dashes\nax.spines['left'].set_dashes((1, 1))\n\n# Set the y-axis line dashes\nax.spines['bottom'].set_dashes((1, 1))\n\n# Set the x-axis line solidcap\nax.spines['left'].set_solidcapstyle('round')\n\n# Set the y-axis line solidcap\nax.spines['bottom'].set_solidcapstyle('round')\n\n# Set the x-axis line solidjoin\nax.spines['left'].set_solidjoinstyle('round')\n\n# Set the y-axis line solidjoin\nax.spines['bottom'].set_solidjoinstyle('round')\n\n# Set the x-axis line solidoffset\nax.spines['left'].set_solidoffset(0.0)\n\n# Set the y-axis line solidoffset\nax.spines['bottom'].set_solidoffset(0.0)\n\n# Set the x-axis line soliddashes\nax.spines['left'].set_soliddashes((1, 1))\n\n# Set the y-axis line soliddashes\nax.spines['bottom'].set_soliddashes((1, 1))\n\n# Set the x-axis line soliddashcap\nax.spines['left'].set_soliddashcapstyle('round')\n\n# Set the y-axis line soliddashcap\nax.spines['bottom'].set_soliddashcapstyle('round')\n\n# Set the x-axis line soliddashjoin\nax.spines['left'].set_soliddashjoinstyle('round')\n\n# Set the y-axis line soliddashjoin\nax.spines['bottom'].set_soliddashjoinstyle('round')\n\n# Set the x-axis line soliddashoffset\nax.spines['left'].set_soliddashoffset(0.0)\n\n# Set the y-axis line soliddashoffset\nax.spines['bottom'].set_soliddashoffset(0.0)\n\n# Set the x-axis line soliddashed\nax.spines['left'].set_soliddashed((1, 1))\n\n# Set the y-axis line soliddashed\nax.spines['bottom'].set_soliddashed((1, 1))\n\n# Set the x-axis line soliddashcap\nax.spines['left'].set_soliddashcapstyle('round')\n\n# Set the y-axis line soliddashcap\nax.spines['bottom'].set_soliddashcapstyle('round')\n\n# Set the x-axis line soliddashjoin\nax.spines['left'].set_soliddashjoinstyle('round')\n\n# Set the y-axis line soliddashjoin\nax.spines['bottom'].set_soliddashjoinstyle('round')\n\n# Set the x-axis line soliddashoffset\nax.spines['left'].set_soliddashoffset(0.0)\n\n# Set the y-axis line soliddashoffset\nax.spines['bottom'].set_soliddashoffset(0.0)\n\n# Set the x-axis line soliddashed\nax.spines['left'].set_soliddashed((1, 1))\n\n# Set the y-axis line soliddashed\nax.spines['bottom'].set_soliddashed((1, 1))\n\n# Set the x-axis line soliddashcap\nax.spines['left'].set_soliddashcapstyle('round')\n\n# Set the y-axis line soliddashcap\nax.spines['bottom'].set_soliddashcapstyle('round')\n\n# Set the x-axis line soliddashjoin\nax.spines['left'].set_soliddashjoinstyle('round')\n\n# Set the y-axis line soliddashjoin\nax.spines['bottom'].set_soliddashjoinstyle('round')\n\n# Set the x-axis line soliddashoffset\nax.spines['left'].set_soliddashoffset(0.0)\n\n# Set the y-axis line soliddashoffset\nax.spines['bottom'].set_soliddashoffset(0.0)\n\n# Set the x-axis line soliddashed\nax.spines['left'].set_soliddashed((1, 1))\n\n# Set the y-axis line soliddashed\nax.spines['bottom'].set_soliddashed((1, 1))\n\n# Set the x-axis line soliddashcap\nax.spines['left'].set_soliddashcapstyle('round')\n\n# Set the y-axis line soliddashcap\nax.spines['bottom'].set_soliddashcapstyle('round')\n\n# Set the x-axis line soliddashjoin\nax.spines['left'].set_soliddashjoinstyle('round')\n\n# Set the y-axis line soliddashjoin\nax.spines['bottom'].set_soliddashjoinstyle('round')\n\n# Set the x-axis line soliddashoffset\nax.spines['left'].set_soliddashoffset(0.0)\n\n# Set the y-axis line soliddashoffset\nax.spines['bottom'].set_soliddashoffset(0.0)\n\n# Set the x-axis line soliddashed\nax.spines['left'].set_soliddashed((1, 1))\n\n# Set the y-axis line soliddashed\nax.spines['bottom'].set_soliddashed((1, 1))\n\n# Set the x-axis line soliddashcap\nax.spines['left'].set_soliddashcapstyle('round')\n\n# Set the y-axis line soliddashcap\nax.spines['bottom'].set_soliddashcapstyle('round')\n\n# Set the x-axis line soliddashjoin\nax.spines['left'].set_soliddashjoinstyle('round')\n\n# Set the y-axis line soliddashjoin\nax.spines['bottom'].set_soliddashjoinstyle('round')\n\n# Set the x-axis line soliddashoffset\nax.spines['left'].set_soliddashoffset(0.0)\n\n# Set the y-axis line soliddashoffset\nax.spines['bottom'].set_soliddashoffset(0.0)\n\n# Set the x-axis line soliddashed\nax.spines['left'].set_soliddashed((1, 1))\n\n# Set the y-axis line soliddashed\nax.spines['bottom'].set_soliddashed((1, 1))\n\n# Set the x-axis line soliddashcap\nax.spines['left'].set_soliddashcapstyle('round')\n\n# Set the y-axis line soliddashcap\nax.spines['bottom'].set_soliddashcapstyle('round')\n\n# Set the x-axis line soliddashjoin\nax.spines['left'].set_soliddashjoinstyle('round')\n\n# Set the y-axis line soliddashjoin\nax.spines['bottom'].set_soliddashjoinstyle('round')\n\n# Set the x-axis line soliddashoffset\nax.spines['left'].set_soliddashoffset(0.0)\n\n# Set the y-axis line soliddashoffset\nax.spines['bottom'].set_soliddashoffset(0.0)\n\n# Set the x-axis line soliddashed\nax.spines['left'].set_soliddashed((1, 1))\n\n# Set the y-axis line soliddashed\nax.spines['bottom'].set_soliddashed((1, 1))\n\n# Set the x-axis line soliddashcap\nax.spines['left'].set_soliddashcapstyle('round')\n\n# Set the y-axis line soliddashcap\nax.spines['bottom'].set_soliddashcapstyle('round')\n\n# Set the x-axis line soliddashjoin\nax.spines['left'].set_soliddashjoinstyle('round')\n\n# Set the y-axis line soliddashjoin\nax.spines['bottom'].set_soliddashjoinstyle('round')\n\n# Set the x-axis line soliddashoffset\nax.spines['left'].set_soliddashoffset(0.0)\n\n# Set the y-axis line soliddashoffset\nax.spines['bottom'].set_soliddashoffset(0.0)\n\n# Set the x-axis line soliddashed\nax.spines['left'].set_soliddashed((1, 1))\n\n# Set the y-axis line soliddashed\nax.spines['bottom'].set_soliddashed((1, 1))\n\n# Set the x-axis line soliddashcap\nax.spines['left'].set_soliddashcapstyle('round')\n\n# Set the y-axis line soliddashcap\nax.spines['bottom'].set_soliddashcapstyle('round')\n\n# Set the x-axis line soliddashjoin\nax.spines['left'].set_soliddashjoinstyle('round')\n\n# Set the y-axis line soliddashjoin\nax.spines['bottom'].set_soliddashjoinstyle('round')\n\n# Set the x-axis line soliddashoffset\nax.spines['left'].set_soliddashoffset(0.0)\n\n# Set the y-axis line soliddashoffset\nax.spines['bottom'].set_soliddashoffset(0.0)\n\n# Set the x-axis line soliddashed\nax.spines['left'].set_soliddashed((1, 1))\n\n# Set the y-axis line soliddashed\nax.spines['bottom'].set_soliddashed((1, 1))\n\n# Set the x-axis line soliddashcap\nax.spines['left'].set_soliddashcapstyle('round')\n\n# Set the y-axis line soliddashcap\nax.spines['bottom'].set_soliddashcapstyle('round')\n\n# Set the x-axis line soliddashjoin\nax.spines['left'].set_soliddashjoinstyle('round')\n\n# Set the y-axis line soliddashjoin\nax.spines['bottom'].set_soliddashjoinstyle('round')\n\n# Set the x-axis line soliddashoffset\nax.spines['left'].set_soliddashoffset(0.0)\n\n# Set the y-axis line soliddashoffset\nax.spines['bottom'].set_soliddashoffset(0.0)\n\n# Set the x-axis line soliddashed\nax.spines['left'].set_soliddashed((1, 1))\n\n# Set the y-axis line soliddashed\nax.spines['bottom'].set_soliddashed((1, 1))\n\n# Set the x-axis line soliddashcap\nax.spines['left'].set_soliddashcapstyle('round')\n\n# Set the y-axis line soliddashcap\nax.spines['bottom'].set_soliddashcapstyle('round')\n\n# Set the x-axis line soliddashjoin\nax.spines['left'].set_soliddashjoinstyle('round')\n\n# Set the y-axis line soliddashjoin\nax.spines['bottom'].set_soliddashjoinstyle('round')\n\n# Set the x-axis line soliddashoffset\nax.spines['left'].set_soliddashoffset(0.0)\n\n# Set the y-axis line soliddashoffset\nax.spines['bottom'].set_soliddashoffset(0.0)\n\n# Set the x-axis line soliddashed\nax.spines['left'].set_soliddashed((1, 1))\n\n# Set the y-axis line soliddashed\nax.spines['bottom'].set_soliddashed((1, 1))\n\n# Set the x-axis line soliddashcap\nax.spines['left'].set_soliddashcapstyle('round')\n\n# Set the y-axis line soliddashcap\nax.spines['bottom'].set_soliddashcapstyle('round')\n\n# Set the x-axis line soliddashjoin\nax.spines['left'].set_soliddashjoinstyle('round')\n\n# Set the y-axis line soliddashjoin\nax.spines['bottom'].set_soliddashjoinstyle('round')\n\n# Set the x-axis line soliddashoffset\nax.spines['left'].set_soliddashoffset(0.0)\n\n# Set the y-axis line soliddashoffset\nax.spines['bottom'].set_soliddashoffset(0.0)\n\n# Set the x-axis line soliddashed\nax.spines['left'].set_soliddashed((1, 1))\n\n# Set the y-axis line soliddashed\nax.spines['bottom'].set_soliddashed((1, 1))\n\n# Set the x-axis line soliddashcap\nax.spines['left'].set_soliddashcapstyle('round')\n\n# Set the y-axis line soliddashcap\nax.spines['bottom'].set_soliddashcapstyle('round')\n\n# Set the x-axis line soliddashjoin\nax.spines['left'].set_soliddashjoinstyle('round')\n\n# Set the y-axis line soliddashjoin\nax.spines['bottom'].set_soliddashjoinstyle('round')\n\n# Set the x-axis line soliddashoffset\nax.spines['left'].set_soliddashoffset(0.0)\n\n# Set the y-axis line soliddashoffset\nax.spines['bottom'].set_soliddashoffset(0.0)\n\n# Set the x-axis line soliddashed\nax.spines['left'].set_soliddashed((1, 1))\n\n# Set the y-axis line soliddashed\nax.spines['bottom'].set_soliddashed((1, 1))\n\n# Set the x-axis line soliddashcap\nax.spines['left'].set_soliddashcapstyle('round')\n\n# Set the y-axis line soliddashcap\nax.spines['bottom'].set_soliddashcapstyle('round')\n\n# Set the x-axis line soliddashjoin\nax.spines['left'].set_soliddashjoinstyle('round')\n\n# Set the y-axis line soliddashjoin\nax.spines['bottom'].set_soliddashjoinstyle('round')\n\n# Set the x-axis line soliddashoffset\nax.spines['left'].set_soliddashoffset(0.0)\n\n# Set the y-axis line soliddashoffset\nax.spines['bottom'].set_soliddashoffset(0.0)\n\n# Set the x-axis line soliddashed\nax.spines['left'].set_soliddashed((1, 1))\n\n# Set the y-axis line soliddashed\nax.spines['bottom'].set_soliddashed((1, 1))\n\n# Set the x-axis line soliddashcap\nax.spines['left'].set_soliddashcapstyle('round')\n\n# Set the y-axis line soliddashcap\nax.spines['bottom'].set_soliddashcapstyle('round')\n\n# Set the x-axis line soliddashjoin\nax.spines['left'].set_soliddashjoinstyle('round')\n\n# Set the y-axis line soliddashjoin\nax.spines['bottom'].set_soliddashjoinstyle('round')\n\n# Set the x-axis line soliddashoffset\nax.spines['left'].set_soliddashoffset(0.0)\n\n# Set the y-axis line soliddashoffset\nax.spines['bottom'].set_soliddashoffset(0.0)\n\n# Set the x-axis line soliddashed\nax.spines['left'].set_soliddashed((1, 1))\n\n# Set the y-axis line soliddashed\nax.spines['bottom'].set_soliddashed((1, 1))\n\n# Set the x-axis line soliddashcap\nax.spines['left'].set_soliddashcapstyle('round')\n\n# Set the y-axis line soliddashcap\nax.spines['bottom'].set_soliddashcapstyle('round')\n\n# Set the x-axis line soliddashjoin\nax.spines['left'].set_soliddashjoinstyle('round')\n\n# Set the y-axis line soliddashjoin\nax.spines['bottom'].set_soliddashjoinstyle('round')\n\n# Set the x-axis line soliddashoffset\nax.spines['left'].set_soliddashoffset(0.0)\n\n# Set the y-axis line soliddashoffset\nax.spines['bottom'].set_soliddashoffset(0.0)\n\n# Set the x-axis line soliddashed\nax.spines['left'].set_soliddashed((1, 1))\n\n# Set the y-axis line soliddashed\nax.spines['bottom'].set_soliddashed((1, 1))\n\n# Set the x-axis line soliddashcap\nax.spines['left'].set_soliddashcapstyle('round')\n\n# Set the y-axis line soliddashcap\nax.spines['bottom'].set_soliddashcapstyle('round')\n\n# Set the x-axis line soliddashjoin\nax.spines['left'].set_soliddashjoinstyle('round')\n\n# Set the y-axis line soliddashjoin\nax.spines['bottom'].set_soliddashjoinstyle('round')\n\n# Set the x-axis line soliddashoffset\nax.spines['left'].set_soliddashoffset(0.0)\n\n# Set the y-axis line soliddashoffset\nax.spines['bottom'].set_soliddashoffset(0.0)\n\n# Set the x-axis line soliddashed"}
{"file": "dataset/ori_500/box_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis labels\nx_labels = ['AlphaBeta', 'z^', 'Gamma(\u03b3 = 0.05)', 'Gamma(\u03b3 = 0.1)', 'Gamma(\u03b3 = 0.25)']\n\n# Set the y-axis values\ny_values = [5.0, 4.5, 4.0, 3.5, 3.0]\n\n# Plot the data\nax.plot(x_labels, y_values, 'o-')\n\n# Set the title of the plot\nax.set_title('Gamma Distribution')\n\n# Set the x-axis label\nax.set_xlabel('Gamma Values')\n\n# Set the y-axis label\nax.set_ylabel('Probability Density')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Execution Accuracy')\n\n# Set the x-axis label\nax.set_xlabel('Algorithm')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Define the data for the plot\nalgorithms = ['SQL-Only', 'PoT', 'IC-LP', 'DAIL', 'IC-LP+PoT']\naccuracies = [0.875, 0.875, 0.85, 0.9, 0.875]\n\n# Plot the data\nax.bar(algorithms, accuracies, color='lightblue')\n\n# Set the limits of the y-axis\nax.set_ylim(0.75, 1)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the left plot\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the left plot\nax.set_title('Region Classification Accuracy')\n\n# Create a bar chart with the accuracy values\naccuracy_values = [0.88, 0.87, 0.83]\nregions = ['DENSE (ref)', 'Joint Multimodal Framework (ours)', 'Cine']\nax.bar(regions, accuracy_values, color='blue')\n\n# Add a star icon at the top of the bar chart\nax.text(1.5, 1.2, '*', fontsize=20, ha='center', va='center')\n\n# Create a rectangle for the logo\nlogo = plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='black')\nax.add_patch(logo)\n\n# Set the y-axis limits\nax.set_ylim([0.6, 1])\n\n# Create a figure and axis for the right plot\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the right plot\nax.set_title('Slice Mean Error (ms)')\n\n# Create a bar chart with the error values\nerror_values = [10.99, 9.33, 9.00]\nregions = ['DENSE (ref)', 'Joint Multimodal Framework (ours)', 'Cine']\nax.bar(regions, error_values, color='green')\n\n# Add a star icon at the top of the bar chart\nax.text(1.5, 1.2, '*', fontsize=20, ha='center', va='center')\n\n# Create a rectangle for the logo\nlogo = plt.Rectangle((0.5, 0.5), 0.5, 0.5, color='black')\nax.add_patch(logo)\n\n# Set the y-axis limits\nax.set_ylim([2.5, 22.5])\n\n# Display the plots\nplt.show()\n```"}
{"file": "dataset/ori_500/box_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Player Performance')\n\n# Set the x-axis label\nax.set_xlabel('Player')\n\n# Set the y-axis label\nax.set_ylabel('Z-Score')\n\n# Define the players and their z-scores\nplayers = ['w/o att', 'w/o DP', '1xQ', '20xQ']\nz_scores = [3, 4, 5, 6]\n\n# Plot the data\nax.plot(players, z_scores, 'ro-')\n\n# Add a horizontal line at the threshold\nax.axhline(y=5, color='r', linestyle='-')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\n\n# Set the x-axis limits\nax.set_xlim([1, 3])\n\n# Set the y-axis limits\nax.set_ylim([0, 1])\n\n# Set the title of the plot\nax.set_title('Mean')\n\n# Set the labels for the x-axis and y-axis\nax.set_xlabel('Time')\nax.set_ylabel('Value')\n\n# Create a bar chart\nbar_width = 0.25\nindex = np.arange(4)\nbar1 = ax.bar(index, [1.5, 2.5, 3.5, 4.5], bar_width, color='blue', label='REM')\nbar2 = ax.bar(index + bar_width, [2.5, 3.5, 4.5, 5.5], bar_width, color='green', label='No POP')\nbar3 = ax.bar(index + 2*bar_width, [3.5, 4.5, 5.5, 6.5], bar_width, color='orange', label='Separate M emb.')\nbar4 = ax.bar(index + 3*bar_width, [4.5, 5.5, 6.5, 7.5], bar_width, color='purple', label='4 x 4 tokenizer')\nbar5 = ax.bar(index + 4*bar_width, [5.5, 6.5, 7.5, 8.5], bar_width, color='brown', label='No latent space C')\nbar6 = ax.bar(index + 5*bar_width, [6.5, 7.5, 8.5, 9.5], bar_width, color='pink', label='C w/o action inputs')\n\n# Add some text for labels, title, and custom x-axis tick labels, etc.\nax.set_xlabel('Time')\nax.set_ylabel('Value')\nax.set_title('Mean')\nax.set_xticks(index + bar_width)\nax.set_xticklabels(['1', '2', '3', '4'])\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Player Performance')\n\n# Set the x-axis labels\nx_labels = ['Run 1', 'Run 2', 'Run 3', 'Run 4', 'Run 5', 'Run 6', 'Run 7', 'Run 8', 'Run 9', 'Run 10']\nax.set_xticks(np.arange(len(x_labels)))\nax.set_xticklabels(x_labels)\n\n# Set the y-axis label\nax.set_ylabel('Value')\n\n# Set the y-axis limits\nax.set_ylim(0, 100)\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 101, 10))\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', rotation=0)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', direction='in')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', bottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', top=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', left=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', right=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelleft=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labelright=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelbottom=True)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', labeltop=False)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', length=5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', width=1)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='both', pad=5)\n\n# Set the"}
{"file": "dataset/ori_500/box_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Set the background color of the plot\nax.set_facecolor('#F0E68C')\n\n# Create a rectangle for the logo\nlogo = plt.Rectangle((0.45, 0.9), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo)\n\n# Create a rectangle for the title\ntitle = plt.Rectangle((0.2, 0.85), 0.6, 0.1, fc='#FFA07A', ec='black')\nax.add_patch(title)\n\n# Create a rectangle for the subtitle\nsubtitle = plt.Rectangle((0.3, 0.8), 0.4, 0.1, fc='#FFD700', ec='black')\nax.add_patch(subtitle)\n\n# Create a rectangle for the main content\nmain_content = plt.Rectangle((0.1, 0.6), 0.8, 0.2, fc='#ADD8E6', ec='black')\nax.add_patch(main_content)\n\n# Create a rectangle for the footer\nfooter = plt.Rectangle((0.1, 0.1), 0.8, 0.1, fc='#B0C4DE', ec='black')\nax.add_patch(footer)\n\n# Create a rectangle for the sidebar\nsidebar = plt.Rectangle((0.9, 0.1), 0.1, 0.8, fc='#B0C4DE', ec='black')\nax.add_patch(sidebar)\n\n# Create a rectangle for the logo in the sidebar\nlogo_sidebar = plt.Rectangle((0.9, 0.9), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_sidebar)\n\n# Create a rectangle for the title in the sidebar\ntitle_sidebar = plt.Rectangle((0.7, 0.85), 0.2, 0.1, fc='#FFA07A', ec='black')\nax.add_patch(title_sidebar)\n\n# Create a rectangle for the subtitle in the sidebar\nsubtitle_sidebar = plt.Rectangle((0.7, 0.8), 0.2, 0.1, fc='#FFD700', ec='black')\nax.add_patch(subtitle_sidebar)\n\n# Create a rectangle for the main content in the sidebar\nmain_content_sidebar = plt.Rectangle((0.5, 0.6), 0.4, 0.2, fc='#ADD8E6', ec='black')\nax.add_patch(main_content_sidebar)\n\n# Create a rectangle for the footer in the sidebar\nfooter_sidebar = plt.Rectangle((0.5, 0.1), 0.4, 0.1, fc='#B0C4DE', ec='black')\nax.add_patch(footer_sidebar)\n\n# Create a rectangle for the logo in the footer\nlogo_footer = plt.Rectangle((0.1, 0.1), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_footer)\n\n# Create a rectangle for the title in the footer\ntitle_footer = plt.Rectangle((0.3, 0.15), 0.4, 0.1, fc='#FFA07A', ec='black')\nax.add_patch(title_footer)\n\n# Create a rectangle for the subtitle in the footer\nsubtitle_footer = plt.Rectangle((0.3, 0.1), 0.4, 0.1, fc='#FFD700', ec='black')\nax.add_patch(subtitle_footer)\n\n# Create a rectangle for the main content in the footer\nmain_content_footer = plt.Rectangle((0.5, 0.1), 0.4, 0.1, fc='#ADD8E6', ec='black')\nax.add_patch(main_content_footer)\n\n# Create a rectangle for the footer in the footer\nfooter_footer = plt.Rectangle((0.5, 0.1), 0.4, 0.1, fc='#B0C4DE', ec='black')\nax.add_patch(footer_footer)\n\n# Create a rectangle for the logo in the sidebar\nlogo_sidebar = plt.Rectangle((0.9, 0.9), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_sidebar)\n\n# Create a rectangle for the title in the sidebar\ntitle_sidebar = plt.Rectangle((0.7, 0.85), 0.2, 0.1, fc='#FFA07A', ec='black')\nax.add_patch(title_sidebar)\n\n# Create a rectangle for the subtitle in the sidebar\nsubtitle_sidebar = plt.Rectangle((0.7, 0.8), 0.2, 0.1, fc='#FFD700', ec='black')\nax.add_patch(subtitle_sidebar)\n\n# Create a rectangle for the main content in the sidebar\nmain_content_sidebar = plt.Rectangle((0.5, 0.6), 0.4, 0.2, fc='#ADD8E6', ec='black')\nax.add_patch(main_content_sidebar)\n\n# Create a rectangle for the footer in the sidebar\nfooter_sidebar = plt.Rectangle((0.5, 0.1), 0.4, 0.1, fc='#B0C4DE', ec='black')\nax.add_patch(footer_sidebar)\n\n# Create a rectangle for the logo in the footer\nlogo_footer = plt.Rectangle((0.1, 0.1), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_footer)\n\n# Create a rectangle for the title in the footer\ntitle_footer = plt.Rectangle((0.3, 0.15), 0.4, 0.1, fc='#FFA07A', ec='black')\nax.add_patch(title_footer)\n\n# Create a rectangle for the subtitle in the footer\nsubtitle_footer = plt.Rectangle((0.3, 0.1), 0.4, 0.1, fc='#FFD700', ec='black')\nax.add_patch(subtitle_footer)\n\n# Create a rectangle for the main content in the footer\nmain_content_footer = plt.Rectangle((0.5, 0.1), 0.4, 0.1, fc='#ADD8E6', ec='black')\nax.add_patch(main_content_footer)\n\n# Create a rectangle for the footer in the footer\nfooter_footer = plt.Rectangle((0.5, 0.1), 0.4, 0.1, fc='#B0C4DE', ec='black')\nax.add_patch(footer_footer)\n\n# Create a rectangle for the logo in the sidebar\nlogo_sidebar = plt.Rectangle((0.9, 0.9), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_sidebar)\n\n# Create a rectangle for the title in the sidebar\ntitle_sidebar = plt.Rectangle((0.7, 0.85), 0.2, 0.1, fc='#FFA07A', ec='black')\nax.add_patch(title_sidebar)\n\n# Create a rectangle for the subtitle in the sidebar\nsubtitle_sidebar = plt.Rectangle((0.7, 0.8), 0.2, 0.1, fc='#FFD700', ec='black')\nax.add_patch(subtitle_sidebar)\n\n# Create a rectangle for the main content in the sidebar\nmain_content_sidebar = plt.Rectangle((0.5, 0.6), 0.4, 0.2, fc='#ADD8E6', ec='black')\nax.add_patch(main_content_sidebar)\n\n# Create a rectangle for the footer in the sidebar\nfooter_sidebar = plt.Rectangle((0.5, 0.1), 0.4, 0.1, fc='#B0C4DE', ec='black')\nax.add_patch(footer_sidebar)\n\n# Create a rectangle for the logo in the footer\nlogo_footer = plt.Rectangle((0.1, 0.1), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_footer)\n\n# Create a rectangle for the title in the footer\ntitle_footer = plt.Rectangle((0.3, 0.15), 0.4, 0.1, fc='#FFA07A', ec='black')\nax.add_patch(title_footer)\n\n# Create a rectangle for the subtitle in the footer\nsubtitle_footer = plt.Rectangle((0.3, 0.1), 0.4, 0.1, fc='#FFD700', ec='black')\nax.add_patch(subtitle_footer)\n\n# Create a rectangle for the main content in the footer\nmain_content_footer = plt.Rectangle((0.5, 0.1), 0.4, 0.1, fc='#ADD8E6', ec='black')\nax.add_patch(main_content_footer)\n\n# Create a rectangle for the footer in the footer\nfooter_footer = plt.Rectangle((0.5, 0.1), 0.4, 0.1, fc='#B0C4DE', ec='black')\nax.add_patch(footer_footer)\n\n# Create a rectangle for the logo in the sidebar\nlogo_sidebar = plt.Rectangle((0.9, 0.9), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_sidebar)\n\n# Create a rectangle for the title in the sidebar\ntitle_sidebar = plt.Rectangle((0.7, 0.85), 0.2, 0.1, fc='#FFA07A', ec='black')\nax.add_patch(title_sidebar)\n\n# Create a rectangle for the subtitle in the sidebar\nsubtitle_sidebar = plt.Rectangle((0.7, 0.8), 0.2, 0.1, fc='#FFD700', ec='black')\nax.add_patch(subtitle_sidebar)\n\n# Create a rectangle for the main content in the sidebar\nmain_content_sidebar = plt.Rectangle((0.5, 0.6), 0.4, 0.2, fc='#ADD8E6', ec='black')\nax.add_patch(main_content_sidebar)\n\n# Create a rectangle for the footer in the sidebar\nfooter_sidebar = plt.Rectangle((0.5, 0.1), 0.4, 0.1, fc='#B0C4DE', ec='black')\nax.add_patch(footer_sidebar)\n\n# Create a rectangle for the logo in the footer\nlogo_footer = plt.Rectangle((0.1, 0.1), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_footer)\n\n# Create a rectangle for the title in the footer\ntitle_footer = plt.Rectangle((0.3, 0.15), 0.4, 0.1, fc='#FFA07A', ec='black')\nax.add_patch(title_footer)\n\n# Create a rectangle for the subtitle in the footer\nsubtitle_footer = plt.Rectangle((0.3, 0.1), 0.4, 0.1, fc='#FFD700', ec='black')\nax.add_patch(subtitle_footer)\n\n# Create a rectangle for the main content in the footer\nmain_content_footer = plt.Rectangle((0.5, 0.1), 0.4, 0.1, fc='#ADD8E6', ec='black')\nax.add_patch(main_content_footer)\n\n# Create a rectangle for the footer in the footer\nfooter_footer = plt.Rectangle((0.5, 0.1), 0.4, 0.1, fc='#B0C4DE', ec='black')\nax.add_patch(footer_footer)\n\n# Create a rectangle for the logo in the sidebar\nlogo_sidebar = plt.Rectangle((0.9, 0.9), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_sidebar)\n\n# Create a rectangle for the title in the sidebar\ntitle_sidebar = plt.Rectangle((0.7, 0.85), 0.2, 0.1, fc='#FFA07A', ec='black')\nax.add_patch(title_sidebar)\n\n# Create a rectangle for the subtitle in the sidebar\nsubtitle_sidebar = plt.Rectangle((0.7, 0.8), 0.2, 0.1, fc='#FFD700', ec='black')\nax.add_patch(subtitle_sidebar)\n\n# Create a rectangle for the main content in the sidebar\nmain_content_sidebar = plt.Rectangle((0.5, 0.6), 0.4, 0.2, fc='#ADD8E6', ec='black')\nax.add_patch(main_content_sidebar)\n\n# Create a rectangle for the footer in the sidebar\nfooter_sidebar = plt.Rectangle((0.5, 0.1), 0.4, 0.1, fc='#B0C4DE', ec='black')\nax.add_patch(footer_sidebar)\n\n# Create a rectangle for the logo in the footer\nlogo_footer = plt.Rectangle((0.1, 0.1), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_footer)\n\n# Create a rectangle for the title in the footer\ntitle_footer = plt.Rectangle((0.3, 0.15), 0.4, 0.1, fc='#FFA07A', ec='black')\nax.add_patch(title_footer)\n\n# Create a rectangle for the subtitle in the footer\nsubtitle_footer = plt.Rectangle((0.3, 0.1), 0.4, 0.1, fc='#FFD700', ec='black')\nax.add_patch(subtitle_footer)\n\n# Create a rectangle for the main content in the footer\nmain_content_footer = plt.Rectangle((0.5, 0.1), 0.4, 0.1, fc='#ADD8E6', ec='black')\nax.add_patch(main_content_footer)\n\n# Create a rectangle for the footer in the footer\nfooter_footer = plt.Rectangle((0.5, 0.1), 0.4, 0.1, fc='#B0C4DE', ec='black')\nax.add_patch(footer_footer)\n\n# Create a rectangle for the logo in the sidebar\nlogo_sidebar = plt.Rectangle((0.9, 0.9), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_sidebar)\n\n# Create a rectangle for the title in the sidebar\ntitle_sidebar = plt.Rectangle((0.7, 0.85), 0.2, 0.1, fc='#FFA07A', ec='black')\nax.add_patch(title_sidebar)\n\n# Create a rectangle for the subtitle in the sidebar\nsubtitle_sidebar = plt.Rectangle((0.7, 0.8), 0.2, 0.1, fc='#FFD700', ec='black')\nax.add_patch(subtitle_sidebar)\n\n# Create a rectangle for the main content in the sidebar\nmain_content_sidebar = plt.Rectangle((0.5, 0.6), 0.4, 0.2, fc='#ADD8E6', ec='black')\nax.add_patch(main_content_sidebar)\n\n# Create a rectangle for the footer in the sidebar\nfooter_sidebar = plt.Rectangle((0.5, 0.1), 0.4, 0.1, fc='#B0C4DE', ec='black')\nax.add_patch(footer_sidebar)\n\n# Create a rectangle for the logo in the footer\nlogo_footer = plt.Rectangle((0.1, 0.1), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_footer)\n\n# Create a rectangle for the title in the footer\ntitle_footer = plt.Rectangle((0.3, 0.15), 0.4, 0.1, fc='#FFA07A', ec='black')\nax.add_patch(title_footer)\n\n# Create a rectangle for the subtitle in the footer\nsubtitle_footer = plt.Rectangle((0.3, 0.1), 0.4, 0.1, fc='#FFD700', ec='black')\nax.add_patch(subtitle_footer)\n\n# Create a rectangle for the main content in the footer\nmain_content_footer = plt.Rectangle((0.5, 0.1), 0.4, 0.1, fc='#ADD8E6', ec='black')\nax.add_patch(main_content_footer)\n\n# Create a rectangle for the footer in the footer\nfooter_footer = plt.Rectangle((0.5, 0.1), 0.4, 0.1, fc='#B0C4DE', ec='black')\nax.add_patch(footer_footer)\n\n# Create a rectangle for the logo in the sidebar\nlogo_sidebar = plt.Rectangle((0.9, 0.9), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_sidebar)\n\n# Create a rectangle for the title in the sidebar\ntitle_sidebar = plt.Rectangle((0.7, 0.85), 0.2, 0.1, fc='#FFA07A', ec='black')\nax.add_patch(title_sidebar)\n\n# Create a rectangle for the subtitle in the sidebar\nsubtitle_sidebar = plt.Rectangle((0.7, 0.8), 0.2, 0.1, fc='#FFD700', ec='black')\nax.add_patch(subtitle_sidebar)\n\n# Create a rectangle for the main content in the sidebar\nmain_content_sidebar = plt.Rectangle((0.5, 0.6), 0.4, 0.2, fc='#ADD8E6', ec='black')\nax.add_patch(main_content_sidebar)\n\n# Create a rectangle for the footer in the sidebar\nfooter_sidebar = plt.Rectangle((0.5, 0.1), 0.4, 0.1, fc='#B0C4DE', ec='black')\nax.add_patch(footer_sidebar)\n\n# Create a rectangle for the logo in the footer\nlogo_footer = plt.Rectangle((0.1, 0.1), 0.1, 0.1, fc='white', ec='black')\nax.add_patch(logo_footer)\n\n# Create a rectangle for the title in the footer\ntitle_footer = plt.Rectangle((0.3, 0.15), 0.4, 0.1, fc='#FFA07A', ec='black')\nax.add_patch(title_footer)\n\n# Create a rectangle for the subtitle in the footer\nsubtitle_footer = plt.Rectangle((0.3, 0.1), 0.4, 0.1, fc='#FFD700', ec='black')\nax.add_patch(subtitle_footer)\n\n# Create a rectangle for the main content in the footer\nmain_content_footer = plt.Rectangle((0.5, 0.1), 0.4, 0.1, fc='#ADD"}
{"file": "dataset/ori_500/box_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(2, 3, figsize=(10, 4))\n\n# Set the titles for each subplot\naxs[0, 0].set_title('EME sentences')\naxs[0, 1].set_title('Neutral sentences')\naxs[0, 2].set_title('ME sentences')\n\n# Create a scatter plot for each subplot\nfor i in range(3):\n    # Generate random data for the scatter plot\n    x = np.random.rand(50)\n    y = np.random.rand(50)\n    # Plot the scatter plot\n    axs[0, i].scatter(x, y)\n    # Add a rectangle to the plot\n    rect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='blue', alpha=0.5)\n    axs[0, i].add_patch(rect)\n\n# Repeat the same process for the second row of subplots\nfor i in range(3):\n    # Generate random data for the scatter plot\n    x = np.random.rand(50)\n    y = np.random.rand(50)\n    # Plot the scatter plot\n    axs[1, i].scatter(x, y)\n    # Add a rectangle to the plot\n    rect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='green', alpha=0.5)\n    axs[1, i].add_patch(rect)\n\n# Set the labels for the x-axis and y-axis\naxs[0, 0].set_xlabel('BERT Base')\naxs[0, 0].set_ylabel('MacBERT')\naxs[0, 1].set_xlabel('BERT Base')\naxs[0, 1].set_ylabel('MacBERT')\naxs[0, 2].set_xlabel('BERT Base')\naxs[0, 2].set_ylabel('MacBERT')\naxs[1, 0].set_xlabel('BERT Base')\naxs[1, 0].set_ylabel('English HLM')\naxs[1, 1].set_xlabel('BERT Base')\naxs[1, 1].set_ylabel('English HLM')\naxs[1, 2].set_xlabel('BERT Base')\naxs[1, 2].set_ylabel('English HLM')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(2, 2, figsize=(8.0, 6.0))\n\n# Set the title for each subplot\naxs[0, 0].set_title('Ratings')\naxs[0, 1].set_title('Intrustion')\naxs[1, 0].set_title('Ratings')\naxs[1, 1].set_title('Intrustion')\n\n# Create a color map for the ratings\ncmap = plt.get_cmap('Blues')\n\n# Create a scatter plot for the ratings\naxs[0, 0].scatter(np.random.rand(5), np.random.rand(5), c=np.random.rand(5), cmap=cmap)\naxs[0, 1].scatter(np.random.rand(5), np.random.rand(5), c=np.random.rand(5), cmap=cmap)\naxs[1, 0].scatter(np.random.rand(5), np.random.rand(5), c=np.random.rand(5), cmap=cmap)\naxs[1, 1].scatter(np.random.rand(5), np.random.rand(5), c=np.random.rand(5), cmap=cmap)\n\n# Add a color bar to the scatter plot\nfig.colorbar(axs[0, 0].collections[0], ax=axs[0, 0])\nfig.colorbar(axs[0, 1].collections[0], ax=axs[0, 1])\nfig.colorbar(axs[1, 0].collections[0], ax=axs[1, 0])\nfig.colorbar(axs[1, 1].collections[0], ax=axs[1, 1])\n\n# Set the limits for the x and y axes\naxs[0, 0].set_xlim([0, 1])\naxs[0, 0].set_ylim([0, 1])\naxs[0, 1].set_xlim([0, 1])\naxs[0, 1].set_ylim([0, 1])\naxs[1, 0].set_xlim([0, 1])\naxs[1, 0].set_ylim([0, 1])\naxs[1, 1].set_xlim([0, 1])\naxs[1, 1].set_ylim([0, 1])\n\n# Set the labels for the x and y axes\naxs[0, 0].set_xlabel('Model')\naxs[0, 0].set_ylabel('Rating')\naxs[0, 1].set_xlabel('Model')\naxs[0, 1].set_ylabel('Intrustion')\naxs[1, 0].set_xlabel('Model')\naxs[1, 0].set_ylabel('Rating')\naxs[1, 1].set_xlabel('Model')\naxs[1, 1].set_ylabel('Intrustion')\n\n# Set the title for the figure\nfig.suptitle('Car Ratings and Intrusion')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(2, 3, figsize=(10, 5))\n\n# Set the title for each subplot\naxs[0, 0].set_title('Digit span')\naxs[0, 1].set_title('Lexical decision')\naxs[0, 2].set_title('Lexical decision')\naxs[1, 0].set_title('Reaction time')\naxs[1, 1].set_title('Trail making')\naxs[1, 2].set_title('Trail making')\n\n# Create a scatter plot for each subplot\naxs[0, 0].scatter(np.random.rand(10), np.random.rand(10), color='blue')\naxs[0, 1].scatter(np.random.rand(10), np.random.rand(10), color='orange')\naxs[0, 2].scatter(np.random.rand(10), np.random.rand(10), color='red')\naxs[1, 0].scatter(np.random.rand(10), np.random.rand(10), color='blue')\naxs[1, 1].scatter(np.random.rand(10), np.random.rand(10), color='orange')\naxs[1, 2].scatter(np.random.rand(10), np.random.rand(10), color='red')\n\n# Add a legend to each subplot\naxs[0, 0].legend(['target', 'control'])\naxs[0, 1].legend(['target', 'control'])\naxs[0, 2].legend(['target', 'control'])\naxs[1, 0].legend(['target', 'control'])\naxs[1, 1].legend(['target', 'control'])\naxs[1, 2].legend(['target', 'control'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Methods')\n\n# Create a bar chart with the data\nax.bar(['BG', 'IBP', 'SSP', 'NBP'], [10, 20, 30, 40], color='blue')\n\n# Set the x-axis label\nax.set_xlabel('Prediction Accuracy v_{D_1}')\n\n# Set the y-axis label\nax.set_ylabel('Percentage')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_22.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 400)\n\n# Set the y-axis limits\nax.set_ylim(-1, 1)\n\n# Set the x-axis label\nax.set_xlabel('Search depth')\n\n# Set the y-axis label\nax.set_ylabel('Reward')\n\n# Set the title of the plot\nax.set_title('Deep Q-Learning Agent Performance')\n\n# Create a bar chart\nax.bar([50, 100, 150, 200, 300, 350], [0.02, 0.04, 0.06, 0.08, 0.1, 0.12], color='blue')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_23.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Daily Activity Durations')\n\n# Create a bar chart with the data\nax.bar(['Music Playtime', 'Reading Duration', 'Exercise Duration', 'Gaming Duration'], [65.1, 55.7, 50.3, 29.5], color='blue')\n\n# Set the x-axis label\nax.set_xlabel('Activity')\n\n# Set the y-axis label\nax.set_ylabel('Duration (minutes)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Mean Value')\n\n# Create a bar chart with the mean values\nax.bar(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'], [2.5, 2.3, 2.1, 2.4, 2.6], color='blue')\n\n# Set the x-axis label\nax.set_xlabel('Intervention Type')\n\n# Set the y-axis label\nax.set_ylabel('Mean Value')\n\n# Create a second subplot for the median value\nax2 = fig.add_subplot(2, 2, 2)\nax2.set_title('Median Value')\nax2.bar(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'], [2.2, 2.0, 2.1, 2.3, 2.5], color='green')\n\n# Create a third subplot for the iqr mean\nax3 = fig.add_subplot(2, 2, 3)\nax3.set_title('IQR Mean')\nax3.bar(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'], [2.4, 2.2, 2.3, 2.4, 2.6], color='orange')\n\n# Create a fourth subplot for the iqr median\nax4 = fig.add_subplot(2, 2, 4)\nax4.set_title('IQR Median')\nax4.bar(['No Intervention', 'Low Intensity', 'High Intensity', 'Recovery', 'Environment'], [2.2, 2.0, 2.1, 2.3, 2.5], color='purple')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_25.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the limits of the x-axis\nax.set_xlim(-40, 40)\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(-4, 8, 1))\n\n# Set the y-axis labels\nax.set_yticklabels(['-4', '-3', '-2', '-1', '0', '1', '2', '3', '4'])\n\n# Set the x-axis label\nax.set_xlabel('Thrust Angle [\u00b0]')\n\n# Set the y-axis label\nax.set_ylabel('Angular Frequency [rad/s]')\n\n# Set the title of the plot\nax.set_title('Rocket Thrust vs Angular Frequency')\n\n# Add a vertical line at x=0\nax.axvline(x=0, color='k')\n\n# Add a horizontal line at y=0\nax.axhline(y=0, color='k')\n\n# Add a rectangle for the rocket\nrect = plt.Rectangle((-20, -2), 40, 4, fc='blue')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket engine\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='green')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket fins\nrect = plt.Rectangle((-10, -1), 20, 2, fc='yellow')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='red')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='cyan')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='gray')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='orange')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='purple')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='pink')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='brown')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='black')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='white')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='silver')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='gold')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='maroon')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='navy')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='lime')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='olive')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='cyan')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='magenta')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='aqua')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='silver')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='gold')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='maroon')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='navy')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='lime')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='olive')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='cyan')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='magenta')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='aqua')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='silver')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='gold')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='maroon')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='navy')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='lime')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='olive')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='cyan')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='magenta')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='aqua')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='silver')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='gold')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='maroon')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='navy')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='lime')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='olive')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='cyan')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='magenta')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='aqua')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='silver')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='gold')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='maroon')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='navy')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='lime')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='olive')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='cyan')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='magenta')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='aqua')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='silver')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='gold')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='maroon')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='navy')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='lime')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='olive')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='cyan')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='magenta')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='aqua')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='silver')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='gold')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='maroon')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='navy')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='lime')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='olive')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='cyan')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='magenta')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='aqua')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='silver')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='gold')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='maroon')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='navy')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='lime')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='olive')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='cyan')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='magenta')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='aqua')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='silver')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='gold')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='maroon')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='navy')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='lime')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='olive')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='cyan')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='magenta')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='aqua')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='silver')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='gold')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='maroon')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='navy')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket body\nrect = plt.Rectangle((-20, -2), 40, 4, fc='lime')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket wings\nrect = plt.Rectangle((-15, -1.5), 30, 3, fc='olive')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket tail fins\nrect = plt.Rectangle((-5, -0.5), 10, 1, fc='cyan')\nax.add_patch(rect)\n\n# Add a rectangle for the rocket nose cone\nrect = plt.Rectangle((0, -0.25), 5, 0.5, fc='"}
{"file": "dataset/ori_500/box_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Stock Market Performance')\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Performance (%)')\n\n# Set the x-ticks\nax.set_xticks([1, 2, 3, 4])\n\n# Set the x-tick labels\nax.set_xticklabels(['ST_CVRP', 'ST_VRPTW', 'ST_All', 'Ours'])\n\n# Set the y-ticks\nax.set_yticks([0, 10, 20, 30, 40, 50, 60, 70])\n\n# Set the y-tick labels\nax.set_yticklabels(['0%', '10%', '20%', '30%', '40%', '50%', '60%', '70%'])\n\n# Draw a rectangle for each stock\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for each stock\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\nax.add_patch(plt.Rectangle((4, 20), 1, 10, color='red'))\n\n# Draw a line for the portfolio\nax.plot([1, 2, 3, 4], [50, 40, 30, 20], 'k-')\n\n# Draw a rectangle for the portfolio\nax.add_patch(plt.Rectangle((1, 50), 1, 10, color='blue'))\nax.add_patch(plt.Rectangle((2, 40), 1, 10, color='purple'))\nax.add_patch(plt.Rectangle((3, 30), 1, 10, color='orange'))\n"}
{"file": "dataset/ori_500/box_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 3.0))\n\n# Set the title of the plot\nax.set_title('Human Normalized Score')\n\n# Create a scatter plot\nx = np.random.rand(50)\ny = np.random.rand(50)\nax.scatter(x, y)\n\n# Set the x-axis label\nax.set_xlabel('Human Normalized Score')\n\n# Set the y-axis label\nax.set_ylabel('Human Normalized Score')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Thrust Angle vs Angular Frequency')\n\n# Set the x-axis label\nax.set_xlabel('Angular Frequency [rad/s]')\n\n# Set the y-axis label\nax.set_ylabel('Thrust Angle [\u00b0]')\n\n# Set the x-axis limits\nax.set_xlim(2.0, 5.0)\n\n# Set the y-axis limits\nax.set_ylim(-60, 60)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(2.0, 5.1, 0.5))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(-60, 61, 10))\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set"}
{"file": "dataset/ori_500/box_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the title of the plot\nax.set_title('Stock Market Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Candlestick (db)')\n\n# Set the y-axis label\nax.set_ylabel('Stock Price (USD)')\n\n# Set the x-axis limits\nax.set_xlim(-10, 10)\n\n# Set the y-axis limits\nax.set_ylim(0, 12)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(-10, 11, 2))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 13, 2))\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='minor', labelsize=8)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='minor', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='both', colors='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='both', labelsize=10"}
{"file": "dataset/ori_500/box_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 3, figsize=(25, 8))\n\n# Set the title for each subplot\naxs[0].set_title('Linear travel times')\naxs[1].set_title('Exponential travel times')\naxs[2].set_title('Sigmoidal travel times')\n\n# Create a scatter plot for each subplot\nfor i in range(3):\n    axs[i].scatter(np.random.rand(10), np.random.rand(10), color='blue')\n    axs[i].scatter(np.random.rand(10), np.random.rand(10), color='red')\n    axs[i].scatter(np.random.rand(10), np.random.rand(10), color='green')\n\n# Add a legend to each subplot\nfor i in range(3):\n    axs[i].legend(['Linear', 'Exponential', 'Sigmoidal'])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Healthcare Provider Ratings')\n\n# Set the x-axis label\nax.set_xlabel('Healthcare Providers')\n\n# Set the y-axis label\nax.set_ylabel('Ratings')\n\n# Define the data for the plot\nx = ['Hospital 1', 'Hospital 2', 'Hospital 3']\ny = [95, 90, 85]\n\n# Create a bar chart\nax.bar(x, y, color='blue')\n\n# Add a legend\nax.legend(['Hospital 1', 'Hospital 2', 'Hospital 3'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/box_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 2, figsize=(10, 5))\n\n# Set the title for each subplot\naxs[0].set_title('0.25 HIAR')\naxs[1].set_title('0.1 HIAR')\n\n# Create a scatter plot for each subplot\naxs[0].scatter(np.random.rand(10), np.random.rand(10))\naxs[1].scatter(np.random.rand(10), np.random.rand(10))\n\n# Set the limits for the x and y axes\naxs[0].set_xlim([0, 1])\naxs[0].set_ylim([0, 1])\naxs[1].set_xlim([0, 1])\naxs[1].set_ylim([0, 1])\n\n# Add a rectangle to the center of each subplot\nrect1 = plt.Rectangle((0.45, 0.45), 0.1, 0.1, color='blue', fill=False)\nrect2 = plt.Rectangle((0.45, 0.45), 0.1, 0.1, color='red', fill=False)\naxs[0].add_patch(rect1)\naxs[1].add_patch(rect2)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/contour_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the plot\nax.set_title('T-SNE plot for the output variable Y3')\n\n# Create a scatter plot with random data\nx = np.random.rand(50)\ny = np.random.rand(50)\ncolors = np.random.rand(50)\narea = (30 * np.random.rand(50))**2  # 0 to 15 point radii\nscatter = ax.scatter(x, y, s=area, c=colors, alpha=0.5)\n\n# Add a legend\nlegend_elements = [plt.Line2D([0], [0], marker='o', color='w', label='Ground Truth',\n                          markerfacecolor='blue', markersize=10),\n                  plt.Line2D([0], [0], marker='o', color='w', label='Generated',\n                          markerfacecolor='red', markersize=10)]\nax.legend(handles=legend_elements, loc='upper right')\n\n# Set the limits of the x and y axes\nax.set_xlim(-80, 80)\nax.set_ylim(-80, 80)\n\n# Set the labels of the x and y axes\nax.set_xlabel('X-axis')\nax.set_ylabel('Y-axis')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/contour_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('\u03bb(x, z)')\n\n# Create a color map for the plot\ncmap = plt.get_cmap('coolwarm')\n\n# Create a grid of points\nx = np.linspace(0, 1, 100)\ny = np.linspace(0, 1, 100)\nX, Y = np.meshgrid(x, y)\n\n# Calculate the values of \u03bb(x, z)\nZ = np.sin(X**2 + Y**2)\n\n# Plot the values using a contour plot\ncontour = ax.contourf(X, Y, Z, cmap=cmap)\n\n# Add a color bar to the plot\nfig.colorbar(contour)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/contour_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgray')\n\n# Set the x-axis and y-axis limits\nax.set_xlim(50, 160)\nax.set_ylim(50, 100)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('SBP (mmHg)')\nax.set_ylabel('DBP (mmHg)')\n\n# Create a scatter plot with random data points\nx = np.random.randint(50, 160, 100)\ny = np.random.randint(50, 100, 100)\nax.scatter(x, y, c='blue')\n\n# Create a scatter plot with random data points\nx = np.random.randint(50, 160, 100)\ny = np.random.randint(50, 100, 100)\nax.scatter(x, y, c='red')\n\n# Add a legend\nax.legend(['Female', 'Male'])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/contour_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the limits of the plot\nax.set_xlim(-10, 10)\nax.set_ylim(-10, 10)\n\n# Draw a circle with radius 10\ncircle1 = plt.Circle((0, 0), 10, color='blue', fill=False)\nax.add_artist(circle1)\n\n# Draw a circle with radius 8\ncircle2 = plt.Circle((0, 0), 8, color='green', fill=False)\nax.add_artist(circle2)\n\n# Draw a circle with radius 6\ncircle3 = plt.Circle((0, 0), 6, color='cyan', fill=False)\nax.add_artist(circle3)\n\n# Draw a circle with radius 4\ncircle4 = plt.Circle((0, 0), 4, color='magenta', fill=False)\nax.add_artist(circle4)\n\n# Draw a circle with radius 2\ncircle5 = plt.Circle((0, 0), 2, color='yellow', fill=False)\nax.add_artist(circle5)\n\n# Draw a circle with radius 0\ncircle6 = plt.Circle((0, 0), 0, color='red', fill=False)\nax.add_artist(circle6)\n\n# Draw a line from -10 to 10\nline1 = plt.Line2D([-10, 10], [0, 0], color='blue')\nax.add_line(line1)\n\n# Draw a line from -10 to 10\nline2 = plt.Line2D([0, 0], [-10, 10], color='green')\nax.add_line(line2)\n\n# Draw a line from -10 to 10\nline3 = plt.Line2D([0, 0], [10, -10], color='cyan')\nax.add_line(line3)\n\n# Draw a line from -10 to 10\nline4 = plt.Line2D([10, -10], [0, 0], color='magenta')\nax.add_line(line4)\n\n# Draw a line from -10 to 10\nline5 = plt.Line2D([-10, 10], [0, 0], color='yellow')\nax.add_line(line5)\n\n# Draw a line from -10 to 10\nline6 = plt.Line2D([0, 0], [-10, 10], color='red')\nax.add_line(line6)\n\n# Draw a line from -10 to 10\nline7 = plt.Line2D([0, 0], [10, -10], color='blue')\nax.add_line(line7)\n\n# Draw a line from -10 to 10\nline8 = plt.Line2D([10, -10], [0, 0], color='green')\nax.add_line(line8)\n\n# Draw a line from -10 to 10\nline9 = plt.Line2D([-10, 10], [0, 0], color='cyan')\nax.add_line(line9)\n\n# Draw a line from -10 to 10\nline10 = plt.Line2D([0, 0], [-10, 10], color='magenta')\nax.add_line(line10)\n\n# Draw a line from -10 to 10\nline11 = plt.Line2D([0, 0], [10, -10], color='yellow')\nax.add_line(line11)\n\n# Draw a line from -10 to 10\nline12 = plt.Line2D([10, -10], [0, 0], color='red')\nax.add_line(line12)\n\n# Draw a line from -10 to 10\nline13 = plt.Line2D([-10, 10], [0, 0], color='blue')\nax.add_line(line13)\n\n# Draw a line from -10 to 10\nline14 = plt.Line2D([0, 0], [-10, 10], color='green')\nax.add_line(line14)\n\n# Draw a line from -10 to 10\nline15 = plt.Line2D([0, 0], [10, -10], color='cyan')\nax.add_line(line15)\n\n# Draw a line from -10 to 10\nline16 = plt.Line2D([10, -10], [0, 0], color='magenta')\nax.add_line(line16)\n\n# Draw a line from -10 to 10\nline17 = plt.Line2D([-10, 10], [0, 0], color='yellow')\nax.add_line(line17)\n\n# Draw a line from -10 to 10\nline18 = plt.Line2D([0, 0], [-10, 10], color='red')\nax.add_line(line18)\n\n# Draw a line from -10 to 10\nline19 = plt.Line2D([0, 0], [10, -10], color='blue')\nax.add_line(line19)\n\n# Draw a line from -10 to 10\nline20 = plt.Line2D([10, -10], [0, 0], color='green')\nax.add_line(line20)\n\n# Draw a line from -10 to 10\nline21 = plt.Line2D([-10, 10], [0, 0], color='cyan')\nax.add_line(line21)\n\n# Draw a line from -10 to 10\nline22 = plt.Line2D([0, 0], [-10, 10], color='magenta')\nax.add_line(line22)\n\n# Draw a line from -10 to 10\nline23 = plt.Line2D([0, 0], [10, -10], color='yellow')\nax.add_line(line23)\n\n# Draw a line from -10 to 10\nline24 = plt.Line2D([10, -10], [0, 0], color='red')\nax.add_line(line24)\n\n# Draw a line from -10 to 10\nline25 = plt.Line2D([-10, 10], [0, 0], color='blue')\nax.add_line(line25)\n\n# Draw a line from -10 to 10\nline26 = plt.Line2D([0, 0], [-10, 10], color='green')\nax.add_line(line26)\n\n# Draw a line from -10 to 10\nline27 = plt.Line2D([0, 0], [10, -10], color='cyan')\nax.add_line(line27)\n\n# Draw a line from -10 to 10\nline28 = plt.Line2D([10, -10], [0, 0], color='magenta')\nax.add_line(line28)\n\n# Draw a line from -10 to 10\nline29 = plt.Line2D([-10, 10], [0, 0], color='yellow')\nax.add_line(line29)\n\n# Draw a line from -10 to 10\nline30 = plt.Line2D([0, 0], [-10, 10], color='red')\nax.add_line(line30)\n\n# Draw a line from -10 to 10\nline31 = plt.Line2D([0, 0], [10, -10], color='blue')\nax.add_line(line31)\n\n# Draw a line from -10 to 10\nline32 = plt.Line2D([10, -10], [0, 0], color='green')\nax.add_line(line32)\n\n# Draw a line from -10 to 10\nline33 = plt.Line2D([-10, 10], [0, 0], color='cyan')\nax.add_line(line33)\n\n# Draw a line from -10 to 10\nline34 = plt.Line2D([0, 0], [-10, 10], color='magenta')\nax.add_line(line34)\n\n# Draw a line from -10 to 10\nline35 = plt.Line2D([0, 0], [10, -10], color='yellow')\nax.add_line(line35)\n\n# Draw a line from -10 to 10\nline36 = plt.Line2D([10, -10], [0, 0], color='red')\nax.add_line(line36)\n\n# Draw a line from -10 to 10\nline37 = plt.Line2D([-10, 10], [0, 0], color='blue')\nax.add_line(line37)\n\n# Draw a line from -10 to 10\nline38 = plt.Line2D([0, 0], [-10, 10], color='green')\nax.add_line(line38)\n\n# Draw a line from -10 to 10\nline39 = plt.Line2D([0, 0], [10, -10], color='cyan')\nax.add_line(line39)\n\n# Draw a line from -10 to 10\nline40 = plt.Line2D([10, -10], [0, 0], color='magenta')\nax.add_line(line40)\n\n# Draw a line from -10 to 10\nline41 = plt.Line2D([-10, 10], [0, 0], color='yellow')\nax.add_line(line41)\n\n# Draw a line from -10 to 10\nline42 = plt.Line2D([0, 0], [-10, 10], color='red')\nax.add_line(line42)\n\n# Draw a line from -10 to 10\nline43 = plt.Line2D([0, 0], [10, -10], color='blue')\nax.add_line(line43)\n\n# Draw a line from -10 to 10\nline44 = plt.Line2D([10, -10], [0, 0], color='green')\nax.add_line(line44)\n\n# Draw a line from -10 to 10\nline45 = plt.Line2D([-10, 10], [0, 0], color='cyan')\nax.add_line(line45)\n\n# Draw a line from -10 to 10\nline46 = plt.Line2D([0, 0], [-10, 10], color='magenta')\nax.add_line(line46)\n\n# Draw a line from -10 to 10\nline47 = plt.Line2D([0, 0], [10, -10], color='yellow')\nax.add_line(line47)\n\n# Draw a line from -10 to 10\nline48 = plt.Line2D([10, -10], [0, 0], color='red')\nax.add_line(line48)\n\n# Draw a line from -10 to 10\nline49 = plt.Line2D([-10, 10], [0, 0], color='blue')\nax.add_line(line49)\n\n# Draw a line from -10 to 10\nline50 = plt.Line2D([0, 0], [-10, 10], color='green')\nax.add_line(line50)\n\n# Draw a line from -10 to 10\nline51 = plt.Line2D([0, 0], [10, -10], color='cyan')\nax.add_line(line51)\n\n# Draw a line from -10 to 10\nline52 = plt.Line2D([10, -10], [0, 0], color='magenta')\nax.add_line(line52)\n\n# Draw a line from -10 to 10\nline53 = plt.Line2D([-10, 10], [0, 0], color='yellow')\nax.add_line(line53)\n\n# Draw a line from -10 to 10\nline54 = plt.Line2D([0, 0], [-10, 10], color='red')\nax.add_line(line54)\n\n# Draw a line from -10 to 10\nline55 = plt.Line2D([0, 0], [10, -10], color='blue')\nax.add_line(line55)\n\n# Draw a line from -10 to 10\nline56 = plt.Line2D([10, -10], [0, 0], color='green')\nax.add_line(line56)\n\n# Draw a line from -10 to 10\nline57 = plt.Line2D([-10, 10], [0, 0], color='cyan')\nax.add_line(line57)\n\n# Draw a line from -10 to 10\nline58 = plt.Line2D([0, 0], [-10, 10], color='magenta')\nax.add_line(line58)\n\n# Draw a line from -10 to 10\nline59 = plt.Line2D([0, 0], [10, -10], color='yellow')\nax.add_line(line59)\n\n# Draw a line from -10 to 10\nline60 = plt.Line2D([10, -10], [0, 0], color='red')\nax.add_line(line60)\n\n# Draw a line from -10 to 10\nline61 = plt.Line2D([-10, 10], [0, 0], color='blue')\nax.add_line(line61)\n\n# Draw a line from -10 to 10\nline62 = plt.Line2D([0, 0], [-10, 10], color='green')\nax.add_line(line62)\n\n# Draw a line from -10 to 10\nline63 = plt.Line2D([0, 0], [10, -10], color='cyan')\nax.add_line(line63)\n\n# Draw a line from -10 to 10\nline64 = plt.Line2D([10, -10], [0, 0], color='magenta')\nax.add_line(line64)\n\n# Draw a line from -10 to 10\nline65 = plt.Line2D([-10, 10], [0, 0], color='yellow')\nax.add_line(line65)\n\n# Draw a line from -10 to 10\nline66 = plt.Line2D([0, 0], [-10, 10], color='red')\nax.add_line(line66)\n\n# Draw a line from -10 to 10\nline67 = plt.Line2D([0, 0], [10, -10], color='blue')\nax.add_line(line67)\n\n# Draw a line from -10 to 10\nline68 = plt.Line2D([10, -10], [0, 0], color='green')\nax.add_line(line68)\n\n# Draw a line from -10 to 10\nline69 = plt.Line2D([-10, 10], [0, 0], color='cyan')\nax.add_line(line69)\n\n# Draw a line from -10 to 10\nline70 = plt.Line2D([0, 0], [-10, 10], color='magenta')\nax.add_line(line70)\n\n# Draw a line from -10 to 10\nline71 = plt.Line2D([0, 0], [10, -10], color='yellow')\nax.add_line(line71)\n\n# Draw a line from -10 to 10\nline72 = plt.Line2D([10, -10], [0, 0], color='red')\nax.add_line(line72)\n\n# Draw a line from -10 to 10\nline73 = plt.Line2D([-10, 10], [0, 0], color='blue')\nax.add_line(line73)\n\n# Draw a line from -10 to 10\nline74 = plt.Line2D([0, 0], [-10, 10], color='green')\nax.add_line(line74)\n\n# Draw a line from -10 to 10\nline75 = plt.Line2D([0, 0], [10, -10], color='cyan')\nax.add_line(line75)\n\n# Draw a line from -10 to 10\nline76 = plt.Line2D([10, -10], [0, 0], color='magenta')\nax.add_line(line76)\n\n# Draw a line from -10 to 10\nline77 = plt.Line2D([-10, 10], [0, 0], color='yellow')\nax.add_line(line77)\n\n# Draw a line from -10 to 10\nline78 = plt.Line2D([0, 0], [-10, 10], color='red')\nax.add_line(line78)\n\n# Draw a line from -10 to 10\nline79 = plt.Line2D([0, 0], [10, -10], color='blue')\nax.add_line(line79)\n\n# Draw a line from -10 to 10\nline80 = plt.Line2D([10, -10], [0, 0], color='green')\nax.add_line(line80)\n\n# Draw a line from -10 to 10\nline81 = plt.Line2D([-10, 10], [0, 0], color='cyan')\nax.add_line(line81)\n\n# Draw a line from -10 to 10\nline82 = plt.Line2D([0, 0], [-10, 10], color='magenta')\nax.add_line(line82)\n\n# Draw a line from -10 to 10\nline83 = plt.Line2D([0, 0], [10, -10], color='yellow')\nax.add"}
{"file": "dataset/ori_500/contour_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Create a circle with a radius of 10\ncircle = plt.Circle((5, 5), 10, color='red')\nax.add_artist(circle)\n\n# Create a circle with a radius of 8\ncircle = plt.Circle((5, 5), 8, color='orange')\nax.add_artist(circle)\n\n# Create a circle with a radius of 6\ncircle = plt.Circle((5, 5), 6, color='yellow')\nax.add_artist(circle)\n\n# Create a circle with a radius of 4\ncircle = plt.Circle((5, 5), 4, color='green')\nax.add_artist(circle)\n\n# Create a circle with a radius of 2\ncircle = plt.Circle((5, 5), 2, color='blue')\nax.add_artist(circle)\n\n# Create a circle with a radius of 0\ncircle = plt.Circle((5, 5), 0, color='purple')\nax.add_artist(circle)\n\n# Set the limits of the x and y axes\nax.set_xlim(0, 10)\nax.set_ylim(0, 10)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/density_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 3.0))\n\n# Define the data\nx = np.linspace(8, 15, 100)\ny = np.sin(x)\n\n# Plot the data\nax.plot(x, y, color='blue')\n\n# Set the title and labels\nax.set_title('Temperature over Time')\nax.set_xlabel('Time (hours)')\nax.set_ylabel('Temperature (Celsius)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/density_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Create a circle\ncircle = plt.Circle((0.5, 0.5), 0.4, color='pink')\nax.add_artist(circle)\n\n# Create a rectangle\nrectangle = plt.Rectangle((0.2, 0.1), 0.6, 0.8, color='pink')\nax.add_artist(rectangle)\n\n# Set the aspect ratio of the plot to be equal\nax.set_aspect('equal')\n\n# Set the limits of the x and y axes\nax.set_xlim(0, 1)\nax.set_ylim(0, 1)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/density_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Set the title of the plot\nax.set_title('KDE Plot of Spearman Coefficient Distribution')\n\n# Create a scatter plot\nx = np.linspace(-1.0, 1.0, 100)\ny = np.random.normal(0.5, 0.2, 100)\nax.scatter(x, y)\n\n# Create a histogram\nax.hist(y, bins=10, color='blue', alpha=0.5)\n\n# Create a KDE plot\nkde = np.array([np.exp(-(x - i)**2 / (2 * 0.2**2)) for i in y]).sum(axis=0)\nax.plot(x, kde, color='green')\n\n# Set the x-axis label\nax.set_xlabel('Spearman Coefficient')\n\n# Set the y-axis label\nax.set_ylabel('Density')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/density_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(7, 15)\n\n# Set the y-axis limits\nax.set_ylim(0, 0.7)\n\n# Set the grid\nax.grid(True)\n\n# Set the title\nax.set_title('Stock Price Prediction')\n\n# Set the x-axis label\nax.set_xlabel('Time (in days)')\n\n# Set the y-axis label\nax.set_ylabel('Price (in $)')\n\n# Create a rectangle for the predicted price\nrect = plt.Rectangle((7, 0.4), 2, 0.3, color='red')\nax.add_patch(rect)\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.sin(x - 7) + 0.5\nax.plot(x, y, 'b-')\n\n# Create a line plot for the actual price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.cos(x - 7) + 0.5\nax.plot(x, y, 'r-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.tan(x - 7) + 0.5\nax.plot(x, y, 'g-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.exp(x - 7) + 0.5\nax.plot(x, y, 'c-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.log(x - 7) + 0.5\nax.plot(x, y, 'm-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.sqrt(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arcsin(x - 7) + 0.5\nax.plot(x, y, 'y-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccos(x - 7) + 0.5\nax.plot(x, y, 'w-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arctan(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arctanh(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccosh(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arctan2(x - 7, 1) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccot(x - 7) + 0.5\nax.plot(x, y, 'k-')\n\n# Create a line plot for the predicted price\nx = np.linspace(7, 15, 100)\ny = 0.5 * np.arccsc(x - 7) + 0.5\nax.plot"}
{"file": "dataset/ori_500/density_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the grid lines\nax.grid(True)\n\n# Set the x-axis and y-axis limits\nax.set_xlim(0, 1)\nax.set_ylim(0, 15)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('Density')\nax.set_ylabel('Value')\n\n# Create a scatter plot\nx = np.linspace(0, 1, 100)\ny = np.sin(x * np.pi * 2)\nax.plot(x, y, 'b-')\n\n# Add a legend\nax.legend(['Gucci', 'Chanel'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the x-axis limits\nax.set_xlim(-1, 1)\n\n# Set the y-axis limits\nax.set_ylim(-2, 0)\n\n# Set the x-axis ticks\nax.set_xticks([-1, -0.5, 0, 0.5, 1])\n\n# Set the y-axis ticks\nax.set_yticks([-2, -1.5, -1, -0.5, 0])\n\n# Set the x-axis labels\nax.set_xticklabels(['-1', '-0.5', '0', '0.5', '1'])\n\n# Set the y-axis labels\nax.set_yticklabels(['-2', '-1.5', '-1', '-0.5', '0'])\n\n# Set the title of the plot\nax.set_title('Log Probability')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n#"}
{"file": "dataset/ori_500/errorbar_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Expert dimension')\n\n# Define the data for the plot\nx = [1, 2, 3, 4, 5, 6, 7, 8]\ny = [5, 6, 5, 7, 6, 5, 6, 5]\n\n# Plot the data\nax.plot(x, y)\n\n# Set the x-axis label\nax.set_xlabel('Number of experts')\n\n# Set the y-axis label\nax.set_ylabel('IQM Human Normalized Score')\n\n# Set the color of the line\nax.plot(x, y, color='blue')\n\n# Set the color of the markers\nax.plot(x, y, 'o', color='black')\n\n# Set the color of the grid\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the labels\nax.set_xlabel('Number of experts', color='red')\nax.set_ylabel('IQM Human Normalized Score', color='green')\n\n# Set the color of the title\nax.set_title('Expert dimension', color='purple')\n\n# Set the color of the legend\nax.legend(['Baseline', 'SoftMoE (unchanged)', 'SoftMoE (\u2202 NumExperts)'], loc='upper left', fancybox=True, shadow=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='orange')\n\n# Set the color of the spines\nax.spines['top'].set_color('blue')\nax.spines['bottom'].set_color('blue')\nax.spines['left'].set_color('blue')\nax.spines['right'].set_color('blue')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the labels\nax.set_xlabel('Number of experts', color='red')\nax.set_ylabel('IQM Human Normalized Score', color='green')\n\n# Set the color of the title\nax.set_title('Expert dimension', color='purple')\n\n# Set the color of the legend\nax.legend(['Baseline', 'SoftMoE (unchanged)', 'SoftMoE (\u2202 NumExperts)'], loc='upper left', fancybox=True, shadow=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='orange')\n\n# Set the color of the spines\nax.spines['top'].set_color('blue')\nax.spines['bottom'].set_color('blue')\nax.spines['left'].set_color('blue')\nax.spines['right'].set_color('blue')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the labels\nax.set_xlabel('Number of experts', color='red')\nax.set_ylabel('IQM Human Normalized Score', color='green')\n\n# Set the color of the title\nax.set_title('Expert dimension', color='purple')\n\n# Set the color of the legend\nax.legend(['Baseline', 'SoftMoE (unchanged)', 'SoftMoE (\u2202 NumExperts)'], loc='upper left', fancybox=True, shadow=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='orange')\n\n# Set the color of the spines\nax.spines['top'].set_color('blue')\nax.spines['bottom'].set_color('blue')\nax.spines['left'].set_color('blue')\nax.spines['right'].set_color('blue')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the labels\nax.set_xlabel('Number of experts', color='red')\nax.set_ylabel('IQM Human Normalized Score', color='green')\n\n# Set the color of the title\nax.set_title('Expert dimension', color='purple')\n\n# Set the color of the legend\nax.legend(['Baseline', 'SoftMoE (unchanged)', 'SoftMoE (\u2202 NumExperts)'], loc='upper left', fancybox=True, shadow=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='orange')\n\n# Set the color of the spines\nax.spines['top'].set_color('blue')\nax.spines['bottom'].set_color('blue')\nax.spines['left'].set_color('blue')\nax.spines['right'].set_color('blue')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the labels\nax.set_xlabel('Number of experts', color='red')\nax.set_ylabel('IQM Human Normalized Score', color='green')\n\n# Set the color of the title\nax.set_title('Expert dimension', color='purple')\n\n# Set the color of the legend\nax.legend(['Baseline', 'SoftMoE (unchanged)', 'SoftMoE (\u2202 NumExperts)'], loc='upper left', fancybox=True, shadow=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='orange')\n\n# Set the color of the spines\nax.spines['top'].set_color('blue')\nax.spines['bottom'].set_color('blue')\nax.spines['left'].set_color('blue')\nax.spines['right'].set_color('blue')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the labels\nax.set_xlabel('Number of experts', color='red')\nax.set_ylabel('IQM Human Normalized Score', color='green')\n\n# Set the color of the title\nax.set_title('Expert dimension', color='purple')\n\n# Set the color of the legend\nax.legend(['Baseline', 'SoftMoE (unchanged)', 'SoftMoE (\u2202 NumExperts)'], loc='upper left', fancybox=True, shadow=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='orange')\n\n# Set the color of the spines\nax.spines['top'].set_color('blue')\nax.spines['bottom'].set_color('blue')\nax.spines['left'].set_color('blue')\nax.spines['right'].set_color('blue')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the labels\nax.set_xlabel('Number of experts', color='red')\nax.set_ylabel('IQM Human Normalized Score', color='green')\n\n# Set the color of the title\nax.set_title('Expert dimension', color='purple')\n\n# Set the color of the legend\nax.legend(['Baseline', 'SoftMoE (unchanged)', 'SoftMoE (\u2202 NumExperts)'], loc='upper left', fancybox=True, shadow=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='orange')\n\n# Set the color of the spines\nax.spines['top'].set_color('blue')\nax.spines['bottom'].set_color('blue')\nax.spines['left'].set_color('blue')\nax.spines['right'].set_color('blue')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the labels\nax.set_xlabel('Number of experts', color='red')\nax.set_ylabel('IQM Human Normalized Score', color='green')\n\n# Set the color of the title\nax.set_title('Expert dimension', color='purple')\n\n# Set the color of the legend\nax.legend(['Baseline', 'SoftMoE (unchanged)', 'SoftMoE (\u2202 NumExperts)'], loc='upper left', fancybox=True, shadow=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='orange')\n\n# Set the color of the spines\nax.spines['top'].set_color('blue')\nax.spines['bottom'].set_color('blue')\nax.spines['left'].set_color('blue')\nax.spines['right'].set_color('blue')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the labels\nax.set_xlabel('Number of experts', color='red')\nax.set_ylabel('IQM Human Normalized Score', color='green')\n\n# Set the color of the title\nax.set_title('Expert dimension', color='purple')\n\n# Set the color of the legend\nax.legend(['Baseline', 'SoftMoE (unchanged)', 'SoftMoE (\u2202 NumExperts)'], loc='upper left', fancybox=True, shadow=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='orange')\n\n# Set the color of the spines\nax.spines['top'].set_color('blue')\nax.spines['bottom'].set_color('blue')\nax.spines['left'].set_color('blue')\nax.spines['right'].set_color('blue')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the labels\nax.set_xlabel('Number of experts', color='red')\nax.set_ylabel('IQM Human Normalized Score', color='green')\n\n# Set the color of the title\nax.set_title('Expert dimension', color='purple')\n\n# Set the color of the legend\nax.legend(['Baseline', 'SoftMoE (unchanged)', 'SoftMoE (\u2202 NumExperts)'], loc='upper left', fancybox=True, shadow=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='orange')\n\n# Set the color of the spines\nax.spines['top'].set_color('blue')\nax.spines['bottom'].set_color('blue')\nax.spines['left'].set_color('blue')\nax.spines['right'].set_color('blue')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the labels\nax.set_xlabel('Number of experts', color='red')\nax.set_ylabel('IQM Human Normalized Score', color='green')\n\n# Set the color of the title\nax.set_title('Expert dimension', color='purple')\n\n# Set the color of the legend\nax.legend(['Baseline', 'SoftMoE (unchanged)', 'SoftMoE (\u2202 NumExperts)'], loc='upper left', fancybox=True, shadow=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='orange')\n\n# Set the color of the spines\nax.spines['top'].set_color('blue')\nax.spines['bottom'].set_color('blue')\nax.spines['left'].set_color('blue')\nax.spines['right'].set_color('blue')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the labels\nax.set_xlabel('Number of experts', color='red')\nax.set_ylabel('IQM Human Normalized Score', color='green')\n\n# Set the color of the title\nax.set_title('Expert dimension', color='purple')\n\n# Set the color of the legend\nax.legend(['Baseline', 'SoftMoE (unchanged)', 'SoftMoE (\u2202 NumExperts)'], loc='upper left', fancybox=True, shadow=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='orange')\n\n# Set the color of the spines\nax.spines['top'].set_color('blue')\nax.spines['bottom'].set_color('blue')\nax.spines['left'].set_color('blue')\nax.spines['right'].set_color('blue')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the labels\nax.set_xlabel('Number of experts', color='red')\nax.set_ylabel('IQM Human Normalized Score', color='green')\n\n# Set the color of the title\nax.set_title('Expert dimension', color='purple')\n\n# Set the color of the legend\nax.legend(['Baseline', 'SoftMoE (unchanged)', 'SoftMoE (\u2202 NumExperts)'], loc='upper left', fancybox=True, shadow=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='orange')\n\n# Set the color of the spines\nax.spines['top'].set_color('blue')\nax.spines['bottom'].set_color('blue')\nax.spines['left'].set_color('blue')\nax.spines['right'].set_color('blue')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the labels\nax.set_xlabel('Number of experts', color='red')\nax.set_ylabel('IQM Human Normalized Score', color='green')\n\n# Set the color of the title\nax.set_title('Expert dimension', color='purple')\n\n# Set the color of the legend\nax.legend(['Baseline', 'SoftMoE (unchanged)', 'SoftMoE (\u2202 NumExperts)'], loc='upper left', fancybox=True, shadow=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='orange')\n\n# Set the color of the spines\nax.spines['top'].set_color('blue')\nax.spines['bottom'].set_color('blue')\nax.spines['left'].set_color('blue')\nax.spines['right'].set_color('blue')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the labels\nax.set_xlabel('Number of experts', color='red')\nax.set_ylabel('IQM Human Normalized Score', color='green')\n\n# Set the color of the title\nax.set_title('Expert dimension', color='purple')\n\n# Set the color of the legend\nax.legend(['Baseline', 'SoftMoE (unchanged)', 'SoftMoE (\u2202 NumExperts)'], loc='upper left', fancybox=True, shadow=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='orange')\n\n# Set the color of the spines\nax.spines['top'].set_color('blue')\nax.spines['bottom'].set_color('blue')\nax.spines['left'].set_color('blue')\nax.spines['right'].set_color('blue')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the labels\nax.set_xlabel('Number of experts', color='red')\nax.set_ylabel('IQM Human Normalized Score', color='green')\n\n# Set the color of the title\nax.set_title('Expert dimension', color='purple')\n\n# Set the color of the legend\nax.legend(['Baseline', 'SoftMoE (unchanged)', 'SoftMoE (\u2202 NumExperts)'], loc='upper left', fancybox=True, shadow=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='orange')\n\n# Set the color of the spines\nax.spines['top'].set_color('blue')\nax.spines['bottom'].set_color('blue')\nax.spines['left'].set_color('blue')\nax.spines['right'].set_color('blue')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the labels\nax.set_xlabel('Number of experts', color='red')\nax.set_ylabel('IQM Human Normalized Score', color='green')\n\n# Set the color of the title\nax.set_title('Expert dimension', color='purple')\n\n# Set the color of the legend\nax.legend(['Baseline', 'SoftMoE (unchanged)', 'SoftMoE (\u2202 NumExperts)'], loc='upper left', fancybox=True, shadow=True)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='orange')\n\n# Set the color of the spines\nax.spines['top'].set_color('blue')\nax.spines['bottom'].set_color('blue')\nax.spines['left'].set_color('blue')\nax.spines['right'].set_color('blue')\n\n# Set the color of the grid lines\nax.xaxis.grid(True, color='gray', linestyle='--')\nax.yaxis.grid(True, color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the labels\nax.set_xlabel('Number of experts', color='red')\nax.set_ylabel('IQM Human Normalized Score', color='green')\n\n# Set the color of the title\nax.set_title('Expert dimension', color='purple')\n\n# Set the color of the legend\nax.legend(['Baseline', 'SoftMoE (unchanged)', 'SoftMoE (\u2202 NumExperts)'], loc='upper left', fancybox=True, shadow=True)\n\n"}
{"file": "dataset/ori_500/errorbar_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Accuracy by hospital and method')\n\n# Create a list of hospitals\nhospitals = ['Hospital 1', 'Hospital 2', 'Hospital 3']\n\n# Create a list of methods\nmethods = ['Baseline 1', 'Baseline 2', 'FedMM']\n\n# Create a list of accuracy values for each hospital and method\naccuracy_values = [\n    [0.748, 0.759, 0.762],\n    [0.748, 0.762, 0.78],\n    [0.709, 0.687, 0.713]\n]\n\n# Create a color map for the rectangles\ncmap = plt.get_cmap('Blues')\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals)) for i in range(len(hospitals))]\n\n# Create a list of colors for the rectangles\ncolors = [cmap(i/len(hospitals"}
{"file": "dataset/ori_500/errorbar_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the background color of the plot\nax.set_facecolor('#F0F0F0')\n\n# Set the title of the plot\nax.set_title('Car Prices (valuation 40)')\n\n# Set the x-axis label\nax.set_xlabel('Car Models')\n\n# Set the y-axis label\nax.set_ylabel('Price')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3])\n\n# Set the x-tick labels\nax.set_xticklabels(['GPT-4 Buyer', 'Claude-2 Buyer', 'Claude-3 Buyer', 'GPT-3.5 Buyer'])\n\n# Set the y-ticks\nax.set_yticks([-20, -10, 0, 10, 20])\n\n# Set the y-tick labels\nax.set_yticklabels(['-20', '-10', '0', '10', '20'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the grid lines"}
{"file": "dataset/ori_500/errorbar_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('DNN Performance')\n\n# Set the x-axis label\nax.set_xlabel('Number of Layers')\n\n# Set the y-axis label\nax.set_ylabel('Performance')\n\n# Set the x-axis limits\nax.set_xlim(0.5, 2.5)\n\n# Set the y-axis limits\nax.set_ylim(0.5, 1.0)\n\n# Set the x-ticks\nax.set_xticks([1, 2])\n\n# Set the y-ticks\nax.set_yticks([0.6, 0.7, 0.8, 0.9])\n\n# Set the x-tick labels\nax.set_xticklabels(['[m]', '[k=1]'])\n\n# Set the y-tick labels\nax.set_yticklabels(['[m]', '[k=1]', '[k=2]'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_facecolor('black')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the"}
{"file": "dataset/ori_500/errorbar_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(-1, 5)\n\n# Set the y-axis limits\nax.set_ylim(0, 25)\n\n# Set the x-axis label\nax.set_xlabel('Time (s)')\n\n# Set the y-axis label\nax.set_ylabel('Posterior Accuracy (\u00b0 to no prompting)')\n\n# Set the title of the plot\nax.set_title('Posterior Accuracy over Time')\n\n# Create a bar chart\nax.bar([0, 1, 2, 3, 4], [0.1, 0.2, 0.3, 0.4, 0.5], color='blue')\n\n# Create a line chart\nax.plot([0, 1, 2, 3, 4], [0.1, 0.2, 0.3, 0.4, 0.5], color='red')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 3.0))\n\n# Set the title of the graph\nax.set_title('Performance Metrics')\n\n# Set the labels for the x-axis and y-axis\nax.set_xlabel('Time')\nax.set_ylabel('Performance')\n\n# Create a bar chart with the data\nax.bar(['a', 'b', 'c'], [85, 90, 88], color='blue')\n\n# Add a legend to the graph\nax.legend(['Performance'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\nax.set_title('FashionMNIST (NEURAL)')\nax.set_xlabel('Hyperparameters')\nax.set_ylabel('Metric')\n\n# Define the data\nx = ['128/0.5/0.0001', '128/0.1/0.0001', '256/0.1/0.0001', '256/0.3/0.0001', '256/0.5/0.0001', '64/0.1/0.0001', '64/0.3/0.0001', '64/0.5/0.0001']\ny = [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2]\n\n# Create a bar chart\nax.bar(x, y)\n\n# Set the x-axis limits\nax.set_xlim([0, 1])\n\n# Set the y-axis limits\nax.set_ylim([0, 1])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the graph\nax.set_title('Higher Education Enrollment Rate')\n\n# Create a bar chart with the data\nax.bar(['Japan', 'Brazil', 'India', 'Germany', 'United States'], [25, 18, 12, 14, 30], color='blue')\n\n# Set the x-axis label\nax.set_xlabel('Country')\n\n# Set the y-axis label\nax.set_ylabel('Enrollment Rate')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the first graph\nregions = ['Africa', 'South America', 'North America', 'Asia', 'Europe']\nemissions = [1200, 1800, 5000, 3200, 10400]\nforest_coverage = [21, 34, 25, 28, 38]\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 9.0))\n\n# Plot the data\nax.bar(regions, emissions, color='blue')\nax.plot(regions, forest_coverage, color='green')\n\n# Set the title and labels\nax.set_title('Annual Carbon Dioxide Emissions')\nax.set_xlabel('Regions')\nax.set_ylabel('Emissions (in millions of metric tons)')\n\n# Display the plot\nplt.show()\n\n# Data for the second graph\nregions = ['Africa', 'South America', 'North America', 'Asia', 'Europe']\nland_area = [1000, 2000, 3000, 4000, 5000]\nrenewable_energy_usage = [18, 20, 22, 24, 26]\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 9.0))\n\n# Plot the data\nax.bar(regions, land_area, color='orange')\nax.plot(regions, renewable_energy_usage, color='red')\n\n# Set the title and labels\nax.set_title('Forest Coverage Rate')\nax.set_xlabel('Regions')\nax.set_ylabel('Land Area (in millions of square kilometers)')\n\n# Display the plot\nplt.show()\n\n# Data for the third graph\nregions = ['Africa', 'South America', 'North America', 'Asia', 'Europe']\ntotal_energy_consumption = [45, 47, 49, 51, 53]\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 9.0))\n\n# Plot the data\nax.bar(regions, total_energy_consumption, color='purple')\n\n# Set the title and labels\nax.set_title('Renewable Energy Usage')\nax.set_xlabel('Regions')\nax.set_ylabel('Total Energy Consumption (%)')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 9.0))\n\n# Set the title of the graph\nax.set_title('U.S. Crime Rate by State')\n\n# Create a bar chart with the data\nax.bar(['Delaware', 'Florida', 'Georgia', 'Hawaii', 'Idaho'], [50, 60, 70, 80, 90], color='purple')\n\n# Set the x-axis label\nax.set_xlabel('State')\n\n# Set the y-axis label\nax.set_ylabel('Crime Rate')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Protocol')\n\n# Create a rectangle for the logo\nlogo = plt.Rectangle((0.45, 0.9), 0.1, 0.1, color='white', fill=False)\nax.add_patch(logo)\n\n# Add text to the logo\nax.text(0.5, 0.95, 'Expert', ha='center', va='center')\nax.text(0.5, 0.85, 'Blind', ha='center', va='center')\nax.text(0.5, 0.75, 'Consultancy', ha='center', va='center')\nax.text(0.5, 0.65, 'Debate', ha='center', va='center')\nax.text(0.5, 0.55, 'Interactive Consultancy', ha='center', va='center')\nax.text(0.5, 0.45, 'Interactive Debate', ha='center', va='center')\n\n# Create a bar chart\nax.bar(['GPT-3.5-Turbo', 'Claude 2.1', 'GPT-4-Turbo', 'Human'], [80, 60, 70, 50], color='blue')\n\n# Create a line chart\nax.plot(['GPT-3.5-Turbo', 'Claude 2.1', 'GPT-4-Turbo', 'Human'], [90, 70, 80, 60], color='red')\n\n# Create a scatter plot\nax.scatter(['GPT-3.5-Turbo', 'Claude 2.1', 'GPT-4-Turbo', 'Human'], [85, 65, 75, 55], color='green')\n\n# Create a pie chart\nax.pie([20, 30, 50], labels=['GPT-3.5-Turbo', 'Claude 2.1', 'GPT-4-Turbo'], colors=['purple', 'orange', 'pink'])\n\n# Create a histogram\nax.hist([20, 30, 50], bins=10, color='brown')\n\n# Create a box plot\nax.boxplot([20, 30, 50], vert=True, patch_artist=True, labels=['GPT-3.5-Turbo'])\n\n# Create a violin plot\nax.violinplot([20, 30, 50], showmeans=True, showmedians=True)\n\n# Create a heatmap\nax.imshow([[20, 30, 50], [30, 50, 70], [50, 70, 90]], cmap='hot', interpolation='nearest')\n\n# Create a contour plot\nx = y = np.linspace(-5, 5, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nCS = ax.contourf(X, Y, Z, locator=ticker.LogLocator(), cmap='coolwarm')\n\n# Create a stream plot\nax.streamplot(X, Y, Z, Z, color='magenta')\n\n# Create a polar plot\nax.polar([0, np.pi/2, np.pi, 3*np.pi/2, 2*np.pi], [1, 2, 3, 2, 1], color='cyan')\n\n# Create a 3D plot\nax.plot_surface(X, Y, Z, cmap='viridis')\n\n# Create a 3D scatter plot\nax.scatter3D([0, 1, 2], [0, 1, 2], [0, 1, 2], color='yellow')\n\n# Create a 3D bar chart\nax.bar3d([0, 1, 2], [0, 1, 2], [0, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], color='grey')\n\n# Create a 3D line chart\nax.plot3D([0, 1, 2], [0, 1, 2], [0, 1, 2], color='black')\n\n# Create a 3D scatter plot with color map\nax.scatter3D([0, 1, 2], [0, 1, 2], [0, 1, 2], c=[0, 1, 2], cmap='plasma')\n\n# Create a 3D surface plot\nax.plot_surface(X, Y, Z, cmap='plasma')\n\n# Create a 3D contour plot\nax.contour3D(X, Y, Z, 50, cmap='Greens')\n\n# Create a 3D stream plot\nax.streamplot3D(X, Y, Z, Z, color='cyan')\n\n# Create a 3D polar plot\nax.plot3D([0, np.pi/2, np.pi, 3*np.pi/2, 2*np.pi], [0, 1, 2, 3, 2], [0, 0, 0, 0, 0], color='cyan')\n\n# Create a 3D 3D bar chart\nax.bar3d([0, 1, 2], [0, 1, 2], [0, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], color='grey')\n\n# Create a 3D 3D line chart\nax.plot3D([0, 1, 2], [0, 1, 2], [0, 1, 2], color='black')\n\n# Create a 3D 3D scatter plot with color map\nax.scatter3D([0, 1, 2], [0, 1, 2], [0, 1, 2], c=[0, 1, 2], cmap='plasma')\n\n# Create a 3D 3D surface plot\nax.plot_surface(X, Y, Z, cmap='plasma')\n\n# Create a 3D 3D contour plot\nax.contour3D(X, Y, Z, 50, cmap='Greens')\n\n# Create a 3D 3D stream plot\nax.streamplot3D(X, Y, Z, Z, color='cyan')\n\n# Create a 3D 3D polar plot\nax.plot3D([0, np.pi/2, np.pi, 3*np.pi/2, 2*np.pi], [0, 1, 2, 3, 2], [0, 0, 0, 0, 0], color='cyan')\n\n# Create a 3D 3D 3D bar chart\nax.bar3d([0, 1, 2], [0, 1, 2], [0, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], color='grey')\n\n# Create a 3D 3D 3D line chart\nax.plot3D([0, 1, 2], [0, 1, 2], [0, 1, 2], color='black')\n\n# Create a 3D 3D 3D scatter plot with color map\nax.scatter3D([0, 1, 2], [0, 1, 2], [0, 1, 2], c=[0, 1, 2], cmap='plasma')\n\n# Create a 3D 3D 3D surface plot\nax.plot_surface(X, Y, Z, cmap='plasma')\n\n# Create a 3D 3D 3D contour plot\nax.contour3D(X, Y, Z, 50, cmap='Greens')\n\n# Create a 3D 3D 3D stream plot\nax.streamplot3D(X, Y, Z, Z, color='cyan')\n\n# Create a 3D 3D 3D polar plot\nax.plot3D([0, np.pi/2, np.pi, 3*np.pi/2, 2*np.pi], [0, 1, 2, 3, 2], [0, 0, 0, 0, 0], color='cyan')\n\n# Create a 3D 3D 3D 3D bar chart\nax.bar3d([0, 1, 2], [0, 1, 2], [0, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], color='grey')\n\n# Create a 3D 3D 3D 3D line chart\nax.plot3D([0, 1, 2], [0, 1, 2], [0, 1, 2], color='black')\n\n# Create a 3D 3D 3D 3D scatter plot with color map\nax.scatter3D([0, 1, 2], [0, 1, 2], [0, 1, 2], c=[0, 1, 2], cmap='plasma')\n\n# Create a 3D 3D 3D 3D surface plot\nax.plot_surface(X, Y, Z, cmap='plasma')\n\n# Create a 3D 3D 3D 3D contour plot\nax.contour3D(X, Y, Z, 50, cmap='Greens')\n\n# Create a 3D 3D 3D 3D stream plot\nax.streamplot3D(X, Y, Z, Z, color='cyan')\n\n# Create a 3D 3D 3D 3D polar plot\nax.plot3D([0, np.pi/2, np.pi, 3*np.pi/2, 2*np.pi], [0, 1, 2, 3, 2], [0, 0, 0, 0, 0], color='cyan')\n\n# Create a 3D 3D 3D 3D 3D bar chart\nax.bar3d([0, 1, 2], [0, 1, 2], [0, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], color='grey')\n\n# Create a 3D 3D 3D 3D 3D line chart\nax.plot3D([0, 1, 2], [0, 1, 2], [0, 1, 2], color='black')\n\n# Create a 3D 3D 3D 3D 3D scatter plot with color map\nax.scatter3D([0, 1, 2], [0, 1, 2], [0, 1, 2], c=[0, 1, 2], cmap='plasma')\n\n# Create a 3D 3D 3D 3D 3D surface plot\nax.plot_surface(X, Y, Z, cmap='plasma')\n\n# Create a 3D 3D 3D 3D 3D contour plot\nax.contour3D(X, Y, Z, 50, cmap='Greens')\n\n# Create a 3D 3D 3D 3D 3D stream plot\nax.streamplot3D(X, Y, Z, Z, color='cyan')\n\n# Create a 3D 3D 3D 3D 3D polar plot\nax.plot3D([0, np.pi/2, np.pi, 3*np.pi/2, 2*np.pi], [0, 1, 2, 3, 2], [0, 0, 0, 0, 0], color='cyan')\n\n# Create a 3D 3D 3D 3D 3D 3D bar chart\nax.bar3d([0, 1, 2], [0, 1, 2], [0, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], color='grey')\n\n# Create a 3D 3D 3D 3D 3D 3D line chart\nax.plot3D([0, 1, 2], [0, 1, 2], [0, 1, 2], color='black')\n\n# Create a 3D 3D 3D 3D 3D 3D scatter plot with color map\nax.scatter3D([0, 1, 2], [0, 1, 2], [0, 1, 2], c=[0, 1, 2], cmap='plasma')\n\n# Create a 3D 3D 3D 3D 3D 3D surface plot\nax.plot_surface(X, Y, Z, cmap='plasma')\n\n# Create a 3D 3D 3D 3D 3D 3D contour plot\nax.contour3D(X, Y, Z, 50, cmap='Greens')\n\n# Create a 3D 3D 3D 3D 3D 3D stream plot\nax.streamplot3D(X, Y, Z, Z, color='cyan')\n\n# Create a 3D 3D 3D 3D 3D 3D polar plot\nax.plot3D([0, np.pi/2, np.pi, 3*np.pi/2, 2*np.pi], [0, 1, 2, 3, 2], [0, 0, 0, 0, 0], color='cyan')\n\n# Create a 3D 3D 3D 3D 3D 3D 3D bar chart\nax.bar3d([0, 1, 2], [0, 1, 2], [0, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], color='grey')\n\n# Create a 3D 3D 3D 3D 3D 3D 3D line chart\nax.plot3D([0, 1, 2], [0, 1, 2], [0, 1, 2], color='black')\n\n# Create a 3D 3D 3D 3D 3D 3D 3D scatter plot with color map\nax.scatter3D([0, 1, 2], [0, 1, 2], [0, 1, 2], c=[0, 1, 2], cmap='plasma')\n\n# Create a 3D 3D 3D 3D 3D 3D 3D surface plot\nax.plot_surface(X, Y, Z, cmap='plasma')\n\n# Create a 3D 3D 3D 3D 3D 3D 3D contour plot\nax.contour3D(X, Y, Z, 50, cmap='Greens')\n\n# Create a 3D 3D 3D 3D 3D 3D 3D stream plot\nax.streamplot3D(X, Y, Z, Z, color='cyan')\n\n# Create a 3D 3D 3D 3D 3D 3D 3D polar plot\nax.plot3D([0, np.pi/2, np.pi, 3*np.pi/2, 2*np.pi], [0, 1, 2, 3, 2], [0, 0, 0, 0, 0], color='cyan')\n\n# Create a 3D 3D 3D 3D 3D 3D 3D 3D bar chart\nax.bar3d([0, 1, 2], [0, 1, 2], [0, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], color='grey')\n\n# Create a 3D 3D 3D 3D 3D 3D 3D 3D line chart\nax.plot3D([0, 1, 2], [0, 1, 2], [0, 1, 2], color='black')\n\n# Create a 3D 3D 3D 3D 3D 3D 3D 3D scatter plot with color map\nax.scatter3D([0, 1, 2], [0, 1, 2], [0, 1, 2], c=[0, 1, 2], cmap='plasma')\n\n# Create a 3D 3D 3D 3D 3D 3D 3D 3D surface plot\nax.plot_surface(X, Y, Z, cmap='plasma')\n\n# Create a 3D 3D 3D 3D 3D 3D 3D 3D contour plot\nax.contour3D(X, Y, Z, 50, cmap='Greens')\n\n# Create a 3D 3D 3D 3D 3D 3D 3D 3D stream plot\nax.streamplot3D(X, Y, Z, Z, color='cyan')\n\n# Create a 3D 3D 3D 3D 3D 3D 3D 3D polar plot\nax.plot3D([0, np.pi/2, np.pi, 3*np.pi/2, 2*np.pi], [0, 1, 2, 3, 2], [0, 0, 0, 0, 0], color='cyan')\n\n# Create a 3D 3D 3D 3D 3D 3D 3D 3D 3D bar chart\nax.bar3d([0, 1, 2], [0, 1, 2], [0, 1, 2], [1, 1, 1], [1, 1, 1], [1, 1, 1], color='grey')\n\n"}
{"file": "dataset/ori_500/errorbar_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the first plot\nfig, ax = plt.subplots(figsize=(10, 5))\nax.set_title('Annual Average Temperature')\nax.set_xlabel('City')\nax.set_ylabel('Temperature (\u00b0C)')\nax.bar(['New York', 'London', 'Beijing', 'Tokyo'], [12, 14, 16, 18], color='blue')\n\n# Create a figure and axis for the second plot\nfig, ax = plt.subplots(figsize=(10, 5))\nax.set_title('Annual Rainfall')\nax.set_xlabel('City')\nax.set_ylabel('Rainfall (mm)')\nax.bar(['New York', 'London', 'Beijing', 'Tokyo'], [1000, 1200, 1300, 1400], color='green')\n\n# Create a figure and axis for the third plot\nfig, ax = plt.subplots(figsize=(10, 5))\nax.set_title('Wind Speed')\nax.set_xlabel('City')\nax.set_ylabel('Speed (m/s)')\nax.bar(['New York', 'London', 'Beijing', 'Tokyo'], [5, 7, 9, 11], color='cyan')\n\n# Create a figure and axis for the fourth plot\nfig, ax = plt.subplots(figsize=(10, 5))\nax.set_title('Air Quality Index')\nax.set_xlabel('City')\nax.set_ylabel('AQI')\nax.bar(['New York', 'London', 'Beijing', 'Tokyo'], [50, 70, 90, 110], color='purple')\n\n# Create a figure and axis for the fifth plot\nfig, ax = plt.subplots(figsize=(10, 5))\nax.set_title('Wind Speed')\nax.set_xlabel('City')\nax.set_ylabel('Speed (m/s)')\nax.bar(['New York', 'London', 'Beijing', 'Tokyo'], [5, 7, 9, 11], color='cyan')\n\n# Create a figure and axis for the sixth plot\nfig, ax = plt.subplots(figsize=(10, 5))\nax.set_title('Air Quality Index')\nax.set_xlabel('City')\nax.set_ylabel('AQI')\nax.bar(['New York', 'London', 'Beijing', 'Tokyo'], [50, 70, 90, 110], color='purple')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the graph\nax.set_title('Total Energy Consumption by Country')\n\n# Set the x-axis label\nax.set_xlabel('Energy Consumption (Petajoules)')\n\n# Set the y-axis label\nax.set_ylabel('Renewable Energy Usage (%)')\n\n# Create a bar chart\nax.bar(['Germany', 'China', 'USA', 'India', 'Brazil'], [2000, 3000, 4000, 5000, 6000], color='blue')\n\n# Create a second bar chart\nax.bar(['Germany', 'China', 'USA', 'India', 'Brazil'], [10, 15, 20, 25, 30], color='green')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_22.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nmodels = ['Standard Model', 'Advanced Model', 'Optimal Model']\nratings = [0.30, 0.25, 0.20]\ncolors = ['red', 'green', 'blue']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Plot the data\nax.bar(models, ratings, color=colors)\n\n# Set the title and labels\nax.set_title('Energy Efficiency Ratings by Appliance Model')\nax.set_xlabel('Appliance Model')\nax.set_ylabel('Energy Efficiency Rating')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_23.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Energy Assessment Entity')\n\n# Create a bar chart\nax.bar(['Wind', 'Solar', 'Hydro', 'Nuclear'], [90, 80, 70, 60], color='blue')\nax.bar(['Wind', 'Solar', 'Hydro', 'Nuclear'], [80, 70, 60, 50], color='green')\nax.bar(['Wind', 'Solar', 'Hydro', 'Nuclear'], [70, 60, 50, 40], color='purple')\n\n# Add labels to the x-axis\nax.set_xlabel('Energy Sources')\n\n# Add labels to the y-axis\nax.set_ylabel('Efficiency and Cost Scores')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Educational Metrics by Region')\n\n# Define the regions and their metrics\nregions = ['North America', 'Europe', 'Asia', 'South America', 'Africa', 'Australia', 'Central America', 'Middle East', 'Southeast Asia', 'Scandinavia']\nmetrics = [95, 85, 75, 65, 55, 45, 35, 25, 15, 5]\n\n# Create a bar chart\nax.bar(regions, metrics, color='lightblue')\n\n# Add a horizontal line for the average metric\nax.axhline(y=60, color='black', linestyle='-')\n\n# Add a legend\nlegend_elements = [plt.Line2D([0], [0], marker='o', color='w', label='High School Graduation', markerfacecolor='b', markersize=10),\n                  plt.Line2D([0], [0], marker='o', color='w', label='Higher Education Enrollment', markerfacecolor='y', markersize=10)]\nax.legend(handles=legend_elements)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_25.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nbrands = ['iPhone 13', 'Samsung S21', 'Google Pixel 6', 'OnePlus 9']\nrecalls = [46.3, 30.1, 57.9, 34.0]\nmisleading_recalls = [34.0, 57.9, 53.8, 20.0]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Plot the data\nax.bar(brands, recalls, color='cyan')\nax.bar(brands, misleading_recalls, bottom=recalls, color='orange')\n\n# Add labels and title\nax.set_xlabel('Brands')\nax.set_ylabel('Recall Rates')\nax.set_title('Comparison of Recall Rates Across Products')\n\n# Add a legend\nax.legend(['Truthful Recall', 'Misleading Recall'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_26.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the bar chart\ncategories = ['Support', 'Delivery', 'Product Quality', 'Returns', 'Pricing', 'Website Usability', 'Checkout Process']\nsatisfaction_scores = [15, 18, 20, 12, 17, 10, 8]\ncomplaint_rates = [75, 82, 78, 85, 80, 88, 90]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Plot the bar chart\nax.bar(categories, satisfaction_scores, color='blue')\n\n# Add a horizontal line at y=50\nax.axhline(y=50, color='r', linestyle='-')\n\n# Set the title of the chart\nax.set_title('Customer Satisfaction Scores')\n\n# Set the x-axis label\nax.set_xlabel('Categories')\n\n# Set the y-axis label\nax.set_ylabel('Satisfaction Scores')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_27.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the pie charts\nsupport = [75, 25]\ndelivery = [82, 18]\nproduct_quality = [78, 22]\nreturns = [85, 15]\npricing = [80, 20]\nwebsite_usability = [88, 12]\ncheckout_process = [90, 10]\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(3, 3, figsize=(10, 6))\n\n# Plot the pie charts\naxs[0, 0].pie(support, labels=['Support', 'Disagree'], autopct='%1.1f%%')\naxs[0, 1].pie(delivery, labels=['Delivery', 'Disagree'], autopct='%1.1f%%')\naxs[0, 2].pie(product_quality, labels=['Product Quality', 'Disagree'], autopct='%1.1f%%')\naxs[1, 0].pie(returns, labels=['Returns', 'Disagree'], autopct='%1.1f%%')\naxs[1, 1].pie(pricing, labels=['Pricing', 'Disagree'], autopct='%1.1f%%')\naxs[1, 2].pie(website_usability, labels=['Website Usability', 'Disagree'], autopct='%1.1f%%')\naxs[2, 0].pie(checkout_process, labels=['Checkout Process', 'Disagree'], autopct='%1.1f%%')\n\n# Set the title of the plot\nplt.suptitle('Customer Satisfaction Survey Results')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_28.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the x-axis limits\nax.set_xlim(-0.15, 0.25)\n\n# Set the y-axis limits\nax.set_ylim(0, 1.2)\n\n# Set the x-axis ticks\nax.set_xticks([0, 0.25, 0.5, 0.75, 1])\n\n# Set the y-axis ticks\nax.set_yticks([0, 0.25, 0.5, 0.75, 1])\n\n# Set the x-axis labels\nax.set_xticklabels(['Watering Frequency', 'Planting Density', 'Plant Variety', 'CO2 Levels', 'Pesticides'])\n\n# Set the y-axis labels\nax.set_yticklabels(['Impact on Plant Growth (\u0394 to control)'])\n\n# Set the title of the plot\nax.set_title('Impact of Environmental Factors on Plant Growth')\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=0.5)\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the text\nax.text(0.5, 0.9, 'Environmental Factors', ha='center', va='center', fontsize=14, color='green')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.1, 0.1), 0.2, 0.2, color='lightgreen'))\nax.add_patch(plt.Rectangle((0.3, 0.1), 0.2, 0.2, color='lightblue'))\nax.add_patch(plt.Rectangle((0.5, 0.1), 0.2, 0.2, color='lightgrey'))\nax.add_patch(plt.Rectangle((0.7, 0.1), 0.2, 0.2, color='lightyellow'))\nax.add_patch(plt.Rectangle((0.9, 0.1), 0.2, 0.2, color='lightpink'))\n\n# Set the color of the text\nax.text(0.1, 0.9, 'Watering Frequency', ha='center', va='center', fontsize=12, color='black')\nax.text(0.3, 0.9, 'Planting Density', ha='center', va='center', fontsize=12, color='black')\nax.text(0.5, 0.9, 'Plant Variety', ha='center', va='center', fontsize=12, color='black')\nax.text(0.7, 0.9, 'CO2 Levels', ha='center', va='center', fontsize=12, color='black')\nax.text(0.9, 0.9, 'Pesticides', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.1, 0.3), 0.2, 0.2, color='lightgreen'))\nax.add_patch(plt.Rectangle((0.3, 0.3), 0.2, 0.2, color='lightblue'))\nax.add_patch(plt.Rectangle((0.5, 0.3), 0.2, 0.2, color='lightgrey'))\nax.add_patch(plt.Rectangle((0.7, 0.3), 0.2, 0.2, color='lightyellow'))\nax.add_patch(plt.Rectangle((0.9, 0.3), 0.2, 0.2, color='lightpink'))\n\n# Set the color of the text\nax.text(0.1, 0.7, 'Temperature', ha='center', va='center', fontsize=12, color='black')\nax.text(0.3, 0.7, 'Fertilizer', ha='center', va='center', fontsize=12, color='black')\nax.text(0.5, 0.7, 'Soil pH', ha='center', va='center', fontsize=12, color='black')\nax.text(0.7, 0.7, 'Water Quality', ha='center', va='center', fontsize=12, color='black')\nax.text(0.9, 0.7, 'Sunlight', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.1, 0.5), 0.2, 0.2, color='lightgreen'))\nax.add_patch(plt.Rectangle((0.3, 0.5), 0.2, 0.2, color='lightblue'))\nax.add_patch(plt.Rectangle((0.5, 0.5), 0.2, 0.2, color='lightgrey'))\nax.add_patch(plt.Rectangle((0.7, 0.5), 0.2, 0.2, color='lightyellow'))\nax.add_patch(plt.Rectangle((0.9, 0.5), 0.2, 0.2, color='lightpink'))\n\n# Set the color of the text\nax.text(0.1, 0.5, 'Pesticides', ha='center', va='center', fontsize=12, color='black')\nax.text(0.3, 0.5, 'Soil pH', ha='center', va='center', fontsize=12, color='black')\nax.text(0.5, 0.5, 'Water Quality', ha='center', va='center', fontsize=12, color='black')\nax.text(0.7, 0.5, 'Sunlight', ha='center', va='center', fontsize=12, color='black')\nax.text(0.9, 0.5, 'Watering Frequency', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.1, 0.7), 0.2, 0.2, color='lightgreen'))\nax.add_patch(plt.Rectangle((0.3, 0.7), 0.2, 0.2, color='lightblue'))\nax.add_patch(plt.Rectangle((0.5, 0.7), 0.2, 0.2, color='lightgrey'))\nax.add_patch(plt.Rectangle((0.7, 0.7), 0.2, 0.2, color='lightyellow'))\nax.add_patch(plt.Rectangle((0.9, 0.7), 0.2, 0.2, color='lightpink'))\n\n# Set the color of the text\nax.text(0.1, 0.3, 'Temperature', ha='center', va='center', fontsize=12, color='black')\nax.text(0.3, 0.3, 'Fertilizer', ha='center', va='center', fontsize=12, color='black')\nax.text(0.5, 0.3, 'Soil pH', ha='center', va='center', fontsize=12, color='black')\nax.text(0.7, 0.3, 'Water Quality', ha='center', va='center', fontsize=12, color='black')\nax.text(0.9, 0.3, 'Sunlight', ha='center', va='center', fontsize=12, color='black')\n\n# Set the color of the rectangles\nax.add_patch(plt.Rectangle((0.1, 0.9), 0.2, 0.2, color='lightgreen'))\nax.add_patch(plt.Rectangle((0.3, 0.9), 0.2, 0.2, color='lightblue'))\nax.add_patch(plt.Rectangle((0.5, 0.9), 0.2, 0.2, color='lightgrey'))\nax.add_patch(plt.Rectangle((0.7, 0.9), 0.2, 0.2, color='lightyellow'))\nax.add_patch(plt.Rectangle((0.9, 0.9), 0.2, 0.2, color='lightpink'))\n\n# Set the color of the text\nax.text(0.1, 0.1, 'Watering Frequency', ha='center', va='center', fontsize=12, color='black')\nax.text(0.3, 0.1, 'Planting Density', ha='center', va='center', fontsize=12, color='black')\nax.text(0.5, 0.1, 'Plant Variety', ha='center', va='center', fontsize=12, color='black')\nax.text(0.7, 0.1, 'CO2 Levels', ha='center', va='center', fontsize=12, color='black')\nax.text(0.9, 0.1, 'Pesticides', ha='center', va='center', fontsize=12, color='black')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_29.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\ncities = ['New York', 'Los Angeles', 'Chicago']\nmetrics = ['Traffic Volume', 'Public Transit', 'Accident Rate']\nvalues = [[250, 230, 220], [220, 210, 200], [190, 180, 170]]\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 3, figsize=(10, 4))\n\n# Plot each city's metrics\nfor i, city in enumerate(cities):\n    axs[i].bar(metrics, values[i])\n    axs[i].set_title(city)\n    axs[i].set_ylim([100, 250])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 10.0))\n\n# Set the title of the plot\nax.set_title('FashionMNIST (NEURAL)')\n\n# Set the x-axis label\nax.set_xlabel('Metric')\n\n# Set the y-axis label\nax.set_ylabel('Value')\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 1)\n\n# Set the x-axis ticks\nax.set_xticks([0, 0.2, 0.4, 0.6, 0.8, 1])\n\n# Set the y-axis ticks\nax.set_yticks([0, 0.2, 0.4, 0.6, 0.8, 1])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the top x-axis line\nax.spines['top'].set_color('black')\n\n# Set the color of the right y-axis line\nax.spines['right'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='black')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='"}
{"file": "dataset/ori_500/errorbar_30.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Environmental Impact Scores Across Cities')\n\n# Set the x-axis label\nax.set_xlabel('Cities')\n\n# Set the y-axis label\nax.set_ylabel('Environmental Impact Score')\n\n# Define the data for the bar chart\ncities = ['City A', 'City B', 'City C', 'City D']\nscores = [2.3, 1.7, 3.4, 2.9]\nwater_quality = [2.5, 2.1, 2.8, 2.6]\n\n# Create a bar chart with the scores\nbars = ax.bar(cities, scores, color='pink')\n\n# Add a watermark to the plot\nax.text(0.5, 0.5, 'Water Quality Score', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='green')\n\n# Add a legend to the plot\nax.legend(['Air Quality Score', 'Water Quality Score'])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nroles = ['Wererewolf', 'Seer', 'Witch', 'Hunter', 'Villager']\ndurations = [84.97, 102.67, 78.22, 85.17, 90]\ntokens = [449.33, 780.67, 612.99, 547.39, 618.52]\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 2, figsize=(10, 4))\n\n# Plot the first subplot\naxs[0].bar(roles, durations, color='skyblue')\naxs[0].set_title('a) Speak duration of roles')\naxs[0].set_xlabel('Role')\naxs[0].set_ylabel('Duration (s)')\naxs[0].set_ylim([0, 120])\n\n# Plot the second subplot\naxs[1].bar(roles, tokens, color='lightgreen')\naxs[1].set_title('b) Speak tokens of roles')\naxs[1].set_xlabel('Role')\naxs[1].set_ylabel('Tokens')\naxs[1].set_ylim([0, 800])\n\n# Add a horizontal line at the top of each bar\nfor ax in axs:\n    for i, v in enumerate(tokens):\n        ax.text(i, v + 10, str(v), ha='center', va='bottom')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nx = [5, 10, 20, 30, 40, 50]\ny = [63.77, 64.17, 64.31, 64.98, 65.82, 65.78]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 7.0))\n\n# Plot the data\nax.plot(x, y, 'o-')\n\n# Set the title and labels\nax.set_title('Size of Data for Training and Validation')\nax.set_xlabel('Size of Data (in samples)')\nax.set_ylabel('True+info (%)')\n\n# Add vertical lines at each data point\nfor xi, yi in zip(x, y):\n    ax.axvline(xi, color='black', linestyle='-')\n\n# Add horizontal lines at each data point\nfor xi, yi in zip(x, y):\n    ax.axhline(yi, color='black', linestyle='-')\n\n# Add rectangles for each data point\nfor xi, yi in zip(x, y):\n    ax.add_patch(plt.Rectangle((xi-1, yi-1), 2, 2, color='lightblue'))\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the plot\nax.set_title('Out-of-domain accuracy')\n\n# Create a bar chart\nax.bar(['all', 'arg.causal', 'test.0', 'test.1', 'test.2', 'test.3', 'test.4', 'test.5', 'test.6', 'const'], [0.89, 0.87, 0.86, 0.85, 0.84, 0.83, 0.82, 0.81, 0.80, 0.79], color='blue')\n\n# Set the x-axis label\nax.set_xlabel('Test cases')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Create a second subplot\nax2 = fig.add_subplot(122)\n\n# Set the title of the second subplot\nax2.set_title('Shift gap')\n\n# Create a bar chart for the second subplot\nax2.bar(['all', 'arg.causal', 'test.0', 'test.1', 'test.2', 'test.3', 'test.4', 'test.5', 'test.6', 'const'], [0.05, 0.04, 0.03, 0.02, 0.01, 0.005, 0.004, 0.003, 0.002, 0.001], color='red')\n\n# Set the x-axis label for the second subplot\nax2.set_xlabel('Test cases')\n\n# Set the y-axis label for the second subplot\nax2.set_ylabel('Shift gap')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Mini Crosswords Performance')\n\n# Create a bar chart with the data\nax.bar(['Final Distribution with GPT-4-Turbo', 'Final Distribution with GPT-3.5-Turbo', '0.125 Parameter-Valued Distribution', 'Initial Distribution', 'Best-of-Three'], [0.7, 0.8, 0.6, 0.5, 0.4], color='skyblue')\n\n# Add a vertical line at the point where the best-of-three distribution is located\nax.axvline(x=4, color='red', linestyle='-')\n\n# Add a horizontal line at the point where the best-of-three distribution is located\nax.axhline(y=0.6, color='black', linestyle='-')\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((3, 0.5), 1, 0.1, color='red')\nax.add_patch(rect)\n\n# Add a text box to the plot\ntext_box = ax.text(4.5, 0.7, 'ToT (0.675)', fontsize=12, verticalalignment='bottom', bbox=dict(boxstyle=\"round,pad=0.5\", fc=\"yellow\", ec=\"black\", lw=1))\n\n# Set the x-axis limits\nax.set_xlim([0, 5])\n\n# Set the y-axis limits\nax.set_ylim([0, 1])\n\n# Set the x-axis ticks\nax.set_xticks([0, 1, 2, 3, 4, 5])\n\n# Set the y-axis ticks\nax.set_yticks([0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nlabels = ['BERT', 'RoBERTa', 'DistilBERT', 'XLNet', 'Electra', 'Albert', 'BART', 'DeBERTa', 'Llama2']\naccuracies = [55, 60, 58, 62, 57, 59, 64, 61, 53]\ncolors = ['pink', 'skyblue']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 3.0))\n\n# Plot the data\nfor i, label in enumerate(labels):\n    ax.barh(label, accuracies[i], color=colors[i % len(colors)])\n\n# Set the title and labels\nax.set_title('Model Accuracy')\nax.set_xlabel('Accuracy (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorbar_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the chart\nax.set_title('Your Chart Title Here')\n\n# Set the x-axis label\nax.set_xlabel('A')\n\n# Set the y-axis label\nax.set_ylabel('B')\n\n# Set the x-axis limits\nax.set_xlim(-3.5, 1.5)\n\n# Set the y-axis limits\nax.set_ylim(-2.5, 2.5)\n\n# Set the x-axis ticks\nax.set_xticks([-3.5, -3.0, -2.5, -2.0, -1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5])\n\n# Set the y-axis ticks\nax.set_yticks([-2.5, -2.0, -1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['-3.5', '-3.0', '-2.5', '-2.0', '-1.5', '-1.0', '-0.5', '0.0', '0.5', '1.0', '1.5'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['-2.5', '-2.0', '-1.5', '-1.0', '-0.5', '0.0', '0.5', '1.0', '1.5'])\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_facecolor('#000000')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_facecolor('#000000')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_facecolor('#000000')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_facecolor('#000000')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_facecolor('#000000')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_facecolor('#000000')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_facecolor('#000000')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_facecolor('#000000')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_facecolor('#000000')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_facecolor('#000000')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_facecolor('#000000')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_facecolor('#000000')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_facecolor('#000000')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_facecolor('#000000')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_facecolor('#000000')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_facecolor('#000000')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_facecolor('#000000')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_facecolor('#000000')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_facecolor('#000000')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_facecolor('#000000')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.spines['left'].set_color('black')\n\n# Set the color of the y-axis line\nax.spines['bottom'].set_color('black')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#E6E6FA')\n\n# Set the color of the text\nax.set_facecolor('#000000')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the x-axis line\nax.sp"}
{"file": "dataset/ori_500/errorpoint_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the x-axis labels\nx_labels = ['Kashmir', 'Religion', 'Crime and Justice', 'CAA', 'Pulwama-Balakot', 'Politics']\n\n# Set the y-axis values\ny_values = [0.12, 0.14, 0.16, 0.18, 0.20, 0.22]\n\n# Plot the data\nax.plot(x_labels, y_values, marker='o')\n\n# Set the title of the plot\nax.set_title('Shouting Fraction (Fraction of videos)')\n\n# Set the x-axis label\nax.set_xlabel('Region')\n\n# Set the y-axis label\nax.set_ylabel('Shouting Fraction')\n\n# Set the y-axis limits\nax.set_ylim(0.02, 0.24)\n\n# Set the y-axis ticks\nax.set_yticks([0.02, 0.04, 0.06, 0.08, 0.10, 0.12, 0.14, 0.16, 0.18, 0.20, 0.22, 0.24])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.02', '0.04', '0.06', '0.08', '0.10', '0.12', '0.14', '0.16', '0.18', '0.20', '0.22', '0.24'])\n\n# Set the x-axis limits\nax.set_xlim(-0.5, 5.5)\n\n# Set the x-axis ticks\nax.set_xticks([0, 1, 2, 3, 4, 5])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Kashmir', 'Religion', 'Crime and Justice', 'CAA', 'Pulwama-Balakot', 'Politics'])\n\n# Set the background color\nax.set_facecolor('#f0f0f0')\n\n# Set the grid lines\nax.grid(True)\n\n# Set the legend\nax.legend(['Dataset mean', 'Mean'], loc='upper left')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorpoint_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 9.0))\n\n# Set the title of the plot\nax.set_title('Variable, Symmetric Error')\n\n# Create a scatter plot with random data\nax.scatter([1, 2, 3, 4, 5], [10, 15, 12, 18, 17])\n\n# Set the x-axis label\nax.set_xlabel('Time (s)')\n\n# Set the y-axis label\nax.set_ylabel('Position (m)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorpoint_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data\ncategories = ['Politics', 'Religion', 'Kashmir', 'CAA', 'Pulwama-Balakot']\nincivility = [0.16, 0.18, 0.20, 0.22, 0.24]\nmean = [0.25, 0.27, 0.29, 0.31, 0.33]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Plot the data\nax.plot(categories, incivility, color='brown', label='Incivility (Fraction of Videos)')\nax.plot(categories, mean, color='red', label='Mean')\n\n# Add a legend\nax.legend()\n\n# Set the title and labels\nax.set_title('Social Media Incivility and Mean')\nax.set_xlabel('Categories')\nax.set_ylabel('Incivility (Fraction of Videos)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorpoint_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data for the plots\nx = [-19.6, -19.5, -19.4, -19.3, -19.2, -19.1, -19.0]\ny1 = [-19.353+0.073, -19.257+0.028, -19.257+0.028, -19.257+0.028, -19.257+0.028, -19.257+0.028, -19.257+0.028]\ny2 = [-19.394+0.018, -19.257+0.028, -19.257+0.028, -19.257+0.028, -19.257+0.028, -19.257+0.028, -19.257+0.028]\ny3 = [-19.404+0.099, -19.257+0.028, -19.257+0.028, -19.257+0.028, -19.257+0.028, -19.257+0.028, -19.257+0.028]\ny4 = [-19.314+0.050, -19.257+0.028, -19.257+0.028, -19.257+0.028, -19.257+0.028, -19.257+0.028, -19.257+0.028]\ny5 = [-19.362+0.066, -19.257+0.028, -19.257+0.028, -19.257+0.028, -19.257+0.028, -19.257+0.028, -19.257+0.028]\ny6 = [-19.374+0.080, -19.257+0.028, -19.257+0.028, -19.257+0.028, -19.257+0.028, -19.257+0.028, -19.257+0.028]\ny7 = [-19.380+0.000, -19.257+0.028, -19.257+0.028, -19.257+0.028, -19.257+0.028, -19.257+0.028, -19.257+0.028]\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Plot the data\nax.plot(x, y1, 'b-')\nax.plot(x, y2, 'g-')\nax.plot(x, y3, 'r-')\nax.plot(x, y4, 'c-')\nax.plot(x, y5, 'm-')\nax.plot(x, y6, 'y-')\nax.plot(x, y7, 'k-')\n\n# Set the limits of the x-axis\nax.set_xlim(-19.6, -19.0)\n\n# Set the title of the plot\nax.set_title('Stock Prices')\n\n# Set the labels of the x-axis and y-axis\nax.set_xlabel('M B')\nax.set_ylabel('M B')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorpoint_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Dataset unique shouter count mean')\n\n# Set the x-axis label\nax.set_xlabel('Number of speakers')\n\n# Set the y-axis label\nax.set_ylabel('Unique speaker count mean')\n\n# Create a scatter plot\nax.scatter([1, 2, 3, 4, 5], [10, 12, 14, 16, 18], color='blue')\n\n# Create a line plot\nax.plot([1, 2, 3, 4, 5], [10, 12, 14, 16, 18], color='red')\n\n# Add a legend\nax.legend(['Dataset unique shouter count mean', 'Unique speaker count mean'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorpoint_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Global News Sentiment Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Date')\n\n# Set the y-axis label\nax.set_ylabel('Sentiment Score')\n\n# Set the y-axis limits\nax.set_ylim(0, 25)\n\n# Set the x-axis ticks\nax.set_xticks([1, 2, 3, 4, 5])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['KASHMIR', 'COVID/LOCKDOWN', 'SPORTS', 'CHINA', 'PULWAMA-BALAKOT'])\n\n# Set the y-axis ticks\nax.set_yticks([0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.5', '1', '1.5', '2', '2.5', '3', '3.5', '4', '4.5', '5'])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the border lines\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color"}
{"file": "dataset/ori_500/errorpoint_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Errorbar upper and lower limits')\n\n# Set the x-axis label\nax.set_xlabel('Time (s)')\n\n# Set the y-axis label\nax.set_ylabel('Amplitude')\n\n# Create a list of time values\ntime = [1, 2, 3, 4, 5]\n\n# Create a list of amplitude values\namplitude = [0.5, 1.5, 2.5, 3.5, 4.5]\n\n# Create a list of error values\nerror = [0.1, 0.2, 0.3, 0.4, 0.5]\n\n# Plot the data with error bars\nax.errorbar(time, amplitude, yerr=error, fmt='o', ecolor='r', capsize=5)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorpoint_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 4))\n\n# Set the title of the plot\nax.set_title('variable, symmetric error')\n\n# Create a scatter plot\nax.scatter([0, 1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6], color='blue')\n\n# Set the x and y limits\nax.set_xlim(0, 5)\nax.set_ylim(0, 7)\n\n# Create a second subplot\nax2 = fig.add_subplot(122)\n\n# Set the title of the second plot\nax2.set_title('variable, symmetric error')\n\n# Create a line plot\nax2.plot([0, 1, 2, 3, 4, 5], [1, 2, 3, 4, 5, 6], color='red')\n\n# Set the x and y limits\nax2.set_xlim(0, 5)\nax2.set_ylim(0, 7)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorpoint_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 7.0))\n\n# Set the title of the plot\nax.set_title('variable, asymmetric error')\n\n# Set the x-axis label\nax.set_xlabel('time')\n\n# Set the y-axis label\nax.set_ylabel('value')\n\n# Set the x-axis limits\nax.set_xlim(0, 10)\n\n# Set the y-axis limits\nax.set_ylim(15, 35)\n\n# Set the x-axis ticks\nax.set_xticks(range(0, 11, 2))\n\n# Set the y-axis ticks\nax.set_yticks(range(15, 36, 5))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['15', '20', '25', '30', '35'])\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('green')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('green')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='yellow', linestyle='--')\n\n# Set the color of the error bar\nax.errorbar([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], yerr=[1, 2, 3, 4, 5, 6], fmt='o', ecolor='red')\n\n# Set the color of the scatter plot\nax.scatter([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], color='blue')\n\n# Set the color of the line plot\nax.plot([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], color='green')\n\n# Set the color of the fill between plot\nax.fill_between([0, 2, 4, 6, 8, 10], [15, 20, 25, 30, 35, 40], [16, 21, 26, 31, 36, 41], color='yellow')\n\n# Set the color of the text\nax.text(0.5, 0.5, 'errorbar', transform=ax.transAxes, fontsize=12,\n        verticalalignment='center', horizontalalignment='center',\n        color='green')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/errorpoint_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 7.0))\n\n# Set the title of the plot\nax.set_title('variable, asymmetric error')\n\n# Create a rectangle for the errorbar\nerrorbar = plt.Rectangle((0, 0), 1, 1, fc='purple')\nax.add_patch(errorbar)\n\n# Create a scatter plot with the data\nx = [0, 5, 10, 15, 20]\ny = [-2.1, -2.6, -2.9, -1.2, -1.0]\nax.scatter(x, y, c='purple')\n\n# Create a line plot with the data\nx = [0, 5, 10, 15, 20]\ny = [-2.1, -2.6, -2.9, -1.2, -1.0]\nax.plot(x, y, 'o-', color='purple')\n\n# Set the limits of the x-axis\nax.set_xlim(0, 20)\n\n# Set the limits of the y-axis\nax.set_ylim(-30, 30)\n\n# Set the ticks on the x-axis\nax.set_xticks([0, 5, 10, 15, 20])\n\n# Set the ticks on the y-axis\nax.set_yticks([-30, -20, -10, 0, 10, 20, 30])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/graph_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Define the number of points in the polygon\nn = 6\n\n# Create a regular polygon with n sides\ntheta = np.linspace(0, 2*np.pi, n+1)\nx = np.cos(theta)\ny = np.sin(theta)\n\n# Plot the polygon\nax.plot(x, y, 'k-')\n\n# Add a circle at the center of the polygon\ncircle = plt.Circle((0, 0), 0.5, color='blue')\nax.add_artist(circle)\n\n# Add a circle at each vertex of the polygon\nfor i in range(n):\n    circle = plt.Circle((x[i], y[i]), 0.1, color='red')\n    ax.add_artist(circle)\n\n# Set the aspect ratio to be equal so that the circle is not distorted\nax.set_aspect('equal')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/graph_2.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Draw a circle at the center of the plot\ncircle = plt.Circle((4, 4), 1, color='pink')\nax.add_artist(circle)\n\n# Draw a star with 5 points\nstar = plt.Polygon([[3, 3], [4, 2], [5, 3], [4, 4], [3, 3]], closed=True, color='pink')\nax.add_patch(star)\n\n# Draw a rectangle\nrectangle = plt.Rectangle((2, 2), 2, 2, color='pink')\nax.add_patch(rectangle)\n\n# Draw a triangle\ntriangle = plt.Polygon([[6, 6], [7, 5], [6, 4]], closed=True, color='pink')\nax.add_patch(triangle)\n\n# Draw a line\nline = plt.Line2D([1, 7], [1, 7], color='black')\nax.add_line(line)\n\n# Set the limits of the plot\nax.set_xlim(0, 8)\nax.set_ylim(0, 8)\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/graph_3.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Define the data for the plot\nx = np.linspace(0, 2*np.pi, 100)\ny = np.sin(x)\n\n# Plot the data\nax.plot(x, y)\n\n# Set the title and labels\nax.set_title('Sine Wave')\nax.set_xlabel('Time (s)')\nax.set_ylabel('Amplitude')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/graph_4.pdf", "response": "```\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Define the data for the plot\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\n\n# Plot the data\nax.plot(x, y)\n\n# Set the title of the plot\nax.set_title('Sine Wave')\n\n# Set the x and y labels\nax.set_xlabel('Time (s)')\nax.set_ylabel('Amplitude')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/graph_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis.\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Create a circle with a radius of 1.\ncircle = plt.Circle((0, 0), 1, color='orange')\nax.add_artist(circle)\n\n# Create a line from the center of the circle to the point (1, 0).\nline = plt.Line2D([0, 1], [0, 0], lw=2)\nax.add_line(line)\n\n# Set the limits of the plot.\nax.set_xlim(-1.5, 1.5)\nax.set_ylim(-1.5, 1.5)\n\n# Set the aspect ratio of the plot to be equal.\nax.set_aspect('equal')\n\n# Display the plot.\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Stock Market Analysis')\n\n# Set the labels for the x-axis and y-axis\nax.set_xlabel('Time')\nax.set_ylabel('Price')\n\n# Create a grid\nax.grid(True)\n\n# Create a rectangle for each stock\nrect1 = plt.Rectangle((0, 0), 1, 1, color='red', alpha=0.5)\nrect2 = plt.Rectangle((1, 0), 1, 1, color='blue', alpha=0.5)\nrect3 = plt.Rectangle((2, 0), 1, 1, color='green', alpha=0.5)\nrect4 = plt.Rectangle((3, 0), 1, 1, color='yellow', alpha=0.5)\nrect5 = plt.Rectangle((4, 0), 1, 1, color='orange', alpha=0.5)\nrect6 = plt.Rectangle((5, 0), 1, 1, color='purple', alpha=0.5)\nrect7 = plt.Rectangle((6, 0), 1, 1, color='pink', alpha=0.5)\nrect8 = plt.Rectangle((7, 0), 1, 1, color='brown', alpha=0.5)\nrect9 = plt.Rectangle((8, 0), 1, 1, color='grey', alpha=0.5)\nrect10 = plt.Rectangle((9, 0), 1, 1, color='cyan', alpha=0.5)\n\n# Add the rectangles to the plot\nax.add_patch(rect1)\nax.add_patch(rect2)\nax.add_patch(rect3)\nax.add_patch(rect4)\nax.add_patch(rect5)\nax.add_patch(rect6)\nax.add_patch(rect7)\nax.add_patch(rect8)\nax.add_patch(rect9)\nax.add_patch(rect10)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Voting Results')\n\n# Define the data for the pie chart\ndata = [50.8, 28.1, 2.6, 0.5, 4.1, 8.1, 15.5, 17.3, 13.9, 16.3]\nlabels = ['Wererwolf', 'Seer', 'Witch', 'Hunter', 'Villager', 'Abstain']\n\n# Create a pie chart with the data\nwedges, texts, autotexts = ax.pie(data, labels=labels, autopct='%1.1f%%', startangle=90)\n\n# Set the colors of the wedges\ncolors = ['#66b3ff', '#99ff99', '#ffcc99', '#ff9999', '#c2c2f0', '#ffb3e6']\nfor wedge, color in zip(wedges, colors):\n    wedge.set_facecolor(color)\n\n# Add a color bar which maps values to colors\nsm = plt.cm.ScalarMappable(cmap=plt.get_cmap('Reds'), norm=plt.Normalize(vmin=min(data), vmax=max(data)))\nsm._A = []\ncbar = fig.colorbar(sm)\ncbar.set_label('Percentage')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the color map\ncmap = plt.get_cmap('hot')\n\n# Create a grid of rectangles\nfor i in range(10):\n    for j in range(10):\n        ax.add_patch(plt.Rectangle((i*0.5, j*0.5), 0.5, 0.5, color=cmap(np.random.rand())))\n\n# Set the title\nax.set_title('Players')\n\n# Set the x and y labels\nax.set_xlabel('Players')\nax.set_ylabel('Players')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Set the title of the plot\nax.set_title('Live vs Predicted Category Similarity')\n\n# Set the x-axis label\nax.set_xlabel('Live Category')\n\n# Set the y-axis label\nax.set_ylabel('Predicted Category')\n\n# Set the x-ticks\nax.set_xticks([10, 20, 30, 40])\n\n# Set the y-ticks\nax.set_yticks([10, 20, 30, 40])\n\n# Set the x-tick labels\nax.set_xticklabels(['Live', 'Live', 'Live', 'Live'])\n\n# Set the y-tick labels\nax.set_yticklabels(['Predicted', 'Predicted', 'Predicted', 'Predicted'])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Live', 'Live', 'Live', 'Live'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['Predicted', 'Predicted', 'Predicted', 'Predicted'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Live', 'Live', 'Live', 'Live'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['Predicted', 'Predicted', 'Predicted', 'Predicted'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Live', 'Live', 'Live', 'Live'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['Predicted', 'Predicted', 'Predicted', 'Predicted'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Live', 'Live', 'Live', 'Live'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['Predicted', 'Predicted', 'Predicted', 'Predicted'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Live', 'Live', 'Live', 'Live'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['Predicted', 'Predicted', 'Predicted', 'Predicted'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Live', 'Live', 'Live', 'Live'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['Predicted', 'Predicted', 'Predicted', 'Predicted'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Live', 'Live', 'Live', 'Live'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['Predicted', 'Predicted', 'Predicted', 'Predicted'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Live', 'Live', 'Live', 'Live'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['Predicted', 'Predicted', 'Predicted', 'Predicted'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Live', 'Live', 'Live', 'Live'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['Predicted', 'Predicted', 'Predicted', 'Predicted'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Live', 'Live', 'Live', 'Live'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['Predicted', 'Predicted', 'Predicted', 'Predicted'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Live', 'Live', 'Live', 'Live'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['Predicted', 'Predicted', 'Predicted', 'Predicted'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Live', 'Live', 'Live', 'Live'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['Predicted', 'Predicted', 'Predicted', 'Predicted'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Live', 'Live', 'Live', 'Live'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['Predicted', 'Predicted', 'Predicted', 'Predicted'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Live', 'Live', 'Live', 'Live'], color='black')\n\n# Set the color of the y-tick labels\nax.set_yticklabels(['Predicted', 'Predicted', 'Predicted', 'Predicted'], color='black')\n\n# Set the color of the grid lines\nax.grid(color='black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the plot title\nax.set_title('Live vs Predicted Category Similarity', color='black')\n\n# Set the color of the x-axis label\nax.set_xlabel('Live Category', color='black')\n\n# Set the color of the y-axis label\nax.set_ylabel('Predicted Category', color='black')\n\n# Set the color of the x-tick labels\nax.set_xticklabels(['Live', 'Live', 'Live', 'Live'], color='black')\n\n# Set the color of the y-tick labels\n"}
{"file": "dataset/ori_500/heatmap_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('LOH0')\n\n# Create a rectangle for the first column\nrect1 = plt.Rectangle((0, 0), 1, 1, color='grey')\nax.add_patch(rect1)\n\n# Create a rectangle for the second column\nrect2 = plt.Rectangle((1, 0), 1, 1, color='green')\nax.add_patch(rect2)\n\n# Create a rectangle for the third column\nrect3 = plt.Rectangle((2, 0), 1, 1, color='blue')\nax.add_patch(rect3)\n\n# Create a rectangle for the fourth column\nrect4 = plt.Rectangle((3, 0), 1, 1, color='red')\nax.add_patch(rect4)\n\n# Create a rectangle for the fifth column\nrect5 = plt.Rectangle((4, 0), 1, 1, color='yellow')\nax.add_patch(rect5)\n\n# Create a rectangle for the sixth column\nrect6 = plt.Rectangle((5, 0), 1, 1, color='orange')\nax.add_patch(rect6)\n\n# Create a rectangle for the seventh column\nrect7 = plt.Rectangle((6, 0), 1, 1, color='brown')\nax.add_patch(rect7)\n\n# Create a rectangle for the eighth column\nrect8 = plt.Rectangle((7, 0), 1, 1, color='purple')\nax.add_patch(rect8)\n\n# Create a rectangle for the ninth column\nrect9 = plt.Rectangle((8, 0), 1, 1, color='pink')\nax.add_patch(rect9)\n\n# Create a rectangle for the tenth column\nrect10 = plt.Rectangle((9, 0), 1, 1, color='cyan')\nax.add_patch(rect10)\n\n# Create a rectangle for the eleventh column\nrect11 = plt.Rectangle((10, 0), 1, 1, color='magenta')\nax.add_patch(rect11)\n\n# Create a rectangle for the twelfth column\nrect12 = plt.Rectangle((11, 0), 1, 1, color='lime')\nax.add_patch(rect12)\n\n# Create a rectangle for the thirteenth column\nrect13 = plt.Rectangle((12, 0), 1, 1, color='silver')\nax.add_patch(rect13)\n\n# Create a rectangle for the fourteenth column\nrect14 = plt.Rectangle((13, 0), 1, 1, color='gold')\nax.add_patch(rect14)\n\n# Create a rectangle for the fifteenth column\nrect15 = plt.Rectangle((14, 0), 1, 1, color='navy')\nax.add_patch(rect15)\n\n# Create a rectangle for the sixteenth column\nrect16 = plt.Rectangle((15, 0), 1, 1, color='white')\nax.add_patch(rect16)\n\n# Create a rectangle for the seventeenth column\nrect17 = plt.Rectangle((16, 0), 1, 1, color='black')\nax.add_patch(rect17)\n\n# Create a rectangle for the eighteenth column\nrect18 = plt.Rectangle((17, 0), 1, 1, color='grey')\nax.add_patch(rect18)\n\n# Create a rectangle for the nineteenth column\nrect19 = plt.Rectangle((18, 0), 1, 1, color='green')\nax.add_patch(rect19)\n\n# Create a rectangle for the twentieth column\nrect20 = plt.Rectangle((19, 0), 1, 1, color='blue')\nax.add_patch(rect20)\n\n# Create a rectangle for the twenty-first column\nrect21 = plt.Rectangle((20, 0), 1, 1, color='red')\nax.add_patch(rect21)\n\n# Create a rectangle for the twenty-second column\nrect22 = plt.Rectangle((21, 0), 1, 1, color='yellow')\nax.add_patch(rect22)\n\n# Create a rectangle for the twenty-third column\nrect23 = plt.Rectangle((22, 0), 1, 1, color='orange')\nax.add_patch(rect23)\n\n# Create a rectangle for the twenty-fourth column\nrect24 = plt.Rectangle((23, 0), 1, 1, color='brown')\nax.add_patch(rect24)\n\n# Create a rectangle for the twenty-fifth column\nrect25 = plt.Rectangle((24, 0), 1, 1, color='purple')\nax.add_patch(rect25)\n\n# Create a rectangle for the twenty-sixth column\nrect26 = plt.Rectangle((25, 0), 1, 1, color='pink')\nax.add_patch(rect26)\n\n# Create a rectangle for the twenty-seventh column\nrect27 = plt.Rectangle((26, 0), 1, 1, color='cyan')\nax.add_patch(rect27)\n\n# Create a rectangle for the twenty-eighth column\nrect28 = plt.Rectangle((27, 0), 1, 1, color='magenta')\nax.add_patch(rect28)\n\n# Create a rectangle for the twenty-ninth column\nrect29 = plt.Rectangle((28, 0), 1, 1, color='lime')\nax.add_patch(rect29)\n\n# Create a rectangle for the thirtieth column\nrect30 = plt.Rectangle((29, 0), 1, 1, color='silver')\nax.add_patch(rect30)\n\n# Create a rectangle for the thirtieth-first column\nrect31 = plt.Rectangle((30, 0), 1, 1, color='gold')\nax.add_patch(rect31)\n\n# Create a rectangle for the thirtieth-second column\nrect32 = plt.Rectangle((31, 0), 1, 1, color='navy')\nax.add_patch(rect32)\n\n# Create a rectangle for the thirtieth-third column\nrect33 = plt.Rectangle((32, 0), 1, 1, color='white')\nax.add_patch(rect33)\n\n# Create a rectangle for the thirtieth-fourth column\nrect34 = plt.Rectangle((33, 0), 1, 1, color='black')\nax.add_patch(rect34)\n\n# Create a rectangle for the thirtieth-fifth column\nrect35 = plt.Rectangle((34, 0), 1, 1, color='grey')\nax.add_patch(rect35)\n\n# Create a rectangle for the thirtieth-sixth column\nrect36 = plt.Rectangle((35, 0), 1, 1, color='green')\nax.add_patch(rect36)\n\n# Create a rectangle for the thirtieth-seventh column\nrect37 = plt.Rectangle((36, 0), 1, 1, color='blue')\nax.add_patch(rect37)\n\n# Create a rectangle for the thirtieth-eighth column\nrect38 = plt.Rectangle((37, 0), 1, 1, color='red')\nax.add_patch(rect38)\n\n# Create a rectangle for the thirtieth-ninth column\nrect39 = plt.Rectangle((38, 0), 1, 1, color='yellow')\nax.add_patch(rect39)\n\n# Create a rectangle for the thirtieth-tenth column\nrect40 = plt.Rectangle((39, 0), 1, 1, color='orange')\nax.add_patch(rect40)\n\n# Create a rectangle for the thirtieth-eleventh column\nrect41 = plt.Rectangle((40, 0), 1, 1, color='brown')\nax.add_patch(rect41)\n\n# Create a rectangle for the thirtieth-twelfth column\nrect42 = plt.Rectangle((41, 0), 1, 1, color='purple')\nax.add_patch(rect42)\n\n# Create a rectangle for the thirtieth-thirteenth column\nrect43 = plt.Rectangle((42, 0), 1, 1, color='pink')\nax.add_patch(rect43)\n\n# Create a rectangle for the thirtieth-fourteenth column\nrect44 = plt.Rectangle((43, 0), 1, 1, color='cyan')\nax.add_patch(rect44)\n\n# Create a rectangle for the thirtieth-fifteenth column\nrect45 = plt.Rectangle((44, 0), 1, 1, color='magenta')\nax.add_patch(rect45)\n\n# Create a rectangle for the thirtieth-sixteenth column\nrect46 = plt.Rectangle((45, 0), 1, 1, color='lime')\nax.add_patch(rect46)\n\n# Create a rectangle for the thirtieth-seventeenth column\nrect47 = plt.Rectangle((46, 0), 1, 1, color='silver')\nax.add_patch(rect47)\n\n# Create a rectangle for the thirtieth-eighteenth column\nrect48 = plt.Rectangle((47, 0), 1, 1, color='gold')\nax.add_patch(rect48)\n\n# Create a rectangle for the thirtieth-nineteenth column\nrect49 = plt.Rectangle((48, 0), 1, 1, color='navy')\nax.add_patch(rect49)\n\n# Create a rectangle for the thirtieth-twentieth column\nrect50 = plt.Rectangle((49, 0), 1, 1, color='white')\nax.add_patch(rect50)\n\n# Create a rectangle for the thirtieth-twenty-first column\nrect51 = plt.Rectangle((50, 0), 1, 1, color='black')\nax.add_patch(rect51)\n\n# Create a rectangle for the thirtieth-twenty-second column\nrect52 = plt.Rectangle((51, 0), 1, 1, color='grey')\nax.add_patch(rect52)\n\n# Create a rectangle for the thirtieth-twenty-third column\nrect53 = plt.Rectangle((52, 0), 1, 1, color='green')\nax.add_patch(rect53)\n\n# Create a rectangle for the thirtieth-twenty-fourth column\nrect54 = plt.Rectangle((53, 0), 1, 1, color='blue')\nax.add_patch(rect54)\n\n# Create a rectangle for the thirtieth-twenty-fifth column\nrect55 = plt.Rectangle((54, 0), 1, 1, color='red')\nax.add_patch(rect55)\n\n# Create a rectangle for the thirtieth-twenty-sixth column\nrect56 = plt.Rectangle((55, 0), 1, 1, color='yellow')\nax.add_patch(rect56)\n\n# Create a rectangle for the thirtieth-twenty-seventh column\nrect57 = plt.Rectangle((56, 0), 1, 1, color='orange')\nax.add_patch(rect57)\n\n# Create a rectangle for the thirtieth-twenty-eighth column\nrect58 = plt.Rectangle((57, 0), 1, 1, color='brown')\nax.add_patch(rect58)\n\n# Create a rectangle for the thirtieth-twenty-ninth column\nrect59 = plt.Rectangle((58, 0), 1, 1, color='purple')\nax.add_patch(rect59)\n\n# Create a rectangle for the thirtieth-thirtieth column\nrect60 = plt.Rectangle((59, 0), 1, 1, color='pink')\nax.add_patch(rect60)\n\n# Create a rectangle for the thirtieth-thirtieth-first column\nrect61 = plt.Rectangle((60, 0), 1, 1, color='cyan')\nax.add_patch(rect61)\n\n# Create a rectangle for the thirtieth-thirtieth-second column\nrect62 = plt.Rectangle((61, 0), 1, 1, color='magenta')\nax.add_patch(rect62)\n\n# Create a rectangle for the thirtieth-thirtieth-third column\nrect63 = plt.Rectangle((62, 0), 1, 1, color='lime')\nax.add_patch(rect63)\n\n# Create a rectangle for the thirtieth-thirtieth-fourth column\nrect64 = plt.Rectangle((63, 0), 1, 1, color='silver')\nax.add_patch(rect64)\n\n# Create a rectangle for the thirtieth-thirtieth-fifth column\nrect65 = plt.Rectangle((64, 0), 1, 1, color='gold')\nax.add_patch(rect65)\n\n# Create a rectangle for the thirtieth-thirtieth-sixth column\nrect66 = plt.Rectangle((65, 0), 1, 1, color='navy')\nax.add_patch(rect66)\n\n# Create a rectangle for the thirtieth-thirtieth-seventh column\nrect67 = plt.Rectangle((66, 0), 1, 1, color='white')\nax.add_patch(rect67)\n\n# Create a rectangle for the thirtieth-thirtieth-eighth column\nrect68 = plt.Rectangle((67, 0), 1, 1, color='black')\nax.add_patch(rect68)\n\n# Create a rectangle for the thirtieth-thirtieth-ninth column\nrect69 = plt.Rectangle((68, 0), 1, 1, color='grey')\nax.add_patch(rect69)\n\n# Create a rectangle for the thirtieth-thirtieth-tenth column\nrect70 = plt.Rectangle((69, 0), 1, 1, color='green')\nax.add_patch(rect70)\n\n# Create a rectangle for the thirtieth-thirtieth-eleventh column\nrect71 = plt.Rectangle((70, 0), 1, 1, color='blue')\nax.add_patch(rect71)\n\n# Create a rectangle for the thirtieth-thirtieth-twelfth column\nrect72 = plt.Rectangle((71, 0), 1, 1, color='red')\nax.add_patch(rect72)\n\n# Create a rectangle for the thirtieth-thirtieth-thirteenth column\nrect73 = plt.Rectangle((72, 0), 1, 1, color='yellow')\nax.add_patch(rect73)\n\n# Create a rectangle for the thirtieth-thirtieth-fourteenth column\nrect74 = plt.Rectangle((73, 0), 1, 1, color='orange')\nax.add_patch(rect74)\n\n# Create a rectangle for the thirtieth-thirtieth-fifteenth column\nrect75 = plt.Rectangle((74, 0), 1, 1, color='brown')\nax.add_patch(rect75)\n\n# Create a rectangle for the thirtieth-thirtieth-sixteenth column\nrect76 = plt.Rectangle((75, 0), 1, 1, color='purple')\nax.add_patch(rect76)\n\n# Create a rectangle for the thirtieth-thirtieth-seventeenth column\nrect77 = plt.Rectangle((76, 0), 1, 1, color='pink')\nax.add_patch(rect77)\n\n# Create a rectangle for the thirtieth-thirtieth-eighteenth column\nrect78 = plt.Rectangle((77, 0), 1, 1, color='cyan')\nax.add_patch(rect78)\n\n# Create a rectangle for the thirtieth-thirtieth-nineteenth column\nrect79 = plt.Rectangle((78, 0), 1, 1, color='magenta')\nax.add_patch(rect79)\n\n# Create a rectangle for the thirtieth-thirtieth-twentieth column\nrect80 = plt.Rectangle((79, 0), 1, 1, color='lime')\nax.add_patch(rect80)\n\n# Create a rectangle for the thirtieth-thirtieth-twenty-first column\nrect81 = plt.Rectangle((80, 0), 1, 1, color='silver')\nax.add_patch(rect81)\n\n# Create a rectangle for the thirtieth-thirtieth-twenty-second column\nrect82 = plt.Rectangle((81, 0), 1, 1, color='gold')\nax.add_patch(rect82)\n\n# Create a rectangle for the thirtieth-thirtieth-twenty-third column\nrect83 = plt.Rectangle((82, 0), 1, 1, color='navy')\nax.add_patch(rect83)\n\n# Create a rectangle for the thirtieth-thirtieth-twenty-fourth column\nrect84 = plt.Rectangle((83, 0), 1, 1, color='white')\nax.add_patch(rect84)\n\n# Create a rectangle for the thirtieth-thirtieth-twenty-fifth column\nrect85 = plt.Rectangle((84, 0), 1, 1, color='black')\nax.add_patch(rect85)\n\n# Create a rectangle for the thirtieth-thirtieth-twenty-sixth column\nrect86 = plt.Rectangle((85, 0), 1, 1, color='grey')\nax.add_patch(rect86)\n\n# Create a rectangle for the thirtieth-thirtieth-twenty-seventh column\nrect87 = plt.Rectangle((86, 0), 1, 1, color='green')\nax.add_patch(rect87)\n\n# Create a rectangle for the thirtieth-thirtieth-twenty-eighth column\nrect88 = plt.Rectangle((87, 0), 1, 1, color='blue')\nax.add_patch(rect88)\n\n# Create a rectangle for the thirtieth-thirtieth-twenty-ninth column\nrect89 = plt.Rectangle((88, 0), 1, 1, color='red')\nax.add_patch(rect89)\n\n# Create a rectangle for the thirtieth-thirtieth-thirtieth column\nrect90 = plt.Rectangle((89, 0), 1, 1, color='yellow')\nax.add_patch(rect90)\n\n# Create a rectangle for the thirtieth-thirtieth-thirtieth-first column\nrect91 = plt.Rectangle((90, 0), 1, 1, color='orange')\nax.add_patch(rect91)\n\n# Create a rectangle for the thirtieth-thirtieth-thirti"}
{"file": "dataset/ori_500/heatmap_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 10.0))\n\n# Set the title of the plot\nax.set_title('Global Economy')\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('GDP')\n\n# Set the x-axis limits\nax.set_xlim(-1, 10)\n\n# Set the y-axis limits\nax.set_ylim(-1, 1)\n\n# Create a color map\ncmap = plt.get_cmap('coolwarm')\n\n# Create a list of colors\ncolors = [cmap(i) for i in np.linspace(0, 1, 10)]\n\n# Create a list of labels\nlabels = ['LLVA', 'BakLiva', 'GeminiProVision', 'GPT4V', 'CODI']\n\n# Create a list of GDP values\ngdp_values = [0.5, 0.7, 0.8, 0.9, 1.0]\n\n# Create a bar chart\nax.bar(labels, gdp_values, color=colors)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Create a rectangle for the logo\nlogo = plt.Rectangle((0, 0), 1, 1, color='black')\nax.add_patch(logo)\n\n# Create a bar chart for the data\nx = np.arange(1, 13)\ny = np.random.randint(1, 10, 12)\nax.bar(x, y, color='purple')\n\n# Add labels and title\nax.set_xlabel('To layer')\nax.set_ylabel('Perplexity')\nax.set_title('BERT Perplexity by Layer')\n\n# Add a text box with the equation\nax.text(0.5, 0.5, 'mbert\u2192sat Perplexity=7.59', transform=ax.transAxes, fontsize=14,\n        verticalalignment='center', horizontalalignment='center', bbox=dict(facecolor='yellow', alpha=0.5))\n\n# Set the limits of the x-axis\nax.set_xlim([0, 12])\n\n# Set the limits of the y-axis\nax.set_ylim([-1, 10])\n\n# Set the colorbar\ncbar = fig.colorbar(ax.images[0])\ncbar.set_label('Colorbar Label')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(4.0, 8.0))\n\n# Set the title of the chart\nax.set_title('Sales Performance Heatmap')\n\n# Create a color map for the heatmap\ncmap = plt.get_cmap('OrRd')\n\n# Create a heatmap with random data\nheatmap = np.random.rand(10, 10)\ncax = ax.matshow(heatmap, cmap=cmap)\n\n# Add a color bar to the right of the heatmap\nfig.colorbar(cax)\n\n# Set the x-axis labels\nx_labels = ['Product A Q1', 'Product A Q2', 'Product A Q3', 'Product B Q1', 'Product B Q2', 'Product B Q3']\nax.set_xticks(np.arange(len(x_labels)))\nax.set_xticklabels(x_labels)\n\n# Set the y-axis labels\ny_labels = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']\nax.set_yticks(np.arange(len(y_labels)))\nax.set_yticklabels(y_labels)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 3.0))\n\n# Create a color map\ncmap = plt.get_cmap('hot')\n\n# Create a grid of rectangles\nfor i in range(10):\n    for j in range(10):\n        rect = plt.Rectangle((i*10, j*10), 10, 10, color=cmap(i/10))\n        ax.add_patch(rect)\n\n# Set the limits of the plot\nax.set_xlim(0, 100)\nax.set_ylim(0, 100)\n\n# Set the title of the plot\nax.set_title('Colorful Rectangles')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Weather')\n\n# Create a color map for the scatter plot\ncmap = plt.cm.RdYlGn\n\n# Create a scatter plot with random data\nx = np.random.rand(100)\ny = np.random.rand(100)\ns = np.random.rand(100) * 1000\nc = np.random.rand(100)\nscatter = ax.scatter(x, y, s=s, c=c, cmap=cmap)\n\n# Add a color bar to the plot\ncbar = fig.colorbar(scatter)\ncbar.set_label('Correlation Coefficient')\n\n# Set the limits of the x-axis and y-axis\nax.set_xlim([96, 720])\nax.set_ylim([96, 720])\n\n# Set the labels of the x-axis and y-axis\nax.set_xlabel('Time')\nax.set_ylabel('Temperature')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(20.0, 8.0))\n\n# Set the title of the plot\nax.set_title('a) Role voting in the Werewolf game')\n\n# Create a color map\ncmap = plt.get_cmap('Blues')\n\n# Create a list of colors\ncolors = ['blue', 'cyan', 'darkblue', 'darkcyan', 'darkslateblue', 'darkturquoise', 'deepskyblue', 'dodgerblue', 'firebrick', 'forestgreen', 'fuchsia', 'gold', 'gray', 'green', 'greenyellow', 'honeydew', 'hotpink', 'indianred', 'indigo', 'ivory', 'khaki', 'lavender', 'lawngreen', 'lemonchiffon', 'lightblue', 'lightcoral', 'lightcyan', 'lightgoldenrodyellow', 'lightgray', 'lightgreen', 'lightsalmon', 'lightseagreen', 'lightskyblue', 'lightslategray', 'lightsteelblue', 'lightyellow', 'lime', 'limegreen', 'linen', 'magenta', 'maroon', 'mediumaquamarine', 'mediumblue', 'mediumorchid', 'mediumpurple', 'mediumseagreen', 'mediumslateblue', 'mediumspringgreen', 'mediumturquoise', 'mediumvioletred', 'midnightblue', 'mintcream', 'mistyrose', 'moccasin', 'navajowhite', 'navy', 'oldlace', 'olive', 'olivedrab', 'orange', 'orangered', 'orchid', 'palegoldenrod', 'palegreen', 'paleturquoise', 'palevioletred', 'papayawhip', 'peachpuff', 'peru', 'pink', 'plum', 'powderblue', 'purple', 'red', 'rosybrown', 'royalblue', 'saddlebrown', 'salmon', 'sandybrown', 'seagreen', 'seashell', 'sienna', 'silver', 'skyblue', 'slateblue', 'slategray', 'slategrey', 'snow', 'springgreen', 'steelblue', 'tan', 'teal', 'thistle', 'tomato', 'turquoise', 'violet', 'wheat', 'white', 'whitesmoke', 'yellow', 'yellowgreen']\n\n# Create a list of labels\nlabels = ['Villager', 'Hunter', 'Witch', 'Seer', 'Werewolf', 'Abstain']\n\n# Create a list of values\nvalues = [15.7, 28.1, 26.0, 14.5, 28.6, 10.5]\n\n# Create a bar chart\nax.bar(labels, values, color=colors)\n\n# Create a second subplot\nax2 = fig.add_subplot(122)\n\n# Set the title of the plot\nax2.set_title('b) Final state of roles')\n\n# Create a list of values for the second subplot\nvalues2 = [31.5, 4.3, 17.4, 2.5, 27.1, 17.3]\n\n# Create a bar chart for the second subplot\nax2.bar(labels, values2, color=colors)\n\n# Add a color bar\ncbar = fig.colorbar(ax2.images[0])\n\n# Set the label of the color bar\ncbar.set_label('Percentage')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Question Type: All three types of questions')\n\n# Set the x-axis label\nax.set_xlabel('Response Action Category')\n\n# Set the y-axis label\nax.set_ylabel('Number of Questions')\n\n# Create a bar chart with the data\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [169, 547, 662, 271, 145], color='blue')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [547, 439, 753, 239, 1355], color='red')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [662, 753, 557, 259, 1269], color='green')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [271, 239, 259, 153, 732], color='orange')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [145, 1355, 141, 1269, 661], color='yellow')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [547, 439, 557, 259, 1269], color='cyan')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [662, 753, 557, 259, 1269], color='magenta')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [271, 239, 259, 153, 732], color='lime')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [145, 1355, 141, 1269, 661], color='brown')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [547, 439, 557, 259, 1269], color='silver')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [662, 753, 557, 259, 1269], color='gold')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [271, 239, 259, 153, 732], color='olive')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [145, 1355, 141, 1269, 661], color='navy')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [547, 439, 557, 259, 1269], color='purple')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [662, 753, 557, 259, 1269], color='pink')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [271, 239, 259, 153, 732], color='gray')\nax.bar(['Qwen', 'ChatGLM3', 'Baichuan2', 'LLaMA-2', 'Xverse'], [145, 1355, 141, 1269, 661], color='white')\n\n# Set the limits of the x-axis\nax.set_xlim(0, 5)\n\n# Set the limits of the y-axis\nax.set_ylim(0, 1200)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data\ncategories = ['angry', 'sad', 'disgust', 'contempt', 'fear', 'neutral', 'surprise', 'happy']\nvalues = [0.10, 0.00, 0.30, 0.00, 0.00, 0.50, 0.00, 0.10]\nadjusted_values = [0.12, 0.00, 0.44, 0.00, 0.00, 0.44, 0.00, 0.00]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 8))\n\n# Plot the data\nax.bar(categories, values, color='blue')\nax.bar(categories, adjusted_values, bottom=values, color='red')\n\n# Set the title and labels\nax.set_title('Original vs Adjusted')\nax.set_xlabel('Emotion Categories')\nax.set_ylabel('Intensity')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Voting Results')\n\n# Set the x-axis label\nax.set_xlabel('Voter')\n\n# Set the y-axis label\nax.set_ylabel('Percentage')\n\n# Define the data for the plot\nvoters = ['Villager', 'Hunter', 'Witch', 'Seer', 'Wererewolf']\npercentages = [15.7, 28.1, 26, 4.5, 10.5]\n\n# Create a bar chart\nax.bar(voters, percentages, color='blue')\n\n# Add a color bar which maps values to colors\nsm = plt.cm.ScalarMappable(cmap='Blues', norm=plt.Normalize(vmin=min(percentages), vmax=max(percentages)))\nsm._A = []\ncbar = fig.colorbar(sm)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_22.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 3.0))\n\n# Set the title of the plot\nax.set_title('LLaMA')\n\n# Create a color map for the heatmap\ncmap = plt.cm.RdYlGn\n\n# Create a heatmap with random data\nheatmap = ax.imshow(np.random.rand(5, 5), cmap=cmap)\n\n# Add a color bar to the plot\nfig.colorbar(heatmap)\n\n# Set the x-axis labels\nax.set_xticks([0, 1, 2, 3, 4])\nax.set_xticklabels(['Baseline', 'Reversed Order', 'Reversed IDs'])\n\n# Set the y-axis labels\nax.set_yticks([0, 1, 2, 3, 4])\nax.set_yticklabels(['#17', '#24', '#3', '#10', '#13'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_23.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Create a grid of subplots\ngs = fig.add_gridspec(2, 4)\n\n# Add a subplot for the first row\nax1 = fig.add_subplot(gs[0, :])\nax1.set_title('First Row')\nax1.plot([0.1, 0.08, 0.3, 0.6, 0.0, 0.5, 0.07, 0.1], [0.1, 0.08, 0.3, 0.6, 0.0, 0.5, 0.07, 0.1], 'ro-')\n\n# Add a subplot for the second row\nax2 = fig.add_subplot(gs[1, :])\nax2.set_title('Second Row')\nax2.plot([0.12, 0.22, 0.44, 0.3, 0.32, 0.44, 0.10, 0.0], [0.12, 0.22, 0.44, 0.3, 0.32, 0.44, 0.10, 0.0], 'go-')\n\n# Set the color of the background\nfig.patch.set_facecolor('white')\n\n# Set the color of the axes\nax1.set_facecolor('lightgrey')\nax2.set_facecolor('lightgrey')\n\n# Set the color of the grid\nax1.grid(True)\nax2.grid(True)\n\n# Set the color of the labels\nax1.set_xlabel('X-axis')\nax1.set_ylabel('Y-axis')\nax2.set_xlabel('X-axis')\nax2.set_ylabel('Y-axis')\n\n# Set the color of the title\nax1.set_title('First Row', color='black')\nax2.set_title('Second Row', color='black')\n\n# Set the color of the legend\nax1.legend(['Data'], loc='upper left', shadow=True)\nax2.legend(['Data'], loc='upper left', shadow=True)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the color map\ncmap = plt.get_cmap('YlGnBu')\n\n# Create a grid of rectangles\nfor i in range(10):\n    for j in range(10):\n        # Create a rectangle with a random color\n        rect = plt.Rectangle((i, j), 1, 1, color=cmap(np.random.rand()))\n        ax.add_patch(rect)\n\n# Set the limits of the plot\nax.set_xlim(0, 10)\nax.set_ylim(0, 10)\n\n# Set the title of the plot\nax.set_title('Harvest [t/year]')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_25.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Crops and their characteristics')\n\n# Set the x-axis label\nax.set_xlabel('Crops')\n\n# Set the y-axis label\nax.set_ylabel('Characteristics')\n\n# Define the crops and their characteristics\ncrops = ['cucumber', 'tomato', 'lettuce', 'asparagus', 'potato', 'barley']\nharvest = [1.2, 1.5, 1.7, 1.9, 2.1, 2.3]\nquality = [0.4, 0.5, 0.6, 0.7, 0.8, 0.9]\ncoefficient = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6]\n\n# Plot the data\nax.plot(crops, harvest, 'ro-', label='Harvest')\nax.plot(crops, quality, 'go-', label='Quality')\nax.plot(crops, coefficient, 'bo-', label='Coefficient')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_26.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Create a grid of subplots\ngs = fig.add_gridspec(4, 4)\n\n# Add a subplot for each image\nax1 = fig.add_subplot(gs[0, :2])\nax2 = fig.add_subplot(gs[0, 2:])\nax3 = fig.add_subplot(gs[1, :2])\nax4 = fig.add_subplot(gs[1, 2:])\nax5 = fig.add_subplot(gs[2, :2])\nax6 = fig.add_subplot(gs[2, 2:])\nax7 = fig.add_subplot(gs[3, :2])\nax8 = fig.add_subplot(gs[3, 2:])\n\n# Display the images\nax1.imshow(np.random.rand(10, 10), cmap='Blues')\nax2.imshow(np.random.rand(10, 10), cmap='Greens')\nax3.imshow(np.random.rand(10, 10), cmap='Reds')\nax4.imshow(np.random.rand(10, 10), cmap='YlOrBr')\nax5.imshow(np.random.rand(10, 10), cmap='Blues')\nax6.imshow(np.random.rand(10, 10), cmap='Greens')\nax7.imshow(np.random.rand(10, 10), cmap='Reds')\nax8.imshow(np.random.rand(10, 10), cmap='YlOrBr')\n\n# Set the title of each subplot\nax1.set_title('None')\nax2.set_title('none')\nax3.set_title('nearest')\nax4.set_title('bilinear')\nax5.set_title('bicubic')\nax6.set_title('spline16')\nax7.set_title('spline36')\nax8.set_title('hanning')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_27.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the title of the plot\nax.set_title('default: no edges')\n\n# Create a color map for the scatter plot\ncmap = plt.get_cmap('tab20')\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\ncolors = np.random.rand(10)\nsizes = 1000 * np.random.rand(10)\nscatter = ax.scatter(x, y, c=colors, s=sizes, cmap=cmap)\n\n# Add a color bar to the plot\ncbar = fig.colorbar(scatter)\ncbar.set_label('Color scale')\n\n# Set the limits of the x and y axes\nax.set_xlim([0, 10])\nax.set_ylim([0, 10])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_28.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Create a grid of subplots\ngs = ax.grid(True)\n\n# Set the title of the plot\nax.set_title('Sales of vendors (in tons/year)')\n\n# Set the labels for the x-axis and y-axis\nax.set_xlabel('Vendors')\nax.set_ylabel('Sales')\n\n# Create a list of vendors\nvendors = ['Vendor A', 'Vendor B', 'Vendor C', 'Vendor D', 'Vendor E', 'Vendor F', 'Vendor G']\n\n# Create a list of sales data\nsales = [1.5, 2.2, 1.8, 3.2, 0.5, 2.2, 0.3]\n\n# Create a bar chart\nax.bar(vendors, sales, color='blue')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_29.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Degree of acceptance of a product')\n\n# Create a bar chart\nax.bar(['High', 'Medium', 'Low'], [42, 38, 35], color='blue')\nax.bar(['High', 'Medium', 'Low'], [40, 36, 34], color='green')\nax.bar(['High', 'Medium', 'Low'], [38, 34, 32], color='cyan')\nax.bar(['High', 'Medium', 'Low'], [36, 32, 30], color='magenta')\nax.bar(['High', 'Medium', 'Low'], [34, 30, 28], color='yellow')\nax.bar(['High', 'Medium', 'Low'], [32, 28, 26], color='red')\nax.bar(['High', 'Medium', 'Low'], [30, 26, 24], color='black')\n\n# Set the x-axis label\nax.set_xlabel('Degree of acceptance')\n\n# Set the y-axis label\nax.set_ylabel('Number of people')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Create a color map for the temperature data\ncmap = plt.get_cmap('coolwarm')\n\n# Create a grid of subplots\ngs = fig.add_gridspec(2, 3)\n\n# Add a subplot for the temperature data\ntemp_ax = fig.add_subplot(gs[0, :])\ntemp_ax.set_title('Bottlebeck Distance')\ntemp_ax.set_xlabel('Time (s)')\ntemp_ax.set_ylabel('Distance (m)')\ntemp_ax.plot(np.linspace(0, 10, 100), np.sin(np.linspace(0, 10, 100)), color='red')\n\n# Add a subplot for the water level data\nwater_ax = fig.add_subplot(gs[1, 0])\nwater_ax.set_title('Wasserstein Distance')\nwater_ax.set_xlabel('Time (s)')\nwater_ax.set_ylabel('Water Level (m)')\nwater_ax.plot(np.linspace(0, 10, 100), np.cos(np.linspace(0, 10, 100)), color='blue')\n\n# Add a subplot for the battery level data\nbattery_ax = fig.add_subplot(gs[1, 1:])\nbattery_ax.set_title('Battery Level')\nbattery_ax.set_xlabel('Time (s)')\nbattery_ax.set_ylabel('Battery Level (%)')\nbattery_ax.plot(np.linspace(0, 10, 100), np.tan(np.linspace(0, 10, 100)), color='green')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_30.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('ROC\\'s AUC')\n\n# Set the x-axis label\nax.set_xlabel('Timeshift')\n\n# Set the y-axis label\nax.set_ylabel('AUC')\n\n# Create a grid of rectangles\nfor i in range(1, 13):\n    for j in range(1, 13):\n        ax.add_patch(plt.Rectangle((i-1, j-1), 1, 1, color=np.random.rand(3)))\n\n# Add a color bar\ncbar = fig.colorbar(ax.images[0])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 3.0))\n\n# Create a color map\ncmap = plt.get_cmap('Greens')\n\n# Create a grid of rectangles\nfor i in range(10):\n    for j in range(10):\n        ax.add_patch(plt.Rectangle((i*2, j*2), 2, 2, color=cmap(np.random.rand())))\n\n# Set the limits of the plot\nax.set_xlim(0, 20)\nax.set_ylim(0, 20)\n\n# Set the title of the plot\nax.set_title('C Subject')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('purple')\n\n# Set the title of the plot\nax.set_title('Live Cricket Scores', fontsize=24)\n\n# Set the x-axis label\nax.set_xlabel('Match Number', fontsize=18)\n\n# Set the y-axis label\nax.set_ylabel('Score', fontsize=18)\n\n# Set the tick labels for the x-axis\nax.set_xticks([0, 1, 2, 3])\nax.set_xticklabels(['Live', 'CSIQ', 'TID2013', 'KADID'])\n\n# Set the tick labels for the y-axis\nax.set_yticks([0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200, 210, 220, 230, 240, 250, 260, 270, 280, 290, 300, 310, 320, 330, 340, 350, 360, 370, 380, 390, 400, 410, 420, 430, 440, 450, 460, 470, 480, 490, 500])\n\n# Set the color of the grid lines\nax.grid(color='blue', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('white')\n\n# Set the color of the title\nax.title.set_color('white')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('white')\n\n# Set the color of the y-axis label\nax.y"}
{"file": "dataset/ori_500/heatmap_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the title of the graph\nax.set_title('BabelStream triad Average Memory Bandwidth (GB/s)')\n\n# Create a color map\ncmap = plt.get_cmap('hot')\n\n# Create a rectangle for the graph\nrect = plt.Rectangle((0, 0), 1, 1, fc='none', ec='k')\nax.add_patch(rect)\n\n# Create a color bar\ncbar = fig.colorbar(rect, ax=ax, orientation='vertical')\n\n# Set the limits of the color bar\ncbar.set_clim(200, 1600)\n\n# Set the ticks of the color bar\ncbar.set_ticks([200, 400, 600, 800, 1000, 1200, 1400, 1600])\n\n# Set the labels of the color bar\ncbar.set_ticklabels(['200', '400', '600', '800', '1000', '1200', '1400', '1600'])\n\n# Set the labels of the x-axis\nax.set_xlabel('Programming Model')\n\n# Set the labels of the y-axis\nax.set_ylabel('Average Memory Bandwidth (GB/s)')\n\n# Set the data of the graph\nx = ['Kokkos', 'RAJA', 'OMP', 'OACC', 'SYCL', 'Native Port']\ny = [876, 136, 435, 534, 322, 804]\nz = [750, 1737, 742, 375, 750, 1825]\nw = [764, 676, 782, 421, 925, 911]\n\n# Create a scatter plot\nax.scatter(x, y, c=y, cmap=cmap)\nax.scatter(x, z, c=z, cmap=cmap)\nax.scatter(x, w, c=w, cmap=cmap)\n\n# Set the limits of the x-axis\nax.set_xlim(-1, len(x)+1)\n\n# Set the limits of the y-axis\nax.set_ylim(200, 1600)\n\n# Set the ticks of the x-axis\nax.set_xticks(range(len(x)))\n\n# Set the labels of the x-axis\nax.set_xticklabels(x)\n\n# Set the ticks of the y-axis\nax.set_yticks(range(200, 1601, 200))\n\n# Set the labels of the y-axis\nax.set_yticklabels(range(200, 1601, 200))\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Correlation Coefficients')\n\n# Create a color map\ncmap = plt.get_cmap('hot')\n\n# Create a grid of subplots\ngs = ax.grid(True)\n\n# Create a color bar\ncbar = fig.colorbar(cmap, ax=ax)\n\n# Set the color bar label\ncbar.set_label('Correlation Coefficient')\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('Time')\nax.set_ylabel('Frequency')\n\n# Set the x-axis and y-axis ticks\nax.set_xticks(np.arange(0, 10, 1))\nax.set_yticks(np.arange(0, 10, 1))\n\n# Set the x-axis and y-axis tick labels\nax.set_xticklabels(['en', 'fr', 'es', 'pt', 'bn', 'ur', 'hi', 'ar', 'zh'])\nax.set_yticklabels(['en', 'fr', 'es', 'pt', 'bn', 'ur', 'hi', 'ar', 'zh'])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=12)\n\n# Set the color of the tick marks\nax.tick_params"}
{"file": "dataset/ori_500/heatmap_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the color map\ncmap = plt.get_cmap('Blues')\n\n# Create a bar chart for each row\nax.bar(['LexRank', 'ROUGE', 'BERTScore', 'SimCSE', 'PMI', 'GPT-3.5', 'CrossAttN', 'PPL'], [0.19, 0.19, 0.62, 0.52, 0.50, 0.39, 0.20, 0.06], color=cmap(0.1))\nax.bar(['LexRank', 'ROUGE', 'BERTScore', 'SimCSE', 'PMI', 'GPT-3.5', 'CrossAttN', 'PPL'], [0.16, 0.26, 0.53, 0.50, 0.39, 0.24, 0.20, 0.06], color=cmap(0.2))\nax.bar(['LexRank', 'ROUGE', 'BERTScore', 'SimCSE', 'PMI', 'GPT-3.5', 'CrossAttN', 'PPL'], [0.03, 0.24, 0.24, 0.34, 0.20, 0.20, 0.10, 0.06], color=cmap(0.3))\nax.bar(['LexRank', 'ROUGE', 'BERTScore', 'SimCSE', 'PMI', 'GPT-3.5', 'CrossAttN', 'PPL'], [0.07, 0.28, 0.26, 0.26, 0.20, 0.21, 0.05, 0.05], color=cmap(0.4))\n\n# Set the title and labels\nax.set_title('BERTScore Comparison')\nax.set_xlabel('Metrics')\nax.set_ylabel('Scores')\n\n# Set the color bar\nsm = plt.cm.ScalarMappable(cmap=cmap)\nsm.set_array([])\ncbar = fig.colorbar(sm)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/heatmap_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nfig, ax = plt.subplots(figsize=(5.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('#2b2d42')\n\n# Create a grid of 15x15 pixels\ngrid = np.zeros((15, 15))\n\n# Fill the grid with different colors\nfor i in range(15):\n    for j in range(15):\n        if (i + j) % 2 == 0:\n            grid[i][j] = 0.2\n        else:\n            grid[i][j] = 0.8\n\n# Display the grid\nim = ax.imshow(grid, cmap='Blues')\n\n# Add a colorbar\ncbar = fig.colorbar(im)\n\n# Set the title of the plot\nax.set_title('pythia-1b')\n\n# Set the x and y labels\nax.set_xlabel('Layers')\nax.set_ylabel('Colors')\n\n# Set the x and y ticks\nax.set_xticks(np.arange(0, 15, 1))\nax.set_yticks(np.arange(0, 15, 1))\n\n# Set the x and y tick labels\nax.set_xticklabels(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15'])\nax.set_yticklabels(['<endofext>', '<endofext>', '<endofext>', '<endofext>', '<endofext>', '<endofext>', '<endofext>', '<endofext>', '<endofext>', '<endofext>', '<endofext>', '<endofext>', '<endofext>', '<endofext>', '<endofext>'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 100)\n\n# Set the x-axis label\nax.set_xlabel('Test Winning Distance')\n\n# Set the y-axis label\nax.set_ylabel('Number of Pairs')\n\n# Set the title\nax.set_title('Tennis Pairing System')\n\n# Create a bar chart\nax.bar([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], [20, 40, 60, 80, 100, 80, 60, 40, 20], color='blue')\n\n# Create a scatter plot\nax.scatter([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], [20, 40, 60, 80, 100, 80, 60, 40, 20], color='red')\n\n# Create a line plot\nax.plot([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], [20, 40, 60, 80, 100, 80, 60, 40, 20], color='green')\n\n# Create a pie chart\nax.pie([20, 40, 60, 80, 100], colors=['blue', 'red', 'green', 'yellow', 'purple'])\n\n# Create a histogram\nax.hist([20, 40, 60, 80, 100], bins=5, color='blue')\n\n# Create a box plot\nax.boxplot([20, 40, 60, 80, 100], vert=False, patch_artist=True, boxprops=dict(facecolor='blue'))\n\n# Create a violin plot\nax.violinplot([20, 40, 60, 80, 100], showmeans=True, showmedians=True)\n\n# Create a heatmap\nax.imshow([[20, 40, 60, 80, 100]], cmap='Blues')\n\n# Create a contour plot\nx = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]\ny = [20, 40, 60, 80, 100, 80, 60, 40, 20]\nz = [[20, 40, 60, 80, 100], [20, 40, 60, 80, 100], [20, 40, 60, 80, 100], [20, 40, 60, 80, 100], [20, 40, 60, 80, 100], [20, 40, 60, 80, 100], [20, 40, 60, 80, 100], [20, 40, 60, 80, 100], [20, 40, 60, 80, 100]]\nax.contourf(x, y, z, cmap='Blues')\n\n# Create a stream plot\nax.streamplot(x, y, z, color='blue')\n\n# Create a quiver plot\nax.quiver(x, y, z, z, color='blue')\n\n# Create a polar plot\nax.polar([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], [20, 40, 60, 80, 100, 80, 60, 40, 20], color='blue')\n\n# Create a 3D plot\nfrom mpl_toolkits.mplot3d import Axes3D\nax = fig.add_subplot(111, projection='3d')\nax.plot_surface(x, y, z, cmap='Blues')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 2, figsize=(10.0, 3.0))\n\n# Define the data for the plots\nx = np.linspace(-1, 1, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\n\n# Plot the data\naxs[0].plot(x, y1, 'b-', label='Inter Class')\naxs[0].plot(x, y2, 'g-', label='Intra Class')\naxs[0].set_xlabel('Cosine Similarity')\naxs[0].set_ylabel('Frequency')\naxs[0].legend()\n\n# Repeat the process for the second subplot\naxs[1].plot(x, y1, 'b-', label='Inter Class')\naxs[1].plot(x, y2, 'g-', label='Intra Class')\naxs[1].set_xlabel('Cosine Similarity')\naxs[1].set_ylabel('Frequency')\naxs[1].legend()\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the plot\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Create a scatter plot with random data\nx = np.random.rand(50)\ny = np.random.rand(50)\nax.scatter(x, y)\n\n# Set the title of the plot\nax.set_title('Baseline')\n\n# Set the x-axis label\nax.set_xlabel('Euclidean Distance')\n\n# Set the y-axis label\nax.set_ylabel('Density')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the plot\nfig, ax = plt.subplots(figsize=(7.0, 8.0))\n\n# Set the title of the plot\nax.set_title('MATHWELL')\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Set the x and y limits\nax.set_xlim([0, 10])\nax.set_ylim([0, 1])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the title of the plot\nax.set_title('Desert Animals in the Wild')\n\n# Set the x-axis label\nax.set_xlabel('Animal Weight (Tons)')\n\n# Set the y-axis label\nax.set_ylabel('Frequency')\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 1000)\n\n# Set the x-ticks\nax.set_xticks([0.02, 0.04, 0.06, 0.08])\n\n# Set the y-ticks\nax.set_yticks([100, 200, 300, 400, 500, 600, 700, 800, 900, 1000])\n\n# Set the color of the x-axis labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='orange')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='blue')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='blue')\n\n# Set"}
{"file": "dataset/ori_500/hist_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Comparison of Uniform and Normal Distributions')\n\n# Set the x-axis label\nax.set_xlabel('Time (in hours)')\n\n# Set the y-axis label\nax.set_ylabel('Frequency')\n\n# Create a bar chart\nax.bar([0, 2, 4, 6, 8], [10, 20, 30, 40, 50], color='blue', label='Uniform data')\nax.bar([1, 3, 5, 7, 9], [15, 25, 35, 45, 55], color='red', label='Normal data')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Histogram of Wind Speed Measurements')\n\n# Set the x-axis label\nax.set_xlabel('Wind Speed (km/h)')\n\n# Set the y-axis label\nax.set_ylabel('Frequency')\n\n# Create a histogram with 10 bins\nax.hist([2, 3, 4, 5, 6, 7, 8, 9, 10, 11], bins=10, color='blue', edgecolor='black')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nx = [0.0, 0.5, 1.0, 1.5, 2.0, 2.5, 3.0]\ny = [100, 90, 80, 70, 60, 50, 40]\ncolors = ['blue', 'orange']\nlabels = ['Baguette', 'Youtiao']\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 4.0))\n\n# Plot the data\nax.plot(x, y, color='blue')\n\n# Add a legend\nax.legend(labels, loc='upper left')\n\n# Set the title\nax.set_title('Baking Accuracy Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Distance to Threshold')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Set the grid\nax.grid(True)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(16.0, 7.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 140)\n\n# Set the x-axis label\nax.set_xlabel('Test Winning Distance')\n\n# Set the y-axis label\nax.set_ylabel('Number of Pairs')\n\n# Set the title\nax.set_title('Tennis Player Performance')\n\n# Create a bar chart\nax.bar([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], [100, 110, 120, 130, 140, 150, 160, 170, 180], color='blue')\n\n# Create a scatter plot\nax.scatter([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], [10, 20, 30, 40, 50, 60, 70, 80, 90], color='red')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\n\n# Set the x-axis limits\nax.set_xlim([0, 300])\n\n# Set the y-axis limits\nax.set_ylim([0, 25])\n\n# Set the x-axis label\nax.set_xlabel('Number of Nominations')\n\n# Set the y-axis label\nax.set_ylabel('Grammy Points')\n\n# Set the title\nax.set_title('Histogram of Grammy Nominations Across Expanded Categories 2019-2023')\n\n# Create a bar chart with the data\nax.bar(range(1, 10), [10, 15, 20, 25, 30, 35, 40, 45, 50], color='orange')\nax.bar(range(1, 10), [12, 17, 22, 27, 32, 37, 42, 47, 52], color='yellow')\nax.bar(range(1, 10), [14, 19, 24, 29, 34, 39, 44, 49, 54], color='pink')\nax.bar(range(1, 10), [16, 21, 26, 31, 36, 41, 46, 51, 56], color='gold')\n\n# Add a legend\nax.legend(['Record of the Year', 'Album of the Year', 'Song of the Year', 'Best New Artist', 'Best Pop Solo Performance'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 7.0))\n\n# Set the title of the plot\nax.set_title('MNIST - Defect Detection')\n\n# Create a color bar for the first subplot\ncbar = fig.colorbar(ax.imshow(np.random.rand(10, 10), cmap='Blues'), ax=ax)\n\n# Create a second subplot\nax2 = fig.add_subplot(122)\nax2.set_title('FashionMNIST - Defect Detection')\n\n# Create a color bar for the second subplot\ncbar2 = fig.colorbar(ax2.imshow(np.random.rand(10, 10), cmap='Reds'), ax=ax2)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Player Performance')\n\n# Set the x-axis label\nax.set_xlabel('Time (minutes)')\n\n# Set the y-axis label\nax.set_ylabel('TM-score')\n\n# Set the x-ticks\nax.set_xticks([0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])\n\n# Set the y-ticks\nax.set_yticks([0, 10, 20, 30, 40, 50, 60, 70])\n\n# Set the x-tick labels\nax.set_xticklabels(['0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1.0'])\n\n# Set the y-tick labels\nax.set_yticklabels(['0', '10', '20', '30', '40', '50', '60', '70'])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'green', 'yellow', 'cyan', 'magenta', 'red', 'black'])\n\n# Set the color of the lines\nax.plot([0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], [50, 55, 60, 65, 70, 75, 80], color='blue')\nax.plot([0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], [40, 45, 50, 55, 60, 65, 70], color='green')\nax.plot([0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], [30, 35, 40, 45, 50, 55, 60], color='yellow')\nax.plot([0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], [20, 25, 30, 35, 40, 45, 50], color='cyan')\nax.plot([0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], [10, 15, 20, 25, 30, 35, 40], color='magenta')\nax.plot([0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], [0, 5, 10, 15, 20, 25, 30], color='red')\nax.plot([0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], [70, 65, 60, 55, 50, 45, 40], color='black')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(2, 2, figsize=(10, 8))\n\n# Plot the first subplot\naxs[0, 0].scatter(np.random.rand(50), np.random.rand(50), c=np.random.rand(50), cmap='Blues')\naxs[0, 0].set_title('a) Milk Chocolate')\naxs[0, 0].set_xlabel('Sweetness')\naxs[0, 0].set_ylabel('Density')\n\n# Plot the second subplot\naxs[0, 1].scatter(np.random.rand(50), np.random.rand(50), c=np.random.rand(50), cmap='Oranges')\naxs[0, 1].set_title('b) Dark Chocolate')\naxs[0, 1].set_xlabel('Sweetness')\naxs[0, 1].set_ylabel('Density')\n\n# Plot the third subplot\naxs[1, 0].scatter(np.random.rand(50), np.random.rand(50), c=np.random.rand(50), cmap='Blues')\naxs[1, 0].set_title('c) White Chocolate')\naxs[1, 0].set_xlabel('Sweetness')\naxs[1, 0].set_ylabel('Density')\n\n# Plot the fourth subplot\naxs[1, 1].scatter(np.random.rand(50), np.random.rand(50), c=np.random.rand(50), cmap='Oranges')\naxs[1, 1].set_title('d) Ruby Chocolate')\naxs[1, 1].set_xlabel('Sweetness')\naxs[1, 1].set_ylabel('Density')\n\n# Add colorbar for the first subplot\ncbar = fig.colorbar(axs[0, 0].collections[0], ax=axs[0, 0])\ncbar.set_label('Swiss / New Zealand')\n\n# Add colorbar for the second subplot\ncbar = fig.colorbar(axs[0, 1].collections[0], ax=axs[0, 1])\ncbar.set_label('Swiss / New Zealand')\n\n# Add colorbar for the third subplot\ncbar = fig.colorbar(axs[1, 0].collections[0], ax=axs[1, 0])\ncbar.set_label('Swiss / New Zealand')\n\n# Add colorbar for the fourth subplot\ncbar = fig.colorbar(axs[1, 1].collections[0], ax=axs[1, 1])\ncbar.set_label('Swiss / New Zealand')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(5.0, 4.0))\n\n# Set the title of the plot\nax.set_title('CIFAR100 \\'Desert\\' Concept')\n\n# Set the x-axis label\nax.set_xlabel('Concept Weight')\n\n# Set the y-axis label\nax.set_ylabel('Count')\n\n# Define the data for the plot\nx = [0.00, 0.05, 0.10, 0.15]\ny = [1000, 900, 800, 700]\n\n# Plot the data\nax.plot(x, y, 'ro-')\n\n# Add a legend\nax.legend(['Class', 'Camel', 'Kangaroo'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_4.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 3.0))\n\n# Define the data\nx = np.linspace(-5, 10, 100)\ny = np.sin(x)\n\n# Plot the data\nax.plot(x, y, color='blue')\n\n# Set the title and labels\nax.set_title('Sine Wave')\nax.set_xlabel('Distance')\nax.set_ylabel('Amplitude')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/hist_5.pdf", "response": "import matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(4.0, 3.0))\n\n# Set the title of the plot\nax.set_title('Number of Clusters vs Number of Repetition')\n\n# Set the x-axis label\nax.set_xlabel('Number of Repetition')\n\n# Set the y-axis label\nax.set_ylabel('Number of Clusters')\n\n# Create a scatter plot with random data\nx = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\ny = [100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200, 1300]\nax.scatter(x, y, color='orange')\n\n# Set the limits of the x-axis and y-axis\nax.set_xlim(0, 12)\nax.set_ylim(0, 1500)\n\n# Set the grid lines\nax.grid(True)\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/hist_6.pdf", "response": "import matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 3.0))\n\n# Set the title of the plot\nax.set_title('Classification Accuracy')\n\n# Set the x-axis label\nax.set_xlabel('Distance to threshold')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Create a bar chart\nax.bar(['0', '1', '2', '3', '4'], [0.9, 0.8, 0.7, 0.6, 0.5], color='blue')\n\n# Create a scatter plot\nax.scatter([0, 1, 2, 3, 4], [0.95, 0.85, 0.75, 0.65, 0.55], color='orange')\n\n# Add a legend\nax.legend(['Correctly classified', 'Misclassified'])\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/hist_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Casade')\n\n# Set the x-axis label\nax.set_xlabel('Confidence in bin')\n\n# Set the y-axis label\nax.set_ylabel('Calibration Error')\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Draw a line between the points\nax.plot(x, y, 'o-')\n\n# Set the limits of the x-axis\nax.set_xlim([0, 1])\n\n# Set the limits of the y-axis\nax.set_ylim([0, 1])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/hist_8.pdf", "response": "import matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Set the x-axis and y-axis limits\nax.set_xlim(0, 1)\nax.set_ylim(0, 6000)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('% images overlap')\nax.set_ylabel('Number of queries')\n\n# Create a bar chart with the data\nax.bar([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9], [1000, 2000, 3000, 4000, 5000, 6000, 5000, 4000, 3000], color='blue')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/hist_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 7))\n\n# Set the title of the plot\nax.set_title('MNIST')\n\n# Create a scatter plot with random data\nx = np.random.rand(50)\ny = np.random.rand(50)\nax.scatter(x, y, color='blue')\n\n# Set the x and y limits\nax.set_xlim([0, 1])\nax.set_ylim([0, 1])\n\n# Set the x and y labels\nax.set_xlabel('X-axis')\nax.set_ylabel('Y-axis')\n\n# Add a grid\nax.grid(True)\n\n# Save the figure\nplt.savefig('mnist.png')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(5, 20)\n\n# Set the y-axis limits\nax.set_ylim(0, 100)\n\n# Set the x-axis label\nax.set_xlabel('SNR')\n\n# Set the y-axis label\nax.set_ylabel('Classification Accuracy (%)')\n\n# Plot the data\nax.plot([5, 10, 15, 20], [90, 80, 70, 60], 'r-', label='JPEG+LDPC')\nax.plot([5, 10, 15, 20], [80, 70, 60, 50], 'o-', label='DEEPJSCC w/o ofdm')\nax.plot([5, 10, 15, 20], [70, 60, 50, 40], 'g-', label='DEEPJSCC w/ ofdm')\nax.plot([5, 10, 15, 20], [60, 50, 40, 30], 'b-', label='OURS')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the graph\nax.set_title('Performance Metrics')\n\n# Set the x-axis label\nax.set_xlabel('Time (n)')\n\n# Set the y-axis label\nax.set_ylabel('Performance Gain (%)')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3, 4, 5, 6, 7, 8])\n\n# Set the y-ticks\nax.set_yticks([0, 1, 2, 3, 4, 5, 6, 7])\n\n# Draw the rectangles\nrectangles = [\n    plt.Rectangle((0, 0), 1, 6, color='blue'),\n    plt.Rectangle((1, 0), 1, 5, color='orange'),\n    plt.Rectangle((2, 0), 1, 4, color='green'),\n    plt.Rectangle((3, 0), 1, 3, color='cyan'),\n    plt.Rectangle((4, 0), 1, 2, color='magenta'),\n    plt.Rectangle((5, 0), 1, 1, color='yellow'),\n    plt.Rectangle((6, 0), 1, 0, color='black')\n]\nfor rectangle in rectangles:\n    ax.add_patch(rectangle)\n\n# Draw the lines\nlines = [\n    plt.Line2D([0, 1], [0, 1], color='blue'),\n    plt.Line2D([1, 2], [1, 2], color='orange'),\n    plt.Line2D([2, 3], [2, 3], color='green'),\n    plt.Line2D([3, 4], [3, 4], color='cyan'),\n    plt.Line2D([4, 5], [4, 5], color='magenta'),\n    plt.Line2D([5, 6], [5, 6], color='yellow'),\n    plt.Line2D([6, 7], [6, 7], color='black')\n]\nfor line in lines:\n    ax.add_line(line)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Effect of Vocab on Zero Shot Accuracy')\n\n# Set the x-axis label\nax.set_xlabel('Decomposition IO Norm')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Set the x-axis limits\nax.set_xlim(0, 80)\n\n# Set the y-axis limits\nax.set_ylim(0.55, 0.75)\n\n# Set the x-axis ticks\nax.set_xticks([0, 20, 40, 60, 80])\n\n# Set the y-axis ticks\nax.set_yticks([0.55, 0.60, 0.65, 0.70, 0.75])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '20', '40', '60', '80'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.55', '0.60', '0.65', '0.70', '0.75'])\n\n# Set the color of the border\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the width of the border\nax.spines['top'].set_linewidth(2)\nax.spines['bottom'].set_linewidth(2)\nax.spines['left'].set_linewidth(2)\nax.spines['right'].set_linewidth(2)\n\n# Set the color of the grid lines\nax.grid(color='black', linestyle='-', linewidth=1)\n\n# Set the color of the text\nax.text(0.5, 0.95, 'Dictionary', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=12, color='black')\n\n# Set the color of the text\nax.text(0.5, 0.90, 'coco (10k)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10, color='red')\n\n# Set the color of the text\nax.text(0.5, 0.85, 'laion (10k)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10, color='green')\n\n# Set the color of the text\nax.text(0.5, 0.80, 'coco (5k)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10, color='blue')\n\n# Set the color of the text\nax.text(0.5, 0.75, 'laion (5k)', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10, color='orange')\n\n# Set the color of the text\nax.text(0.5, 0.70, 'CLIP', horizontalalignment='center', verticalalignment='center', transform=ax.transAxes, fontsize=10, color='black')\n\n# Plot the data\nax.plot([0, 20, 40, 60, 80], [0.55, 0.60, 0.65, 0.70, 0.75], 'ro-')\nax.plot([0, 20, 40, 60, 80], [0.55, 0.60, 0.65, 0.70, 0.75], 'go-')\nax.plot([0, 20, 40, 60, 80], [0.55, 0.60, 0.65, 0.70, 0.75], 'bo-')\nax.plot([0, 20, 40, 60, 80], [0.55, 0.60, 0.65, 0.70, 0.75], 'yo-')\nax.plot([0, 20, 40, 60, 80], [0.55, 0.60, 0.65, 0.70, 0.75], 'co-')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Stock Price Prediction')\n\n# Set the x-axis label\nax.set_xlabel('Sample Ratio')\n\n# Set the y-axis label\nax.set_ylabel('Stock Price')\n\n# Create a scatter plot for each stock\nax.scatter([0.25, 0.5, 0.75, 1], [0.03, 0.04, 0.05, 0.06], color='red', label='Stock A')\nax.scatter([0.25, 0.5, 0.75, 1], [0.02, 0.03, 0.04, 0.05], color='blue', label='Stock B')\nax.scatter([0.25, 0.5, 0.75, 1], [0.01, 0.02, 0.03, 0.04], color='green', label='Stock C')\n\n# Create a line plot for each stock\nax.plot([0.25, 0.5, 0.75, 1], [0.03, 0.04, 0.05, 0.06], color='red', label='Stock A')\nax.plot([0.25, 0.5, 0.75, 1], [0.02, 0.03, 0.04, 0.05], color='blue', label='Stock B')\nax.plot([0.25, 0.5, 0.75, 1], [0.01, 0.02, 0.03, 0.04], color='green', label='Stock C')\n\n# Add a legend to the plot\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 10.0))\n\n# Set the title of the plot\nax.set_title('Training Metrics')\n\n# Set the x-axis label\nax.set_xlabel('Training iterations')\n\n# Set the y-axis label\nax.set_ylabel('Metrics')\n\n# Plot the data\nax.plot([0, 25, 50, 75, 100, 125, 150, 175, 200], [0.5, 0.4, 0.3, 0.2, 0.1, 0.2, 0.3, 0.4, 0.5], 'b-', label='base')\nax.plot([0, 25, 50, 75, 100, 125, 150, 175, 200], [0.6, 0.5, 0.4, 0.3, 0.2, 0.3, 0.4, 0.5, 0.6], 'y-', label='ours')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the x-axis values\nx = np.arange(1, 30)\n\n# Set the y-axis values for each line\ny1 = np.sin(x)\ny2 = np.cos(x)\ny3 = np.tan(x)\ny4 = np.exp(x)\ny5 = np.log(x)\n\n# Plot the lines\nax.plot(x, y1, 'b-', label='Auto-profiled')\nax.plot(x, y2, 'g-', label='Manually-analyzed')\nax.plot(x, y3, 'r-', label='Release new product')\nax.plot(x, y4, 'c-', label='Realize the trend')\nax.plot(x, y5, 'm-', label='Market analysis')\n\n# Add labels and title\nax.set_xlabel('Week')\nax.set_ylabel('Normalized Value')\nax.set_title('Market Analysis')\n\n# Add legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nx = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\ny1 = [80, 85, 90, 95, 98, 95, 90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25]\ny2 = [75, 80, 85, 90, 95, 90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20]\ny3 = [70, 75, 80, 85, 90, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15]\ny4 = [65, 70, 75, 80, 85, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10]\ny5 = [60, 65, 70, 75, 80, 75, 70, 65, 60, 55, 50, 45, 40, 35, 30, 25, 20, 15, 10, 5]\n\n# Plot\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\nax.plot(x, y1, 'b-', label='BaCE')\nax.plot(x, y2, 'r-', label='LWF')\nax.plot(x, y3, 'm-', label='EWC')\nax.plot(x, y4, 'c-', label='SEQ')\nax.plot(x, y5, 'p-', label='Average Accuracy')\n\n# Legend\nax.legend()\n\n# X-axis\nax.set_xlabel('Task')\nax.set_xticks([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20'])\n\n# Y-axis\nax.set_ylabel('Accuracy (%)')\nax.set_yticks([0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100])\nax.set_yticklabels(['0%', '10%', '20%', '30%', '40%', '50%', '60%', '70%', '80%', '90%', '100%'])\n\n# Show plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Model Performance')\n\n# Set the x-axis label\nax.set_xlabel('Uncertainty threshold')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Define the data for the plots\nx = [0.0, 0.2, 0.4, 0.6, 0.8, 1.0]\ny1 = [0.99, 0.98, 0.97, 0.96, 0.95, 0.94]\ny2 = [0.99, 0.98, 0.97, 0.96, 0.95, 0.94]\ny3 = [0.99, 0.98, 0.97, 0.96, 0.95, 0.94]\n\n# Plot the data\nax.plot(x, y1, 'b-', label='Oesense')\nax.plot(x, y2, 'r-', label='KWS')\nax.plot(x, y3, 'g-', label='ECG5000')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_17.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Define the data\nx = np.linspace(0, 120, 100)\ny = np.log(x + 1)\n\n# Plot the data\nax.plot(x, y, color='blue')\n\n# Set the title and labels\nax.set_title('Log KL Divergence')\nax.set_xlabel('Number of Parameters')\nax.set_ylabel('Log KL Divergence')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/line_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 4.0))\n\n# Set the title of the graph\nax.set_title('GPT-4 Evaluation')\n\n# Set the x-axis label\nax.set_xlabel('Iterations')\n\n# Set the y-axis label\nax.set_ylabel('Attack Success Rate')\n\n# Create a scatter plot\nax.scatter([0, 500, 1000, 1500, 2000], [0.8, 0.6, 0.4, 0.2, 0.0], color='pink')\n\n# Create a line plot\nax.plot([0, 500, 1000, 1500, 2000], [0.8, 0.6, 0.4, 0.2, 0.0], color='blue')\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1000, 1000, color='lightblue', alpha=0.5)\nax.add_patch(rect)\n\n# Create a second subplot\nfig, ax = plt.subplots(figsize=(9.0, 4.0))\n\n# Set the title of the graph\nax.set_title('Llama Guard Evaluation')\n\n# Set the x-axis label\nax.set_xlabel('Iterations')\n\n# Set the y-axis label\nax.set_ylabel('Attack Success Rate')\n\n# Create a scatter plot\nax.scatter([0, 500, 1000, 1500, 2000], [0.8, 0.6, 0.4, 0.2, 0.0], color='pink')\n\n# Create a line plot\nax.plot([0, 500, 1000, 1500, 2000], [0.8, 0.6, 0.4, 0.2, 0.0], color='blue')\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1000, 1000, color='lightblue', alpha=0.5)\nax.add_patch(rect)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(5.0, 4.0))\n\n# Plot the data\nax.plot([1, 2, 3, 4, 5], [60, 70, 80, 90, 100], 'g-')\nax.plot([1, 2, 3, 4, 5], [50, 60, 70, 80, 90], 'r-')\nax.plot([1, 2, 3, 4, 5], [40, 50, 60, 70, 80], 'b-')\n\n# Add markers\nax.plot(1, 60, 'go')\nax.plot(2, 70, 'ro')\nax.plot(3, 80, 'bo')\nax.plot(4, 90, 'go')\nax.plot(5, 100, 'ro')\n\n# Set the title and labels\nax.set_title('Test Accuracy vs Fraction of Training Data')\nax.set_xlabel('Fraction of training data (log scale)')\nax.set_ylabel('Test accuracy (%)')\n\n# Add legends\nax.legend(['Full', 'SPT', 'VPT'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_2.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(4.0, 3.0))\n\n# Define the data\nx = np.linspace(0, 200, 100)\ny1 = np.sin(x/50)\ny2 = np.cos(x/50)\ny3 = np.tan(x/50)\n\n# Plot the data\nax.plot(x, y1, 'b-', label='sin(x/50)')\nax.plot(x, y2, 'r-', label='cos(x/50)')\nax.plot(x, y3, 'g-', label='tan(x/50)')\n\n# Add a legend\nax.legend()\n\n# Set the title and labels\nax.set_title('Trigonometric Functions')\nax.set_xlabel('Gradient Steps (x K)')\nax.set_ylabel('Function Value')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/line_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(16.0, 8.0))\n\n# Set the title of the plot\nax.set_title('MOLHIV')\n\n# Create a scatter plot with a color map\nscatter = ax.scatter(np.random.rand(50), np.random.rand(50), c=np.random.rand(50), cmap='viridis')\n\n# Add a color bar which maps values to colors\ncbar = fig.colorbar(scatter)\n\n# Set the x and y labels\nax.set_xlabel('Ratio r')\nax.set_ylabel('Performance')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nx = [120, 90, 60, 30, 10, 1, 1/30, 1/60, 1/90, 1/120]\ny1 = [85, 87, 88, 89, 90, 91, 92, 93, 94, 95]\ny2 = [80, 82, 83, 84, 85, 86, 87, 88, 89, 90]\n\n# Plot\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\nax.plot(x, y1, 'b-', label='Ours')\nax.plot(x, y2, 'g-', label='ACR')\n\n# Legend\nax.legend()\n\n# Title and labels\nax.set_title('Top-1 Acc (%)')\nax.set_xlabel('Imbalance Ratio of Unlabeled Data')\nax.set_ylabel('Top-1 Acc (%)')\n\n# Markers\nfor i, txt in enumerate(x):\n    ax.annotate(txt, (x[i], y1[i]), textcoords=\"offset points\", xytext=(0,10), ha='center')\n\n# Show plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_22.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the graph\nx = [40, 50, 60, 70, 80, 90, 100]\ny = [2.91, 3.11, 3.32, 3.53, 3.63, 3.74, 3.94]\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(5.0, 4.0))\n\n# Plot the data\nax.plot(x, y, 'b-')\n\n# Set the title and labels\nax.set_title('Perplexity vs. Ratio of 4-bit Utilization')\nax.set_xlabel('Ratio of 4-bit Utilization (%)')\nax.set_ylabel('Perplexity (PPL)')\n\n# Add a legend\nax.legend(['APTQ', 'LLaMa-7B (FP16): 5.22', 'OWQ-4bit: 5.56', 'GPTQ-4bit: 5.62', 'LLM-QAT-4bit: 7.4', 'LLM-QAT-4bit: 7.4', 'LLM-QAT-4bit: 7.4'], loc='upper left')\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((0, 0), 1, 1, fc='w', ec='k', alpha=0.5)\nax.add_patch(rect)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_23.pdf", "response": "import matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(5.0, 2.0))\n\n# Set the x-axis values\nx = [2**1, 2**2, 2**3, 2**4, 2**5, 2**6, 2**7]\n\n# Set the y-axis values\ny = [67.32, 82.98, 89.53, 90.47, 92.47, 93.7, 96.75]\n\n# Plot the data\nax.plot(x, y, 'o-')\n\n# Set the title and labels\nax.set_title('Coverage Ratio vs Number of Training Objects')\nax.set_xlabel('Number of Training Objects')\nax.set_ylabel('Coverage Ratio (%)')\n\n# Set the x-ticks\nax.set_xticks(x)\n\n# Set the y-limits\nax.set_ylim(60, 100)\n\n# Set the y-tick labels\nax.set_yticks(range(60, 101, 10))\n\n# Set the y-tick labels to be centered\nax.yaxis.set_label_position(\"right\")\nax.yaxis.tick_right()\n\n# Set the y-tick labels to be colored red\nax.yaxis.label.set_color('red')\n\n# Set the y-tick labels to be bold\nax.yaxis.label.set_weight('bold')\n\n# Set the y-tick labels to be italic\nax.yaxis.label.set_style('italic')\n\n# Set the y-tick labels to be rotated 45 degrees\nax.yaxis.label.set_rotation(45)\n\n# Set the y-tick labels to be aligned to the right\nax.yaxis.label.set_ha('right')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.yaxis.label.set_va('top')\n\n# Set the y-tick labels to be aligned to the center\nax.yaxis.label.set_va('center')\n\n# Set the y-tick labels to be aligned to the left\nax.yaxis.label.set_va('left')\n\n# Set the y-tick labels to be aligned to the middle\nax.yaxis.label.set_va('middle')\n\n# Set the y-tick labels to be aligned to the bottom\nax.yaxis.label.set_va('bottom')\n\n# Set the y-tick labels to be aligned to the top\nax.y"}
{"file": "dataset/ori_500/line_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the x-axis limits\nax.set_xlim(0, 10)\n\n# Set the y-axis limits\nax.set_ylim(600, 800)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 11, 2))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(600, 801, 50))\n\n# Set the x-axis label\nax.set_xlabel('Iterations')\n\n# Set the y-axis label\nax.set_ylabel('N-ELBO')\n\n# Set the title\nax.set_title('Variational Autoencoder Training')\n\n# Plot the data\nax.plot([0, 2, 4, 6, 8, 10], [700, 720, 730, 740, 750, 760], 'bo-', lw=2)\n\n# Add a legend\nax.legend(['Average', 'Standard Deviation'], loc='upper left')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_25.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('IQM Human Normalized Score')\n\n# Set the x-axis label\nax.set_xlabel('Number of experts')\n\n# Set the y-axis label\nax.set_ylabel('DoN')\n\n# Create a scatter plot with the data\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8], [2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5], color='blue', label='Baseline')\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8], [2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5], color='green', label='SoftMoE')\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8], [2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5], color='pink', label='Top1-MoE')\n\n# Create a line plot with the data\nax.plot([1, 2, 3, 4, 5, 6, 7, 8], [2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5], color='blue')\nax.plot([1, 2, 3, 4, 5, 6, 7, 8], [2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5], color='green')\nax.plot([1, 2, 3, 4, 5, 6, 7, 8], [2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5, 2.5], color='pink')\n\n# Add a legend to the plot\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_26.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Test set TPR | FPR = 10^-4')\n\n# Set the x-axis label\nax.set_xlabel('Vocabulary size')\n\n# Set the y-axis label\nax.set_ylabel('TPR')\n\n# Define the data points for each curve\nx = [256, 512, 1024, 2048, 4096, 8192, 16384]\ny1 = [0.2, 0.4, 0.6, 0.8, 0.9, 0.95, 0.98]\ny2 = [0.3, 0.5, 0.7, 0.9, 0.95, 0.98, 0.99]\ny3 = [0.4, 0.6, 0.8, 0.95, 0.98, 0.99, 0.995]\ny4 = [0.5, 0.7, 0.9, 0.95, 0.98, 0.99, 0.995]\ny5 = [0.6, 0.8, 0.95, 0.98, 0.99, 0.995, 0.998]\n\n# Plot the curves\nax.plot(x, y1, 'b-', label='BPE')\nax.plot(x, y2, 'o-', label='Wordpunct')\nax.plot(x, y3, 'g-', label='Whitespace')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_27.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Word Error Rate vs Compression Rate')\n\n# Set the x-axis label\nax.set_xlabel('Compression Rate')\n\n# Set the y-axis label\nax.set_ylabel('Word Error Rate (%)')\n\n# Create a scatter plot for CNN\nax.scatter([1, 12, 24, 36, 48], [26.0, 30.2, 34.4, 38.6, 42.8], color='pink', label='CNN')\n\n# Create a scatter plot for CIF\nax.scatter([1, 12, 24, 36, 48], [27.9, 29.2, 31.4, 33.6, 35.8], color='purple', label='CIF')\n\n# Create a scatter plot for STAR\nax.scatter([1, 12, 24, 36, 48], [29.8, 32.0, 34.2, 36.4, 38.6], color='brown', label='STAR')\n\n# Create a line plot for CNN\nax.plot([1, 12, 24, 36, 48], [26.0, 30.2, 34.4, 38.6, 42.8], color='pink')\n\n# Create a line plot for CIF\nax.plot([1, 12, 24, 36, 48], [27.9, 29.2, 31.4, 33.6, 35.8], color='purple')\n\n# Create a line plot for STAR\nax.plot([1, 12, 24, 36, 48], [29.8, 32.0, 34.2, 36.4, 38.6], color='brown')\n\n# Add a legend to the plot\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_28.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nx = [25, 50, 75, 100, 125, 150, 175, 200]\ny1 = [0.95, 0.93, 0.92, 0.91, 0.90, 0.89, 0.88, 0.87]\ny2 = [0.94, 0.92, 0.91, 0.90, 0.89, 0.88, 0.87, 0.86]\ny3 = [0.93, 0.91, 0.90, 0.89, 0.88, 0.87, 0.86, 0.85]\n\n# Plot\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\nax.plot(x, y1, 'r-', label='PILOTE')\nax.plot(x, y2, 'b-', label='Re-trained model')\nax.plot(x, y3, 'g-', label='Pre-trained model accuracy')\n\n# Markers\nfor i in range(len(x)):\n    ax.plot(x[i], y1[i], 'ro')\n    ax.plot(x[i], y2[i], 'bo')\n    ax.plot(x[i], y3[i], 'go')\n\n# Legend\nax.legend()\n\n# Title and labels\nax.set_title('Model Accuracy over Number of Exemplars')\nax.set_xlabel('Number of exemplars in class \\'Run\\'')\nax.set_ylabel('Avg. accuracy of five rounds')\n\n# Grid\nax.grid(True)\n\n# Show plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_29.pdf", "response": "import matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(4.0, 3.0))\n\n# Set the title of the plot\nax.set_title('Average Fidelity Over Time')\n\n# Set the x-axis label\nax.set_xlabel('# of Steps')\n\n# Set the y-axis label\nax.set_ylabel('Average Fidelity')\n\n# Create a scatter plot with the data\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0], color='blue')\n\n# Add a legend to the plot\nax.legend(['xLLM', 'Single-Pass LLM'])\n\n# Set the y-axis limits\nax.set_ylim(0, 2)\n\n# Set the x-axis limits\nax.set_xlim(0, 20)\n\n# Set the y-axis ticks\nax.set_yticks([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0])\n\n# Set the x-axis ticks\nax.set_xticks([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1.0', '1.1', '1.2', '1.3', '1.4', '1.5', '1.6', '1.7', '1.8', '1.9', '2.0'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20'])\n\n# Set the y-axis grid lines\nax.grid(axis='y')\n\n# Set the x-axis grid lines\nax.grid(axis='x')\n\n# Set the y-axis tick marks\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick marks\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10)\n\n# Set the y-axis tick mark labels\nax.yaxis.set_tick_params(labelsize=10)\n\n# Set the x-axis tick mark labels\nax.xaxis.set_tick_params(labelsize=10"}
{"file": "dataset/ori_500/line_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the plot\nax.set_title('Player Performance')\n\n# Set the x-axis label\nax.set_xlabel('Players')\n\n# Set the y-axis label\nax.set_ylabel('Hits')\n\n# Define the players\nplayers = ['All', 'MLP', 'GCF', 'NCN', 'NC', 'NEOGNN-BUDDY', 'SEAL', 'Node2Vec']\n\n# Define the hits for each player\nhits = [75, 80, 75, 70, 65, 60, 55, 50]\n\n# Plot the hits for each player\nfor i in range(len(players)):\n    ax.plot([i], [hits[i]], 'ro')  # 'ro' means red circle\n\n# Set the x-ticks to be the players\nax.set_xticks(range(len(players)))\nax.set_xticklabels(players)\n\n# Set the y-ticks to be the hits\nax.set_yticks(range(40, 90, 10))\n\n# Set the y-limits to be between 40 and 90\nax.set_ylim(40, 90)\n\n# Set the x-limits to be between 0 and 7\nax.set_xlim(0, 7)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_30.pdf", "response": "import matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Android')\n\n# Set the x-axis label\nax.set_xlabel('Layer')\n\n# Set the y-axis label\nax.set_ylabel('Value')\n\n# Create a scatter plot with blue dots for 'outside-code-diff' and orange dots for 'inside-code-diff'\nax.scatter([2, 4, 6, 8, 10, 12], [0.05, 0.05, 0.05, 0.05, 0.05, 0.05], color='blue', label='outside-code-diff')\nax.scatter([2, 4, 6, 8, 10, 12], [0.04, 0.04, 0.04, 0.04, 0.04, 0.04], color='orange', label='inside-code-diff')\n\n# Create a line plot with orange lines for 'outside-code-diff' and blue lines for 'inside-code-diff'\nax.plot([2, 4, 6, 8, 10, 12], [0.05, 0.05, 0.05, 0.05, 0.05, 0.05], color='orange')\nax.plot([2, 4, 6, 8, 10, 12], [0.04, 0.04, 0.04, 0.04, 0.04, 0.04], color='blue')\n\n# Add a legend to the plot\nax.legend()\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/line_31.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(6, 9)\n\n# Set the y-axis limits\nax.set_ylim(0.3, 10)\n\n# Set the x-axis label\nax.set_xlabel('Digit Length')\n\n# Set the y-axis label\nax.set_ylabel('Digit Accuracy')\n\n# Plot the data\nax.plot([6, 7, 8, 9], [0.5, 0.7, 0.8, 0.9], 'b-')\nax.plot([6, 7, 8, 9], [0.4, 0.6, 0.7, 0.8], 'g-')\nax.plot([6, 7, 8, 9], [0.3, 0.5, 0.6, 0.7], 'r-')\nax.plot([6, 7, 8, 9], [0.2, 0.4, 0.5, 0.6], 'y-')\nax.plot([6, 7, 8, 9], [0.1, 0.3, 0.4, 0.5], 'c-')\nax.plot([6, 7, 8, 9], [0.0, 0.2, 0.3, 0.4], 'm-')\n\n# Add a legend\nax.legend(['Direct (100 samples)', 'RFFT (100 samples)', 'Scratchpad (100 samples)', 'Scratchpad (5000 samples)'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_32.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('CIFAR100 States Zero Shot Accuracy')\n\n# Set the x-axis label\nax.set_xlabel('Decomposition IO Norm')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Set the x-axis limits\nax.set_xlim(0, 80)\n\n# Set the y-axis limits\nax.set_ylim(0.2, 0.4)\n\n# Set the x-axis ticks\nax.set_xticks([0, 20, 40, 60, 80])\n\n# Set the y-axis ticks\nax.set_yticks([0.2, 0.3, 0.4])\n\n# Draw a horizontal line at y=0.35\nax.axhline(y=0.35, color='black', linestyle='-')\n\n# Draw a vertical line at x=40\nax.axvline(x=40, color='black', linestyle='-')\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a red center\ncircle = plt.Circle((40, 0.35), 10, color='red')\nax.add_artist(circle)\n\n# Draw a rectangle with a blue border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='blue'))\n\n# Draw a circle with a green center\ncircle = plt.Circle((40, 0.35), 10, color='green')\nax.add_artist(circle)\n\n# Draw a rectangle with a yellow border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='yellow'))\n\n# Draw a circle with a purple center\ncircle = plt.Circle((40, 0.35), 10, color='purple')\nax.add_artist(circle)\n\n# Draw a rectangle with a orange border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='orange'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a gray border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='gray'))\n\n# Draw a circle with a white center\ncircle = plt.Circle((40, 0.35), 10, color='white')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax.add_patch(plt.Rectangle((0, 0), 80, 0.4, fill=False, edgecolor='black'))\n\n# Draw a circle with a black center\ncircle = plt.Circle((40, 0.35), 10, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a black border\nax"}
{"file": "dataset/ori_500/line_33.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data\nx = [20, 30, 40, 50, 60, 70, 80, 90, 100]\ny1 = [0.55, 0.60, 0.65, 0.70, 0.75, 0.80, 0.85, 0.90, 0.95]\ny2 = [0.50, 0.55, 0.60, 0.65, 0.70, 0.75, 0.80, 0.85, 0.90]\ny3 = [0.45, 0.50, 0.55, 0.60, 0.65, 0.70, 0.75, 0.80, 0.85]\n\n# Create the plot\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\nax.plot(x, y1, 'r-', label='CNN')\nax.plot(x, y2, 'g-', label='CNN+HMM')\nax.plot(x, y3, 'b-', label='RF+HMM')\n\n# Add markers\nax.plot(20, 0.55, 'ro')\nax.plot(30, 0.60, 'go')\nax.plot(40, 0.65, 'bo')\nax.plot(50, 0.70, 'ro')\nax.plot(60, 0.75, 'go')\nax.plot(70, 0.80, 'bo')\nax.plot(80, 0.85, 'ro')\nax.plot(90, 0.90, 'go')\nax.plot(100, 0.95, 'bo')\n\n# Add labels and title\nax.set_xlabel('No. of Users in Development Set')\nax.set_ylabel('F1')\nax.set_title('Performance of Different Models')\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_34.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nx = [2, 3, 4, 5, 6, 7, 8]\ny1 = [27.44, 24.75, 23.38, 22.77, 22.32, 21.47, 21.51]\ny2 = [6.74, 4.54, 3.96, 3.71, 3.49, 3.34, 3.15]\n\n# Plot\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\nax.plot(x, y1, 'o-', color='orange', label='WER (%)')\nax.plot(x, y2, 'o-', color='blue', label='AMI (%)')\n\n# Set title and labels\nax.set_title('Microphone Performance Metrics')\nax.set_xlabel('Number of microphones')\nax.set_ylabel('Performance (%)')\n\n# Add legend\nax.legend()\n\n# Show plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_35.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the x-axis limits\nax.set_xlim(10**-7, 10**4)\n\n# Set the y-axis limits\nax.set_ylim(0, 7)\n\n# Set the x-axis label\nax.set_xlabel('Quantization error')\n\n# Set the y-axis label\nax.set_ylabel('Window size')\n\n# Set the title of the plot\nax.set_title('Quantization error vs Window size')\n\n# Define the data points for the plot\nx = np.logspace(-7, 4, 100)\ny = np.sin(x)\n\n# Plot the data points\nax.plot(x, y, 'b-', label='empirical relat. (B2=8.0)')\n\n# Add a legend to the plot\nax.legend()\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_36.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(3, 3, figsize=(15, 5))\n\n# Set the title for each subplot\naxs[0, 0].set_title('SPMotif-0.5')\naxs[0, 1].set_title('SPMotif-0.7')\naxs[0, 2].set_title('SPMotif-0.9')\n\n# Create a rectangle patch for the logo\nlogo = plt.Rectangle((0.05, 0.85), 0.1, 0.1, color='blue')\naxs[0, 0].add_patch(logo)\naxs[0, 1].add_patch(logo)\naxs[0, 2].add_patch(logo)\n\n# Create a rectangle patch for the social media icons\nsocial_media = plt.Rectangle((0.05, 0.05), 0.1, 0.1, color='red')\naxs[0, 0].add_patch(social_media)\naxs[0, 1].add_patch(social_media)\naxs[0, 2].add_patch(social_media)\n\n# Create a rectangle patch for the performance graph\nperformance = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='orange')\naxs[0, 0].add_patch(performance)\naxs[0, 1].add_patch(performance)\naxs[0, 2].add_patch(performance)\n\n# Create a rectangle patch for the market share graph\nmarket_share = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='purple')\naxs[1, 0].add_patch(market_share)\naxs[1, 1].add_patch(market_share)\naxs[1, 2].add_patch(market_share)\n\n# Create a rectangle patch for the sentiment analysis graph\nsentiment_analysis = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='green')\naxs[2, 0].add_patch(sentiment_analysis)\naxs[2, 1].add_patch(sentiment_analysis)\naxs[2, 2].add_patch(sentiment_analysis)\n\n# Add text to the plots\naxs[0, 0].text(0.5, 0.5, 'PNA + ours', horizontalalignment='center', verticalalignment='center', transform=axs[0, 0].transAxes, fontsize=12)\naxs[0, 1].text(0.5, 0.5, 'GIN + ours', horizontalalignment='center', verticalalignment='center', transform=axs[0, 1].transAxes, fontsize=12)\naxs[0, 2].text(0.5, 0.5, 'PNA + ours', horizontalalignment='center', verticalalignment='center', transform=axs[0, 2].transAxes, fontsize=12)\naxs[1, 0].text(0.5, 0.5, 'GIN + ours', horizontalalignment='center', verticalalignment='center', transform=axs[1, 0].transAxes, fontsize=12)\naxs[1, 1].text(0.5, 0.5, 'PNA + ours', horizontalalignment='center', verticalalignment='center', transform=axs[1, 1].transAxes, fontsize=12)\naxs[1, 2].text(0.5, 0.5, 'GIN + ours', horizontalalignment='center', verticalalignment='center', transform=axs[1, 2].transAxes, fontsize=12)\naxs[2, 0].text(0.5, 0.5, 'PNA + ours', horizontalalignment='center', verticalalignment='center', transform=axs[2, 0].transAxes, fontsize=12)\naxs[2, 1].text(0.5, 0.5, 'GIN + ours', horizontalalignment='center', verticalalignment='center', transform=axs[2, 1].transAxes, fontsize=12)\naxs[2, 2].text(0.5, 0.5, 'PNA + ours', horizontalalignment='center', verticalalignment='center', transform=axs[2, 2].transAxes, fontsize=12)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_37.pdf", "response": "import matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Model Accuracy')\n\n# Set the x-axis label\nax.set_xlabel('Ensemble Size')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy')\n\n# Create a scatter plot with the data\nax.scatter([6, 9, 12, 18, 24, 30], [75.5, 76.5, 77.5, 78.5, 79.5, 80.5], color='blue')\n\n# Create a line plot with the data\nax.plot([6, 9, 12, 18, 24, 30], [75.5, 76.5, 77.5, 78.5, 79.5, 80.5], color='red')\n\n# Set the x-axis limits\nax.set_xlim(5, 35)\n\n# Set the y-axis limits\nax.set_ylim(74, 81)\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/line_38.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 3.0))\n\n# Define the data for the plots\nx = [3, 5, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100]\ny1 = [0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0, 0.1, 0.2, 0.3]\ny2 = [0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0, 0.1, 0.2, 0.3, 0.4]\ny3 = [0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0, 0.1, 0.2, 0.3, 0.4, 0.5]\n\n# Plot the data\nax.plot(x, y1, 'r-', label='GPT-Neo')\nax.plot(x, y2, 'g-', label='BERT')\nax.plot(x, y3, 'b-', label='RoBERTa')\n\n# Add labels and title\nax.set_xlabel('Number of Epochs')\nax.set_ylabel('Loss')\nax.set_title('Training Loss Over Time')\n\n# Add legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_39.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(15, 4))\n\n# Set the title of the graph\nax.set_title('Stock Market')\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Price')\n\n# Set the x-axis ticks\nax.set_xticks([96, 192, 336, 512, 720])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['pred_length=96', 'pred_length=192', 'pred_length=336', 'pred_length=512', 'pred_length=720'])\n\n# Set the y-axis limits\nax.set_ylim(0.06, 0.45)\n\n# Set the y-axis tick labels\nax.set_yticks([0.08, 0.12, 0.16, 0.20, 0.24, 0.28, 0.32, 0.36, 0.40, 0.44])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.08', '0.12', '0.16', '0.20', '0.24', '0.28', '0.32', '0.36', '0.40', '0.44'])\n\n# Set the color of the x-axis ticks\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis ticks\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis labels\nax.xaxis.label.set_color('green')\n\n# Set the color of the y-axis labels\nax.yaxis.label.set_color('orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color of the y-axis grid lines\nax.yaxis.grid(True, color='grey')\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', labelcolor='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', labelcolor='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', colors='green')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', colors='orange')\n\n# Set the color of the x-axis grid lines\nax.xaxis.grid(True, color='grey')\n\n# Set the color"}
{"file": "dataset/ori_500/line_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Serial (n=8, m=1)')\n\n# Create a scatter plot with orange dots\nax.scatter([224, 128, 64, 32], [70, 60, 50, 40], color='orange')\n\n# Create a line plot with orange lines\nax.plot([224, 128, 64, 32], [70, 60, 50, 40], color='orange')\n\n# Add text annotations\nax.annotate('ImageNet-1k', xy=(224, 70), xytext=(224, 75),\n            arrowprops=dict(facecolor='black', shrink=0.05))\nax.annotate('ImageNet-C/P (Fog)', xy=(32, 40), xytext=(32, 35),\n            arrowprops=dict(facecolor='black', shrink=0.05))\n\n# Set the x-axis and y-axis limits\nax.set_xlim(200, 350)\nax.set_ylim(0, 80)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('Year')\nax.set_ylabel('Top-1 Acc.')\n\n# Create a second subplot\nax2 = fig.add_subplot(122)\n\n# Set the title of the plot\nax2.set_title('Parallel (n=2, m=4)')\n\n# Create a scatter plot with blue dots\nax2.scatter([224, 128, 64, 32], [80, 70, 60, 50], color='blue')\n\n# Create a line plot with blue lines\nax2.plot([224, 128, 64, 32], [80, 70, 60, 50], color='blue')\n\n# Add text annotations\nax2.annotate('ImageNet-1k', xy=(224, 80), xytext=(224, 85),\n             arrowprops=dict(facecolor='black', shrink=0.05))\nax2.annotate('ImageNet-C/P (Fog)', xy=(32, 50), xytext=(32, 45),\n             arrowprops=dict(facecolor='black', shrink=0.05))\n\n# Set the x-axis and y-axis limits\nax2.set_xlim(200, 350)\nax2.set_ylim(0, 80)\n\n# Set the x-axis and y-axis labels\nax2.set_xlabel('Year')\nax2.set_ylabel('Top-1 Acc.')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_40.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Deep Learning Model Performance')\n\n# Set the x-axis label\nax.set_xlabel('SNR')\n\n# Set the y-axis label\nax.set_ylabel('Classification Accuracy (%)')\n\n# Set the x-axis ticks\nax.set_xticks([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25])\n\n# Set the y-axis ticks\nax.set_yticks([20, 40, 60, 80, 100])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['5.0', '7.5', '10.0', '12.5', '15.0', '17.5', '20.0', '22.5', '25.0'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['20%', '40%', '60%', '80%', '100%'])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the text\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\nax.title.set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='x', colors='black')\nax.tick_params(axis='y', colors='black')\n\n# Set the color of the legend\nax.legend(facecolor='white', edgecolor='black')\n\n# Set the color of the data points\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [90, 85, 80, 75, 70, 65, 60, 55, 50], 'ro-', label='OURS')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [85, 80, 75, 70, 65, 60, 55, 50, 45], 'go-', label='DEEPJSCC w/o OFDM')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [80, 75, 70, 65, 60, 55, 50, 45, 40], 'bo-', label='DEEPJSCC w/ OFDM')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [75, 70, 65, 60, 55, 50, 45, 40, 35], 'ro-', label='JPEG+LDPC')\n\n# Set the color of the legend\nax.legend(facecolor='white', edgecolor='black')\n\n# Set the color of the data points\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [90, 85, 80, 75, 70, 65, 60, 55, 50], 'ro-', label='OURS')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [85, 80, 75, 70, 65, 60, 55, 50, 45], 'go-', label='DEEPJSCC w/o OFDM')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [80, 75, 70, 65, 60, 55, 50, 45, 40], 'bo-', label='DEEPJSCC w/ OFDM')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [75, 70, 65, 60, 55, 50, 45, 40, 35], 'ro-', label='JPEG+LDPC')\n\n# Set the color of the legend\nax.legend(facecolor='white', edgecolor='black')\n\n# Set the color of the data points\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [90, 85, 80, 75, 70, 65, 60, 55, 50], 'ro-', label='OURS')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [85, 80, 75, 70, 65, 60, 55, 50, 45], 'go-', label='DEEPJSCC w/o OFDM')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [80, 75, 70, 65, 60, 55, 50, 45, 40], 'bo-', label='DEEPJSCC w/ OFDM')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [75, 70, 65, 60, 55, 50, 45, 40, 35], 'ro-', label='JPEG+LDPC')\n\n# Set the color of the legend\nax.legend(facecolor='white', edgecolor='black')\n\n# Set the color of the data points\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [90, 85, 80, 75, 70, 65, 60, 55, 50], 'ro-', label='OURS')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [85, 80, 75, 70, 65, 60, 55, 50, 45], 'go-', label='DEEPJSCC w/o OFDM')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [80, 75, 70, 65, 60, 55, 50, 45, 40], 'bo-', label='DEEPJSCC w/ OFDM')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [75, 70, 65, 60, 55, 50, 45, 40, 35], 'ro-', label='JPEG+LDPC')\n\n# Set the color of the legend\nax.legend(facecolor='white', edgecolor='black')\n\n# Set the color of the data points\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [90, 85, 80, 75, 70, 65, 60, 55, 50], 'ro-', label='OURS')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [85, 80, 75, 70, 65, 60, 55, 50, 45], 'go-', label='DEEPJSCC w/o OFDM')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [80, 75, 70, 65, 60, 55, 50, 45, 40], 'bo-', label='DEEPJSCC w/ OFDM')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [75, 70, 65, 60, 55, 50, 45, 40, 35], 'ro-', label='JPEG+LDPC')\n\n# Set the color of the legend\nax.legend(facecolor='white', edgecolor='black')\n\n# Set the color of the data points\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [90, 85, 80, 75, 70, 65, 60, 55, 50], 'ro-', label='OURS')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [85, 80, 75, 70, 65, 60, 55, 50, 45], 'go-', label='DEEPJSCC w/o OFDM')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [80, 75, 70, 65, 60, 55, 50, 45, 40], 'bo-', label='DEEPJSCC w/ OFDM')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [75, 70, 65, 60, 55, 50, 45, 40, 35], 'ro-', label='JPEG+LDPC')\n\n# Set the color of the legend\nax.legend(facecolor='white', edgecolor='black')\n\n# Set the color of the data points\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [90, 85, 80, 75, 70, 65, 60, 55, 50], 'ro-', label='OURS')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [85, 80, 75, 70, 65, 60, 55, 50, 45], 'go-', label='DEEPJSCC w/o OFDM')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [80, 75, 70, 65, 60, 55, 50, 45, 40], 'bo-', label='DEEPJSCC w/ OFDM')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [75, 70, 65, 60, 55, 50, 45, 40, 35], 'ro-', label='JPEG+LDPC')\n\n# Set the color of the legend\nax.legend(facecolor='white', edgecolor='black')\n\n# Set the color of the data points\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [90, 85, 80, 75, 70, 65, 60, 55, 50], 'ro-', label='OURS')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [85, 80, 75, 70, 65, 60, 55, 50, 45], 'go-', label='DEEPJSCC w/o OFDM')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [80, 75, 70, 65, 60, 55, 50, 45, 40], 'bo-', label='DEEPJSCC w/ OFDM')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [75, 70, 65, 60, 55, 50, 45, 40, 35], 'ro-', label='JPEG+LDPC')\n\n# Set the color of the legend\nax.legend(facecolor='white', edgecolor='black')\n\n# Set the color of the data points\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [90, 85, 80, 75, 70, 65, 60, 55, 50], 'ro-', label='OURS')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [85, 80, 75, 70, 65, 60, 55, 50, 45], 'go-', label='DEEPJSCC w/o OFDM')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [80, 75, 70, 65, 60, 55, 50, 45, 40], 'bo-', label='DEEPJSCC w/ OFDM')\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [75, 70, 65, 60, 55, 50, 45, 40, 35], 'ro-', label='JPEG+LDPC')\n\n# Set the color of the legend\nax.legend(facecolor='white', edgecolor='black')\n\n# Set the color of the data points\nax.plot([5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25], [90, 85, 80, 75, 70, 65, 60, 55, 50"}
{"file": "dataset/ori_500/line_41.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Performance Metrics')\n\n# Set the x-axis label\nax.set_xlabel('Gradient Steps (x62.5K)')\n\n# Set the y-axis label\nax.set_ylabel('Performance Value')\n\n# Plot the data\nax.plot([0, 100, 200], [1, 2, 3], 'r-')\nax.plot([0, 100, 200], [2, 3, 4], 'b-')\nax.plot([0, 100, 200], [3, 4, 5], 'g-')\nax.plot([0, 100, 200], [4, 5, 6], 'y-')\n\n# Add a legend\nax.legend(['Line 1 (Sinusoidal)', 'Line 2 (Quadratic)', 'Line 3 (Random Noise)', 'Line 4 (Exponential Focus)'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_42.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(10, 5))\n\n# Plot the data for the first subplot\nx = np.linspace(0, 200, 100)\ny1 = np.sin(x/10)\ny2 = np.cos(x/10)\ny3 = np.tan(x/10)\nax1.plot(x, y1, 'o-', label='Line 1')\nax1.plot(x, y2, 'b-', label='Line 2')\nax1.plot(x, y3, 'g-', label='Line 3')\nax1.set_xlabel('Gradient Steps (x 62.5K)')\nax1.set_ylabel('Polynomial Value')\nax1.legend()\n\n# Plot the data for the second subplot\nx = np.linspace(0, 200, 100)\ny1 = np.sin(x/10)\ny2 = np.cos(x/10)\ny3 = np.tan(x/10)\nax2.plot(x, y1, 'r-', label='Line 1')\nax2.plot(x, y2, 'g-', label='Line 2')\nax2.plot(x, y3, 'b-', label='Line 3')\nax2.set_xlabel('Gradient Steps (x 62.5K)')\nax2.set_ylabel('Polynomial Value')\nax2.legend()\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_43.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 5.0))\n\n# Set the title of the graph\nax.set_title('ogbl-collab Results')\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Results')\n\n# Create a list of teams\nteams = ['ALL', 'MPL', 'GCN', 'NCN', 'NEOGNN-BUDDY', 'Node2Vec']\n\n# Create a list of results\nresults = [70, 68, 65, 63, 61, 59]\n\n# Plot the results\nfor i in range(len(teams)):\n    ax.plot(results, 'o-', label=teams[i])\n\n# Add a legend\nax.legend()\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_44.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the grid lines\nax.grid(True)\n\n# Set the x-axis and y-axis limits\nax.set_xlim(10, 60)\nax.set_ylim(10**-14, 10**-12)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('N')\nax.set_ylabel('Precision')\n\n# Plot the data\nax.plot([10, 20, 30, 40, 50, 60], [10**-12, 10**-12, 10**-12, 10**-12, 10**-12, 10**-12], 'b-')\nax.plot([10, 20, 30, 40, 50, 60], [10**-12, 10**-12, 10**-12, 10**-12, 10**-12, 10**-12], 'r-')\nax.plot([10, 20, 30, 40, 50, 60], [10**-12, 10**-12, 10**-12, 10**-12, 10**-12, 10**-12], 'g-')\nax.plot([10, 20, 30, 40, 50, 60], [10**-12, 10**-12, 10**-12, 10**-12, 10**-12, 10**-12], 'm-')\n\n# Add a legend\nax.legend(['Standard', 'Constrained', 'Experimental', 'Hypothetical'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_45.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis for the first graph\nfig1, ax1 = plt.subplots(figsize=(12, 8))\nax1.plot([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 'b-')\nax1.set_title('Graph Variation 1')\nax1.set_xlabel('N')\nax1.set_ylabel('Peak Performance')\n\n# Create a figure and axis for the second graph\nfig2, ax2 = plt.subplots(figsize=(12, 8))\nax2.plot([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 'g-')\nax2.set_title('Graph Variation 2')\nax2.set_xlabel('N')\nax2.set_ylabel('Peak Performance')\n\n# Create a figure and axis for the third graph\nfig3, ax3 = plt.subplots(figsize=(12, 8))\nax3.plot([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 'r-')\nax3.set_title('Graph Variation 3')\nax3.set_xlabel('N')\nax3.set_ylabel('Peak Performance')\n\n# Create a figure and axis for the fourth graph\nfig4, ax4 = plt.subplots(figsize=(12, 8))\nax4.plot([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 'y-')\nax4.set_title('Graph Variation 4')\nax4.set_xlabel('N')\nax4.set_ylabel('Peak Performance')\n\n# Display the plots\nplt.show()\n```"}
{"file": "dataset/ori_500/line_46.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis for the first graph\nfig, ax = plt.subplots(figsize=(6.0, 10.0))\nax.plot([0, 5, 10, 15, 20, 25], [1.5, 1.0, 0.5, 0.0, -0.5, -1.0], 'b-')\nax.set_title('Daytime Activity Monitoring')\nax.set_xlabel('Time (Hours)')\nax.set_ylabel('Activity Level')\n\n# Create a second figure and axis for the second graph\nfig, ax = plt.subplots(figsize=(6.0, 10.0))\nax.plot([0, 5, 10, 15, 20, 25], [1.5, 1.0, 0.5, 0.0, -0.5, -1.0], 'r-')\nax.set_title('Nighttime Activity Monitoring')\nax.set_xlabel('Time (Hours)')\nax.set_ylabel('Activity Level')\nplt.show()\n```"}
{"file": "dataset/ori_500/line_47.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Comparative Performance Analysis Over Time')\n\n# Create a color bar for the legend\ncbar = fig.colorbar(ax.imshow(np.random.rand(10, 10), cmap='Blues'))\n\n# Add a color bar to the plot\ncbar.set_label('Performance Index')\n\n# Set the x-axis label\nax.set_xlabel('Time (Months)')\n\n# Set the y-axis label\nax.set_ylabel('Performance Index')\n\n# Set the x-ticks\nax.set_xticks([0, 2, 4, 6, 8, 10, 12])\n\n# Set the y-ticks\nax.set_yticks([0, 2, 4, 6, 8, 10])\n\n# Set the x-tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis limits\nax.set_xlim([0, 12])\n\n# Set the y-axis limits\nax.set_ylim([0, 10])\n\n# Set the x-axis grid lines\nax.grid(True)\n\n# Set the y-axis grid lines\nax.grid(True)\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4', '6', '8', '10'])\n\n# Set the x-axis tick marks\nax.tick_params(axis='x', which='both', bottom=False, top=False, labelbottom=True)\n\n# Set the y-axis tick marks\nax.tick_params(axis='y', which='both', left=False, right=False, labelleft=True)\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '2', '4', '6', '8', '10', '12'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0', '2', '4"}
{"file": "dataset/ori_500/line_48.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Sales and Temperature Correlation Over a Year')\n\n# Set the x-axis label\nax.set_xlabel('Month')\n\n# Set the y-axis label\nax.set_ylabel('Temperature (\u00b0C)')\n\n# Set the x-ticks\nax.set_xticks([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])\n\n# Set the y-ticks\nax.set_yticks(range(800, 1600, 100))\n\n# Set the x-tick labels\nax.set_xticklabels(['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'])\n\n# Set the y-tick labels\nax.set_yticklabels(range(800, 1600, 100))\n\n# Create a scatter plot for sales data\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1200, 1100, 1000, 900, 800, 700, 600, 500, 400, 300, 200, 100], color='blue')\n\n# Create a scatter plot for temperature data\nax.scatter([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42], color='red')\n\n# Create a line plot for sales data\nax.plot([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [1200, 1100, 1000, 900, 800, 700, 600, 500, 400, 300, 200, 100], color='blue')\n\n# Create a line plot for temperature data\nax.plot([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12], [20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42], color='red')\n\n# Add a legend\nax.legend(['Monthly Sales', 'Average Temperature'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_49.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 9.0))\n\n# Set the title of the plot\nax.set_title('Exponential Growth Over Time')\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Value')\n\n# Set the x-axis limits\nax.set_xlim(0, 10)\n\n# Set the y-axis limits\nax.set_ylim(-2, 14)\n\n# Set the grid lines\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--"}
{"file": "dataset/ori_500/line_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Define the data for the plots\nx = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\ny1 = [0.5, 0.6, 0.7, 0.8, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4]\ny2 = [0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.8, 0.7, 0.6]\ny3 = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.8]\n\n# Plot the data\nax.plot(x, y1, 'b--', label='5-shot direct')\nax.plot(x, y2, 'o-', label='5-shot scratchpad')\nax.plot(x, y3, '^:', label='5-shot rule-following')\n\n# Add labels and title\nax.set_xlabel('Digit Length')\nax.set_ylabel('Accuracy')\nax.set_title('Comparison of 5-shot methods')\n\n# Add legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_50.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(5.0, 10.0))\n\n# Set the title of the plot\nax.set_title('Smoothed Representation')\n\n# Create a scatter plot with the data\nax.scatter([2, 4, 6, 8, 10, 12, 14, 16, 18], [0.3, 0.2, 0.1, 0.2, 0.3, 0.2, 0.1, 0.2, 0.3], color='purple', label='Smoothed Data')\n\n# Add a legend to the plot\nax.legend()\n\n# Set the x-axis and y-axis limits\nax.set_xlim(0, 20)\nax.set_ylim(-1, 1)\n\n# Create a second subplot\nax2 = fig.add_subplot(212)\n\n# Set the title of the second subplot\nax2.set_title('First Difference of Data')\n\n# Create a scatter plot with the data\nax2.scatter([2, 4, 6, 8, 10, 12, 14, 16, 18], [100, 90, 80, 70, 60, 50, 40, 30, 20], color='orange', label='Difference Data')\n\n# Add a legend to the second subplot\nax2.legend()\n\n# Set the x-axis and y-axis limits\nax2.set_xlim(0, 20)\nax2.set_ylim(-10, 110)\n\n# Create a third subplot\nax3 = fig.add_subplot(213)\n\n# Set the title of the third subplot\nax3.set_title('Cumulative Sum Over Time')\n\n# Create a scatter plot with the data\nax3.scatter([2, 4, 6, 8, 10, 12, 14, 16, 18], [25, 20, 15, 10, 5, 0, 5, 10, 15], color='green', label='Cumulative Sum')\n\n# Add a legend to the third subplot\nax3.legend()\n\n# Set the x-axis and y-axis limits\nax3.set_xlim(0, 20)\nax3.set_ylim(-1, 26)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_51.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 12.0))\n\n# Set the title of the plot\nax.set_title('Sinusoidal Pattern')\n\n# Create a sine wave with amplitude 1.5\nx = np.linspace(0, 10, 100)\ny = 1.5 * np.sin(x)\nax.plot(x, y, 'm-')  # 'm-' means magenta color and solid line\n\n# Set the x-axis label\nax.set_xlabel('Time')\n\n# Set the y-axis label\nax.set_ylabel('Amplitude')\n\n# Set the y-axis limits\nax.set_ylim(-1.5, 1.5)\n\n# Set the x-axis limits\nax.set_xlim(0, 10)\n\n# Create a second subplot for the Cosine Pattern\nfig, ax = plt.subplots(figsize=(6.0, 12.0))\nax.set_title('Cosine Pattern')\nx = np.linspace(0, 10, 100)\ny = 1.5 * np.cos(x)\nax.plot(x, y, 'g-')  # 'g-' means green color and solid line\nax.set_xlabel('Time')\nax.set_ylabel('Amplitude')\nax.set_ylim(-1.5, 1.5)\nax.set_xlim(0, 10)\n\n# Create a third subplot for the Exponential Decay\nfig, ax = plt.subplots(figsize=(6.0, 12.0))\nax.set_title('Exponential Decay')\nx = np.linspace(0, 10, 100)\ny = 1.5 * np.exp(-0.1 * x)\nax.plot(x, y, 'b-')  # 'b-' means blue color and solid line\nax.set_xlabel('Time')\nax.set_ylabel('Value')\nax.set_ylim(-0.2, 1.5)\nax.set_xlim(0, 10)\n\n# Create a fourth subplot for the Logarithmic Growth\nfig, ax = plt.subplots(figsize=(6.0, 12.0))\nax.set_title('Logarithmic Growth')\nx = np.linspace(0, 10, 100)\ny = 1.5 * np.log(x + 1)\nax.plot(x, y, 'r-')  # 'r-' means red color and solid line\nax.set_xlabel('Time')\nax.set_ylabel('Value')\nax.set_ylim(-0.5, 2.5)\nax.set_xlim(0, 10)\n```"}
{"file": "dataset/ori_500/line_52.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Plot the data\nax.plot([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], [75, 76, 77, 78, 79, 80, 81, 82, 83, 84], 'b-')\nax.plot([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0], [75, 76, 77, 78, 79, 80, 81, 82, 83, 84], 'ro')\n\n# Set the title and labels\nax.set_title('Positive bound')\nax.set_xlabel('Time (s)')\nax.set_ylabel('Weight (kg)')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_53.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Positive Bound')\n\n# Plot the data\nax.plot([0.1, 0.2, 0.3, 0.4], [79, 76, 75, 75], 'ro-')\n\n# Set the x-axis label\nax.set_xlabel('Time (s)')\n\n# Set the y-axis label\nax.set_ylabel('Temperature (\u00b0C)')\n\n# Add a legend\nax.legend(['Positive Bound'])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_54.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 3, figsize=(12, 4))\n\n# Define the data for each subplot\ndata = [\n    (np.array([1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1]), 'Passive', 'Red'),\n    (np.array([1.4, 1.3, 1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3]), 'Rain', 'Blue'),\n    (np.array([1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1]), 'Snow', 'Green'),\n    (np.array([1.4, 1.3, 1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3]), 'Fog', 'Yellow'),\n    (np.array([1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1]), 'Wind', 'Purple'),\n    (np.array([1.4, 1.3, 1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3]), 'Sun', 'Orange'),\n    (np.array([1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1]), 'Cloud', 'Black'),\n    (np.array([1.4, 1.3, 1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3]), 'Rain', 'Red'),\n    (np.array([1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1]), 'Snow', 'Blue'),\n    (np.array([1.4, 1.3, 1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3]), 'Fog', 'Green'),\n    (np.array([1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1]), 'Wind', 'Yellow'),\n    (np.array([1.4, 1.3, 1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3]), 'Sun', 'Purple'),\n    (np.array([1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1]), 'Cloud', 'Orange')\n]\n\n# Plot the data\nfor i, (y, x, c) in enumerate(data):\n    axs[i % 3].plot(y, label=x, color=c)\n    axs[i % 3].set_title('Relaxation Level')\n    axs[i % 3].legend()\n    axs[i % 3].set_xlabel('Time')\n    axs[i % 3].set_ylabel('Relaxation Level')\n\n# Add a legend to the first subplot\naxs[0].legend()\n\n# Add a title to the first subplot\naxs[0].set_title('Dry vs Rain')\n\n# Add a title to the second subplot\naxs[1].set_title('Snow vs Fog')\n\n# Add a title to the third subplot\naxs[2].set_title('Rain vs Snow')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_55.pdf", "response": "import matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 3.0))\n\n# Set the title of the plot\nax.set_title('Dynamic Performance Gain Across Different n_aug Levels')\n\n# Set the x-axis label\nax.set_xlabel('n_aug')\n\n# Set the y-axis label\nax.set_ylabel('Performance Gain (%)')\n\n# Create a list of n_aug values\nn_aug_values = [0, 1, 2, 3, 4, 5, 6, 7, 8]\n\n# Create a list of performance gain values\nperformance_gain_values = [2, 4, 6, 8, 7, 5, 3, 1, 0]\n\n# Plot the data\nax.plot(n_aug_values, performance_gain_values, 'b-')\n\n# Add markers at each data point\nfor i, v in enumerate(performance_gain_values):\n    ax.text(i, v, str(v), color='blue', fontweight='bold')\n\n# Create a list of content values\ncontent_values = [2, 4, 6, 8, 7, 5, 3, 1, 0]\n\n# Plot the data\nax.plot(n_aug_values, content_values, 'r-')\n\n# Add markers at each data point\nfor i, v in enumerate(content_values):\n    ax.text(i, v, str(v), color='red', fontweight='bold')\n\n# Create a list of organization values\norganization_values = [2, 4, 6, 8, 7, 5, 3, 1, 0]\n\n# Plot the data\nax.plot(n_aug_values, organization_values, 'g-')\n\n# Add markers at each data point\nfor i, v in enumerate(organization_values):\n    ax.text(i, v, str(v), color='green', fontweight='bold')\n\n# Create a list of language values\nlanguage_values = [2, 4, 6, 8, 7, 5, 3, 1, 0]\n\n# Plot the data\nax.plot(n_aug_values, language_values, 'y-')\n\n# Add markers at each data point\nfor i, v in enumerate(language_values):\n    ax.text(i, v, str(v), color='yellow', fontweight='bold')\n\n# Display the plot\nplt.show()"}
{"file": "dataset/ori_500/line_56.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 3, figsize=(9.0, 3.0))\n\n# Plot the first subplot\naxs[0].plot([0, 20, 40, 60, 80], [0.75, 0.70, 0.65, 0.60, 0.55], 'r-')\naxs[0].scatter([0, 20, 40, 60, 80], [0.75, 0.70, 0.65, 0.60, 0.55], color='red')\naxs[0].set_title('COCO 10K')\naxs[0].set_xlabel('Decomposition IO Norm')\naxs[0].set_ylabel('Accuracy')\n\n# Plot the second subplot\naxs[1].plot([0, 20, 40, 60, 80], [0.75, 0.70, 0.65, 0.60, 0.55], 'b-')\naxs[1].scatter([0, 20, 40, 60, 80], [0.75, 0.70, 0.65, 0.60, 0.55], color='blue')\naxs[1].set_title('LAION 10K')\naxs[1].set_xlabel('Decomposition IO Norm')\naxs[1].set_ylabel('Accuracy')\n\n# Plot the third subplot\naxs[2].plot([0, 20, 40, 60, 80], [0.75, 0.70, 0.65, 0.60, 0.55], 'g-')\naxs[2].scatter([0, 20, 40, 60, 80], [0.75, 0.70, 0.65, 0.60, 0.55], color='green')\naxs[2].set_title('COCO & LAION 5K')\naxs[2].set_xlabel('Decomposition IO Norm')\naxs[2].set_ylabel('Accuracy')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_57.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis for the first subplot\nfig1, ax1 = plt.subplots(figsize=(12, 9))\nax1.plot([0.025, 0.05, 0.075, 0.1, 0.125, 0.15, 0.175, 0.2], [0.18, 0.16, 0.14, 0.12, 0.1, 0.08, 0.06, 0.04], 'b-')\nax1.plot([0.025, 0.05, 0.075, 0.1, 0.125, 0.15, 0.175, 0.2], [0.18, 0.16, 0.14, 0.12, 0.1, 0.08, 0.06, 0.04], 'ro')\nax1.set_title('Error Rate vs. Learning Rate')\nax1.set_xlabel('Parameter Rate')\nax1.set_ylabel('Error Rate')\n\n# Create a figure and axis for the second subplot\nfig2, ax2 = plt.subplots(figsize=(12, 9))\nax2.plot([0.025, 0.05, 0.075, 0.1, 0.125, 0.15, 0.175, 0.2], [0.18, 0.16, 0.14, 0.12, 0.1, 0.08, 0.06, 0.04], 'r-')\nax2.plot([0.025, 0.05, 0.075, 0.1, 0.125, 0.15, 0.175, 0.2], [0.18, 0.16, 0.14, 0.12, 0.1, 0.08, 0.06, 0.04], 'bo')\nax2.set_title('Accuracy vs. Dropout')\nax2.set_xlabel('Parameter Rate')\nax2.set_ylabel('Accuracy')\n\n# Create a figure and axis for the third subplot\nfig3, ax3 = plt.subplots(figsize=(12, 9))\nax3.plot([0.025, 0.05, 0.075, 0.1, 0.125, 0.15, 0.175, 0.2], [0.18, 0.16, 0.14, 0.12, 0.1, 0.08, 0.06, 0.04], 'g-')\nax3.plot([0.025, 0.05, 0.075, 0.1, 0.125, 0.15, 0.175, 0.2], [0.18, 0.16, 0.14, 0.12, 0.1, 0.08, 0.06, 0.04], 'go')\nax3.set_title('Error Rate vs. Learning Rate')\nax3.set_xlabel('Parameter Rate')\nax3.set_ylabel('Error Rate')\n\n# Create a figure and axis for the fourth subplot\nfig4, ax4 = plt.subplots(figsize=(12, 9))\nax4.plot([0.025, 0.05, 0.075, 0.1, 0.125, 0.15, 0.175, 0.2], [0.18, 0.16, 0.14, 0.12, 0.1, 0.08, 0.06, 0.04], 'y-')\nax4.plot([0.025, 0.05, 0.075, 0.1, 0.125, 0.15, 0.175, 0.2], [0.18, 0.16, 0.14, 0.12, 0.1, 0.08, 0.06, 0.04], 'yo')\nax4.set_title('Accuracy vs. Dropout')\nax4.set_xlabel('Parameter Rate')\nax4.set_ylabel('Accuracy')\n\n# Create a figure and axis for the fifth subplot\nfig5, ax5 = plt.subplots(figsize=(12, 9))\nax5.plot([0.025, 0.05, 0.075, 0.1, 0.125, 0.15, 0.175, 0.2], [0.18, 0.16, 0.14, 0.12, 0.1, 0.08, 0.06, 0.04], 'm-')\nax5.plot([0.025, 0.05, 0.075, 0.1, 0.125, 0.15, 0.175, 0.2], [0.18, 0.16, 0.14, 0.12, 0.1, 0.08, 0.06, 0.04], 'mo')\nax5.set_title('Error Rate vs. Learning Rate')\nax5.set_xlabel('Parameter Rate')\nax5.set_ylabel('Error Rate')\n\n# Create a figure and axis for the sixth subplot\nfig6, ax6 = plt.subplots(figsize=(12, 9))\nax6.plot([0.025, 0.05, 0.075, 0.1, 0.125, 0.15, 0.175, 0.2], [0.18, 0.16, 0.14, 0.12, 0.1, 0.08, 0.06, 0.04], 'c-')\nax6.plot([0.025, 0.05, 0.075, 0.1, 0.125, 0.15, 0.175, 0.2], [0.18, 0.16, 0.14, 0.12, 0.1, 0.08, 0.06, 0.04], 'co')\nax6.set_title('Accuracy vs. Dropout')\nax6.set_xlabel('Parameter Rate')\nax6.set_ylabel('Accuracy')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/line_58.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 4))\n\n# Plot the data\nax.plot([0, 25, 50, 75, 100, 125, 150, 175, 200], [0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.05, 0.02, 0.01], 'b-')\nax.plot([0, 25, 50, 75, 100, 125, 150, 175, 200], [0.65, 0.55, 0.45, 0.35, 0.25, 0.15, 0.08, 0.04, 0.02], 'r-')\n\n# Set the title and labels\nax.set_title('Metric 1')\nax.set_xlabel('Training Iterations')\nax.set_ylabel('Metric Value')\n\n# Add a legend\nax.legend(['Base Model', 'Our Model'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_59.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(5.0, 3.0))\n\n# Set the title of the plot\nax.set_title('Accuracy')\n\n# Set the x-axis label\nax.set_xlabel('Training Iterations')\n\n# Set the y-axis label\nax.set_ylabel('Metric Value')\n\n# Create a line plot for the base model\nax.plot([0, 100, 200], [0.8, 0.6, 0.4], 'o-', color='cyan', label='Base Model')\n\n# Create a line plot for the our model\nax.plot([0, 100, 200], [0.7, 0.5, 0.3], 'o-', color='cyan', label='Our Model')\n\n# Add a legend to the plot\nax.legend()\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(10**1, 10**10)\n\n# Set the y-axis limits\nax.set_ylim(10**-10, 10**1)\n\n# Set the x-axis ticks\nax.set_xticks([10**1, 2*10**1, 3*10**1, 4*10**1, 5*10**1, 6*10**1])\n\n# Set the y-axis ticks\nax.set_yticks([10**-10, 10**-7, 10**-4, 10**-1])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['10^1', '2*10^1', '3*10^1', '4*10^1', '5*10^1', '6*10^1'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['10^-10', '10^-7', '10^-4', '10^-1'])\n\n# Set the title of the plot\nax.set_title('Plot of f(x)')\n\n# Set the color of the x-axis line\nax.spines['bottom'].set_color('blue')\n\n# Set the color of the y-axis line\nax.spines['left'].set_color('orange')\n\n# Set the color of the top and right axis lines\nax.spines['top'].set_visible(False)\nax.spines['right'].set_visible(False)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the plot area\nax.set_facecolor('white')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set"}
{"file": "dataset/ori_500/line_60.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Performance and Efficiency Over Weeks')\n\n# Set the x-axis label\nax.set_xlabel('Weeks')\n\n# Set the y-axis label\nax.set_ylabel('Efficiency')\n\n# Set the x-axis limits\nax.set_xlim(0, 25)\n\n# Set the y-axis limits\nax.set_ylim(-1.5, 1.5)\n\n# Set the x-axis ticks\nax.set_xticks([0, 5, 10, 15, 20, 25])\n\n# Set the y-axis ticks\nax.set_yticks([-1.5, -1.0, -0.5, 0.0, 0.5, 1.0, 1.5])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0', '5', '10', '15', '20', '25'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['-1.5', '-1.0', '-0.5', '0.0', '0.5', '1.0', '1.5'])\n\n# Set the color of the x-axis tick labels\nax.tick_params(axis='x', colors='red')\n\n# Set the color of the y-axis tick labels\nax.tick_params(axis='y', colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y-axis grid lines\nax.grid(axis='y', color='blue')\n\n# Set the color of the x-axis tick marks\nax.tick_params(axis='x', width=2, length=10, colors='red')\n\n# Set the color of the y-axis tick marks\nax.tick_params(axis='y', width=2, length=10, colors='blue')\n\n# Set the color of the x-axis grid lines\nax.grid(axis='x', color='red')\n\n# Set the color of the y"}
{"file": "dataset/ori_500/line_61.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Performance and Efficiency Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Weeks')\n\n# Set the y-axis label\nax.set_ylabel('Values')\n\n# Create a scatter plot for performance\nx = np.linspace(0, 25, 100)\ny = np.sin(x)\nax.scatter(x, y, color='blue', label='Performance')\n\n# Create a scatter plot for efficiency\nx = np.linspace(0, 25, 100)\ny = np.cos(x)\nax.scatter(x, y, color='red', label='Efficiency')\n\n# Create a scatter plot for cost\nx = np.linspace(0, 25, 100)\ny = np.tan(x)\nax.scatter(x, y, color='green', label='Cost')\n\n# Create a scatter plot for revenue\nx = np.linspace(0, 25, 100)\ny = np.exp(x)\nax.scatter(x, y, color='purple', label='Revenue')\n\n# Add a legend to the plot\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_62.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the graph\nax.set_title('Detailed Performance and Efficiency Analysis Over Weeks')\n\n# Set the x-axis label\nax.set_xlabel('Weeks')\n\n# Set the y-axis label\nax.set_ylabel('Efficiency')\n\n# Set the x-axis limits\nax.set_xlim(0, 30)\n\n# Set the y-axis limits\nax.set_ylim(0, 12)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 31, 5))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 13, 1))\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#ADD8E6')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'yellow'])\n\n# Set the color of the markers\nax.plot([0, 5, 10, 15, 20, 25, 30], [1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0], marker='o')\n\n# Set the color of the legend\nax.legend(['Performance', 'Efficiency', 'Growth'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Weeks', color='red')\nax.set_ylabel('Efficiency', color='blue')\n\n# Set the color of the title\nax.set_title('Detailed Performance and Efficiency Analysis Over Weeks', color='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#ADD8E6')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'yellow'])\n\n# Set the color of the markers\nax.plot([0, 5, 10, 15, 20, 25, 30], [1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0], marker='o')\n\n# Set the color of the legend\nax.legend(['Performance', 'Efficiency', 'Growth'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Weeks', color='red')\nax.set_ylabel('Efficiency', color='blue')\n\n# Set the color of the title\nax.set_title('Detailed Performance and Efficiency Analysis Over Weeks', color='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#ADD8E6')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'yellow'])\n\n# Set the color of the markers\nax.plot([0, 5, 10, 15, 20, 25, 30], [1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0], marker='o')\n\n# Set the color of the legend\nax.legend(['Performance', 'Efficiency', 'Growth'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Weeks', color='red')\nax.set_ylabel('Efficiency', color='blue')\n\n# Set the color of the title\nax.set_title('Detailed Performance and Efficiency Analysis Over Weeks', color='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#ADD8E6')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'yellow'])\n\n# Set the color of the markers\nax.plot([0, 5, 10, 15, 20, 25, 30], [1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0], marker='o')\n\n# Set the color of the legend\nax.legend(['Performance', 'Efficiency', 'Growth'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Weeks', color='red')\nax.set_ylabel('Efficiency', color='blue')\n\n# Set the color of the title\nax.set_title('Detailed Performance and Efficiency Analysis Over Weeks', color='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#ADD8E6')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'yellow'])\n\n# Set the color of the markers\nax.plot([0, 5, 10, 15, 20, 25, 30], [1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0], marker='o')\n\n# Set the color of the legend\nax.legend(['Performance', 'Efficiency', 'Growth'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Weeks', color='red')\nax.set_ylabel('Efficiency', color='blue')\n\n# Set the color of the title\nax.set_title('Detailed Performance and Efficiency Analysis Over Weeks', color='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#ADD8E6')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'yellow'])\n\n# Set the color of the markers\nax.plot([0, 5, 10, 15, 20, 25, 30], [1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0], marker='o')\n\n# Set the color of the legend\nax.legend(['Performance', 'Efficiency', 'Growth'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Weeks', color='red')\nax.set_ylabel('Efficiency', color='blue')\n\n# Set the color of the title\nax.set_title('Detailed Performance and Efficiency Analysis Over Weeks', color='green')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#ADD8E6')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'yellow'])\n\n# Set the color of the markers\nax.plot([0, 5, 10, 15, 20, 25, 30], [1.2, 1.1, 1.0, 0.9, 0.8, 0.7, 0.6], marker='o')\nax.plot([0, 5, 10, 15, 20, 25, 30], [1.1, 1.0, 0.9, 0.8, 0.7, 0.6, 0.5], marker='o')\nax.plot([0, 5, 10, 15, 2"}
{"file": "dataset/ori_500/line_63.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('floralwhite')\n\n# Set the title of the plot\nax.set_title('Dynamic Data Presentation Across Weeks', fontsize=20)\n\n# Set the x-axis label\nax.set_xlabel('Weeks', fontsize=14)\n\n# Set the y-axis label\nax.set_ylabel('Normalized Value', fontsize=14)\n\n# Set the x-axis ticks\nax.set_xticks([0, 5, 10, 15, 20, 25])\n\n# Set the y-axis ticks\nax.set_yticks([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n\n# Set the grid lines\nax.grid(True)\n\n# Plot the data series\nax.plot([0, 5, 10, 15, 20, 25], [0, 1, 2, 3, 4, 5], 'b-', label='Data Series 1')\nax.plot([0, 5, 10, 15, 20, 25], [1, 2, 3, 4, 5, 6], 'g--', label='Data Series 2 with Gradient')\nax.plot([0, 5, 10, 15, 20, 25], [2, 3, 4, 5, 6, 7], 'r-.', label='Data Series 3')\n\n# Add a legend\nax.legend()\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_64.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('azure')\n\n# Set the title of the plot\nax.set_title('Average Accuracy (%)')\n\n# Set the x-axis label\nax.set_xlabel('Task')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy (%)')\n\n# Set the x-ticks\nax.set_xticks([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n\n# Set the y-ticks\nax.set_yticks(range(0, 101, 10))\n\n# Set the grid\nax.grid(True)\n\n# Set the legend\nax.legend(['BaCE', 'LWF', 'EWC', 'SEQ'], loc='upper left')\n\n# Set the data\nx = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\ny1 = [95, 90, 85, 80, 75, 70, 65, 60, 55, 50]\ny2 = [85, 80, 75, 70, 65, 60, 55, 50, 45, 40]\ny3 = [75, 70, 65, 60, 55, 50, 45, 40, 35, 30]\ny4 = [65, 60, 55, 50, 45, 40, 35, 30, 25, 20]\n\n# Plot the data\nax.plot(x, y1, 'b-', label='BaCE')\nax.plot(x, y2, 'g-', label='LWF')\nax.plot(x, y3, 'r-', label='EWC')\nax.plot(x, y4, 'c-', label='SEQ')\n\n# Set the markers\nax.plot(x, y1, 'bs', markersize=10)\nax.plot(x, y2, 'go', markersize=10)\nax.plot(x, y3, 'rs', markersize=10)\nax.plot(x, y4, 'cs', markersize=10)\n\n# Set the colors\nax.set_facecolor('azure')\nax.spines['bottom'].set_color('blue')\nax.spines['top'].set_color('blue')\nax.spines['right'].set_color('blue')\nax.spines['left'].set_color('blue')\n\n# Set the tick colors\nax.tick_params(axis='both', colors='blue')\n\n# Set the legend colors\nlegend = ax.legend(loc='upper left')\nfor text in legend.get_texts():\n    text.set_color('blue')\n\n# Set the title color\nax.set_title('Average Accuracy (%)', color='blue')\n\n# Set the x-axis label color\nax.set_xlabel('Task', color='blue')\n\n# Set the y-axis label color\nax.set_ylabel('Accuracy (%)', color='blue')\n\n# Set the x-ticks color\nax.set_xticks([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], color='blue')\n\n# Set the y-ticks color\nax.set_yticks(range(0, 101, 10))\nax.set_yticklabels(range(0, 101, 10), color='blue')\n\n# Set the grid color\nax.grid(True, color='blue')\n\n# Set the marker colors\nax.plot(x, y1, 'bs', markersize=10, color='blue')\nax.plot(x, y2, 'go', markersize=10, color='green')\nax.plot(x, y3, 'rs', markersize=10, color='red')\nax.plot(x, y4, 'cs', markersize=10, color='cyan')\n\n# Set the line colors\nax.plot(x, y1, 'b-', color='blue')\nax.plot(x, y2, 'g-', color='green')\nax.plot(x, y3, 'r-', color='red')\nax.plot(x, y4, 'c-', color='cyan')\n\n# Set the face color\nax.set_facecolor('azure')\n\n# Set the edge color\nax.spines['bottom'].set_edgecolor('blue')\nax.spines['top'].set_edgecolor('blue')\nax.spines['right'].set_edgecolor('blue')\nax.spines['left'].set_edgecolor('blue')\n\n# Set the tick edge color\nax.tick_params(axis='both', colors='blue')\n\n# Set the legend edge color\nlegend = ax.legend(loc='upper left')\nfor text in legend.get_texts():\n    text.set_edgecolor('blue')\n\n# Set the title edge color\nax.set_title('Average Accuracy (%)', color='blue', edgecolor='blue')\n\n# Set the x-axis label edge color\nax.set_xlabel('Task', color='blue', edgecolor='blue')\n\n# Set the y-axis label edge color\nax.set_ylabel('Accuracy (%)', color='blue', edgecolor='blue')\n\n# Set the x-ticks edge color\nax.set_xticks([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], color='blue', edgecolor='blue')\n\n# Set the y-ticks edge color\nax.set_yticks(range(0, 101, 10))\nax.set_yticklabels(range(0, 101, 10), color='blue', edgecolor='blue')\n\n# Set the grid edge color\nax.grid(True, color='blue')\n\n# Set the marker edge color\nax.plot(x, y1, 'bs', markersize=10, color='blue', edgecolor='blue')\nax.plot(x, y2, 'go', markersize=10, color='green', edgecolor='green')\nax.plot(x, y3, 'rs', markersize=10, color='red', edgecolor='red')\nax.plot(x, y4, 'cs', markersize=10, color='cyan', edgecolor='cyan')\n\n# Set the line edge color\nax.plot(x, y1, 'b-', color='blue', edgecolor='blue')\nax.plot(x, y2, 'g-', color='green', edgecolor='green')\nax.plot(x, y3, 'r-', color='red', edgecolor='red')\nax.plot(x, y4, 'c-', color='cyan', edgecolor='cyan')\n\n# Set the face edge color\nax.set_facecolor('azure')\n\n# Set the edge edge color\nax.spines['bottom'].set_edgecolor('blue')\nax.spines['top'].set_edgecolor('blue')\nax.spines['right'].set_edgecolor('blue')\nax.spines['left'].set_edgecolor('blue')\n\n# Set the tick edge edge color\nax.tick_params(axis='both', colors='blue')\n\n# Set the legend edge edge color\nlegend = ax.legend(loc='upper left')\nfor text in legend.get_texts():\n    text.set_edgecolor('blue')\n\n# Set the title edge edge color\nax.set_title('Average Accuracy (%)', color='blue', edgecolor='blue')\n\n# Set the x-axis label edge edge color\nax.set_xlabel('Task', color='blue', edgecolor='blue')\n\n# Set the y-axis label edge edge color\nax.set_ylabel('Accuracy (%)', color='blue', edgecolor='blue')\n\n# Set the x-ticks edge edge color\nax.set_xticks([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], color='blue', edgecolor='blue')\n\n# Set the y-ticks edge edge color\nax.set_yticks(range(0, 101, 10))\nax.set_yticklabels(range(0, 101, 10), color='blue', edgecolor='blue')\n\n# Set the grid edge edge color\nax.grid(True, color='blue')\n\n# Set the marker edge edge color\nax.plot(x, y1, 'bs', markersize=10, color='blue', edgecolor='blue')\nax.plot(x, y2, 'go', markersize=10, color='green', edgecolor='green')\nax.plot(x, y3, 'rs', markersize=10, color='red', edgecolor='red')\nax.plot(x, y4, 'cs', markersize=10, color='cyan', edgecolor='cyan')\n\n# Set the line edge edge color\nax.plot(x, y1, 'b-', color='blue', edgecolor='blue')\nax.plot(x, y2, 'g-', color='green', edgecolor='green')\nax.plot(x, y3, 'r-', color='red', edgecolor='red')\nax.plot(x, y4, 'c-', color='cyan', edgecolor='cyan')\n\n# Set the face edge edge color\nax.set_facecolor('azure')\n\n# Set the edge edge edge color\nax.spines['bottom'].set_edgecolor('blue')\nax.spines['top'].set_edgecolor('blue')\nax.spines['right'].set_edgecolor('blue')\nax.spines['left'].set_edgecolor('blue')\n\n# Set the tick edge edge edge color\nax.tick_params(axis='both', colors='blue')\n\n# Set the legend edge edge edge color\nlegend = ax.legend(loc='upper left')\nfor text in legend.get_texts():\n    text.set_edgecolor('blue')\n\n# Set the title edge edge edge color\nax.set_title('Average Accuracy (%)', color='blue', edgecolor='blue')\n\n# Set the x-axis label edge edge edge color\nax.set_xlabel('Task', color='blue', edgecolor='blue')\n\n# Set the y-axis label edge edge edge color\nax.set_ylabel('Accuracy (%)', color='blue', edgecolor='blue')\n\n# Set the x-ticks edge edge edge color\nax.set_xticks([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], color='blue', edgecolor='blue')\n\n# Set the y-ticks edge edge edge color\nax.set_yticks(range(0, 101, 10))\nax.set_yticklabels(range(0, 101, 10), color='blue', edgecolor='blue')\n\n# Set the grid edge edge edge color\nax.grid(True, color='blue')\n\n# Set the marker edge edge edge color\nax.plot(x, y1, 'bs', markersize=10, color='blue', edgecolor='blue')\nax.plot(x, y2, 'go', markersize=10, color='green', edgecolor='green')\nax.plot(x, y3, 'rs', markersize=10, color='red', edgecolor='red')\nax.plot(x, y4, 'cs', markersize=10, color='cyan', edgecolor='cyan')\n\n# Set the line edge edge edge color\nax.plot(x, y1, 'b-', color='blue', edgecolor='blue')\nax.plot(x, y2, 'g-', color='green', edgecolor='green')\nax.plot(x, y3, 'r-', color='red', edgecolor='red')\nax.plot(x, y4, 'c-', color='cyan', edgecolor='cyan')\n\n# Set the face edge edge edge color\nax.set_facecolor('azure')\n\n# Set the edge edge edge edge color\nax.spines['bottom'].set_edgecolor('blue')\nax.spines['top'].set_edgecolor('blue')\nax.spines['right'].set_edgecolor('blue')\nax.spines['left'].set_edgecolor('blue')\n\n# Set the tick edge edge edge edge color\nax.tick_params(axis='both', colors='blue')\n\n# Set the legend edge edge edge edge color\nlegend = ax.legend(loc='upper left')\nfor text in legend.get_texts():\n    text.set_edgecolor('blue')\n\n# Set the title edge edge edge edge color\nax.set_title('Average Accuracy (%)', color='blue', edgecolor='blue')\n\n# Set the x-axis label edge edge edge edge color\nax.set_xlabel('Task', color='blue', edgecolor='blue')\n\n# Set the y-axis label edge edge edge edge color\nax.set_ylabel('Accuracy (%)', color='blue', edgecolor='blue')\n\n# Set the x-ticks edge edge edge edge color\nax.set_xticks([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], color='blue', edgecolor='blue')\n\n# Set the y-ticks edge edge edge edge color\nax.set_yticks(range(0, 101, 10))\nax.set_yticklabels(range(0, 101, 10), color='blue', edgecolor='blue')\n\n# Set the grid edge edge edge edge color\nax.grid(True, color='blue')\n\n# Set the marker edge edge edge edge color\nax.plot(x, y1, 'bs', markersize=10, color='blue', edgecolor='blue')\nax.plot(x, y2, 'go', markersize=10, color='green', edgecolor='green')\nax.plot(x, y3, 'rs', markersize=10, color='red', edgecolor='red')\nax.plot(x, y4, 'cs', markersize=10, color='cyan', edgecolor='cyan')\n\n# Set the line edge edge edge edge color\nax.plot(x, y1, 'b-', color='blue', edgecolor='blue')\nax.plot(x, y2, 'g-', color='green', edgecolor='green')\nax.plot(x, y3, 'r-', color='red', edgecolor='red')\nax.plot(x, y4, 'c-', color='cyan', edgecolor='cyan')\n\n# Set the face edge edge edge edge color\nax.set_facecolor('azure')\n\n# Set the edge edge edge edge edge color\nax.spines['bottom'].set_edgecolor('blue')\nax.spines['top'].set_edgecolor('blue')\nax.spines['right'].set_edgecolor('blue')\nax.spines['left'].set_edgecolor('blue')\n\n# Set the tick edge edge edge edge edge color\nax.tick_params(axis='both', colors='blue')\n\n# Set the legend edge edge edge edge edge color\nlegend = ax.legend(loc='upper left')\nfor text in legend.get_texts():\n    text.set_edgecolor('blue')\n\n# Set the title edge edge edge edge edge color\nax.set_title('Average Accuracy (%)', color='blue', edgecolor='blue')\n\n# Set the x-axis label edge edge edge edge edge color\nax.set_xlabel('Task', color='blue', edgecolor='blue')\n\n# Set the y-axis label edge edge edge edge edge color\nax.set_ylabel('Accuracy (%)', color='blue', edgecolor='blue')\n\n# Set the x-ticks edge edge edge edge edge color\nax.set_xticks([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'], color='blue', edgecolor='blue')\n\n# Set the y-ticks edge edge edge edge edge color\nax.set_yticks(range(0, 101, 10))\nax.set_yticklabels(range(0, 101, 10), color='blue', edgecolor='blue')\n\n# Set the grid edge edge edge edge edge color\nax.grid(True, color='blue')\n\n# Set the marker edge edge edge edge edge color\nax.plot(x, y1, 'bs', markersize=10, color='blue', edgecolor='blue')\nax.plot(x, y2, 'go', markersize=10, color='green', edgecolor='green')\nax.plot(x, y3, 'rs', markersize=10, color='red', edgecolor='red')\nax.plot(x, y4, 'cs', markersize=10, color='cyan', edgecolor='cyan')\n\n# Set the line edge edge edge edge edge color\nax.plot(x, y1, 'b-', color='blue', edgecolor='blue')\nax.plot(x, y2, 'g-', color='green', edgecolor='green')\nax.plot(x, y3, 'r-', color='red', edgecolor='red')\nax.plot(x, y4, 'c-', color='cyan', edgecolor='cyan')\n\n# Set the face edge edge edge edge edge color\nax.set_facecolor('azure')\n\n# Set the edge edge edge edge edge edge color\nax.spines['bottom'].set_edgecolor('blue')\nax.spines['top'].set_edgecolor('blue')\nax.spines['right'].set_edgecolor('blue')\nax.spines['left'].set_edgecolor('blue')\n\n# Set the tick edge edge edge edge edge edge color\nax.tick_params(axis='both', colors='blue')\n\n# Set the legend edge edge edge edge edge edge color\nlegend = ax.legend(loc='upper left')\nfor text in legend.get_texts():\n    text.set_edgecolor('blue')\n\n# Set the title edge edge edge edge edge edge color\nax.set_title('Average Accuracy (%)', color='blue', edgecolor='blue')\n\n# Set the x-axis label edge edge edge edge edge edge color\nax.set_xlabel('Task', color='blue', edgecolor='blue')\n\n# Set the y-axis label edge edge edge edge edge edge color\nax.set_ylabel('Accuracy (%)', color='blue', edgecolor='blue')\n\n# Set the x-ticks edge edge edge edge edge edge color\nax.set_xticks([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\nax.set_xticklabels(['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],"}
{"file": "dataset/ori_500/line_65.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nx = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\ny1 = [80, 85, 90, 95, 90, 85, 80, 75, 70, 65]\ny2 = [60, 65, 70, 75, 80, 85, 90, 95, 90, 85]\ny3 = [40, 45, 50, 55, 60, 65, 70, 75, 80, 85]\ny4 = [20, 25, 30, 35, 40, 45, 50, 55, 60, 65]\n\n# Create a figure and a set of subplots\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(8.0, 3.0))\n\n# Plot the data on the first subplot\nax1.plot(x, y1, 'b-', label='BaCE')\nax1.plot(x, y2, 'g-', label='EWC')\nax1.set_xlabel('Task')\nax1.set_ylabel('Performance (%)')\nax1.legend()\nax1.grid(True)\n\n# Plot the data on the second subplot\nax2.plot(x, y3, 'r^', label='LWF')\nax2.plot(x, y4, 'm^', label='SEQ')\nax2.set_xlabel('Task')\nax2.set_ylabel('Performance (%)')\nax2.legend()\nax2.grid(True)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_66.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(9.0, 7.0))\n\n# Set the title of the plot\nax.set_title('model1 Performance')\n\n# Set the x-axis label\nax.set_xlabel('Iterations')\n\n# Set the y-axis label\nax.set_ylabel('Success Rate')\n\n# Create a scatter plot with a blue color for the data points\nax.scatter([0, 250, 500, 1000, 1500, 2000], [0.2, 0.4, 0.6, 0.8, 1.0, 1.2], color='blue')\n\n# Create a line plot with a pink color for the trend line\nax.plot([0, 250, 500, 1000, 1500, 2000], [0.2, 0.4, 0.6, 0.8, 1.0, 1.2], color='pink')\n\n# Add a legend to the plot\nax.legend(['Data Points', 'Trend Line'])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_67.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data\nx = [2, 3, 4, 5, 6, 7, 8]\ny1 = [2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5]\ny2 = [2.2, 3.2, 4.2, 5.2, 6.2, 7.2, 8.2]\ny3 = [2.8, 3.8, 4.8, 5.8, 6.8, 7.8, 8.8]\n\n# Plot\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\nax.plot(x, y1, 'b-', label='WHR')\nax.plot(x, y2, 'r-', label='AMR')\nax.plot(x, y3, 'g-', label='WER')\n\n# Markers\nfor i in range(len(x)):\n    ax.plot(x[i], y1[i], 'bo')\n    ax.plot(x[i], y2[i], 'ro')\n    ax.plot(x[i], y3[i], 'go')\n\n# Legend\nax.legend()\n\n# Title and labels\nax.set_title('Microphone Performance Metrics')\nax.set_xlabel('Number of microphones')\nax.set_ylabel('Performance (%)')\n\n# Grid\nax.grid(True)\n\n# Show plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_68.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Set the title of the plot\nax.set_title('Trend Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Number of microphones')\n\n# Set the y-axis label\nax.set_ylabel('WER (%)')\n\n# Set the y-axis limits\nax.set_ylim(2, 30)\n\n# Set the x-axis limits\nax.set_xlim(2, 10)\n\n# Set the y-axis ticks\nax.set_yticks([2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30])\n\n# Set the x-axis ticks\nax.set_xticks([2, 3, 4, 5, 6, 7, 8, 9, 10])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['2', '4', '6', '8', '10', '12', '14', '16', '18', '20', '22', '24', '26', '28', '30'])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['2', '3', '4', '5', '6', '7', '8', '9', '10'])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title"}
{"file": "dataset/ori_500/line_69.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Set the title of the plot\nax.set_title('Highlight Performance Over Time')\n\n# Set the x-axis label\nax.set_xlabel('Number of Microphones')\n\n# Set the y-axis label\nax.set_ylabel('WER (%)')\n\n# Set the x-axis limits\nax.set_xlim(2, 8)\n\n# Set the y-axis limits\nax.set_ylim(0.2, 1.0)\n\n# Set the x-axis ticks\nax.set_xticks([2, 3, 4, 5, 6, 7, 8])\n\n# Set the y-axis ticks\nax.set_yticks([0.2, 0.4, 0.6, 0.8, 1.0])\n\n# Set the x-axis tick labels\nax.set_xticklabels(['Highlight 1', 'Highlight 2', 'Highlight 3', 'Highlight 4', 'Highlight 5', 'Highlight 6', 'Highlight 7'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.2', '0.4', '0.6', '0.8', '1.0'])\n\n# Set the line color\nax.plot([2, 3, 4, 5, 6, 7, 8], [0.2, 0.4, 0.6, 0.8, 0.9, 0.7, 0.5], color='orange')\n\n# Set the marker color\nax.plot([2, 3, 4, 5, 6, 7, 8], [0.2, 0.4, 0.6, 0.8, 0.9, 0.7, 0.5], 'o', color='red')\n\n# Set the legend\nax.legend(['LibriCSS WER', 'AMI WER', 'Threshold'], loc='upper left')\n\n# Set the grid\nax.grid(True)\n\n# Set the rectangle\nrect = plt.Rectangle((2, 0.2), 6, 0.8, fill=False, edgecolor='red')\nax.add_patch(rect)\n\n# Set the circle\ncircle = plt.Circle((2, 0.2), 0.1, color='blue')\nax.add_artist(circle)\n\n# Set the square\nsquare = plt.Rectangle((2, 0.2), 0.1, 0.1, color='green')\nax.add_patch(square)\n\n# Set the triangle\ntriangle = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2]], color='yellow')\nax.add_patch(triangle)\n\n# Set the ellipse\nellipse = plt.Ellipse((2, 0.2), 0.2, 0.1, color='purple')\nax.add_patch(ellipse)\n\n# Set the star\nstar = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='orange')\nax.add_patch(star)\n\n# Set the pentagon\npentagon = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='pink')\nax.add_patch(pentagon)\n\n# Set the hexagon\nhexagon = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='brown')\nax.add_patch(hexagon)\n\n# Set the heptagon\nheptagon = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='cyan')\nax.add_patch(heptagon)\n\n# Set the octagon\noctagon = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='magenta')\nax.add_patch(octagon)\n\n# Set the nonagon\nnonagon = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='lime')\nax.add_patch(nonagon)\n\n# Set the decagon\ndecagon = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='silver')\nax.add_patch(decagon)\n\n# Set the dodecagon\ndodecagon = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='gold')\nax.add_patch(dodecagon)\n\n# Set the trapezoid\ntrapezoid = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='black')\nax.add_patch(trapezoid)\n\n# Set the parallelogram\nparallelogram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='white')\nax.add_patch(parallelogram)\n\n# Set the rhombus\nrhombus = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='gray')\nax.add_patch(rhombus)\n\n# Set the kite\nkite = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='brown')\nax.add_patch(kite)\n\n# Set the pentagram\npentagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='cyan')\nax.add_patch(pentagram)\n\n# Set the hexagram\nhexagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='magenta')\nax.add_patch(hexagram)\n\n# Set the heptagram\nheptagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='lime')\nax.add_patch(heptagram)\n\n# Set the octagram\noctagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='silver')\nax.add_patch(octagram)\n\n# Set the nonagram\nnonagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='gold')\nax.add_patch(nonagram)\n\n# Set the decagram\ndecagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='black')\nax.add_patch(decagram)\n\n# Set the dodecagram\ndodecagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='white')\nax.add_patch(dodecagram)\n\n# Set the trapezoid\ntrapezoid = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='gray')\nax.add_patch(trapezoid)\n\n# Set the parallelogram\nparallelogram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='brown')\nax.add_patch(parallelogram)\n\n# Set the rhombus\nrhombus = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='cyan')\nax.add_patch(rhombus)\n\n# Set the kite\nkite = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='magenta')\nax.add_patch(kite)\n\n# Set the pentagram\npentagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='lime')\nax.add_patch(pentagram)\n\n# Set the hexagram\nhexagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='silver')\nax.add_patch(hexagram)\n\n# Set the heptagram\nheptagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='gold')\nax.add_patch(heptagram)\n\n# Set the octagram\noctagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='black')\nax.add_patch(octagram)\n\n# Set the nonagram\nnonagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='white')\nax.add_patch(nonagram)\n\n# Set the decagram\ndecagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='gray')\nax.add_patch(decagram)\n\n# Set the dodecagram\ndodecagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='brown')\nax.add_patch(dodecagram)\n\n# Set the trapezoid\ntrapezoid = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='cyan')\nax.add_patch(trapezoid)\n\n# Set the parallelogram\nparallelogram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='magenta')\nax.add_patch(parallelogram)\n\n# Set the rhombus\nrhombus = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='lime')\nax.add_patch(rhombus)\n\n# Set the kite\nkite = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='silver')\nax.add_patch(kite)\n\n# Set the pentagram\npentagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='gold')\nax.add_patch(pentagram)\n\n# Set the hexagram\nhexagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='black')\nax.add_patch(hexagram)\n\n# Set the heptagram\nheptagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='white')\nax.add_patch(heptagram)\n\n# Set the octagram\noctagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='gray')\nax.add_patch(octagram)\n\n# Set the nonagram\nnonagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='brown')\nax.add_patch(nonagram)\n\n# Set the decagram\ndecagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='cyan')\nax.add_patch(decagram)\n\n# Set the dodecagram\ndodecagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='magenta')\nax.add_patch(dodecagram)\n\n# Set the trapezoid\ntrapezoid = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='lime')\nax.add_patch(trapezoid)\n\n# Set the parallelogram\nparallelogram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='silver')\nax.add_patch(parallelogram)\n\n# Set the rhombus\nrhombus = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='gold')\nax.add_patch(rhombus)\n\n# Set the kite\nkite = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='black')\nax.add_patch(kite)\n\n# Set the pentagram\npentagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='white')\nax.add_patch(pentagram)\n\n# Set the hexagram\nhexagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='gray')\nax.add_patch(hexagram)\n\n# Set the heptagram\nheptagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='brown')\nax.add_patch(heptagram)\n\n# Set the octagram\noctagram = plt.Polygon([[2, 0.2], [2.1, 0.3], [2.2, 0.2], [2.1, 0.1], [2, 0.2]], color='cyan')\nax.add_patch(octagram)\n\n"}
{"file": "dataset/ori_500/line_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(2, 2, figsize=(12, 4))\n\n# Plot the first subplot\nx = np.linspace(0.7, 1, 100)\ny = np.sin(x)\naxs[0, 0].plot(x, y, 'b-')\naxs[0, 0].set_title('a) Positive bound.')\naxs[0, 0].fill_between(x, y, where=(y > 0), color='lightblue')\n\n# Plot the second subplot\nx = np.linspace(0.1, 0.4, 100)\ny = np.cos(x)\naxs[0, 1].plot(x, y, 'r-')\naxs[0, 1].set_title('b) Negative bound.')\naxs[0, 1].fill_between(x, y, where=(y < 0), color='lightgreen')\n\n# Plot the third subplot\nx = np.linspace(0, 1, 100)\ny = np.tan(x)\naxs[1, 0].plot(x, y, 'g-')\naxs[1, 0].set_title('c) Fuzzy coefficient.')\naxs[1, 0].fill_between(x, y, where=(y > 0), color='lightgrey')\n\n# Plot the fourth subplot\nx = np.linspace(0, 1, 100)\ny = np.exp(x)\naxs[1, 1].plot(x, y, 'k-')\naxs[1, 1].set_title('d) Contrastive loss weight.')\naxs[1, 1].fill_between(x, y, where=(y > 0), color='lightpink')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_70.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 5))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the title of the plot\nax.set_title('Microphone Sales Data')\n\n# Set the x-axis label\nax.set_xlabel('Number of Microphones')\n\n# Set the y-axis label\nax.set_ylabel('Sales ($ millions)')\n\n# Set the x-ticks\nax.set_xticks([2, 3, 4, 5, 6, 7, 8])\n\n# Set the y-ticks\nax.set_yticks([0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0])\n\n# Set the grid lines\nax.grid(True)\n\n# Set the line color\nline_color = 'red'\n\n# Set the line style\nline_style = '-'\n\n# Set the line width\nline_width = 2\n\n# Set the marker\nmarker = 'o'\n\n# Set the marker size\nmarker_size = 10\n\n# Set the marker face color\nmarker_face_color = 'blue'\n\n# Set the marker edge color\nmarker_edge_color = 'black'\n\n# Set the marker edge width\nmarker_edge_width = 1\n\n# Set the line data\nx = np.linspace(2, 8, 100)\ny = np.sin(x)\n\n# Plot the line\nax.plot(x, y, color=line_color, linestyle=line_style, linewidth=line_width, marker=marker, markersize=marker_size, markerfacecolor=marker_face_color, markeredgecolor=marker_edge_color, markeredgewidth=marker_edge_width)\n\n# Set the legend\nax.legend(['LibriCSS WER', 'Threshold'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_71.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 12.0))\n\n# Set the title of the plot\nax.set_title('SPMotif-0.5')\n\n# Create a list of colors for the lines\ncolors = ['blue', 'green']\n\n# Create a list of labels for the lines\nlabels = ['PNA', 'GIN']\n\n# Create a list of ratios\nratios = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]\n\n# Create a list of performance values\nperformance_values = [0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 0.9, 0.8, 0.7, 0.6]\n\n# Plot the data\nfor i in range(len(colors)):\n    ax.plot(ratios, performance_values, color=colors[i], label=labels[i])\n\n# Add a legend to the plot\nax.legend()\n\n# Set the x-axis and y-axis limits\nax.set_xlim(0.1, 1.0)\nax.set_ylim(0.4, 1.0)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('Ratio r')\nax.set_ylabel('Performance')\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the grid lines\nax.grid(True)\n\n# Save the plot as a PNG file\nplt.savefig('spmotif-0.5.png')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_72.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the plot\nax.set_title('Dynamic Performance Trends')\n\n# Set the x-axis label\nax.set_xlabel('Ratio r')\n\n# Set the y-axis label\nax.set_ylabel('Performance')\n\n# Set the x-axis limits\nax.set_xlim(0.1, 1)\n\n# Set the y-axis limits\nax.set_ylim(-80, 20)\n\n# Set the grid lines\nax.grid(True)\n\n# Set the tick marks\nax.set_xticks([0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1])\nax.set_yticks([-80, -60, -40, -20, 0, 20])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set_color('black')\n\n# Set the color of the y-axis label\nax.yaxis.label.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.label_outer()\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the x-axis label\nax.xaxis.label.set"}
{"file": "dataset/ori_500/line_73.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Modern Linear Performance Evaluation')\n\n# Set the x-axis label\nax.set_xlabel('Ratio r')\n\n# Set the y-axis label\nax.set_ylabel('Performance')\n\n# Set the x-axis limits\nax.set_xlim(0.1, 1.0)\n\n# Set the y-axis limits\nax.set_ylim(0.1, 1.5)\n\n# Set the grid lines\nax.grid(True)\n\n# Define the data points\nx = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]\ny = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]\n\n# Plot the data points\nax.plot(x, y, 'o-')\n\n# Add a legend\nax.legend(['PNAs', 'Gin'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_74.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Dynamic Model Performance')\n\n# Set the x-axis label\nax.set_xlabel('Ratio r')\n\n# Set the y-axis label\nax.set_ylabel('Performance')\n\n# Set the x-ticks\nax.set_xticks([0.2, 0.4, 0.6, 0.8, 1.0])\n\n# Set the y-ticks\nax.set_yticks([0.2, 0.4, 0.6, 0.8, 1.0])\n\n# Set the grid\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the tick lines\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelcolor='black')\n\n# Set the color of the tick marks\nax.tick"}
{"file": "dataset/ori_500/line_75.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Comparison of Model Accuracies')\n\n# Set the x-axis label\nax.set_xlabel('Ensemble Size')\n\n# Set the y-axis label\nax.set_ylabel('Model Accuracy')\n\n# Set the x-ticks\nax.set_xticks([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29])\n\n# Set the y-ticks\nax.set_yticks(range(60, 86, 5))\n\n# Set the grid\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'orange', 'purple'])\n\n# Set the color of the line\nax.plot([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], 'o-')\n\n# Set the color of the fill\nax.fill_between([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], [75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99], alpha=0.5)\n\n# Set the color of the legend\nax.legend(['Model 1 Mean Accuracy', 'Model 2 Mean Accuracy'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Ensemble Size')\nax.set_ylabel('Model Accuracy')\n\n# Set the color of the title\nax.set_title('Comparison of Model Accuracies')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'orange', 'purple'])\n\n# Set the color of the line\nax.plot([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], 'o-')\n\n# Set the color of the fill\nax.fill_between([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], [75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99], alpha=0.5)\n\n# Set the color of the legend\nax.legend(['Model 1 Mean Accuracy', 'Model 2 Mean Accuracy'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Ensemble Size')\nax.set_ylabel('Model Accuracy')\n\n# Set the color of the title\nax.set_title('Comparison of Model Accuracies')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'orange', 'purple'])\n\n# Set the color of the line\nax.plot([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], 'o-')\n\n# Set the color of the fill\nax.fill_between([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], [75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99], alpha=0.5)\n\n# Set the color of the legend\nax.legend(['Model 1 Mean Accuracy', 'Model 2 Mean Accuracy'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Ensemble Size')\nax.set_ylabel('Model Accuracy')\n\n# Set the color of the title\nax.set_title('Comparison of Model Accuracies')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'orange', 'purple'])\n\n# Set the color of the line\nax.plot([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], 'o-')\n\n# Set the color of the fill\nax.fill_between([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], [75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99], alpha=0.5)\n\n# Set the color of the legend\nax.legend(['Model 1 Mean Accuracy', 'Model 2 Mean Accuracy'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Ensemble Size')\nax.set_ylabel('Model Accuracy')\n\n# Set the color of the title\nax.set_title('Comparison of Model Accuracies')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'orange', 'purple'])\n\n# Set the color of the line\nax.plot([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], 'o-')\n\n# Set the color of the fill\nax.fill_between([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], [75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99], alpha=0.5)\n\n# Set the color of the legend\nax.legend(['Model 1 Mean Accuracy', 'Model 2 Mean Accuracy'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Ensemble Size')\nax.set_ylabel('Model Accuracy')\n\n# Set the color of the title\nax.set_title('Comparison of Model Accuracies')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'orange', 'purple'])\n\n# Set the color of the line\nax.plot([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], 'o-')\n\n# Set the color of the fill\nax.fill_between([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], [75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99], alpha=0.5)\n\n# Set the color of the legend\nax.legend(['Model 1 Mean Accuracy', 'Model 2 Mean Accuracy'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Ensemble Size')\nax.set_ylabel('Model Accuracy')\n\n# Set the color of the title\nax.set_title('Comparison of Model Accuracies')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'orange', 'purple'])\n\n# Set the color of the line\nax.plot([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], 'o-')\n\n# Set the color of the fill\nax.fill_between([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], [75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99], alpha=0.5)\n\n# Set the color of the legend\nax.legend(['Model 1 Mean Accuracy', 'Model 2 Mean Accuracy'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Ensemble Size')\nax.set_ylabel('Model Accuracy')\n\n# Set the color of the title\nax.set_title('Comparison of Model Accuracies')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'orange', 'purple'])\n\n# Set the color of the line\nax.plot([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], 'o-')\n\n# Set the color of the fill\nax.fill_between([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], [75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99], alpha=0.5)\n\n# Set the color of the legend\nax.legend(['Model 1 Mean Accuracy', 'Model 2 Mean Accuracy'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Ensemble Size')\nax.set_ylabel('Model Accuracy')\n\n# Set the color of the title\nax.set_title('Comparison of Model Accuracies')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'orange', 'purple'])\n\n# Set the color of the line\nax.plot([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], 'o-')\n\n# Set the color of the fill\nax.fill_between([5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29], [70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94], [75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99], alpha=0.5)\n\n# Set the color of the legend\nax.legend(['Model 1 Mean Accuracy', 'Model 2 Mean Accuracy'], loc='upper left')\n\n# Set the color of the labels\nax.set_xlabel('Ensemble Size')\nax.set_ylabel('Model Accuracy')\n\n# Set the color of the title\nax.set_title('Comparison of Model Accuracies')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'red', 'green', 'orange',"}
{"file": "dataset/ori_500/line_76.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis for the first graph\nfig, ax = plt.subplots(figsize=(8.0, 12.0))\nax.set_title('Performance of Model X')\nax.set_xlabel('Iteration')\nax.set_ylabel('Score')\n\n# Plot the data\nax.plot([1, 2, 3, 4, 5, 6, 7, 8, 9], [90, 92, 95, 93, 91, 94, 92, 95, 93], 'r-')\nax.plot([1, 2, 3, 4, 5, 6, 7, 8, 9], [85, 87, 90, 88, 86, 89, 87, 90, 88], 'g-')\nax.plot([1, 2, 3, 4, 5, 6, 7, 8, 9], [80, 82, 85, 83, 81, 84, 82, 85, 83], 'b-')\n\n# Add the legend\nax.legend(['Config A - Model X', 'Config B - Model X', 'Config C - Model X'])\n\n# Add the red rectangles\nax.add_patch(plt.Rectangle((1, 90), 1, 1, color='red'))\nax.add_patch(plt.Rectangle((2, 85), 1, 1, color='red'))\nax.add_patch(plt.Rectangle((3, 80), 1, 1, color='red'))\n\n# Add the green rectangles\nax.add_patch(plt.Rectangle((4, 75), 1, 1, color='green'))\nax.add_patch(plt.Rectangle((5, 70), 1, 1, color='green'))\nax.add_patch(plt.Rectangle((6, 65), 1, 1, color='green'))\n\n# Add the blue rectangles\nax.add_patch(plt.Rectangle((7, 60), 1, 1, color='blue'))\nax.add_patch(plt.Rectangle((8, 55), 1, 1, color='blue'))\nax.add_patch(plt.Rectangle((9, 50), 1, 1, color='blue'))\n\n# Create a second figure and axis for the second graph\nfig, ax = plt.subplots(figsize=(8.0, 12.0))\nax.set_title('Performance of Model Y')\nax.set_xlabel('Iteration')\nax.set_ylabel('Score')\n\n# Plot the data\nax.plot([1, 2, 3, 4, 5, 6, 7, 8, 9], [75, 77, 80, 78, 76, 79, 77, 80, 78], 'r-')\nax.plot([1, 2, 3, 4, 5, 6, 7, 8, 9], [70, 72, 75, 73, 71, 74, 72, 75, 73], 'g-')\nax.plot([1, 2, 3, 4, 5, 6, 7, 8, 9], [65, 67, 70, 68, 66, 69, 67, 70, 68], 'b-')\n\n# Add the legend\nax.legend(['Config A - Model X', 'Config B - Model X', 'Config C - Model X'])\n\n# Add the red rectangles\nax.add_patch(plt.Rectangle((1, 75), 1, 1, color='red'))\nax.add_patch(plt.Rectangle((2, 70), 1, 1, color='red'))\nax.add_patch(plt.Rectangle((3, 65), 1, 1, color='red'))\n\n# Add the green rectangles\nax.add_patch(plt.Rectangle((4, 60), 1, 1, color='green'))\nax.add_patch(plt.Rectangle((5, 55), 1, 1, color='green'))\nax.add_patch(plt.Rectangle((6, 50), 1, 1, color='green'))\n\n# Add the blue rectangles\nax.add_patch(plt.Rectangle((7, 45), 1, 1, color='blue'))\nax.add_patch(plt.Rectangle((8, 40), 1, 1, color='blue'))\nax.add_patch(plt.Rectangle((9, 35), 1, 1, color='blue'))\n\n# Create a third figure and axis for the third graph\nfig, ax = plt.subplots(figsize=(8.0, 12.0))\nax.set_title('Performance of Model Z')\nax.set_xlabel('Iteration')\nax.set_ylabel('Score')\n\n# Plot the data\nax.plot([1, 2, 3, 4, 5, 6, 7, 8, 9], [85, 87, 90, 88, 86, 89, 87, 90, 88], 'r-')\nax.plot([1, 2, 3, 4, 5, 6, 7, 8, 9], [80, 82, 85, 83, 81, 84, 82, 85, 83], 'g-')\nax.plot([1, 2, 3, 4, 5, 6, 7, 8, 9], [75, 77, 80, 78, 76, 79, 77, 80, 78], 'b-')\n\n# Add the legend\nax.legend(['Config A - Model X', 'Config B - Model X', 'Config C - Model X'])\n\n# Add the red rectangles\nax.add_patch(plt.Rectangle((1, 85), 1, 1, color='red'))\nax.add_patch(plt.Rectangle((2, 80), 1, 1, color='red'))\nax.add_patch(plt.Rectangle((3, 75), 1, 1, color='red'))\n\n# Add the green rectangles\nax.add_patch(plt.Rectangle((4, 70), 1, 1, color='green'))\nax.add_patch(plt.Rectangle((5, 65), 1, 1, color='green'))\nax.add_patch(plt.Rectangle((6, 60), 1, 1, color='green'))\n\n# Add the blue rectangles\nax.add_patch(plt.Rectangle((7, 55), 1, 1, color='blue'))\nax.add_patch(plt.Rectangle((8, 50), 1, 1, color='blue'))\nax.add_patch(plt.Rectangle((9, 45), 1, 1, color='blue'))\n```"}
{"file": "dataset/ori_500/line_77.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 12.0))\n\n# Set the title of the graph\nax.set_title('Performance of Llama')\n\n# Set the x-axis label\nax.set_xlabel('Iteration')\n\n# Set the y-axis label\nax.set_ylabel('Score')\n\n# Create a scatter plot with a color map\nscatter = ax.scatter(range(1, 11), [93, 94, 95, 96, 97, 98, 99, 100, 101, 102], c='pink', s=100)\n\n# Add a legend to the plot\nax.legend(['Config A - Llama', 'Config B - Llama', 'Config C - Llama'], loc='upper left')\n\n# Create a second subplot\nfig, ax = plt.subplots(figsize=(8.0, 12.0))\n\n# Set the title of the graph\nax.set_title('Performance of Falcon')\n\n# Set the x-axis label\nax.set_xlabel('Iteration')\n\n# Set the y-axis label\nax.set_ylabel('Score')\n\n# Create a scatter plot with a color map\nscatter = ax.scatter(range(1, 11), [75, 76, 77, 78, 79, 80, 81, 82, 83, 84], c='lightgreen', s=100)\n\n# Add a legend to the plot\nax.legend(['Config A - Falcon', 'Config B - Falcon', 'Config C - Falcon'], loc='upper left')\n\n# Create a third subplot\nfig, ax = plt.subplots(figsize=(8.0, 12.0))\n\n# Set the title of the graph\nax.set_title('Performance of Qwen')\n\n# Set the x-axis label\nax.set_xlabel('Iteration')\n\n# Set the y-axis label\nax.set_ylabel('Score')\n\n# Create a scatter plot with a color map\nscatter = ax.scatter(range(1, 11), [70, 71, 72, 73, 74, 75, 76, 77, 78, 79], c='lightblue', s=100)\n\n# Add a legend to the plot\nax.legend(['Config A - Qwen', 'Config B - Qwen', 'Config C - Qwen'], loc='upper left')\n```"}
{"file": "dataset/ori_500/line_78.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(10.0, 10.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightgrey')\n\n# Set the title of the plot\nax.set_title('Sales Growth Over Time')\n\n# Set the x-axis label\nax.set_xlabel('Quarter')\n\n# Set the y-axis label\nax.set_ylabel('Sales Growth')\n\n# Set the x-ticks\nax.set_xticks([1, 2, 3, 4])\n\n# Set the x-tick labels\nax.set_xticklabels(['Q1', 'Q2', 'Q3', 'Q4'])\n\n# Set the y-ticks\nax.set_yticks([0, 1, 2, 3, 4, 5])\n\n# Set the y-tick labels\nax.set_yticklabels(['$0', '$1', '$2', '$3', '$4', '$5'])\n\n# Plot the data\nax.plot([1, 2, 3, 4], [0, 1, 2, 3], 'r-')\nax.plot([1, 2, 3, 4], [0, 1, 2, 3], 'b-')\nax.plot([1, 2, 3, 4], [0, 1, 2, 3], 'g-')\nax.plot([1, 2, 3, 4], [0, 1, 2, 3], 'c-')\nax.plot([1, 2, 3, 4], [0, 1, 2, 3], 'm-')\nax.plot([1, 2, 3, 4], [0, 1, 2, 3], 'y-')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_79.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(2, 3, figsize=(18.0, 4.0))\n\n# Set the title for each subplot\naxs[0, 0].set_title('Traffic Performance')\naxs[0, 1].set_title('ETMm2 Performance')\naxs[0, 2].set_title('ETTh2 Performance')\naxs[1, 0].set_title('ECL Performance')\naxs[1, 1].set_title('ECL Performance')\naxs[1, 2].set_title('ECL Performance')\n\n# Create a scatter plot for each subplot\naxs[0, 0].scatter([100, 300, 500, 700], [1.2, 1.1, 1.0, 0.9], color='orange')\naxs[0, 1].scatter([100, 300, 500, 700], [1.2, 1.1, 1.0, 0.9], color='orange')\naxs[0, 2].scatter([100, 300, 500, 700], [1.2, 1.1, 1.0, 0.9], color='orange')\naxs[1, 0].scatter([100, 300, 500, 700], [1.2, 1.1, 1.0, 0.9], color='blue')\naxs[1, 1].scatter([100, 300, 500, 700], [1.2, 1.1, 1.0, 0.9], color='blue')\naxs[1, 2].scatter([100, 300, 500, 700], [1.2, 1.1, 1.0, 0.9], color='blue')\n\n# Add a legend to the figure\nfig.legend(['ECL Run 1', 'ECL Run 2'], loc='upper right')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Relaxation Level')\n\n# Set the x-axis label\nax.set_xlabel('Driving Style')\n\n# Set the y-axis label\nax.set_ylabel('Relaxation Level')\n\n# Define the data for the plot\ndriving_styles = ['Passive', 'Racing', 'Recovery', 'Sportive']\nrelaxation_levels = [14, 12, 10, 8]\n\n# Plot the data\nax.plot(driving_styles, relaxation_levels, 'ro-')\n\n# Add a legend\nax.legend(['Weather', 'Dry', 'Rain'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_80.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(3, 2, figsize=(9.0, 6.0))\n\n# Set the title for each subplot\naxs[0, 0].set_title('Category A Growth')\naxs[0, 1].set_title('Category B Growth')\naxs[1, 0].set_title('Category C Growth')\naxs[1, 1].set_title('Category D Growth')\naxs[2, 0].set_title('Category E Growth')\naxs[2, 1].set_title('Category F Growth')\n\n# Set the x-axis labels for each subplot\nfor ax in axs.flat:\n    ax.set_xlabel('Growth Phase')\n    ax.set_xticks([1, 2, 3, 4, 5])\n    ax.set_xticklabels(['Phase 1', 'Phase 2', 'Phase 3', 'Phase 4', 'Phase 5'])\n\n# Set the y-axis labels for each subplot\nfor ax in axs.flat:\n    ax.set_ylabel('Cumulative Value')\n    ax.set_yticks(range(0, 100, 10))\n    ax.set_ylim(0, 100)\n\n# Plot the data for each subplot\naxs[0, 0].plot([1, 2, 3, 4, 5], [20, 30, 40, 50, 60], color='purple')\naxs[0, 0].scatter([1, 2, 3, 4, 5], [20, 30, 40, 50, 60], color='purple')\naxs[0, 1].plot([1, 2, 3, 4, 5], [25, 35, 45, 55, 65], color='blue')\naxs[0, 1].scatter([1, 2, 3, 4, 5], [25, 35, 45, 55, 65], color='blue')\naxs[1, 0].plot([1, 2, 3, 4, 5], [30, 40, 50, 60, 70], color='orange')\naxs[1, 0].scatter([1, 2, 3, 4, 5], [30, 40, 50, 60, 70], color='orange')\naxs[1, 1].plot([1, 2, 3, 4, 5], [35, 45, 55, 65, 75], color='green')\naxs[1, 1].scatter([1, 2, 3, 4, 5], [35, 45, 55, 65, 75], color='green')\naxs[2, 0].plot([1, 2, 3, 4, 5], [40, 50, 60, 70, 80], color='red')\naxs[2, 0].scatter([1, 2, 3, 4, 5], [40, 50, 60, 70, 80], color='red')\naxs[2, 1].plot([1, 2, 3, 4, 5], [45, 55, 65, 75, 85], color='yellow')\naxs[2, 1].scatter([1, 2, 3, 4, 5], [45, 55, 65, 75, 85], color='yellow')\n\n# Add a legend to the first subplot\naxs[0, 0].legend(['Run 1', 'Run 2'], loc='upper left')\n\n# Add a legend to the second subplot\naxs[0, 1].legend(['Run 1', 'Run 2'], loc='upper left')\n\n# Add a legend to the third subplot\naxs[1, 0].legend(['Run 1', 'Run 2'], loc='upper left')\n\n# Add a legend to the fourth subplot\naxs[1, 1].legend(['Run 1', 'Run 2'], loc='upper left')\n\n# Add a legend to the fifth subplot\naxs[2, 0].legend(['Run 1', 'Run 2'], loc='upper left')\n\n# Add a legend to the sixth subplot\naxs[2, 1].legend(['Run 1', 'Run 2'], loc='upper left')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/line_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(4, 30)\n\n# Set the y-axis limits\nax.set_ylim(10, 15)\n\n# Set the x-axis ticks\nax.set_xticks([4, 6, 10, 20, 30])\n\n# Set the y-axis ticks\nax.set_yticks([10, 12, 14, 15])\n\n# Set the x-axis labels\nax.set_xticklabels(['4\u00d710^0', '6\u00d710^0', '10', '2\u00d710^1', '3\u00d710^1'])\n\n# Set the y-axis labels\nax.set_yticklabels(['10', '12', '14', '15'])\n\n# Set the title of the plot\nax.set_title('Stock Price Prediction')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the text\nax.text(15, 14, 'Standard', color='blue')\nax.text(15, 13, 'Constrained', color='orange')\n\n# Set the color of the plot\nax.plot([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='blue')\n\n# Set the color of the scatter plot\nax.scatter([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='red')\n\n# Set the color of the line plot\nax.plot([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='orange')\n\n# Set the color of the bar plot\nax.bar([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='green')\n\n# Set the color of the pie chart\nax.pie([10, 12, 14, 15, 15], colors=['blue', 'red', 'orange', 'green', 'purple'])\n\n# Set the color of the histogram\nax.hist([10, 12, 14, 15, 15], bins=5, color='yellow')\n\n# Set the color of the scatter plot\nax.scatter([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='black')\n\n# Set the color of the line plot\nax.plot([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='white')\n\n# Set the color of the bar plot\nax.bar([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='cyan')\n\n# Set the color of the pie chart\nax.pie([10, 12, 14, 15, 15], colors=['magenta', 'lime', 'silver', 'gold', 'brown'])\n\n# Set the color of the histogram\nax.hist([10, 12, 14, 15, 15], bins=5, color='pink')\n\n# Set the color of the scatter plot\nax.scatter([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='orange')\n\n# Set the color of the line plot\nax.plot([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='purple')\n\n# Set the color of the bar plot\nax.bar([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='cyan')\n\n# Set the color of the pie chart\nax.pie([10, 12, 14, 15, 15], colors=['magenta', 'lime', 'silver', 'gold', 'brown'])\n\n# Set the color of the histogram\nax.hist([10, 12, 14, 15, 15], bins=5, color='pink')\n\n# Set the color of the scatter plot\nax.scatter([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='orange')\n\n# Set the color of the line plot\nax.plot([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='purple')\n\n# Set the color of the bar plot\nax.bar([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='cyan')\n\n# Set the color of the pie chart\nax.pie([10, 12, 14, 15, 15], colors=['magenta', 'lime', 'silver', 'gold', 'brown'])\n\n# Set the color of the histogram\nax.hist([10, 12, 14, 15, 15], bins=5, color='pink')\n\n# Set the color of the scatter plot\nax.scatter([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='orange')\n\n# Set the color of the line plot\nax.plot([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='purple')\n\n# Set the color of the bar plot\nax.bar([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='cyan')\n\n# Set the color of the pie chart\nax.pie([10, 12, 14, 15, 15], colors=['magenta', 'lime', 'silver', 'gold', 'brown'])\n\n# Set the color of the histogram\nax.hist([10, 12, 14, 15, 15], bins=5, color='pink')\n\n# Set the color of the scatter plot\nax.scatter([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='orange')\n\n# Set the color of the line plot\nax.plot([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='purple')\n\n# Set the color of the bar plot\nax.bar([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='cyan')\n\n# Set the color of the pie chart\nax.pie([10, 12, 14, 15, 15], colors=['magenta', 'lime', 'silver', 'gold', 'brown'])\n\n# Set the color of the histogram\nax.hist([10, 12, 14, 15, 15], bins=5, color='pink')\n\n# Set the color of the scatter plot\nax.scatter([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='orange')\n\n# Set the color of the line plot\nax.plot([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='purple')\n\n# Set the color of the bar plot\nax.bar([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='cyan')\n\n# Set the color of the pie chart\nax.pie([10, 12, 14, 15, 15], colors=['magenta', 'lime', 'silver', 'gold', 'brown'])\n\n# Set the color of the histogram\nax.hist([10, 12, 14, 15, 15], bins=5, color='pink')\n\n# Set the color of the scatter plot\nax.scatter([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='orange')\n\n# Set the color of the line plot\nax.plot([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='purple')\n\n# Set the color of the bar plot\nax.bar([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='cyan')\n\n# Set the color of the pie chart\nax.pie([10, 12, 14, 15, 15], colors=['magenta', 'lime', 'silver', 'gold', 'brown'])\n\n# Set the color of the histogram\nax.hist([10, 12, 14, 15, 15], bins=5, color='pink')\n\n# Set the color of the scatter plot\nax.scatter([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='orange')\n\n# Set the color of the line plot\nax.plot([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='purple')\n\n# Set the color of the bar plot\nax.bar([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='cyan')\n\n# Set the color of the pie chart\nax.pie([10, 12, 14, 15, 15], colors=['magenta', 'lime', 'silver', 'gold', 'brown'])\n\n# Set the color of the histogram\nax.hist([10, 12, 14, 15, 15], bins=5, color='pink')\n\n# Set the color of the scatter plot\nax.scatter([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='orange')\n\n# Set the color of the line plot\nax.plot([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='purple')\n\n# Set the color of the bar plot\nax.bar([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='cyan')\n\n# Set the color of the pie chart\nax.pie([10, 12, 14, 15, 15], colors=['magenta', 'lime', 'silver', 'gold', 'brown'])\n\n# Set the color of the histogram\nax.hist([10, 12, 14, 15, 15], bins=5, color='pink')\n\n# Set the color of the scatter plot\nax.scatter([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='orange')\n\n# Set the color of the line plot\nax.plot([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='purple')\n\n# Set the color of the bar plot\nax.bar([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='cyan')\n\n# Set the color of the pie chart\nax.pie([10, 12, 14, 15, 15], colors=['magenta', 'lime', 'silver', 'gold', 'brown'])\n\n# Set the color of the histogram\nax.hist([10, 12, 14, 15, 15], bins=5, color='pink')\n\n# Set the color of the scatter plot\nax.scatter([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='orange')\n\n# Set the color of the line plot\nax.plot([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='purple')\n\n# Set the color of the bar plot\nax.bar([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='cyan')\n\n# Set the color of the pie chart\nax.pie([10, 12, 14, 15, 15], colors=['magenta', 'lime', 'silver', 'gold', 'brown'])\n\n# Set the color of the histogram\nax.hist([10, 12, 14, 15, 15], bins=5, color='pink')\n\n# Set the color of the scatter plot\nax.scatter([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='orange')\n\n# Set the color of the line plot\nax.plot([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='purple')\n\n# Set the color of the bar plot\nax.bar([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='cyan')\n\n# Set the color of the pie chart\nax.pie([10, 12, 14, 15, 15], colors=['magenta', 'lime', 'silver', 'gold', 'brown'])\n\n# Set the color of the histogram\nax.hist([10, 12, 14, 15, 15], bins=5, color='pink')\n\n# Set the color of the scatter plot\nax.scatter([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='orange')\n\n# Set the color of the line plot\nax.plot([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='purple')\n\n# Set the color of the bar plot\nax.bar([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='cyan')\n\n# Set the color of the pie chart\nax.pie([10, 12, 14, 15, 15], colors=['magenta', 'lime', 'silver', 'gold', 'brown'])\n\n# Set the color of the histogram\nax.hist([10, 12, 14, 15, 15], bins=5, color='pink')\n\n# Set the color of the scatter plot\nax.scatter([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='orange')\n\n# Set the color of the line plot\nax.plot([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='purple')\n\n# Set the color of the bar plot\nax.bar([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='cyan')\n\n# Set the color of the pie chart\nax.pie([10, 12, 14, 15, 15], colors=['magenta', 'lime', 'silver', 'gold', 'brown'])\n\n# Set the color of the histogram\nax.hist([10, 12, 14, 15, 15], bins=5, color='pink')\n\n# Set the color of the scatter plot\nax.scatter([4, 6, 10, 20, 30], [10, 12, 14, 15, 15], color='orange')\n\n# Set the"}
{"file": "dataset/ori_500/multidiff_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis for the map\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Create a rectangle for the map\nax.add_patch(plt.Rectangle((0, 0), 1, 1, color='lightblue'))\n\n# Add text to the map\nax.text(0.5, 0.5, 'Map', ha='center', va='center')\n\n# Create a pie chart for the literacy rate by region\nfig, ax = plt.subplots(figsize=(5, 5))\nlabels = ['North', 'East', 'South', 'West']\nsizes = [35, 25, 20, 15]\ncolors = ['cyan', 'yellow', 'purple', 'orange']\nexplode = (0.1, 0, 0, 0)  # explode 1st slice\n\nax.pie(sizes, explode=explode, labels=labels, colors=colors,\nautopct='%1.1f%%', shadow=True, startangle=140)\n\nax.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\n# Add text to the pie chart\nax.text(0.5, 0.5, 'Literacy Rate by Region', ha='center', va='center')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 2.0))\n\n# Set the title of the plot\nax.set_title('Beauty Product Ratings')\n\n# Create a bar chart with the data\nax.bar(['PaleSkin', 'OvalFace', 'Smiling', 'BrownHair', 'Attractive'], [1.5, 1.3, 1.2, 1.1, 1.0], color='blue')\n\n# Set the x-axis label\nax.set_xlabel('Product')\n\n# Set the y-axis label\nax.set_ylabel('Rating')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nengr = [44.15, 44.05, 41.55, 40.90, 40.65, 39.45, 36.70]\nzhang = [44.15, 44.05, 41.55, 40.90, 40.65, 39.45, 36.70]\nrice = [44.15, 44.05, 41.55, 40.90, 40.65, 39.45, 36.70]\nrade = [44.15, 44.05, 41.55, 40.90, 40.65, 39.45, 36.70]\nhendry = [44.15, 44.05, 41.55, 40.90, 40.65, 39.45, 36.70]\naddep = [44.15, 44.05, 41.55, 40.90, 40.65, 39.45, 36.70]\ncarmon = [44.15, 44.05, 41.55, 40.90, 40.65, 39.45, 36.70]\n\n# Create a figure and a set of subplots\nfig, (ax1, ax2) = plt.subplots(1, 2, figsize=(10.0, 6.0))\n\n# Plot the data\nax1.plot(engr, 'g')\nax1.plot(zhang, 'b')\nax1.plot(rice, 'c')\nax1.plot(rade, 'm')\nax1.plot(hendry, 'y')\nax1.plot(addep, 'k')\nax1.plot(carmon, 'r')\n\n# Set the title and labels\nax1.set_title('Robust Error (%)')\nax1.set_xlabel('Time (s)')\nax1.set_ylabel('Error (%)')\n\n# Create a second subplot with a different color scheme\nax2.bar(['Engrom (M1)', 'Zhang (M2)', 'Rice (M3)', 'Rade (M4)', 'Hendrycs (M5)', 'Addep. (M6)', 'Carmon (M7)'],\n       [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],\n       color='green')\n\n# Set the title and labels\nax2.set_title('RNFs (%)')\nax2.set_xlabel('Time (s)')\nax2.set_ylabel('RFs (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data for the plots\nx = np.linspace(0, 90, 100)\ny1 = np.sin(x * np.pi / 45)\ny2 = np.cos(x * np.pi / 45)\ny3 = np.tan(x * np.pi / 45)\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 3, figsize=(10, 4))\n\n# Plot the data\naxs[0].plot(x, y1, 'r-')\naxs[0].set_title('VGG16')\naxs[1].plot(x, y2, 'b-')\naxs[1].set_title('Resnet101')\naxs[2].plot(x, y3, 'g-')\naxs[2].set_title('Rotation Invariance')\n\n# Set the x-axis limits\nfor ax in axs:\n    ax.set_xlim([0, 90])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the colorbar\ncmap = plt.get_cmap('hot')\nnorm = plt.Normalize(vmin=-0.5, vmax=1.5)\nsm = plt.cm.ScalarMappable(cmap=cmap, norm=norm)\nsm.set_array([])\ncbar = fig.colorbar(sm)\n\n# Set the title\nax.set_title('Color Palette')\n\n# Set the x-axis label\nax.set_xlabel('Sensitivity Attribute')\n\n# Set the y-axis label\nax.set_ylabel('Intensity')\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(-0.5, 1.6, 0.5))\nax.set_yticks(np.arange(-0.5, 1.6, 0.5))\n\n# Set the x-axis labels\nax.set_xticklabels(['PaleSkin', 'OvalFace', 'Smiling', 'Attractive', 'Male', 'BigLips', 'PointyNose', 'White', 'BigNose', 'NoBeard', 'HeavyMakeup'])\n\n# Set the y-axis labels\nax.set_yticklabels(['PaleSkin', 'OvalFace', 'Smiling', 'Attractive', 'Male', 'BigLips', 'PointyNose', 'White', 'BigNose', 'NoBeard', 'HeavyMakeup'])\n\n# Set the grid\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white')\n\n# Set the color of the text\nax.set_color('black')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the tick labels\nax.tick_params(axis='both', which='major', labelsize=10)\n\n# Set the color of the tick lines\nax.tick_params(axis='both', which='major', colors='black')\n\n# Set the color of the box around the plot\nax.spines['top'].set_color('black')\nax.spines['bottom'].set_color('black')\nax.spines['left'].set_color('black')\nax.spines['right'].set_color('black')\n\n# Set the color of the background\nax.set_facecolor('white"}
{"file": "dataset/ori_500/multidiff_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 6.0))\n\n# Set the title of the plot\nax.set_title('a')\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Create a line plot with random data\nx = np.linspace(0, 50, 100)\ny = np.sin(x)\nax.plot(x, y)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='blue')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='red')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='green')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='yellow')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='cyan')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='magenta')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='black')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='white')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='gray')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='pink')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='purple')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='lime')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='cyan')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='magenta')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='black')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='white')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='gray')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='pink')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='purple')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='lime')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='cyan')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='magenta')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='black')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='white')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='gray')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='pink')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='purple')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='lime')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='cyan')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='magenta')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='black')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='white')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='gray')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='pink')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='purple')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='lime')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='cyan')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='magenta')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='black')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='white')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='gray')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='pink')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='purple')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='lime')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='cyan')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='magenta')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='black')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='white')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='gray')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='pink')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='purple')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='lime')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='cyan')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='magenta')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='black')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='white')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='gray')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='pink')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='purple')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='lime')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='cyan')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='magenta')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='black')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='white')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='gray')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='silver')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='gold')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='brown')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='pink')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='orange')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='purple')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='navy')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='maroon')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='lime')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='teal')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='cyan')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='magenta')\nax.add_patch(rect)\n\n# Create a rectangle patch\nrect = plt.Rectangle((0, 0), 1, 1, fc='black')\nax.add_patch(rect)\n\n# Create a rectangle"}
{"file": "dataset/ori_500/multidiff_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 4.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Create a bar chart\ncategories = ['Sentiment', 'Toxicity', 'News']\nvalues = [0.35, 0.25, 0.20]\nbars = ax.bar(categories, values, color='darkblue')\n\n# Add labels and title\nax.set_xlabel('Categories')\nax.set_ylabel('Correlation')\nax.set_title('Sentiment Analysis Results')\n\n# Add value labels on top of each bar\nfor bar in bars:\n    yval = bar.get_height()\n    ax.text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom')\n\n# Create a second subplot for the sentiment analysis results\nsentiment_ax = fig.add_subplot(122)\nsentiment_ax.set_facecolor('lightgrey')\nsentiment_ax.set_title('Sentiment Analysis Results')\n\n# Create a heatmap\nsentiment_data = [\n    [-0.40, 0.14, 0.22, 0.13],\n    [-0.13, -0.03, 0.17, 0.12],\n    [-0.24, 0.05, 0.31, 0.17]\n]\nsentiment_cmap = plt.cm.RdYlGn\nsentiment_heatmap = sentiment_ax.imshow(sentiment_data, cmap=sentiment_cmap)\n\n# Add colorbar\ncbar = fig.colorbar(sentiment_heatmap, ax=sentiment_ax)\ncbar.set_label('Sentiment Score')\n\n# Set the x-axis labels\nsentiment_ax.set_xticks(np.arange(len(categories)))\nsentiment_ax.set_yticks(np.arange(len(categories)))\nsentiment_ax.set_xticklabels(categories)\nsentiment_ax.set_yticklabels(categories)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Success Rate of Adversarial Circuits')\n\n# Set the x-axis label\nax.set_xlabel('Number of Successful Adversarial Circuits')\n\n# Set the y-axis label\nax.set_ylabel('Adversarial Circuit Success Rate')\n\n# Set the x-ticks\nax.set_xticks([1, 2, 3, 4])\n\n# Set the x-tick labels\nax.set_xticklabels(['c1355', 'c1908', 'c2670', 'c3540'])\n\n# Set the y-ticks\nax.set_yticks([0, 10, 20, 30, 40, 50, 60])\n\n# Set the y-tick labels\nax.set_yticklabels(['0%', '10%', '20%', '30%', '40%', '50%', '60%'])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('lightgray')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'green', 'red', 'purple', 'orange', 'cyan', 'magenta'])\n\n# Set the color of the line\nax.plot([1, 2, 3, 4], [10, 20, 30, 40], 'r-')\n\n# Set the color of the marker\nax.plot([1, 2, 3, 4], [10, 20, 30, 40], 'ro')\n\n# Set the color of the fill\nax.fill_between([1, 2, 3, 4], [10, 20, 30, 40], [50, 60, 70, 80], color='blue', alpha=0.5)\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', edgecolor='black')\n\n# Set the color of the facecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', facecolor='blue')\n\n# Set the color of the hatch\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue', hatch='///')\n\n# Set the color of the edgecolor\nax.bar([1, 2, 3, 4], [10, 20, 30, 40], color='blue',"}
{"file": "dataset/ori_500/multidiff_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the first plot\nfig, ax = plt.subplots(figsize=(10, 4))\n\n# Create a bar chart\nax.bar(range(1, 6), [20, 30, 40, 50, 60], color='blue')\nax.set_xlabel('Study Level')\nax.set_ylabel('Cumulative Knowledge (%)')\n\n# Create a second bar chart\nfig, ax = plt.subplots(figsize=(10, 4))\nax.bar(range(1, 9), [150, 250, 200, 100, 150, 180, 120, 200], color='green')\nax.set_xlabel('Domain')\nax.set_ylabel('Number of Publications by Domain')\n\n# Display the plots\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 10.0))\n\n# Set the title of the graph\nax.set_title('Technological Advancements')\n\n# Set the x-axis label\nax.set_xlabel('Year')\n\n# Set the y-axis label\nax.set_ylabel('Progress (%)')\n\n# Set the x-ticks\nax.set_xticks([2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022])\n\n# Set the y-ticks\nax.set_yticks([0, 20, 40, 60, 80, 100, 120])\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the border\nax.spines['bottom'].set_color('black')\nax.spines['top'].set_color('black')\nax.spines['right'].set_color('black')\nax.spines['left'].set_color('black')\n\n# Set the color of the ticks\nax.tick_params(axis='both', colors='black')\n\n# Set the color of the labels\nax.xaxis.label.set_color('black')\nax.yaxis.label.set_color('black')\n\n# Set the color of the title\nax.title.set_color('black')\n\n# Set the color of the legend\nax.legend().get_texts()[0].set_color('blue')\nax.legend().get_texts()[1].set_color('orange')\nax.legend().get_texts()[2].set_color('green')\n\n# Set the color of the bars\nax.bar([2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022], [10, 20, 30, 40, 50, 60, 70, 80], color='blue')\nax.bar([2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022], [20, 30, 40, 50, 60, 70, 80, 90], color='orange')\nax.bar([2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022], [30, 40, 50, 60, 70, 80, 90, 100], color='green')\n\n# Set the color of the line\nax.plot([2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022], [10, 20, 30, 40, 50, 60, 70, 80], color='blue')\nax.plot([2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022], [20, 30, 40, 50, 60, 70, 80, 90], color='orange')\nax.plot([2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022], [30, 40, 50, 60, 70, 80, 90, 100], color='green')\n\n# Set the color of the scatter plot\nax.scatter([2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022], [10, 20, 30, 40, 50, 60, 70, 80], color='blue')\nax.scatter([2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022], [20, 30, 40, 50, 60, 70, 80, 90], color='orange')\nax.scatter([2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022], [30, 40, 50, 60, 70, 80, 90, 100], color='green')\n\n# Set the color of the histogram\nax.hist([10, 20, 30, 40, 50, 60, 70, 80], bins=10, color='blue')\nax.hist([20, 30, 40, 50, 60, 70, 80, 90], bins=10, color='orange')\nax.hist([30, 40, 50, 60, 70, 80, 90, 100], bins=10, color='green')\n\n# Set the color of the pie chart\nax.pie([10, 20, 30, 40, 50, 60, 70, 80], colors=['blue', 'orange', 'green'], autopct='%1.1f%%')\n\n# Set the color of the box plot\nax.boxplot([10, 20, 30, 40, 50, 60, 70, 80], vert=False, patch_artist=True, boxprops=dict(facecolor='blue'))\n\n# Set the color of the violin plot\nax.violinplot([10, 20, 30, 40, 50, 60, 70, 80], showmeans=True, showmedians=True)\n\n# Set the color of the heatmap\nax.imshow([[10, 20, 30, 40, 50, 60, 70, 80], [20, 30, 40, 50, 60, 70, 80, 90], [30, 40, 50, 60, 70, 80, 90, 100]], cmap='Blues')\n\n# Set the color of the contour plot\nx = np.linspace(0, 10, 100)\ny = np.linspace(0, 10, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(X) + np.cos(Y)\nCS = ax.contour(X, Y, Z, levels=10, cmap='Blues')\n\n# Set the color of the stream plot\nax.streamplot(X, Y, Z, Z, color='blue')\n\n# Set the color of the quiver plot\nU = np.cos(X)\nV = np.sin(Y)\nax.quiver(X, Y, U, V, color='blue')\n\n# Set the color of the polar plot\nax.polar()\n\n# Set the color of the 3D plot\nfrom mpl_toolkits.mplot3d import Axes3D\nax = fig.add_subplot(111, projection='3d')\nx = np.linspace(-5, 5, 100)\ny = np.linspace(-5, 5, 100)\nx, y = np.meshgrid(x, y)\nz = np.sin(np.sqrt(x**2 + y**2))\nax.plot_surface(x, y, z, cmap='Blues')\n\n# Set the color of the contourf plot\nax.contourf(x, y, z, cmap='Blues')\n\n# Set the color of the imshow plot\nax.imshow(z, cmap='Blues')\n\n# Set the color of the scatter plot\nax.scatter(x, y, c=z, cmap='Blues')\n\n# Set the color of the bar plot\nax.bar(x, z, color='blue')\n\n# Set the color of the pie chart\nax.pie(z, colors=['blue'], autopct='%1.1f%%')\n\n# Set the color of the box plot\nax.boxplot(z, vert=False, patch_artist=True, boxprops=dict(facecolor='blue'))\n\n# Set the color of the violin plot\nax.violinplot(z, showmeans=True, showmedians=True)\n\n# Set the color of the heatmap\nax.imshow(z, cmap='Blues')\n\n# Set the color of the contour plot\nCS = ax.contour(x, y, z, levels=10, cmap='Blues')\n\n# Set the color of the stream plot\nax.streamplot(x, y, z, z, color='blue')\n\n# Set the color of the quiver plot\nax.quiver(x, y, U, V, color='blue')\n\n# Set the color of the polar plot\nax.polar()\n\n# Set the color of the 3D plot\nax = fig.add_subplot(111, projection='3d')\nax.plot_surface(x, y, z, cmap='Blues')\n\n# Set the color of the contourf plot\nax.contourf(x, y, z, cmap='Blues')\n\n# Set the color of the imshow plot\nax.imshow(z, cmap='Blues')\n\n# Set the color of the scatter plot\nax.scatter(x, y, c=z, cmap='Blues')\n\n# Set the color of the bar plot\nax.bar(x, z, color='blue')\n\n# Set the color of the pie chart\nax.pie(z, colors=['blue'], autopct='%1.1f%%')\n\n# Set the color of the box plot\nax.boxplot(z, vert=False, patch_artist=True, boxprops=dict(facecolor='blue'))\n\n# Set the color of the violin plot\nax.violinplot(z, showmeans=True, showmedians=True)\n\n# Set the color of the heatmap\nax.imshow(z, cmap='Blues')\n\n# Set the color of the contour plot\nCS = ax.contour(x, y, z, levels=10, cmap='Blues')\n\n# Set the color of the stream plot\nax.streamplot(x, y, z, z, color='blue')\n\n# Set the color of the quiver plot\nax.quiver(x, y, U, V, color='blue')\n\n# Set the color of the polar plot\nax.polar()\n\n# Set the color of the 3D plot\nax = fig.add_subplot(111, projection='3d')\nax.plot_surface(x, y, z, cmap='Blues')\n\n# Set the color of the contourf plot\nax.contourf(x, y, z, cmap='Blues')\n\n# Set the color of the imshow plot\nax.imshow(z, cmap='Blues')\n\n# Set the color of the scatter plot\nax.scatter(x, y, c=z, cmap='Blues')\n\n# Set the color of the bar plot\nax.bar(x, z, color='blue')\n\n# Set the color of the pie chart\nax.pie(z, colors=['blue'], autopct='%1.1f%%')\n\n# Set the color of the box plot\nax.boxplot(z, vert=False, patch_artist=True, boxprops=dict(facecolor='blue'))\n\n# Set the color of the violin plot\nax.violinplot(z, showmeans=True, showmedians=True)\n\n# Set the color of the heatmap\nax.imshow(z, cmap='Blues')\n\n# Set the color of the contour plot\nCS = ax.contour(x, y, z, levels=10, cmap='Blues')\n\n# Set the color of the stream plot\nax.streamplot(x, y, z, z, color='blue')\n\n# Set the color of the quiver plot\nax.quiver(x, y, U, V, color='blue')\n\n# Set the color of the polar plot\nax.polar()\n\n# Set the color of the 3D plot\nax = fig.add_subplot(111, projection='3d')\nax.plot_surface(x, y, z, cmap='Blues')\n\n# Set the color of the contourf plot\nax.contourf(x, y, z, cmap='Blues')\n\n# Set the color of the imshow plot\nax.imshow(z, cmap='Blues')\n\n# Set the color of the scatter plot\nax.scatter(x, y, c=z, cmap='Blues')\n\n# Set the color of the bar plot\nax.bar(x, z, color='blue')\n\n# Set the color of the pie chart\nax.pie(z, colors=['blue'], autopct='%1.1f%%')\n\n# Set the color of the box plot\nax.boxplot(z, vert=False, patch_artist=True, boxprops=dict(facecolor='blue'))\n\n# Set the color of the violin plot\nax.violinplot(z, showmeans=True, showmedians=True)\n\n# Set the color of the heatmap\nax.imshow(z, cmap='Blues')\n\n# Set the color of the contour plot\nCS = ax.contour(x, y, z, levels=10, cmap='Blues')\n\n# Set the color of the stream plot\nax.streamplot(x, y, z, z, color='blue')\n\n# Set the color of the quiver plot\nax.quiver(x, y, U, V, color='blue')\n\n# Set the color of the polar plot\nax.polar()\n\n# Set the color of the 3D plot\nax = fig.add_subplot(111, projection='3d')\nax.plot_surface(x, y, z, cmap='Blues')\n\n# Set the color of the contourf plot\nax.contourf(x, y, z, cmap='Blues')\n\n# Set the color of the imshow plot\nax.imshow(z, cmap='Blues')\n\n# Set the color of the scatter plot\nax.scatter(x, y, c=z, cmap='Blues')\n\n# Set the color of the bar plot\nax.bar(x, z, color='blue')\n\n# Set the color of the pie chart\nax.pie(z, colors=['blue'], autopct='%1.1f%%')\n\n# Set the color of the box plot\nax.boxplot(z, vert=False, patch_artist=True, boxprops=dict(facecolor='blue'))\n\n# Set the color of the violin plot\nax.violinplot(z, showmeans=True, showmedians=True)\n\n# Set the color of the heatmap\nax.imshow(z, cmap='Blues')\n\n# Set the color of the contour plot\nCS = ax.contour(x, y, z, levels=10, cmap='Blues')\n\n# Set the color of the stream plot\nax.streamplot(x, y, z, z, color='blue')\n\n# Set the color of the quiver plot\nax.quiver(x, y, U, V, color='blue')\n\n# Set the color of the polar plot\nax.polar()\n\n# Set the color of the 3D plot\nax = fig.add_subplot(111, projection='3d')\nax.plot_surface(x, y, z, cmap='Blues')\n\n# Set the color of the contourf plot\nax.contourf(x, y, z, cmap='Blues')\n\n# Set the color of the imshow plot\nax.imshow(z, cmap='Blues')\n\n# Set the color of the scatter plot\nax.scatter(x, y, c=z, cmap='Blues')\n\n# Set the color of the bar plot\nax.bar(x, z, color='blue')\n\n# Set the color of the pie chart\nax.pie(z, colors=['blue'], autopct='%1.1f%%')\n\n# Set the color of the box plot\nax.boxplot(z, vert=False, patch_artist=True, boxprops=dict(facecolor='blue'))\n\n# Set the color of the violin plot\nax.violinplot(z, showmeans=True, showmedians=True)\n\n# Set the color of the heatmap\nax.imshow(z, cmap='Blues')\n\n# Set the color of the contour plot\nCS = ax.contour(x, y, z, levels=10, cmap='Blues')\n\n# Set the color of the stream plot\nax.streamplot(x, y, z, z, color='blue')\n\n# Set the color of the quiver plot\nax.quiver(x, y, U, V, color='blue')\n\n# Set the color of the polar plot\nax.polar()\n\n# Set the color of the 3D plot\nax = fig.add_subplot(111, projection='3d')\nax.plot_surface(x, y, z, cmap='Blues')\n\n# Set the color of the contourf plot\nax.contourf(x, y, z, cmap='Blues')\n\n# Set the color of the imshow plot\nax.imshow(z, cmap='Blues')\n\n# Set the color of the scatter plot\nax.scatter(x, y, c=z, cmap='Blues')\n\n# Set the color of the bar plot\nax.bar(x, z, color='blue')\n\n# Set the color of the pie chart\nax.pie(z, colors=['blue'], autopct='%1.1f%%')\n\n# Set the color of the box plot\nax.boxplot(z, vert=False, patch_artist=True, boxprops=dict(facecolor='blue'))\n\n# Set the color of the violin plot\nax.violinplot(z, showmeans=True, showmedians=True)\n\n# Set the color of the heatmap\nax.imshow(z, cmap='Blues')\n\n# Set the color of the contour plot\nCS = ax.contour(x, y, z, levels=10, cmap='Blues')\n\n# Set the color of the stream plot\nax.streamplot(x, y, z, z, color='blue')\n\n# Set the color of the quiver plot\nax.quiver(x, y, U, V, color='blue')\n\n# Set the color of the polar plot\nax.polar()\n\n# Set the color of the 3D plot\nax = fig.add_subplot(111, projection='3d')\nax.plot_surface(x, y, z, cmap='Blues')\n\n# Set the color of the contourf plot\nax.contourf(x,"}
{"file": "dataset/ori_500/multidiff_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 10.0))\n\n# Set the title of the graph\nax.set_title('Average Legal Crime Rates by Country')\n\n# Create a bar chart with the data\nax.bar(['USA', 'UK', 'Germany', 'France', 'Italy', 'Spain'], [3.2, 2.9, 2.5, 2.7, 2.4, 2.6], color='orange')\n\n# Set the x-axis label\nax.set_xlabel('Country')\n\n# Set the y-axis label\nax.set_ylabel('Crime Rate per 100,000 Inhabitants')\n\n# Create a second subplot for the pie chart\nax2 = fig.add_subplot(212)\n\n# Set the title of the second subplot\nax2.set_title('Average Legal Crime Rates by Country')\n\n# Create a pie chart with the data\nax2.pie([3.2, 2.9, 2.5, 2.7, 2.4, 2.6], labels=['Theft', 'Assault', 'Fraud', 'Drug Trafficking', 'Rape', 'Vandalism'], colors=['blue', 'green', 'red', 'purple', 'cyan', 'magenta'])\n\n# Set the aspect ratio of the pie chart to be equal\nax2.axis('equal')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis for the first graph\nfig, ax = plt.subplots(figsize=(10, 5))\nax.set_title('Student Performance in Schools')\nax.set_xlabel('Score')\nax.set_ylabel('Number of Students')\n\n# Create a bar chart for the first graph\nax.bar([40, 50, 60, 70, 80, 90, 100], [20, 30, 40, 50, 60, 70, 80], color='blue')\n\n# Create a second graph\nfig, ax = plt.subplots(figsize=(10, 5))\nax.set_title('Resource Allocation in Schools')\nax.set_xlabel('Resource')\nax.set_ylabel('Percentage')\n\n# Create a pie chart for the second graph\nax.pie([20, 10, 15, 10, 5, 10], labels=['Books', 'Staff', 'Extracurricular', 'Technology', 'Facilities', 'Sports'], autopct='%1.1f%%', startangle=90)\nax.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.\n\n# Display the plots\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the first plot\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Create a scatter plot with random data\nx = np.random.rand(50)\ny = np.random.rand(50)\nax.scatter(x, y)\n\n# Set the title of the plot\nax.set_title('Average Annual Temperature')\n\n# Set the x and y labels\nax.set_xlabel('Region')\nax.set_ylabel('Temperature (\u00b0C)')\n\n# Create a second figure and axis for the second plot\nfig2, ax2 = plt.subplots(figsize=(10, 5))\n\n# Create a bar chart with random data\nregions = ['Lowland', 'Highland', 'Plateau']\nelevations = [1000, 1500, 2000]\nax2.bar(regions, elevations, color='blue')\n\n# Set the title of the plot\nax2.set_title('Geographical Elevation Distribution')\n\n# Set the x and y labels\nax2.set_xlabel('Elevation (m)')\nax2.set_ylabel('Density (kg/m\u00b3)')\n\n# Show the plots\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data for the graph\nyears = ['2019', '2020', '2021', '2022']\naccounts = [400, 350, 300, 250]\nproducts = ['Savings', 'CDs', 'Stocks', 'Bonds', 'Real Estate', 'Mutual Funds', 'ETFs']\namounts = [200, 175, 150, 125, 100, 75, 50]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Plot the data\nax.plot(years, accounts, color='blue')\nax.bar(products, amounts, color='green')\n\n# Set the title and labels\nax.set_title('Investment Growth Over Time')\nax.set_xlabel('Year')\nax.set_ylabel('Number of Accounts (%)')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_22.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis for the first subplot\nfig, ax = plt.subplots(figsize=(10, 10))\nax.set_title('AI Task Success Rates')\nax.set_xlabel('Algorithm')\nax.set_ylabel('Success Rate (%)')\n\n# Create a bar chart with rectangles representing success rates\nrects = ax.bar(['Image Recog.', 'Speech Recog.', 'Language Proc.', 'Game AI'], [85, 90, 95, 92], color='skyblue')\n\n# Add labels to each rectangle\nfor rect in rects:\n    height = rect.get_height()\n    ax.annotate('{}'.format(height),\n                xy=(rect.get_x() + rect.get_width() / 2, height),\n                xytext=(0, 3),  # 3 points vertical offset\n                textcoords=\"offset points\",\n                ha='center', va='bottom')\n\n# Create a second subplot\nfig, ax = plt.subplots(figsize=(10, 10))\nax.set_title('Algorithm Efficiency Scores')\nax.set_xlabel('Algorithm')\nax.set_ylabel('Efficiency (%)')\n\n# Create a scatter plot with circles representing efficiency scores\ncircles = ax.scatter(['Alg1', 'Alg2', 'Alg3', 'Alg4'], [90, 85, 95, 92], color='pink')\n\n# Add labels to each circle\nfor i, txt in enumerate(['Alg1', 'Alg2', 'Alg3', 'Alg4']):\n    ax.annotate(txt, (i, 95))\n\n# Create a third subplot\nfig, ax = plt.subplots(figsize=(10, 10))\nax.set_title('AI Model Adaptability')\nax.set_xlabel('Model')\nax.set_ylabel('Adaptability Score (%)')\n\n# Create a line graph with lines representing adaptability scores\nlines = ax.plot(['Model A', 'Model B', 'Model C', 'Model D'], [95, 90, 85, 80], color='green')\n\n# Add labels to each line\nfor i, txt in enumerate(['Model A', 'Model B', 'Model C', 'Model D']):\n    ax.annotate(txt, (i, 95))\n\n# Create a fourth subplot\nfig, ax = plt.subplots(figsize=(10, 10))\nax.set_title('AI Model Performance')\nax.set_xlabel('Model')\nax.set_ylabel('Performance Score (%)')\n\n# Create a pie chart with slices representing performance scores\nperformance_scores = [95, 90, 85, 80]\nlabels = ['Model A', 'Model B', 'Model C', 'Model D']\ncolors = ['blue', 'green', 'red', 'purple']\nexplode = (0.1, 0, 0, 0)  # explode 1st slice\nax.pie(performance_scores, explode=explode, labels=labels, colors=colors,\nautopct='%1.1f%%', shadow=True, startangle=140)\n\n# Add conditions\nconditions = ['Dry Conditions', 'Wet Conditions']\nax.text(0, -1.2, 'Conditions', fontsize=12)\nax.plot([0, 0], [-1.1, -1.1], 'k-')\nax.plot([-0.1, 0.1], [-1.1, -1.1], 'k-')\nax.plot([0, 0], [-1.2, -1.2], 'k-')\nax.plot([-0.1, 0.1], [-1.2, -1.2], 'k-')\n\n# Add legend\nax.legend(['Dry Conditions', 'Wet Conditions'], loc='upper right')\n\n# Set the limits of the x-axis\nax.set_xlim(-1, 5)\n\n# Set the limits of the y-axis\nax.set_ylim(-1.5, 100)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_23.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the first subplot\nfig, ax = plt.subplots(figsize=(10, 10))\n\n# Set the title of the plot\nax.set_title('Traffic Volume by Time of Day')\n\n# Create a bar chart with the data\nax.bar([100, 200, 300, 400, 500, 600, 700], [180, 160, 140, 120, 100, 80, 60], color='orange')\nax.bar([100, 200, 300, 400, 500, 600, 700], [190, 170, 150, 130, 110, 90, 70], color='green')\n\n# Add labels to the x-axis\nax.set_xlabel('Number of Vehicles')\nax.set_ylabel('Time of Day')\n\n# Add a legend to the plot\nax.legend(['Morning Traffic', 'Evening Traffic'])\n\n# Create a second subplot\nfig, ax = plt.subplots(figsize=(10, 10))\n\n# Set the title of the plot\nax.set_title('Speed Distribution by Location')\n\n# Create a scatter plot with the data\nax.scatter([100, 200, 300, 400, 500, 600, 700], [100, 120, 140, 160, 180, 200, 220], color='blue')\nax.scatter([100, 200, 300, 400, 500, 600, 700], [110, 130, 150, 170, 190, 210, 230], color='green')\n\n# Add labels to the x-axis\nax.set_xlabel('Location')\nax.set_ylabel('Speed (km/h)')\n\n# Add a legend to the plot\nax.legend(['Urban', 'Highway'])\n\n# Create a third subplot\nfig, ax = plt.subplots(figsize=(10, 10))\n\n# Set the title of the plot\nax.set_title('Elevation Changes Along a Route')\n\n# Create a line plot with the data\nax.plot([0, 200, 400, 600, 800, 1000], [0, 100, 200, 300, 400, 500], color='purple')\nax.plot([0, 200, 400, 600, 800, 1000], [100, 200, 300, 400, 500, 600], color='blue')\n\n# Add labels to the x-axis\nax.set_xlabel('Distance (m)')\nax.set_ylabel('Elevation (m)')\n\n# Add a legend to the plot\nax.legend(['Route 1', 'Route 2'])\n```"}
{"file": "dataset/ori_500/multidiff_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis for the pie chart\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Define the data for the pie chart\narts = ['Literature', 'Performing Arts', 'Visual Arts']\npercentages = [10, 30, 25]\n\n# Create a pie chart\nwedges, texts, autotexts = ax.pie(percentages, labels=arts, autopct='%1.1f%%', startangle=90)\n\n# Set the title of the pie chart\nax.set_title('Distribution of Arts Education Programs')\n\n# Display the pie chart\nplt.show()\n\n# Create a figure and axis for the radar chart\nfig, ax = plt.subplots(figsize=(10, 5), subplot_kw={'projection': 'polar'})\n\n# Define the data for the radar chart\ncategories = ['Expression', 'Creativity', 'Collaboration', 'Dedication', 'Technique']\nvalues = [0.6, 0.8, 0.4, 0.2, 0.0]\nN = len(categories)\nangles = [n / float(N) * 2 * pi for n in range(N)]\nangles += angles[:1]  # repeat the first value to close the circular graph\n\n# Create a radar chart\nvalues += values[:1]  # repeat the first value to close the circular graph\nax.plot(angles, values, linewidth=1, linestyle='solid')\nax.fill(angles, values, 'b', alpha=0.1)\n\n# Set the title of the radar chart\nax.set_title('Student Performance in Arts Education')\n\n# Display the radar chart\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_25.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Create a bar chart\nax.bar([0.0, 0.1, 0.2, 0.3, 0.4, 0.5], [1000, 1500, 2000, 2500, 3000, 3500], color='blue')\nax.set_xlabel('Sale Probability')\nax.set_ylabel('Number of Sales')\nax.set_title('Sales by Sale Probability')\n\n# Create a scatter plot\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y, color='green')\n\n# Create a pie chart\nlabels = ['Known Sales', 'Unknown Sales']\nsizes = [70, 30]\ncolors = ['yellowgreen', 'lightskyblue']\nexplode = (0.1, 0)  \nax.pie(sizes, explode=explode, labels=labels, colors=colors,\nautopct='%1.1f%%', shadow=True, startangle=140)\n\n# Create a histogram\nsales = np.random.normal(1000, 200, 1000)\nax.hist(sales, bins=20, color='orange')\n\n# Create a heatmap\ndata = np.random.rand(10, 10)\nax.imshow(data, cmap='hot', interpolation='nearest')\n\n# Create a contour plot\nx = np.linspace(-10, 10, 100)\ny = np.linspace(-10, 10, 100)\nX, Y = np.meshgrid(x, y)\nZ = np.sin(np.sqrt(X**2 + Y**2))\nCS = ax.contour(X, Y, Z, 10, cmap='coolwarm')\n\n# Create a colorbar\ncbar = fig.colorbar(CS, ax=ax)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 5.0))\n\n# Create a scatter plot\nx = np.random.rand(100)\ny = np.random.rand(100)\nax.scatter(x, y, color='blue')\n\n# Set the title of the plot\nax.set_title('Investment Clusters')\n\n# Set the x and y labels\nax.set_xlabel('Returns')\nax.set_ylabel('Volatility')\n\n# Create a second subplot\nax2 = fig.add_subplot(121)\n\n# Create a histogram\nx = np.random.rand(100)\nax2.hist(x, bins=10, color='green')\n\n# Set the title of the plot\nax2.set_title('Histogram of Stock Returns')\n\n# Set the x and y labels\nax2.set_xlabel('Returns')\nax2.set_ylabel('Frequency')\n\n# Add a legend\nlegend_elements = [Line2D([0], [0], marker='o', color='w', label='Gains', markerfacecolor='green', markersize=10),\n                  Line2D([0], [0], marker='o', color='w', label='Losses', markerfacecolor='red', markersize=10)]\nax2.legend(handles=legend_elements, loc='upper right')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the first plot\nfig, ax = plt.subplots(figsize=(8.0, 10.0))\nax.plot([0, 1, 2, 3, 4], [10, 8, 6, 4, 2], 'b-')\nax.set_xlabel('Relative Year')\nax.set_ylabel('Energy Consumption (GWh)')\nax.set_title('Energy Consumption Over Time')\n\n# Create a scatter plot with blue dots\nax.scatter([0, 1, 2, 3, 4], [10, 8, 6, 4, 2], color='blue')\n\n# Create a second figure and axis for the second plot\nfig2, ax2 = plt.subplots(figsize=(8.0, 10.0))\nax2.plot([0, 1, 2, 3, 4], [0.5, 0.7, 0.9, 0.8, 0.6], 'r-')\nax2.set_xlabel('Relative Month')\nax2.set_ylabel('Renewable Energy Ratio (%)')\nax2.set_title('Renewable Energy Ratio Over Time')\n\n# Create a scatter plot with red dots\nax2.scatter([0, 1, 2, 3, 4], [0.5, 0.7, 0.9, 0.8, 0.6], color='red')\n\n# Create a 3D plot\nfrom mpl_toolkits.mplot3d import Axes3D\nfig3 = plt.figure(figsize=(8.0, 10.0))\nax3 = fig3.add_subplot(111, projection='3d')\nx = np.linspace(-4, 4, 100)\ny = np.linspace(-4, 4, 100)\nx, y = np.meshgrid(x, y)\nz = np.sin(np.sqrt(x**2 + y**2))\nax3.plot_surface(x, y, z, cmap='Blues')\nax3.set_xlabel('Relative Year')\nax3.set_ylabel('Relative Month')\nax3.set_zlabel('Renewable Energy Ratio (%)')\nax3.set_title('Renewable Energy Ratio Over Time')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis for the pie chart\nfig, ax = plt.subplots(figsize=(8, 8))\n\n# Data for the pie chart\nlabels = ['Ancient Scripts', 'Modern Records', 'Medieval Texts', 'Renaissance Literature']\nsizes = [15, 35, 30, 20]\ncolors = ['#ff9999','#66b3ff','#99ff99','#ffcc99']\nexplode = (0.1, 0, 0, 0)  # explode 1st slice\n\n# Plot the pie chart\nax.pie(sizes, explode=explode, labels=labels, colors=colors,\nautopct='%1.1f%%', shadow=True, startangle=140)\n\n# Equal aspect ratio ensures that pie is drawn as a circle.\nax.axis('equal')  \n\n# Create a scatter plot\nfig, ax = plt.subplots(figsize=(10, 5))\nx = np.array([1000, 1200, 1400, 1600, 1800, 2000])\ny = np.array([150, 200, 250, 300, 350, 400])\ncolors = np.random.randint(0, 100, len(x))\narea = np.pi * (np.random.rand(len(x)) * 10)**2  # 0 to 15 point radiuses\n\nplt.scatter(x, y, s=area, c=colors, alpha=0.5)\nplt.title('Document Count Over Historical Periods')\nplt.xlabel('Year')\nplt.ylabel('Number of Documents')\n\n# Add text annotations for each point\nfor i, txt in enumerate(labels):\n    ax.annotate(txt, (x[i], y[i]))\n\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the scatter plot\nx = [2000, 2005, 2010, 2015, 2020]\ny = [9.25, 9.00, 8.75, 8.50, 8.25]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Plot the data\nax.scatter(x, y)\n\n# Set the title and labels\nax.set_title('Luxury Brand Popularity vs Price')\nax.set_xlabel('Average Price ($)')\nax.set_ylabel('Popularity Index')\n\n# Add a legend\nlegend_elements = [plt.Line2D([0], [0], marker='o', color='w', label='Louis Vuitton', markerfacecolor='green', markersize=10),\n                  plt.Line2D([0], [0], marker='o', color='w', label='Chanel', markerfacecolor='yellow', markersize=10),\n                  plt.Line2D([0], [0], marker='o', color='w', label='Gucci', markerfacecolor='purple', markersize=10),\n                  plt.Line2D([0], [0], marker='o', color='w', label='Dior', markerfacecolor='blue', markersize=10),\n                  plt.Line2D([0], [0], marker='o', color='w', label='Prada', markerfacecolor='cyan', markersize=10)]\nax.legend(handles=legend_elements, loc='upper left')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Data for the first graph\nx = np.arange(0, 100, 10)\ny = [75.32, 77.11, 77.03, 76.86, 75.34, 74.52, 75.32, 77.11, 77.03, 76.86, 75.34, 74.52]\ncolors = ['green', 'green', 'green', 'green', 'green', 'green', 'green', 'green', 'green', 'green', 'green', 'green']\n\n# Data for the second graph\nx2 = np.arange(0, 100, 10)\ny2 = [60.5, 59.1, 58.35, 55.95, 55.5, 55.35, 55.15, 54.95, 54.75, 54.55, 54.35, 54.15]\ncolors2 = ['red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red', 'red']\n\n# Data for the third graph\nx3 = np.arange(0, 100, 10)\ny3 = [0.0, 0.2, 0.4, 0.6, 0.8, 1.0, 1.2, 1.4, 1.6, 1.8, 2.0, 2.2]\ncolors3 = ['blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue', 'blue']\n\n# Data for the fourth graph\nx4 = np.arange(0, 100, 10)\ny4 = [0.0, 0.2, 0.4, 0.6, 0.8, 1.0, 1.2, 1.4, 1.6, 1.8, 2.0, 2.2]\ncolors4 = ['orange', 'orange', 'orange', 'orange', 'orange', 'orange', 'orange', 'orange', 'orange', 'orange', 'orange', 'orange']\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(2, 3, figsize=(10.0, 7.0))\n\n# Plot the first graph\naxs[0, 0].bar(x, y, color=colors)\naxs[0, 0].set_title('Accuracy (%)')\naxs[0, 0].set_xlabel('Year')\naxs[0, 0].set_ylabel('Accuracy (%)')\n\n# Plot the second graph\naxs[0, 1].bar(x2, y2, color=colors2)\naxs[0, 1].set_title('Robust Accuracy (%)')\naxs[0, 1].set_xlabel('Year')\naxs[0, 1].set_ylabel('Robust Accuracy (%)')\n\n# Plot the third graph\naxs[0, 2].bar(x3, y3, color=colors3)\naxs[0, 2].set_title('Accuracy Diff. (%)')\naxs[0, 2].set_xlabel('Year')\naxs[0, 2].set_ylabel('Accuracy Diff. (%)')\n\n# Plot the fourth graph\naxs[1, 0].bar(x4, y4, color=colors4)\naxs[1, 0].set_title('Robust Accuracy Diff. (%)')\naxs[1, 0].set_xlabel('Year')\naxs[1, 0].set_ylabel('Robust Accuracy Diff. (%)')\n\n# Plot the fifth graph\naxs[1, 1].bar(x, y, color=colors)\naxs[1, 1].set_title('NFR (%)')\naxs[1, 1].set_xlabel('Year')\naxs[1, 1].set_ylabel('NFR (%)')\n\n# Plot the sixth graph\naxs[1, 2].bar(x2, y2, color=colors2)\naxs[1, 2].set_title('Robust NFR (%)')\naxs[1, 2].set_xlabel('Year')\naxs[1, 2].set_ylabel('Robust NFR (%)')\n\nplt.tight_layout()\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nx = [0, 5, 10, 15, 20, 25]\ny1 = [0.1, 0.3, 0.4, 0.6, 0.8, 0.9]\ny2 = [0.2, 0.4, 0.5, 0.7, 0.9, 1.0]\ny3 = [0.3, 0.5, 0.6, 0.8, 1.0, 1.1]\ny4 = [0.4, 0.6, 0.7, 0.9, 1.1, 1.2]\ny5 = [0.5, 0.7, 0.8, 1.0, 1.2, 1.3]\ny6 = [0.6, 0.8, 0.9, 1.1, 1.3, 1.4]\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(7.0, 9.0))\n\n# Plot the data\nax.plot(x, y1, 'b-', label='Random')\nax.plot(x, y2, 'g-', label='Sobol')\nax.plot(x, y3, 'y-', label='HCube')\nax.plot(x, y4, 'm-', label='No Context')\nax.plot(x, y5, 'c-', label='Partial Context')\nax.plot(x, y6, 'r-', label='Full Context')\n\n# Set the title and labels\nax.set_title('Monte Carlo Simulation Results')\nax.set_xlabel('Number of Trials')\nax.set_ylabel('Generalized Variance')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/multidiff_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 3, figsize=(10, 4))\n\n# Set the title for the first subplot\naxs[0].set_title('Debater')\n# Add a colored rectangle to the first subplot\naxs[0].add_patch(plt.Rectangle((0, 0), 1, 1, color='blue'))\n\n# Set the title for the second subplot\naxs[1].set_title('Correct Rating - Incorrect Rating')\n# Add a scatter plot to the second subplot\nx = np.random.rand(50)\ny = np.random.rand(50)\naxs[1].scatter(x, y)\n\n# Set the title for the third subplot\naxs[2].set_title('Judge Accuracy (%)')\n# Add a line graph to the third subplot\nx = np.linspace(-200, 200, 100)\ny = np.sin(x)\naxs[2].plot(x, y)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the pie chart\nsizes = [4.6, 10.6, 11.3, 13.2, 29.8]\nlabels = ['Red', 'Blue', 'Green', 'Yellow', 'Purple']\ncolors = ['#ff0000', '#0000ff', '#00ff00', '#ffff00', '#800080']\n\n# Create a pie chart\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\nwedges, texts, autotexts = ax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\n\n# Equal aspect ratio ensures that pie is drawn as a circle.\nax.axis('equal')  \n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Matplotlib bakery: A donut')\n\n# Create a donut chart\nwedges, texts, autotexts = ax.pie([1, 2, 3, 4, 5], radius=1.5, startangle=90, wedgeprops=dict(width=0.4), textprops={'color':'w'})\n\n# Add labels to the wedges\nlabels = ['90 g sugar', '225 g flour', '1 egg', '60 g butter', '1/2 package of yeast', '100 ml milk']\nfor i, label in enumerate(labels):\n    ax.text(0, 0, label, ha='center', va='center', fontsize=12)\n\n# Add a legend\nax.legend(wedges, labels, title=\"Ingredients\", loc=\"center left\", bbox_to_anchor=(1, 0, 0.5, 1))\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Define the data for each category\ncategories = ['Entertainment', 'Utilities', 'Transport', 'Food', 'Others']\nvalues = [16.7, 20.0, 37.5, 41.7, 10.0]\ncolors = ['#FFD700', '#90EE90', '#ADD8E6', '#FF6347', '#FFA500']\n\n# Create a pie chart\nwedges, texts, autotexts = ax.pie(values, labels=categories, colors=colors, autopct='%1.1f%%', startangle=90)\n\n# Add a title\nax.set_title('Expenses - Company vs. Project')\n\n# Add a legend\nax.legend(wedges, categories, title=\"Categories\", loc=\"center left\", bbox_to_anchor=(1, 0, 0.5, 1))\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for LoRA\nlora_data = [31.4, 15.7, 19.9, 33.0]\nlora_labels = ['Unused', 'Model', 'Optimizer', 'Gradient']\nlora_colors = ['#F2A654', '#F2C94C', '#5DADE2', '#88D8B0']\n\n# Data for QLoRA\nqlora_data = [54.8, 10.5, 6.3, 28.4]\nqlora_labels = ['Unused', 'Model', 'Optimizer', 'Gradient']\nqlora_colors = ['#F2A654', '#F2C94C', '#5DADE2', '#88D8B0']\n\nfig, axs = plt.subplots(1, 2, figsize=(10.0, 4.0))\n\n# Plotting LoRA\naxs[0].pie(lora_data, labels=lora_labels, colors=lora_colors, autopct='%1.1f%%')\naxs[0].set_title('LoRA')\n\n# Plotting QLoRA\naxs[1].pie(qlora_data, labels=qlora_labels, colors=qlora_colors, autopct='%1.1f%%')\naxs[1].set_title('QLoRA')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the first chart\ndata1 = [25.1, 26.4, 12.6, 15.9]\nlabels1 = ['Model', 'Optimizer', 'Gradient+Activations+Other', 'Unused']\n\n# Data for the second chart\ndata2 = [46.2, 4.6, 5.3, 23.9]\nlabels2 = ['Model', 'Optimizer', 'Gradient+Activations+Other', 'Unused']\n\nfig, axs = plt.subplots(2, 1, figsize=(5.0, 8.0))\n\n# Create the first chart\naxs[0].pie(data1, labels=labels1, colors=['yellow', 'green', 'gray', 'orange'], autopct='%1.1f%%')\naxs[0].set_title('Full Finetuning')\n\n# Create the second chart\naxs[1].pie(data2, labels=labels2, colors=['yellow', 'green', 'gray', 'orange'], autopct='%1.1f%%')\naxs[1].set_title('QLoRA')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Create a pie chart with the data\nax.pie([25, 10, 10, 20, 35], labels=[\"Fruits\", \"Dairy\", \"Grains\", \"Vegetables\", \"Proteins\"], autopct='%1.1f%%', startangle=90)\n\n# Set the title of the chart\nax.set_title('Nutritional Distribution')\n\n# Display the chart\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Market Share by Sector - External vs. Internal')\n\n# Define the data for the pie chart\nlabels = ['E-commerce', 'Education', 'Entertainment', 'Technology']\nsizes = [31.2, 28.6, 35.7, 37.5]\ncolors = ['#FFD700', '#FFA500', '#ADD8E6', '#90EE90']\n\n# Plot the pie chart\nwedges, texts, autotexts = ax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\n\n# Set the aspect ratio of the pie chart to be equal so that pie is drawn as a circle.\nax.axis('equal')  \n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Create a pie chart with the data\nax.pie([20, 33.3, 16.7, 40], labels=[\"Dogs\", \"Cats\", \"Birds\", \"Fish\"], autopct='%1.1f%%', startangle=90)\n\n# Set the title of the chart\nax.set_title('Pet Ownership')\n\n# Display the chart\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the pie chart\nlabels = ['David', 'John', 'Marry', 'Peter']\nsizes = [40, 29, 11, 10]\ncolors = ['blue', 'orange', 'green', 'red']\n\n# Create a pie chart\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\nax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=140)\n\n# Equal aspect ratio ensures that pie is drawn as a circle.\nax.axis('equal')  \n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\n\n# Create a pie chart with a color map\ncmap = plt.get_cmap('tab20')\ncolors = cmap(range(10))\nax.pie([18, 12, 28], colors=colors, startangle=90)\n\n# Add a title\nax.set_title('Countries in Europe')\n\n# Add labels\nlabels = ['France', 'Germany', 'Italy']\nax.legend(labels, loc='upper right')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the pie chart\nlabels = ['Category 1', 'Category 2', 'Category 3', 'Category 4', 'Category 5']\nsizes = [26.2, 21.4, 19.0, 14.3, 13.3]\ncolors = ['#f8d7da', '#f8bbd0', '#f06292', '#e53935', '#d32f2f']\n\n# Create a pie chart\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\nwedges, texts, autotexts = ax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=140)\n\n# Set the title of the chart\nax.set_title('Slice of a pie chart')\n\n# Equal aspect ratio ensures that pie is drawn as a circle.\nax.axis('equal')  \n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data for the pie chart\nlabels = ['Psychological', 'Others', 'Market', 'Satisfactory', 'Social']\nsizes = [12.4, 35.4, 17.2, 24.7, 10.3]\ncolors = ['blue', 'green', 'skyblue', 'orange', 'pink']\n\n# Create a pie chart\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\nax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\n\n# Equal aspect ratio ensures that pie is drawn as a circle.\nax.axis('equal')  \n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Define the data\nlabels = ['Youtube', 'Facebook', 'Instagram', 'Twitter', 'LinkedIn']\nsizes = [25, 10, 10, 10, 35]\ncolors = ['lightblue', 'skyblue', 'lightskyblue', 'deepskyblue', 'cornflowerblue']\n\n# Create a pie chart\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\nwedges, texts, autotexts = ax.pie(sizes, colors=colors, startangle=90, autopct='%1.1f%%')\n\n# Add labels and title\nax.legend(wedges, labels,\n          title=\"Social Media\",\n          loc=\"center left\",\n          bbox_to_anchor=(1, 0, 0.5, 1))\n\nax.set_title('Social Media Usage')\n\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Define the data for the pie chart\nlabels = ['COLING', 'EACL', 'NAACL', 'EMNLP']\nsizes = [25.4, 7.4, 20.3, 12.2]\ncolors = ['#87CEEB', '#FFD700', '#90EE90', '#800080']\n\n# Create a pie chart\nwedges, texts, autotexts = ax.pie(sizes, labels=labels, colors=colors, autopct='%1.1f%%', startangle=90)\n\n# Set the title of the pie chart\nax.set_title('NLP Conference Influence')\n\n# Add a legend\nax.legend(wedges, labels, title=\"Conferences\", loc=\"center left\", bbox_to_anchor=(1, 0, 0.5, 1))\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/pie_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Create a pie chart with the data\nax.pie([25.0, 37.5, 15.0, 12.5, 25.0, 30.0], labels=[\"Coal\", \"Hydro\", \"Wind\", \"Solar\", \"Other\"], autopct='%1.1f%%', startangle=90)\n\n# Set the title of the chart\nax.set_title('Energy Consumption - National vs. Project')\n\n# Display the chart\nplt.show()\n```"}
{"file": "dataset/ori_500/quiver_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(2, 2, figsize=(10.0, 4.0))\n\n# Set the titles for each subplot\naxs[0, 0].set_title('English')\naxs[0, 1].set_title('French')\naxs[1, 0].set_title('German')\naxs[1, 1].set_title('Chinese')\n\n# Set the x-axis labels for each subplot\naxs[0, 0].set_xlabel('Time (s)')\naxs[0, 1].set_xlabel('Time (s)')\naxs[1, 0].set_xlabel('Time (s)')\naxs[1, 1].set_xlabel('Time (s)')\n\n# Set the y-axis labels for each subplot\naxs[0, 0].set_ylabel('Amplitude (V)')\naxs[0, 1].set_ylabel('Amplitude (V)')\naxs[1, 0].set_ylabel('Amplitude (V)')\naxs[1, 1].set_ylabel('Amplitude (V)')\n\n# Plot the data for each subplot\naxs[0, 0].plot(np.linspace(0, 10, 100), np.sin(np.linspace(0, 10, 100)), 'r-')\naxs[0, 0].plot([0, 10], [0, 0], 'ro')\naxs[0, 0].text(0, 0, '0', ha='right', va='top')\naxs[0, 0].text(10, 0, '10', ha='left', va='bottom')\naxs[0, 0].text(5, 1.88, '1.88', ha='center', va='center')\n\naxs[0, 1].plot(np.linspace(0, 10, 100), np.sin(np.linspace(0, 10, 100)), 'r-')\naxs[0, 1].plot([0, 10], [0, 0], 'ro')\naxs[0, 1].text(0, 0, '0', ha='right', va='top')\naxs[0, 1].text(10, 0, '10', ha='left', va='bottom')\naxs[0, 1].text(5, 2.88, '2.88', ha='center', va='center')\n\naxs[1, 0].plot(np.linspace(0, 10, 100), np.sin(np.linspace(0, 10, 100)), 'b-')\naxs[1, 0].plot([0, 10], [0, 0], 'bo')\naxs[1, 0].text(0, 0, '0', ha='right', va='top')\naxs[1, 0].text(10, 0, '10', ha='left', va='bottom')\naxs[1, 0].text(5, 3.38, '3.38', ha='center', va='center')\n\naxs[1, 1].plot(np.linspace(0, 10, 100), np.sin(np.linspace(0, 10, 100)), 'r-')\naxs[1, 1].plot([0, 10], [0, 0], 'ro')\naxs[1, 1].text(0, 0, '0', ha='right', va='top')\naxs[1, 1].text(10, 0, '10', ha='left', va='bottom')\naxs[1, 1].text(5, 1.11, '1.11', ha='center', va='center')\n\n# Add a legend to the plot\nfig.legend(['Out-group bias (Collectivism)', 'In-group bias (Individualism)'], loc='lower right')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/quiver_2.pdf", "response": "import matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Language Sentiment Analysis')\n\n# Set the x-axis label\nax.set_xlabel('Time (in hours)')\n\n# Set the y-axis label\nax.set_ylabel('Sentiment Score')\n\n# Set the x-ticks\nax.set_xticks([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10])\n\n# Set the y-ticks\nax.set_yticks([-4, -3, -2, -1, 0, 1, 2, 3, 4, 5])\n\n# Set the grid lines\nax.grid(True)\n\n# Add a rectangle for the English language sentiment analysis\nrect1 = plt.Rectangle((0, -4), 1, 1, color='red')\nax.add_patch(rect1)\n\n# Add a rectangle for the French language sentiment analysis\nrect2 = plt.Rectangle((2, -3), 1, 1, color='red')\nax.add_patch(rect2)\n\n# Add a rectangle for the German language sentiment analysis\nrect3 = plt.Rectangle((4, -2), 1, 1, color='red')\nax.add_patch(rect3)\n\n# Add a rectangle for the Out-group bias (Collectivism)\nrect4 = plt.Rectangle((6, -1), 1, 1, color='red')\nax.add_patch(rect4)\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/quiver_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Set the title of the plot\nax.set_title('SINDy Model Performance')\n\n# Set the x-axis label\nax.set_xlabel('X1')\n\n# Set the y-axis label\nax.set_ylabel('X2')\n\n# Set the x-axis limits\nax.set_xlim(0, 1)\n\n# Set the y-axis limits\nax.set_ylim(0, 1)\n\n# Set the x-axis ticks\nax.set_xticks(np.arange(0, 1.1, 0.1))\n\n# Set the y-axis ticks\nax.set_yticks(np.arange(0, 1.1, 0.1))\n\n# Set the x-axis tick labels\nax.set_xticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1.0'])\n\n# Set the y-axis tick labels\nax.set_yticklabels(['0.0', '0.1', '0.2', '0.3', '0.4', '0.5', '0.6', '0.7', '0.8', '0.9', '1.0'])\n\n# Set the x-axis grid lines\nax.grid(True)\n\n# Set the y-axis grid lines\nax.grid(True)\n\n# Set the x-axis grid line style\nax.grid(axis='x', linestyle='--')\n\n# Set the y-axis grid line style\nax.grid(axis='y', linestyle='--')\n\n# Set the x-axis grid line color\nax.grid(axis='x', color='gray')\n\n# Set the y-axis grid line color\nax.grid(axis='y', color='gray')\n\n# Set the x-axis grid line width\nax.grid(axis='x', linewidth=0.5)\n\n# Set the y-axis grid line width\nax.grid(axis='y', linewidth=0.5)\n\n# Set the x-axis grid line alpha\nax.grid(axis='x', alpha=0.5)\n\n# Set the y-axis grid line alpha\nax.grid(axis='y', alpha=0.5)\n\n# Set the x-axis grid line zorder\nax.grid(axis='x', zorder=1)\n\n# Set the y-axis grid line zorder\nax.grid(axis='y', zorder=1)\n\n# Set the x-axis grid line visible\nax.grid(axis='x', visible=True)\n\n# Set the y-axis grid line visible\nax.grid(axis='y', visible=True)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='major')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='major')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='minor')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='minor')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='major', linestyle='--')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='major', linestyle='--')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='minor', linestyle='--')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='minor', linestyle='--')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='major', linestyle='--', color='gray')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='major', linestyle='--', color='gray')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='minor', linestyle='--', color='gray')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='minor', linestyle='--', color='gray')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--', color='gray')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--', color='gray')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='major', linestyle='--', color='gray', linewidth=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='major', linestyle='--', color='gray', linewidth=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='minor', linestyle='--', color='gray', linewidth=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='minor', linestyle='--', color='gray', linewidth=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--', color='gray', linewidth=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--', color='gray', linewidth=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--', color='gray', linewidth=0.5, alpha=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--', color='gray', linewidth=0.5, alpha=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='major')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='major')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='minor')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='minor')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='both')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='both')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='major', linestyle='--')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='major', linestyle='--')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='minor', linestyle='--')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='minor', linestyle='--')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='both', linestyle='--')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='both', linestyle='--')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='major', linestyle='--', color='gray')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='major', linestyle='--', color='gray')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='minor', linestyle='--', color='gray')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='minor', linestyle='--', color='gray')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='both', linestyle='--', color='gray')\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='both', linestyle='--', color='gray')\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='major', linestyle='--', color='gray', linewidth=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='major', linestyle='--', color='gray', linewidth=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='minor', linestyle='--', color='gray', linewidth=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='minor', linestyle='--', color='gray', linewidth=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='both', linestyle='--', color='gray', linewidth=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='both', linestyle='--', color='gray', linewidth=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='both', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='both', linestyle='--', color='gray', linewidth=0.5, alpha=0.5)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='both', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='both', linestyle='--', color='gray', linewidth=0.5, alpha=0.5)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='major', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1)\n\n# Set the x-axis grid line which\nax.grid(axis='x', which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1)\n\n# Set the y-axis grid line which\nax.grid(axis='y', which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1, visible=True, which='minor', linestyle='--', color='gray', linewidth=0.5, alpha=0.5, zorder=1)\n\n# Set the x-axis grid line which\nax.grid(axis"}
{"file": "dataset/ori_500/quiver_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(5.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Vector Field: -F + \u03c1\u2207FF (Small \u03c1)')\n\n# Create a grid of points\nx = np.linspace(-1, 1, 100)\ny = np.linspace(-1, 1, 100)\nX, Y = np.meshgrid(x, y)\n\n# Define the vector field\nU = -X**2 - Y**2\nV = X**2 + Y**2\n\n# Plot the vector field\nQ = ax.quiver(X, Y, U, V, color='b', scale=20)\n\n# Set the limits of the plot\nax.set_xlim(-1, 1)\nax.set_ylim(-1, 1)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/quiver_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Magnetic Field $\\mathbf{B}$ in Tesla units')\n\n# Create a grid of points\nx = np.linspace(-2.0, 2.0, 100)\ny = np.linspace(-2.0, 2.0, 100)\nX, Y = np.meshgrid(x, y)\n\n# Define the magnetic field function\ndef B(x, y):\n    return np.sin(np.sqrt(x**2 + y**2)) / (x**2 + y**2)\n\n# Compute the magnetic field values\nZ = B(X, Y)\n\n# Plot the magnetic field using quiver plot\nQ = ax.quiver(X, Y, Z, Z, color='b', scale=20)\n\n# Add a color bar to the plot\ncbar = fig.colorbar(Q)\n\n# Set the limits of the plot\nax.set_xlim(-2.0, 2.0)\nax.set_ylim(-2.0, 2.0)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Set the title of the plot\nax.set_title('TextVQA')\n\n# Create a circle patch\ncircle = plt.Circle((0.5, 0.5), 0.4, color='black')\nax.add_artist(circle)\n\n# Create a rectangle patch\nrectangle = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='blue')\nax.add_patch(rectangle)\n\n# Create a polygon patch\npolygon = plt.Polygon([[0.1, 0.1], [0.3, 0.9], [0.9, 0.9], [0.7, 0.1]], color='red')\nax.add_patch(polygon)\n\n# Create a scatter plot\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y, color='green')\n\n# Create a bar chart\nbar_width = 0.35\nindex = np.arange(len(x))\nbars = ax.bar(index, y, bar_width, color='orange')\n\n# Create a pie chart\nlabels = ['Red', 'Green', 'Blue']\nsizes = [15, 30, 55]\nax.pie(sizes, labels=labels, colors=['red', 'green', 'blue'])\n\n# Create a histogram\ndata = np.random.randn(1000)\nax.hist(data, bins=30, color='purple')\n\n# Create a line plot\nx_line = np.linspace(0, 10, 100)\ny_line = np.sin(x_line)\nax.plot(x_line, y_line, color='yellow')\n\n# Add text annotations\nax.annotate('Text(0.1, 100.0, TextVQA)', (0.1, 100.0), color='red')\nax.annotate('Text(0.7747361451096296, 100.0642787609865, SQA-I)', (0.7747361451096296, 100.0642787609865), color='blue')\n\n# Set the aspect ratio of the plot\nax.set_aspect('equal')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\n\n# Set the title of the plot\nax.set_title('XNLI (speed-up ratio: 4)')\n\n# Define the colors for each region\ncolors = ['pink', 'green', 'blue', 'red']\n\n# Define the labels for each region\nlabels = ['fr', 'es', 'en', 'el', 'de', 'bg', 'sw', 'ar', 'ur', 'vi', 'zh', 'ru', 'th', 'tr']\n\n# Define the radii for each region\nradii = [20, 40, 60, 80]\n\n# Draw the regions\nfor i, label in enumerate(labels):\n    ax.add_artist(plt.Circle((0, 0), radii[i % len(radii)], color=colors[i % len(colors)]))\n    ax.text(0, 0, label, ha='center', va='center')\n\n# Draw the speed-up ratio\nax.add_artist(plt.Circle((0, 0), 10, color='black'))\n\n# Set the aspect ratio to be equal so that the circle is not distorted\nax.set_aspect('equal')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(4.0, 4.0))\n\n# Draw a circle\ncircle = plt.Circle((0.5, 0.5), 0.4, color='lightgrey')\nax.add_artist(circle)\n\n# Draw a hexagon\nhexagon = plt.Polygon([[0.2, 0.3], [0.3, 0.1], [0.5, 0.1], [0.7, 0.3], [0.6, 0.5], [0.7, 0.7], [0.5, 0.9], [0.3, 0.7], [0.2, 0.9]], color='lightgreen')\nax.add_patch(hexagon)\n\n# Draw a rectangle\nrectangle = plt.Rectangle([0.3, 0.3], 0.4, 0.2, color='lightblue')\nax.add_patch(rectangle)\n\n# Draw a triangle\ntriangle = plt.Polygon([[0.5, 0.5], [0.7, 0.7], [0.3, 0.7]], color='lightyellow')\nax.add_patch(triangle)\n\n# Draw a star\nstar = plt.Polygon([[0.5, 0.5], [0.6, 0.7], [0.8, 0.7], [0.7, 0.8], [0.7, 0.6], [0.8, 0.5], [0.7, 0.4], [0.6, 0.4], [0.7, 0.3]], color='lightpink')\nax.add_patch(star)\n\n# Draw a line\nline = plt.Line2D([0.2, 0.8], [0.2, 0.8], color='black')\nax.add_line(line)\n\n# Set the limits of the plot\nax.set_xlim(0, 1)\nax.set_ylim(0, 1)\n\n# Set the aspect ratio of the plot\nax.set_aspect('equal')\n\n# Set the title of the plot\nax.set_title('Reflection')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('black')\n\n# Set the title of the plot\nax.set_title('Global News Feed', color='white')\n\n# Set the labels for the x-axis and y-axis\nax.set_xlabel('Time')\nax.set_ylabel('Sentiment')\n\n# Set the tick labels for the x-axis and y-axis\nax.set_xticks(np.arange(0, 10, 1))\nax.set_yticks(np.arange(-1, 1, 0.2))\n\n# Set the tick label color for the x-axis and y-axis\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the grid lines for the plot\nax.grid(True)\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the color of the plot grid lines\nax.grid(color='gray', linestyle='-', linewidth=0.5)\n\n# Set the color of the plot border\nax.spines['bottom'].set_color('white')\nax.spines['top'].set_color('white')\nax.spines['right'].set_color('white')\nax.spines['left'].set_color('white')\n\n# Set the color of the plot title\nax.title.set_color('white')\n\n# Set the color of the plot labels\nax.xaxis.label.set_color('white')\nax.yaxis.label.set_color('white')\n\n# Set the color of the plot ticks"}
{"file": "dataset/ori_500/radar_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('My Favorite Places')\n\n# Define the categories and their colors\ncategories = ['video game', 'programming world', 'universe', 'fairy tale', 'country', 'special place', 'cultural event']\ncolors = ['blue', 'green', 'red', 'purple', 'orange', 'cyan', 'magenta']\n\n# Draw the circle\ncircle = plt.Circle((0.5, 0.5), 0.4, color='gray', fill=False)\nax.add_artist(circle)\n\n# Draw the lines\nfor i in range(len(categories)):\n    angle = 2 * np.pi * i / len(categories)\n    x = 0.5 + 0.3 * np.cos(angle)\n    y = 0.5 + 0.3 * np.sin(angle)\n    ax.plot([0.5, x], [0.5, y], color=colors[i])\n\n# Add the labels\nfor i in range(len(categories)):\n    angle = 2 * np.pi * i / len(categories)\n    x = 0.5 + 0.4 * np.cos(angle)\n    y = 0.5 + 0.4 * np.sin(angle)\n    ax.text(x, y, categories[i], ha='center', va='center', fontsize=12, color=colors[i])\n\n# Add the legend\nlegend_elements = [plt.Line2D([0], [0], marker='o', color='w', label='My Favorite Places', markerfacecolor=c, markersize=10) for c in colors]\nax.legend(handles=legend_elements, loc='upper left')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Roleplay')\n\n# Define the colors for each subject\ncolors = ['blue', 'orange', 'green', 'red']\n\n# Define the subjects\nsubjects = ['Reasoning', 'Writing', 'Math', 'Coding', 'Extraction', 'Humanities', 'STEM']\n\n# Define the number of students\nnum_students = 10\n\n# Define the scores\nscores = np.random.randint(50, 100, (len(subjects), num_students))\n\n# Plot the scores\nfor i, subject in enumerate(subjects):\n    ax.plot(scores[i], label=subject, color=colors[i % len(colors)])\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('MUJI vs Nestle in Food Safety')\n\n# Draw a circle for the logo\ncircle = plt.Circle((0.5, 0.5), 0.1, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='red')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='green')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='blue')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='yellow')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='orange')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='purple')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='pink')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='brown')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='grey')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='cyan')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='magenta')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='white')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='black')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='silver')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='gold')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='brown')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='grey')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='cyan')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='magenta')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='white')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='black')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='silver')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='gold')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='brown')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='grey')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='cyan')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='magenta')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='white')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='black')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='silver')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='gold')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='brown')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='grey')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='cyan')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='magenta')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='white')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='black')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='silver')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='gold')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='brown')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='grey')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='cyan')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='magenta')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='white')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='black')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='silver')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='gold')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='brown')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='grey')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='cyan')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='magenta')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='white')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='black')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='silver')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='gold')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='brown')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='grey')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='cyan')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='magenta')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='white')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='black')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='silver')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='gold')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='brown')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='grey')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='cyan')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='magenta')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='white')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='black')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='silver')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='gold')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='brown')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='grey')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='cyan')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='magenta')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='white')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='black')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='silver')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='gold')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='brown')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='grey')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='cyan')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='magenta')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='white')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='black')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='silver')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='gold')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='brown')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='grey')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='cyan')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='magenta')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='white')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='black')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='silver')\nax.add_artist(rect)\n\n# Draw a rectangle for the product categories\nrect = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='gold')\nax.add_artist(rect)\n\n"}
{"file": "dataset/ori_500/radar_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Set the background color of the plot\nax.set_facecolor('black')\n\n# Set the title of the plot\nax.set_title('Global Stock Market', color='white')\n\n# Set the labels for the x-axis and y-axis\nax.set_xlabel('Time', color='white')\nax.set_ylabel('Stock Price', color='white')\n\n# Set the tick colors\nax.tick_params(axis='x', colors='white')\nax.tick_params(axis='y', colors='white')\n\n# Set the grid lines\nax.grid(True, color='white')\n\n# Set the data for the plot\nx = np.arange(1, 11)\ny = np.array([85.8, 78.7, 76.1, 74.9, 73.7, 72.5, 71.3, 70.1, 69.0, 67.9])\n\n# Plot the data\nax.plot(x, y, 'o-', color='orange')\n\n# Set the legend\nax.legend(['Apple'], loc='upper left')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 8.0))\n\n# Define the data for the radar chart\ncategories = ['Extrusion', 'Injection', 'Blow Molding', 'Compression', 'Rotational']\nvalues = [1, 2, 3, 4, 5]\nN = len(categories)\nangles = np.linspace(0, 2 * np.pi, N, endpoint=False).tolist()\nangles += angles[:1]  # To close the loop\nvalues += values[:1]\n\n# Plot the radar chart\nax.plot(angles, values, linewidth=1, linestyle='solid')\nax.fill(angles, values, 'b', alpha=0.1)\n\n# Set the category labels\nax.set_xticks(angles[:-1])\nax.set_xticklabels(categories)\n\n# Set the title\nax.set_title('Radar Chart')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Amusement Park Comparison: Disney vs Universal Studios')\n\n# Create a circle for the park map\ncircle = plt.Circle((0.5, 0.5), 0.4, color='orange')\nax.add_artist(circle)\n\n# Add labels for the different areas\nax.text(0.5, 0.6, 'Food Quality', horizontalalignment='center', verticalalignment='center')\nax.text(0.5, 0.4, 'Shows', horizontalalignment='center', verticalalignment='center')\nax.text(0.5, 0.2, 'Staff', horizontalalignment='center', verticalalignment='center')\nax.text(0.5, 0.8, 'Cleanliness', horizontalalignment='center', verticalalignment='center')\nax.text(0.5, 0.1, 'Wait Times', horizontalalignment='center', verticalalignment='center')\nax.text(0.5, 0.9, 'Ticket Price', horizontalalignment='center', verticalalignment='center')\nax.text(0.3, 0.5, 'Thrill Rides', horizontalalignment='center', verticalalignment='center')\nax.text(0.7, 0.5, 'Family Rides', horizontalalignment='center', verticalalignment='center')\nax.text(0.2, 0.5, 'Parking', horizontalalignment='center', verticalalignment='center')\nax.text(0.8, 0.5, 'Souvenirs', horizontalalignment='center', verticalalignment='center')\n\n# Add a legend with the park names\nlegend_elements = [plt.Line2D([0], [0], marker='o', color='w', label='Disney', markerfacecolor='orange', markersize=10),\n                    plt.Line2D([0], [0], marker='o', color='w', label='Universal Studios', markerfacecolor='purple', markersize=10)]\nax.legend(handles=legend_elements, loc='upper right')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Fashion Brand Popularity')\n\n# Define the colors for the brands\ncolors = ['yellow', 'silver', 'gray', 'green']\n\n# Define the labels for the brands\nlabels = ['Chanel', 'Dior', 'Gucci']\n\n# Define the sizes of the brands\nsizes = [15, 30, 45]\n\n# Create a pie chart\nwedges, texts, autotexts = ax.pie(sizes, colors=colors, labels=labels, autopct='%1.1f%%', startangle=90)\n\n# Add a legend\nax.legend(wedges, labels,\n          title=\"Brands\",\n          loc=\"center left\",\n          bbox_to_anchor=(1, 0, 0.5, 1))\n\n# Set the aspect ratio of the plot to be equal\nax.axis('equal')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Set the title of the plot\nax.set_title('POPE')\n\n# Create a circle patch for the center of the plot\ncircle = plt.Circle((0.5, 0.5), 0.4, color='blue')\nax.add_artist(circle)\n\n# Create a rectangle patch for the left side of the plot\nrect = plt.Rectangle((0.1, 0.1), 0.2, 0.8, color='red')\nax.add_patch(rect)\n\n# Create a triangle patch for the right side of the plot\ntriangle = plt.Polygon([[0.9, 0.1], [0.9, 0.9], [0.1, 0.5]], color='green')\nax.add_patch(triangle)\n\n# Create a hexagon patch for the bottom of the plot\nhexagon = plt.Polygon([[0.3, 0.1], [0.7, 0.1], [0.9, 0.3], [0.9, 0.7], [0.7, 0.9], [0.3, 0.9]], color='purple')\nax.add_patch(hexagon)\n\n# Create a star patch for the top of the plot\nstar = plt.Polygon([[0.5, 0.9], [0.6, 0.7], [0.7, 0.8], [0.8, 0.7], [0.7, 0.6], [0.8, 0.5], [0.7, 0.4], [0.6, 0.5], [0.5, 0.4], [0.4, 0.5], [0.3, 0.4], [0.2, 0.5], [0.3, 0.6], [0.2, 0.7], [0.3, 0.8], [0.4, 0.7], [0.5, 0.6], [0.6, 0.7]], color='orange')\nax.add_patch(star)\n\n# Add text annotations for each patch\nax.text(0.1, 0.9, 'MM-Vet', fontsize=12, ha='center', va='center')\nax.text(0.9, 0.1, 'TextVQA', fontsize=12, ha='center', va='center')\nax.text(0.9, 0.9, 'SQA-I', fontsize=12, ha='center', va='center')\nax.text(0.1, 0.1, 'GQA', fontsize=12, ha='center', va='center')\nax.text(0.1, 0.9, 'VQAav2', fontsize=12, ha='center', va='center')\nax.text(0.5, 0.1, 'Llava-W', fontsize=12, ha='center', va='center')\n\n# Add a legend with colored rectangles\nlegend_elements = [plt.Line2D([0], [0], marker='o', color='w', label='TinyLaMA', markerfacecolor='r', markersize=10),\n                  plt.Line2D([0], [0], marker='o', color='w', label='StableLM', markerfacecolor='b', markersize=10),\n                  plt.Line2D([0], [0], marker='o', color='w', label='Phi-2', markerfacecolor='g', markersize=10)]\nax.legend(handles=legend_elements, loc='upper right')\n\n# Set the aspect ratio of the plot to be equal\nax.set_aspect('equal')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(18.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Perfume Brand Comparison')\n\n# Create a scatter plot\nx = np.random.rand(50)\ny = np.random.rand(50)\nax.scatter(x, y)\n\n# Add labels to the plot\nax.set_xlabel('X Label')\nax.set_ylabel('Y Label')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the aspect ratio of the plot to be equal\nax.set_aspect('equal')\n\n# Draw a circle with a radius of 100\ncircle = plt.Circle((0, 0), 100, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 200 and a height of 150\nrectangle = plt.Rectangle((-100, -75), 200, 150, color='gray')\nax.add_artist(rectangle)\n\n# Draw a polygon with 6 sides\npolygon = plt.Polygon([[0, 0], [50, 100], [-50, 100], [-50, -100], [50, -100], [0, 0]], color='red')\nax.add_artist(polygon)\n\n# Draw a circle with a radius of 50\ncircle = plt.Circle((0, 0), 50, color='pink')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 100 and a height of 75\nrectangle = plt.Rectangle((-50, -37.5), 100, 75, color='orange')\nax.add_artist(rectangle)\n\n# Draw a polygon with 4 sides\npolygon = plt.Polygon([[0, 0], [25, 50], [-25, 50], [-25, -50], [25, -50], [0, 0]], color='green')\nax.add_artist(polygon)\n\n# Draw a circle with a radius of 25\ncircle = plt.Circle((0, 0), 25, color='blue')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 50 and a height of 37.5\nrectangle = plt.Rectangle((-25, -18.75), 50, 37.5, color='yellow')\nax.add_artist(rectangle)\n\n# Draw a polygon with 3 sides\npolygon = plt.Polygon([[0, 0], [12.5, 25], [-12.5, 25], [-12.5, -25], [12.5, -25], [0, 0]], color='purple')\nax.add_artist(polygon)\n\n# Draw a circle with a radius of 12.5\ncircle = plt.Circle((0, 0), 12.5, color='cyan')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 25 and a height of 18.75\nrectangle = plt.Rectangle((-12.5, -9.375), 25, 18.75, color='magenta')\nax.add_artist(rectangle)\n\n# Draw a polygon with 2 sides\npolygon = plt.Polygon([[0, 0], [6.25, 12.5], [-6.25, 12.5], [-6.25, -12.5], [6.25, -12.5], [0, 0]], color='brown')\nax.add_artist(polygon)\n\n# Draw a circle with a radius of 6.25\ncircle = plt.Circle((0, 0), 6.25, color='white')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 12.5 and a height of 9.375\nrectangle = plt.Rectangle((-6.25, -4.6875), 12.5, 9.375, color='silver')\nax.add_artist(rectangle)\n\n# Draw a polygon with 1 side\npolygon = plt.Polygon([[0, 0], [3.125, 6.25], [-3.125, 6.25], [-3.125, -6.25], [3.125, -6.25], [0, 0]], color='gold')\nax.add_artist(polygon)\n\n# Draw a circle with a radius of 3.125\ncircle = plt.Circle((0, 0), 3.125, color='black')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 6.25 and a height of 4.6875\nrectangle = plt.Rectangle((-3.125, -2.34375), 6.25, 4.6875, color='gray')\nax.add_artist(rectangle)\n\n# Draw a polygon with 0 sides\npolygon = plt.Polygon([[0, 0], [1.5625, 3.125], [-1.5625, 3.125], [-1.5625, -3.125], [1.5625, -3.125], [0, 0]], color='red')\nax.add_artist(polygon)\n\n# Draw a circle with a radius of 1.5625\ncircle = plt.Circle((0, 0), 1.5625, color='orange')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 3.125 and a height of 2.34375\nrectangle = plt.Rectangle((-1.5625, -1.171875), 3.125, 2.34375, color='pink')\nax.add_artist(rectangle)\n\n# Draw a polygon with -1 sides\npolygon = plt.Polygon([[0, 0], [0.78125, 1.5625], [-0.78125, 1.5625], [-0.78125, -1.5625], [0.78125, -1.5625], [0, 0]], color='green')\nax.add_artist(polygon)\n\n# Draw a circle with a radius of 0.78125\ncircle = plt.Circle((0, 0), 0.78125, color='blue')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 1.5625 and a height of 1.171875\nrectangle = plt.Rectangle((-0.78125, -0.5859375), 1.5625, 1.171875, color='orange')\nax.add_artist(rectangle)\n\n# Draw a polygon with -2 sides\npolygon = plt.Polygon([[0, 0], [0.390625, 0.78125], [-0.390625, 0.78125], [-0.390625, -0.78125], [0.390625, -0.78125], [0, 0]], color='pink')\nax.add_artist(polygon)\n\n# Draw a circle with a radius of 0.390625\ncircle = plt.Circle((0, 0), 0.390625, color='green')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 0.78125 and a height of 0.5859375\nrectangle = plt.Rectangle((-0.390625, -0.29296875), 0.78125, 0.5859375, color='blue')\nax.add_artist(rectangle)\n\n# Draw a polygon with -3 sides\npolygon = plt.Polygon([[0, 0], [0.1953125, 0.390625], [-0.1953125, 0.390625], [-0.1953125, -0.390625], [0.1953125, -0.390625], [0, 0]], color='orange')\nax.add_artist(polygon)\n\n# Draw a circle with a radius of 0.1953125\ncircle = plt.Circle((0, 0), 0.1953125, color='pink')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 0.390625 and a height of 0.29296875\nrectangle = plt.Rectangle((-0.1953125, -0.146484375), 0.390625, 0.29296875, color='green')\nax.add_artist(rectangle)\n\n# Draw a polygon with -4 sides\npolygon = plt.Polygon([[0, 0], [0.09765625, 0.1953125], [-0.09765625, 0.1953125], [-0.09765625, -0.1953125], [0.09765625, -0.1953125], [0, 0]], color='blue')\nax.add_artist(polygon)\n\n# Draw a circle with a radius of 0.09765625\ncircle = plt.Circle((0, 0), 0.09765625, color='orange')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 0.1953125 and a height of 0.0932421875\nrectangle = plt.Rectangle((-0.09765625, -0.04662109375), 0.1953125, 0.0932421875, color='pink')\nax.add_artist(rectangle)\n\n# Draw a polygon with -5 sides\npolygon = plt.Polygon([[0, 0], [0.048828125, 0.09765625], [-0.048828125, 0.09765625], [-0.048828125, -0.09765625], [0.048828125, -0.09765625], [0, 0]], color='green')\nax.add_artist(polygon)\n\n# Draw a circle with a radius of 0.048828125\ncircle = plt.Circle((0, 0), 0.048828125, color='blue')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 0.09765625 and a height of 0.04662109375\nrectangle = plt.Rectangle((-0.048828125, -0.023310546875), 0.09765625, 0.04662109375, color='orange')\nax.add_artist(rectangle)\n\n# Draw a polygon with -6 sides\npolygon = plt.Polygon([[0, 0], [0.0244140625, 0.048828125], [-0.0244140625, 0.048828125], [-0.0244140625, -0.048828125], [0.0244140625, -0.048828125], [0, 0]], color='pink')\nax.add_artist(polygon)\n\n# Draw a circle with a radius of 0.0244140625\ncircle = plt.Circle((0, 0), 0.0244140625, color='green')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 0.048828125 and a height of 0.023310546875\nrectangle = plt.Rectangle((-0.0244140625, -0.0116552734375), 0.048828125, 0.023310546875, color='blue')\nax.add_artist(rectangle)\n\n# Draw a polygon with -7 sides\npolygon = plt.Polygon([[0, 0], [0.01220703125, 0.0244140625], [-0.01220703125, 0.0244140625], [-0.01220703125, -0.0244140625], [0.01220703125, -0.0244140625], [0, 0]], color='orange')\nax.add_artist(polygon)\n\n# Draw a circle with a radius of 0.01220703125\ncircle = plt.Circle((0, 0), 0.01220703125, color='pink')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 0.0244140625 and a height of 0.0116552734375\nrectangle = plt.Rectangle((-0.01220703125, -0.00582763671875), 0.0244140625, 0.0116552734375, color='green')\nax.add_artist(rectangle)\n\n# Draw a polygon with -8 sides\npolygon = plt.Polygon([[0, 0], [0.006103515625, 0.01220703125], [-0.006103515625, 0.01220703125], [-0.006103515625, -0.01220703125], [0.006103515625, -0.01220703125], [0, 0]], color='blue')\nax.add_artist(polygon)\n\n# Draw a circle with a radius of 0.006103515625\ncircle = plt.Circle((0, 0), 0.006103515625, color='orange')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 0.01220703125 and a height of 0.00582763671875\nrectangle = plt.Rectangle((-0.006103515625, -0.002913818359375), 0.01220703125, 0.00582763671875, color='pink')\nax.add_artist(rectangle)\n\n# Draw a polygon with -9 sides\npolygon = plt.Polygon([[0, 0], [0.0030517578125, 0.006103515625], [-0.0030517578125, 0.006103515625], [-0.0030517578125, -0.006103515625], [0.0030517578125, -0.006103515625], [0, 0]], color='green')\nax.add_artist(polygon)\n\n# Draw a circle with a radius of 0.0030517578125\ncircle = plt.Circle((0, 0), 0.0030517578125, color='blue')\nax.add_artist(circle)\n\n# Draw a rectangle with a width of 0.006103515625 and a height of 0.002913818359375\nrectangle = plt.Rectangle((-0.0030517578125, -0.0014569091796875), 0.006103515625, 0.002913818359375, color='orange')\nax.add_artist(rectangle)\n\n# Draw a polygon with -10 sides\npolygon = plt.Polygon([[0, 0], [0.00152587890625, 0.0030517578125], [-0.00152587890625, 0.0030517578125], [-0.00152587890625, -0.0030517578125], [0.00152587890625, -0.0030517578125], [0, 0]], color='pink')\nax.add_artist(polygon)\n\n# Draw a circle with a radius of 0.00"}
{"file": "dataset/ori_500/radar_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 3, figsize=(10.0, 6.0))\n\n# Set the title for each subplot\naxs[0].set_title('PGM (\u03b5 = \u221e)')\naxs[1].set_title('PrivSyn (\u03b5 = \u221e)')\naxs[2].set_title('TVAE')\n\n# Create a circle for each subplot\ncircle1 = plt.Circle((0, 0), 5, color='green', fill=False)\ncircle2 = plt.Circle((0, 0), 5, color='purple', fill=False)\ncircle3 = plt.Circle((0, 0), 5, color='blue', fill=False)\n\n# Add the circles to the subplots\naxs[0].add_artist(circle1)\naxs[1].add_artist(circle2)\naxs[2].add_artist(circle3)\n\n# Create a rectangle for each subplot\nrect1 = plt.Rectangle((-2, -2), 4, 4, color='red', fill=False)\nrect2 = plt.Rectangle((-2, -2), 4, 4, color='orange', fill=False)\nrect3 = plt.Rectangle((-2, -2), 4, 4, color='yellow', fill=False)\n\n# Add the rectangles to the subplots\naxs[0].add_artist(rect1)\naxs[1].add_artist(rect2)\naxs[2].add_artist(rect3)\n\n# Create a triangle for each subplot\ntriangle1 = plt.Polygon([[0, 0], [2, 2], [4, 0]], color='cyan', fill=False)\ntriangle2 = plt.Polygon([[0, 0], [2, 2], [4, 0]], color='magenta', fill=False)\ntriangle3 = plt.Polygon([[0, 0], [2, 2], [4, 0]], color='lime', fill=False)\n\n# Add the triangles to the subplots\naxs[0].add_artist(triangle1)\naxs[1].add_artist(triangle2)\naxs[2].add_artist(triangle3)\n\n# Set the aspect ratio of the subplots to be equal\naxs[0].set_aspect('equal')\naxs[1].set_aspect('equal')\naxs[2].set_aspect('equal')\n\n# Set the limits of the subplots\naxs[0].set_xlim(-5, 5)\naxs[0].set_ylim(-5, 5)\naxs[1].set_xlim(-5, 5)\naxs[1].set_ylim(-5, 5)\naxs[2].set_xlim(-5, 5)\naxs[2].set_ylim(-5, 5)\n\n# Set the labels for the subplots\naxs[0].set_xlabel('Privacy')\naxs[1].set_xlabel('Privacy')\naxs[2].set_xlabel('Privacy')\n\n# Set the labels for the subplots\naxs[0].set_ylabel('Query Error')\naxs[1].set_ylabel('Query Error')\naxs[2].set_ylabel('Query Error')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Heterocycle formation')\n\n# Create a circle\ncircle = plt.Circle((0.5, 0.5), 0.4, color='blue')\nax.add_artist(circle)\n\n# Create a rectangle\nrectangle = plt.Rectangle((0.2, 0.2), 0.6, 0.6, color='orange')\nax.add_artist(rectangle)\n\n# Create a polygon\npolygon = plt.Polygon([[0.1, 0.1], [0.3, 0.9], [0.9, 0.7], [0.7, 0.3]], color='green')\nax.add_artist(polygon)\n\n# Create a line\nline = plt.Line2D([0.1, 0.9], [0.1, 0.9], color='red')\nax.add_artist(line)\n\n# Create a scatter plot\nscatter = plt.scatter([0.1, 0.3, 0.7, 0.9], [0.1, 0.3, 0.7, 0.9], color='purple')\nax.add_artist(scatter)\n\n# Create a bar chart\nbar = plt.bar(['A', 'B', 'C'], [10, 20, 30], color='yellow')\nax.add_artist(bar)\n\n# Create a pie chart\npie = plt.pie([10, 20, 30], colors=['cyan', 'magenta', 'yellow'])\nax.add_artist(pie[0])\n\n# Create a histogram\nhist = plt.hist([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], bins=5, color='black')\nax.add_artist(hist[0])\n\n# Create a heatmap\nheatmap = plt.imshow(np.random.rand(10, 10), cmap='hot', interpolation='nearest')\nax.add_artist(heatmap)\n\n# Create a contour plot\ncontour = plt.contourf(np.random.rand(10, 10), cmap='coolwarm')\nax.add_artist(contour)\n\n# Create a streamplot\nstream = plt.streamplot(np.random.rand(10, 10), np.random.rand(10, 10), color='grey')\nax.add_artist(stream.lines)\n\n# Create a polar plot\npolar = plt.polar(np.linspace(0, 2*np.pi, 100), np.random.rand(100), color='brown')\nax.add_artist(polar[0])\n\n# Create a 3D plot\nfrom mpl_toolkits.mplot3d import Axes3D\nax3d = fig.add_subplot(111, projection='3d')\nax3d.plot_surface(np.random.rand(10, 10), np.random.rand(10, 10), np.random.rand(10, 10), color='pink')\n\n# Add legends\nax.legend(['Baseline', 'Retro(Syn)_2'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the aspect ratio of the plot to be equal\nax.set_aspect('equal')\n\n# Draw a circle at the center of the plot\ncircle = plt.Circle((0.5, 0.5), 0.4, color='lightgrey')\nax.add_artist(circle)\n\n# Define the data for the radar chart\ndata = [\n    [0.07, 0.03, 0.03, 0.07],\n    [0.07, 0.03, 0.03, 0.07],\n    [0.07, 0.03, 0.03, 0.07],\n    [0.07, 0.03, 0.03, 0.07],\n    [0.07, 0.03, 0.03, 0.07],\n    [0.07, 0.03, 0.03, 0.07]\n]\n\n# Define the labels for the radar chart\nlabels = ['Model A', 'Model B', 'Model C', 'Model D', 'Model E', 'Model F']\n\n# Define the colors for the radar chart\ncolors = ['red', 'blue', 'green', 'orange', 'purple', 'cyan']\n\n# Plot the radar chart\nfor i, (d, l, c) in enumerate(zip(data, labels, colors)):\n    ax.plot([0.5] + d + [0.5], [0.5] + d + [0.5], label=l, color=c)\n    ax.text(0.5, 0.5, l, ha='center', va='center', fontsize=12, color=c)\n\n# Add a legend\nax.legend(loc='upper right', bbox_to_anchor=(1.1, 1.1))\n\n# Set the title of the plot\nax.set_title('Radar Chart')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('3D-bar')\n\n# Create a circle for the radar chart\ncircle = plt.Circle((0.5, 0.5), 0.4, color='black')\nax.add_artist(circle)\n\n# Add a legend\nlegend_elements = [plt.Line2D([0], [0], marker='o', color='w', label='line_num', markerfacecolor='blue', markersize=10),\n                  plt.Line2D([0], [0], marker='o', color='w', label='pie', markerfacecolor='orange', markersize=10)]\nax.legend(handles=legend_elements, loc='upper left')\n\n# Set the aspect ratio to be equal so that pie is drawn as a circle.\nax.set_aspect('equal')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/radar_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\n\n# Set the title of the plot\nax.set_title('Imputation')\n\n# Create a circle for the center of the plot\ncircle = plt.Circle((0.5, 0.5), 0.4, color='black')\nax.add_artist(circle)\n\n# Create a rectangle for the left side of the plot\nrectangle = plt.Rectangle((0.1, 0.1), 0.2, 0.8, color='blue')\nax.add_artist(rectangle)\n\n# Create a rectangle for the right side of the plot\nrectangle = plt.Rectangle((0.7, 0.1), 0.2, 0.8, color='red')\nax.add_artist(rectangle)\n\n# Create a rectangle for the top of the plot\nrectangle = plt.Rectangle((0.3, 0.9), 0.4, 0.1, color='green')\nax.add_artist(rectangle)\n\n# Create a rectangle for the bottom of the plot\nrectangle = plt.Rectangle((0.3, 0.1), 0.4, 0.1, color='yellow')\nax.add_artist(rectangle)\n\n# Create a rectangle for the middle of the plot\nrectangle = plt.Rectangle((0.3, 0.4), 0.4, 0.2, color='purple')\nax.add_artist(rectangle)\n\n# Create a rectangle for the left side of the plot\nrectangle = plt.Rectangle((0.1, 0.4), 0.2, 0.2, color='orange')\nax.add_artist(rectangle)\n\n# Create a rectangle for the right side of the plot\nrectangle = plt.Rectangle((0.7, 0.4), 0.2, 0.2, color='cyan')\nax.add_artist(rectangle)\n\n# Create a rectangle for the top of the plot\nrectangle = plt.Rectangle((0.3, 0.6), 0.4, 0.2, color='magenta')\nax.add_artist(rectangle)\n\n# Create a rectangle for the bottom of the plot\nrectangle = plt.Rectangle((0.3, 0.2), 0.4, 0.2, color='brown')\nax.add_artist(rectangle)\n\n# Create a rectangle for the middle of the plot\nrectangle = plt.Rectangle((0.3, 0.5), 0.4, 0.2, color='pink')\nax.add_artist(rectangle)\n\n# Create a rectangle for the left side of the plot\nrectangle = plt.Rectangle((0.1, 0.5), 0.2, 0.2, color='grey')\nax.add_artist(rectangle)\n\n# Create a rectangle for the right side of the plot\nrectangle = plt.Rectangle((0.7, 0.5), 0.2, 0.2, color='silver')\nax.add_artist(rectangle)\n\n# Create a rectangle for the top of the plot\nrectangle = plt.Rectangle((0.3, 0.7), 0.4, 0.2, color='gold')\nax.add_artist(rectangle)\n\n# Create a rectangle for the bottom of the plot\nrectangle = plt.Rectangle((0.3, 0.3), 0.4, 0.2, color='white')\nax.add_artist(rectangle)\n\n# Create a rectangle for the middle of the plot\nrectangle = plt.Rectangle((0.3, 0.6), 0.4, 0.2, color='black')\nax.add_artist(rectangle)\n\n# Create a rectangle for the left side of the plot\nrectangle = plt.Rectangle((0.1, 0.6), 0.2, 0.2, color='blue')\nax.add_artist(rectangle)\n\n# Create a rectangle for the right side of the plot\nrectangle = plt.Rectangle((0.7, 0.6), 0.2, 0.2, color='red')\nax.add_artist(rectangle)\n\n# Create a rectangle for the top of the plot\nrectangle = plt.Rectangle((0.3, 0.8), 0.4, 0.2, color='green')\nax.add_artist(rectangle)\n\n# Create a rectangle for the bottom of the plot\nrectangle = plt.Rectangle((0.3, 0.4), 0.4, 0.2, color='yellow')\nax.add_artist(rectangle)\n\n# Create a rectangle for the middle of the plot\nrectangle = plt.Rectangle((0.3, 0.7), 0.4, 0.2, color='purple')\nax.add_artist(rectangle)\n\n# Create a rectangle for the left side of the plot\nrectangle = plt.Rectangle((0.1, 0.7), 0.2, 0.2, color='orange')\nax.add_artist(rectangle)\n\n# Create a rectangle for the right side of the plot\nrectangle = plt.Rectangle((0.7, 0.7), 0.2, 0.2, color='cyan')\nax.add_artist(rectangle)\n\n# Create a rectangle for the top of the plot\nrectangle = plt.Rectangle((0.3, 0.9), 0.4, 0.2, color='magenta')\nax.add_artist(rectangle)\n\n# Create a rectangle for the bottom of the plot\nrectangle = plt.Rectangle((0.3, 0.5), 0.4, 0.2, color='brown')\nax.add_artist(rectangle)\n\n# Create a rectangle for the middle of the plot\nrectangle = plt.Rectangle((0.3, 0.8), 0.4, 0.2, color='pink')\nax.add_artist(rectangle)\n\n# Create a rectangle for the left side of the plot\nrectangle = plt.Rectangle((0.1, 0.8), 0.2, 0.2, color='grey')\nax.add_artist(rectangle)\n\n# Create a rectangle for the right side of the plot\nrectangle = plt.Rectangle((0.7, 0.8), 0.2, 0.2, color='silver')\nax.add_artist(rectangle)\n\n# Create a rectangle for the top of the plot\nrectangle = plt.Rectangle((0.3, 1.0), 0.4, 0.2, color='gold')\nax.add_artist(rectangle)\n\n# Create a rectangle for the bottom of the plot\nrectangle = plt.Rectangle((0.3, 0.6), 0.4, 0.2, color='white')\nax.add_artist(rectangle)\n\n# Create a rectangle for the middle of the plot\nrectangle = plt.Rectangle((0.3, 0.9), 0.4, 0.2, color='black')\nax.add_artist(rectangle)\n\n# Create a rectangle for the left side of the plot\nrectangle = plt.Rectangle((0.1, 0.9), 0.2, 0.2, color='blue')\nax.add_artist(rectangle)\n\n# Create a rectangle for the right side of the plot\nrectangle = plt.Rectangle((0.7, 0.9), 0.2, 0.2, color='red')\nax.add_artist(rectangle)\n\n# Create a rectangle for the top of the plot\nrectangle = plt.Rectangle((0.3, 1.1), 0.4, 0.2, color='green')\nax.add_artist(rectangle)\n\n# Create a rectangle for the bottom of the plot\nrectangle = plt.Rectangle((0.3, 0.7), 0.4, 0.2, color='yellow')\nax.add_artist(rectangle)\n\n# Create a rectangle for the middle of the plot\nrectangle = plt.Rectangle((0.3, 1.0), 0.4, 0.2, color='purple')\nax.add_artist(rectangle)\n\n# Create a rectangle for the left side of the plot\nrectangle = plt.Rectangle((0.1, 1.0), 0.2, 0.2, color='orange')\nax.add_artist(rectangle)\n\n# Create a rectangle for the right side of the plot\nrectangle = plt.Rectangle((0.7, 1.0), 0.2, 0.2, color='cyan')\nax.add_artist(rectangle)\n\n# Create a rectangle for the top of the plot\nrectangle = plt.Rectangle((0.3, 1.2), 0.4, 0.2, color='magenta')\nax.add_artist(rectangle)\n\n# Create a rectangle for the bottom of the plot\nrectangle = plt.Rectangle((0.3, 0.8), 0.4, 0.2, color='brown')\nax.add_artist(rectangle)\n\n# Create a rectangle for the middle of the plot\nrectangle = plt.Rectangle((0.3, 1.1), 0.4, 0.2, color='pink')\nax.add_artist(rectangle)\n\n# Create a rectangle for the left side of the plot\nrectangle = plt.Rectangle((0.1, 1.1), 0.2, 0.2, color='grey')\nax.add_artist(rectangle)\n\n# Create a rectangle for the right side of the plot\nrectangle = plt.Rectangle((0.7, 1.1), 0.2, 0.2, color='silver')\nax.add_artist(rectangle)\n\n# Create a rectangle for the top of the plot\nrectangle = plt.Rectangle((0.3, 1.3), 0.4, 0.2, color='gold')\nax.add_artist(rectangle)\n\n# Create a rectangle for the bottom of the plot\nrectangle = plt.Rectangle((0.3, 0.9), 0.4, 0.2, color='white')\nax.add_artist(rectangle)\n\n# Create a rectangle for the middle of the plot\nrectangle = plt.Rectangle((0.3, 1.2), 0.4, 0.2, color='black')\nax.add_artist(rectangle)\n\n# Create a rectangle for the left side of the plot\nrectangle = plt.Rectangle((0.1, 1.2), 0.2, 0.2, color='blue')\nax.add_artist(rectangle)\n\n# Create a rectangle for the right side of the plot\nrectangle = plt.Rectangle((0.7, 1.2), 0.2, 0.2, color='red')\nax.add_artist(rectangle)\n\n# Create a rectangle for the top of the plot\nrectangle = plt.Rectangle((0.3, 1.4), 0.4, 0.2, color='green')\nax.add_artist(rectangle)\n\n# Create a rectangle for the bottom of the plot\nrectangle = plt.Rectangle((0.3, 1.0), 0.4, 0.2, color='yellow')\nax.add_artist(rectangle)\n\n# Create a rectangle for the middle of the plot\nrectangle = plt.Rectangle((0.3, 1.3), 0.4, 0.2, color='purple')\nax.add_artist(rectangle)\n\n# Create a rectangle for the left side of the plot\nrectangle = plt.Rectangle((0.1, 1.3), 0.2, 0.2, color='orange')\nax.add_artist(rectangle)\n\n# Create a rectangle for the right side of the plot\nrectangle = plt.Rectangle((0.7, 1.3), 0.2, 0.2, color='cyan')\nax.add_artist(rectangle)\n\n# Create a rectangle for the top of the plot\nrectangle = plt.Rectangle((0.3, 1.5), 0.4, 0.2, color='magenta')\nax.add_artist(rectangle)\n\n# Create a rectangle for the bottom of the plot\nrectangle = plt.Rectangle((0.3, 1.1), 0.4, 0.2, color='brown')\nax.add_artist(rectangle)\n\n# Create a rectangle for the middle of the plot\nrectangle = plt.Rectangle((0.3, 1.4), 0.4, 0.2, color='pink')\nax.add_artist(rectangle)\n\n# Create a rectangle for the left side of the plot\nrectangle = plt.Rectangle((0.1, 1.4), 0.2, 0.2, color='grey')\nax.add_artist(rectangle)\n\n# Create a rectangle for the right side of the plot\nrectangle = plt.Rectangle((0.7, 1.4), 0.2, 0.2, color='silver')\nax.add_artist(rectangle)\n\n# Create a rectangle for the top of the plot\nrectangle = plt.Rectangle((0.3, 1.6), 0.4, 0.2, color='gold')\nax.add_artist(rectangle)\n\n# Create a rectangle for the bottom of the plot\nrectangle = plt.Rectangle((0.3, 1.2), 0.4, 0.2, color='white')\nax.add_artist(rectangle)\n\n# Create a rectangle for the middle of the plot\nrectangle = plt.Rectangle((0.3, 1.5), 0.4, 0.2, color='black')\nax.add_artist(rectangle)\n\n# Create a rectangle for the left side of the plot\nrectangle = plt.Rectangle((0.1, 1.5), 0.2, 0.2, color='blue')\nax.add_artist(rectangle)\n\n# Create a rectangle for the right side of the plot\nrectangle = plt.Rectangle((0.7, 1.5), 0.2, 0.2, color='red')\nax.add_artist(rectangle)\n\n# Create a rectangle for the top of the plot\nrectangle = plt.Rectangle((0.3, 1.7), 0.4, 0.2, color='green')\nax.add_artist(rectangle)\n\n# Create a rectangle for the bottom of the plot\nrectangle = plt.Rectangle((0.3, 1.3), 0.4, 0.2, color='yellow')\nax.add_artist(rectangle)\n\n# Create a rectangle for the middle of the plot\nrectangle = plt.Rectangle((0.3, 1.6), 0.4, 0.2, color='purple')\nax.add_artist(rectangle)\n\n# Create a rectangle for the left side of the plot\nrectangle = plt.Rectangle((0.1, 1.6), 0.2, 0.2, color='orange')\nax.add_artist(rectangle)\n\n# Create a rectangle for the right side of the plot\nrectangle = plt.Rectangle((0.7, 1.6), 0.2, 0.2, color='cyan')\nax.add_artist(rectangle)\n\n# Create a rectangle for the top of the plot\nrectangle = plt.Rectangle((0.3, 1.8), 0.4, 0.2, color='magenta')\nax.add_artist(rectangle)\n\n# Create a rectangle for the bottom of the plot\nrectangle = plt.Rectangle((0.3, 1.4), 0.4, 0.2, color='brown')\nax.add_artist(rectangle)\n\n# Create a rectangle for the middle of the plot\nrectangle = plt.Rectangle((0.3, 1.7), 0.4, 0.2, color='pink')\nax.add_artist(rectangle)\n\n# Create a rectangle for the left side of the plot\nrectangle = plt.Rectangle((0.1, 1.7), 0.2, 0.2, color='grey')\nax.add_artist(rectangle)\n\n# Create a rectangle for the right side of the plot\nrectangle = plt.Rectangle((0.7, 1.7), 0.2, 0.2, color='silver')\nax.add_artist(rectangle)\n\n# Create a rectangle for the top of the plot\nrectangle = plt.Rectangle((0.3, 1.9), 0.4, 0.2, color='gold')\nax.add_artist(rectangle)\n\n# Create a rectangle for the bottom of the plot\nrectangle = plt.Rectangle((0.3, 1.5), 0.4, 0.2, color='white')\nax.add_artist(rectangle)\n\n# Create a rectangle for the middle of the plot\nrectangle = plt.Rectangle((0.3, 1.8), 0.4, 0.2, color='black')\nax.add_artist(rectangle)\n\n# Create a rectangle for the left side of the plot\nrectangle = plt.Rectangle((0.1, 1.8), 0.2, 0.2, color='blue')\nax.add_artist(rectangle)\n\n# Create a rectangle for the right side of the plot\nrectangle = plt.Rectangle((0.7, 1.8), 0.2, 0.2, color='red')\nax.add_artist(rectangle)\n\n# Create a rectangle for the top of the plot\nrectangle = plt.Rectangle((0.3, 2.0), 0.4, 0.2, color='green')\nax.add_artist(rectangle)\n\n# Create a rectangle for the bottom of the plot\nrectangle = plt.Rectangle((0.3, 1.6), 0.4, 0.2, color='yellow')\nax.add_artist(rectangle)\n\n# Create a rectangle for the middle of the plot\nrectangle = plt.Rectangle((0.3, 1.9), 0.4, 0.2, color='purple')\nax.add_artist(rectangle)\n\n# Create a rectangle for the left side of the plot\nrectangle = plt.Rectangle((0.1, 1.9), 0.2, 0.2, color='orange')\nax.add_artist(rectangle)\n\n# Create a rectangle for the right side of the plot\nrectangle = plt.Rectangle((0.7, 1.9), 0.2, 0.2, color='cyan')\nax.add_artist(rectangle)\n\n# Create a rectangle for the top of the plot\nrectangle = plt.Rectangle((0.3, 2.1), 0.4, 0.2, color='magenta')\nax.add_artist(rectangle)\n\n# Create a rectangle for the bottom of the plot\nrectangle = plt.Rectangle((0.3, 1.7), 0.4, 0.2, color='brown')\nax.add_artist(rectangle)\n\n# Create a rectangle for the middle of the plot\nrectangle = plt.Rectangle((0.3, 2.0), 0.4, 0.2, color='pink')\nax.add_artist(rectangle)\n\n# Create a rectangle for the left side of the plot\nrectangle = plt.Rectangle((0.1, 2.0), 0.2, 0.2, color='grey')\nax.add_artist(rectangle)\n\n# Create a rectangle for the right side of the plot\nrectangle = plt.Rectangle((0.7, 2.0), 0.2, 0.2, color='silver')\nax.add_artist(rectangle)\n\n# Create a rectangle for the top of the plot\nrectangle = plt.Rectangle((0.3, 2.2), 0.4, 0.2, color='gold')\nax.add_artist(rectangle)\n\n# Create"}
{"file": "dataset/ori_500/radar_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Set the background color of the plot\nax.set_facecolor('black')\n\n# Set the title of the plot\nax.set_title('Stock Market Analysis', color='white')\n\n# Set the labels for the x-axis and y-axis\nax.set_xlabel('Time')\nax.set_ylabel('Price')\n\n# Set the tick labels for the x-axis and y-axis\nax.set_xticks(np.arange(0, 10, 1))\nax.set_yticks(np.arange(0, 100, 10))\n\n# Set the tick label color\nax.tick_params(axis='both', colors='white')\n\n# Set the grid lines\nax.grid(True, which='both', linestyle='--', linewidth=0.5)\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\nax.tick_params(axis='both', colors='white')\n\n# Set the color of the grid lines\nax.grid(color='gray')\n\n# Set the color of the tick labels\n"}
{"file": "dataset/ori_500/scatter_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(2, 4, figsize=(12, 4))\n\n# Set the title for each subplot\naxs[0, 0].set_title('Model-Basedness')\naxs[0, 1].set_title('Meta-Cognition')\naxs[0, 2].set_title('Exploration')\naxs[0, 3].set_title('Risk Taking')\naxs[0, 4].set_title('Bayesian Reasoning')\naxs[0, 5].set_title('Simple Bandits')\n\n# Create a scatter plot for each subplot\naxs[0, 0].scatter(np.random.rand(10), np.random.rand(10), color='blue')\naxs[0, 1].scatter(np.random.rand(10), np.random.rand(10), color='orange')\naxs[0, 2].scatter(np.random.rand(10), np.random.rand(10), color='green')\naxs[0, 3].scatter(np.random.rand(10), np.random.rand(10), color='red')\naxs[0, 4].scatter(np.random.rand(10), np.random.rand(10), color='purple')\naxs[0, 5].scatter(np.random.rand(10), np.random.rand(10), color='brown')\n\n# Add a vertical line to each subplot\nfor ax in axs.flat:\n    ax.axvline(x=0.5, color='black', linestyle='--')\n\n# Add a horizontal line to each subplot\nfor ax in axs.flat:\n    ax.axhline(y=0.5, color='black', linestyle='--')\n\n# Add a rectangle around each subplot\nfor ax in axs.flat:\n    ax.add_patch(plt.Rectangle((0, 0), 1, 1, fill=False, edgecolor='black'))\n\n# Add a text label to each subplot\nfor ax in axs.flat:\n    ax.text(0.5, 0.5, 'llama-2-70-chat', ha='center', va='center', color='blue')\n\n# Add a text label to each subplot\nfor ax in axs.flat:\n    ax.text(0.5, 0.5, 'llama-2-70', ha='center', va='center', color='blue')\n\n# Add a text label to each subplot\nfor ax in axs.flat:\n    ax.text(0.5, 0.5, 'hf_falcon-40b', ha='center', va='center', color='orange')\n\n# Add a text label to each subplot\nfor ax in axs.flat:\n    ax.text(0.5, 0.5, 'text-bison@002', ha='center', va='center', color='blue')\n\n# Add a text label to each subplot\nfor ax in axs.flat:\n    ax.text(0.5, 0.5, 'claude-2', ha='center', va='center', color='blue')\n\n# Add a text label to each subplot\nfor ax in axs.flat:\n    ax.text(0.5, 0.5, 'claude-1', ha='center', va='center', color='blue')\n\n# Add a text label to each subplot\nfor ax in axs.flat:\n    ax.text(0.5, 0.5, 'text-davinci-002', ha='center', va='center', color='blue')\n\n# Add a text label to each subplot\nfor ax in axs.flat:\n    ax.text(0.5, 0.5, 'text-davinci-003', ha='center', va='center', color='blue')\n\n# Add a text label to each subplot\nfor ax in axs.flat:\n    ax.text(0.5, 0.5, 'gpt-4', ha='center', va='center', color='blue')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 5.0))\n\n# Set the title of the plot\nax.set_title('ImageNet-1K Linear Probing')\n\n# Set the x-axis label\nax.set_xlabel('Pre-training GPU Hours')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy [%]')\n\n# Set the x-axis limits\nax.set_xlim(0, 4000)\n\n# Set the y-axis limits\nax.set_ylim(75, 90)\n\n# Create a scatter plot for each model\nax.scatter([100, 2000, 3000], [85, 83, 81], color='black', s=100)\nax.scatter([100, 2000, 3000], [85, 83, 81], color='red', s=100)\nax.scatter([100, 2000, 3000], [85, 83, 81], color='blue', s=100)\nax.scatter([100, 2000, 3000], [85, 83, 81], color='green', s=100)\nax.scatter([100, 2000, 3000], [85, 83, 81], color='orange', s=100)\nax.scatter([100, 2000, 3000], [85, 83, 81], color='purple', s=100)\nax.scatter([100, 2000, 3000], [85, 83, 81], color='cyan', s=100)\nax.scatter([100, 2000, 3000], [85, 83, 81], color='magenta', s=100)\n\n# Create a line plot for each model\nax.plot([100, 2000, 3000], [85, 83, 81], color='black')\nax.plot([100, 2000, 3000], [85, 83, 81], color='red')\nax.plot([100, 2000, 3000], [85, 83, 81], color='blue')\nax.plot([100, 2000, 3000], [85, 83, 81], color='green')\nax.plot([100, 2000, 3000], [85, 83, 81], color='orange')\nax.plot([100, 2000, 3000], [85, 83, 81], color='purple')\nax.plot([100, 2000, 3000], [85, 83, 81], color='cyan')\nax.plot([100, 2000, 3000], [85, 83, 81], color='magenta')\n\n# Add text annotations for each model\nax.annotate('iBOT', (100, 85), color='black')\nax.annotate('MoCo v3', (2000, 83), color='red')\nax.annotate('D2V2', (3000, 81), color='blue')\n\n# Add a legend\nax.legend(['iBOT', 'MoCo v3', 'D2V2'], loc='upper left')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_11.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Bubble Size: Number of Anomalies Detected')\n\n# Set the x-axis label\nax.set_xlabel('Infernece Time (seconds)')\n\n# Set the y-axis label\nax.set_ylabel('Average Score')\n\n# Set the tick labels for the x-axis\nax.set_xticks([10, 20, 30, 40, 50, 60])\n\n# Set the tick labels for the y-axis\nax.set_yticks([0.5, 0.6, 0.7, 0.8, 0.9, 1.0])\n\n# Draw a rectangle at the bottom left corner\nrect = plt.Rectangle((0, 0), 1, 1, fc='blue')\nax.add_patch(rect)\n\n# Draw a circle at the top right corner\ncircle = plt.Circle((1, 1), 0.5, fc='red')\nax.add_patch(circle)\n\n# Draw a line graph\nx = [10, 20, 30, 40, 50, 60]\ny = [0.5, 0.6, 0.7, 0.8, 0.9, 1.0]\nax.plot(x, y)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_12.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Number of parameters')\n\n# Create a scatter plot with random data\nx = np.random.rand(10)\ny = np.random.rand(10)\nax.scatter(x, y)\n\n# Set the x and y limits\nax.set_xlim([0, 1])\nax.set_ylim([0, 1])\n\n# Set the x and y labels\nax.set_xlabel('EgoSchema VQA accuracy')\nax.set_ylabel('Perception Test VQA accuracy')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_13.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Average Relative Error, u')\n\n# Set the x-axis label\nax.set_xlabel('Test Case Index')\n\n# Set the y-axis label\nax.set_ylabel('Average Relative Error, u')\n\n# Set the x-ticks\nax.set_xticks([1, 2, 3, 4, 5])\n\n# Set the y-ticks\nax.set_yticks([0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08])\n\n# Add a rectangle for the legend\nax.legend(['Single LSTM', 'Ensemble LSTM', 'CAE Reconstruction'], loc='upper left')\n\n# Add a scatter plot for the data points\nax.scatter([1, 2, 3, 4, 5], [0.01, 0.02, 0.03, 0.04, 0.05], color='blue')\nax.scatter([1, 2, 3, 4, 5], [0.02, 0.03, 0.04, 0.05, 0.06], color='green')\nax.scatter([1, 2, 3, 4, 5], [0.03, 0.04, 0.05, 0.06, 0.07], color='red')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_14.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 3.0))\n\n# Set the title of the plot\nax.set_title('Accuracies for the ImageNet Classes (ClarifAI)')\n\n# Set the x-axis label\nax.set_xlabel('Classes')\n\n# Set the y-axis label\nax.set_ylabel('Accuracies')\n\n# Define the classes and their accuracies\nclasses = ['spotlight', 'sliding', 'wool', 'weasel', 'space', 'partridge', 'mushroom', 'bighorn']\naccuracies = [0.95, 0.85, 0.75, 0.65, 0.55, 0.45, 0.35, 0.25]\n\n# Plot the data\nax.plot(classes, accuracies, 'o-')\n\n# Add a legend\nax.legend(['Majority', 'Minority'], loc='upper left')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_15.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 2, figsize=(10.0, 4.0))\n\n# Set the title for each subplot\naxs[0].set_title('Logic Grid Puzzle(Accuracy versus token cost)')\naxs[1].set_title('Logic Grid Puzzle(Accuracy versus TFLOPS)')\n\n# Define the data for the plots\nx = [50, 40, 30, 20, 10, 0]\ny1 = [68, 66, 64, 62, 60, 58]\ny2 = [68, 66, 64, 62, 60, 58]\n\n# Plot the data\naxs[0].plot(x, y1, 'ro-')\naxs[0].plot(x, y2, 'bo-')\n\n# Add labels to the plots\naxs[0].set_xlabel('Token cost($)')\naxs[0].set_ylabel('Accuracy(%)')\n\n# Define the data for the second subplot\nx = [50, 40, 30, 20, 10, 0]\ny1 = [68, 66, 64, 62, 60, 58]\ny2 = [68, 66, 64, 62, 60, 58]\n\n# Plot the data\naxs[1].plot(x, y1, 'ro-')\naxs[1].plot(x, y2, 'bo-')\n\n# Add labels to the plots\naxs[1].set_xlabel('TFLOPS')\naxs[1].set_ylabel('Accuracy(%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_16.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Energy Efficiency')\n\n# Set the x-axis label\nax.set_xlabel('Efficiency (%)')\n\n# Set the y-axis label\nax.set_ylabel('Carbon Reduction (%)')\n\n# Define the data points\nx = [15, 20, 25, 30, 35, 40, 45, 50]\ny = [10, 15, 20, 25, 30, 35, 40, 45]\n\n# Plot the data points\nax.plot(x, y, 'ro-')\n\n# Add a legend\nax.legend(['Solar', 'Wind', 'Hydro', 'Geothermal', 'Biomass', 'Nuclear', 'Tidal', 'Wave'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_17.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(9.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Stock Market Analysis')\n\n# Set the x-axis label\nax.set_xlabel('\u0394 Robust Accuracy (%)')\n\n# Set the y-axis label\nax.set_ylabel('\u0394 RNFR (%)')\n\n# Create a scatter plot with random data\nx = np.random.rand(100)\ny = np.random.rand(100)\nax.scatter(x, y, c='blue', alpha=0.5)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_18.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the x-axis limits\nax.set_xlim(2, 16)\n\n# Set the y-axis limits\nax.set_ylim(80, 110)\n\n# Set the x-axis ticks\nax.set_xticks(range(2, 17, 2))\n\n# Set the y-axis ticks\nax.set_yticks(range(80, 111, 10))\n\n# Set the x-axis labels\nax.set_xticklabels(['Day 2', 'Day 4', 'Day 6', 'Day 8', 'Day 10', 'Day 12', 'Day 14', 'Day 16'])\n\n# Set the y-axis labels\nax.set_yticklabels(['80', '90', '100', '110'])\n\n# Set the title of the plot\nax.set_title('Temperature over Time')\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--')\n\n# Set the color of the tick marks\nax.tick_params(axis='both', colors='red')\n\n# Set the color of the text\nax.text(1, 105, 'Day 1', color='blue')\nax.text(3, 105, 'Day 2', color='orange')\n\n# Set the color of the scatter points\nax.scatter([2, 4, 6, 8, 10, 12, 14, 16], [85, 90, 95, 100, 105, 110, 105, 90], color='blue')\nax.scatter([2, 4, 6, 8, 10, 12, 14, 16], [80, 85, 90, 95, 100, 105, 110, 105], color='orange')\n\n# Set the color of the line\nax.plot([2, 4, 6, 8, 10, 12, 14, 16], [85, 90, 95, 100, 105, 110, 105, 90], color='blue')\nax.plot([2, 4, 6, 8, 10, 12, 14, 16], [80, 85, 90, 95, 100, 105, 110, 105], color='orange')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_19.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the x-axis and y-axis limits\nax.set_xlim(2, 16)\nax.set_ylim(80, 110)\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('X-axis')\nax.set_ylabel('Y-axis')\n\n# Create a scatter plot with different colors for each point\nax.scatter([2, 4, 6, 8, 10, 12, 14, 16], [95, 90, 85, 80, 75, 70, 65, 60], color='blue')\nax.scatter([2, 4, 6, 8, 10, 12, 14, 16], [90, 85, 80, 75, 70, 65, 60, 55], color='green')\nax.scatter([2, 4, 6, 8, 10, 12, 14, 16], [85, 80, 75, 70, 65, 60, 55, 50], color='red')\n\n# Add a rectangle to the plot\nrect = plt.Rectangle((2, 80), 14, 30, color='yellow')\nax.add_patch(rect)\n\n# Add a vertical line to the plot\nax.axvline(x=10, color='purple', linestyle='--')\n\n# Add a horizontal line to the plot\nax.axhline(y=90, color='orange', linestyle='-.')\n\n# Add a text annotation to the plot\nax.annotate('Important Point', xy=(12, 85), xytext=(14, 90),\n            arrowprops=dict(facecolor='black', shrink=0.05))\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(4.0, 8.0))\n\n# Set the title of the graph\nax.set_title('Energy Production Trends')\n\n# Create a list of energy sources\nenergy_sources = ['Solar Energy', 'Wind Energy', 'Hydropower']\n\n# Create a list of colors for each energy source\ncolors = ['cyan', 'red', 'gray']\n\n# Create a list of energy output values\nenergy_output = [220, 210, 200]\n\n# Create a list of installed capacity values\ninstalled_capacity = [175, 200, 225, 250, 275, 300]\n\n# Plot the data\nfor i in range(len(energy_sources)):\n    ax.plot(installed_capacity, energy_output[i], color=colors[i], label=energy_sources[i])\n\n# Add a legend\nax.legend()\n\n# Set the x-axis label\nax.set_xlabel('Installed Capacity (GW)')\n\n# Set the y-axis label\nax.set_ylabel('Energy Output (TWh)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_20.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Scatter plot with colorbar')\n\n# Create a scatter plot\nscatter = ax.scatter([10, 20, 30, 40, 50, 60, 70, 80, 90], [10, 20, 30, 40, 50, 60, 70, 80, 90], c=[10, 20, 30, 40, 50, 60, 70, 80, 90], cmap='viridis')\n\n# Add a color bar which maps values to colors\ncbar = fig.colorbar(scatter)\n\n# Set the limits of the color bar\ncbar.set_clim(0, 100)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_21.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 5))\n\n# Set the title of the plot\nax.set_title('LibriCSS vs Additional Data 1')\n\n# Create a scatter plot with random data\nx = [2, 3, 4, 5, 6, 7, 8]\ny = [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3]\nax.scatter(x, y, color='blue')\n\n# Add labels to the x-axis\nax.set_xlabel('Number of Microphones')\n\n# Add labels to the y-axis\nax.set_ylabel('WER (%)')\n\n# Create a second subplot\nax2 = fig.add_subplot(122)\n\n# Set the title of the second plot\nax2.set_title('AMI vs Additional Data 2')\n\n# Create a scatter plot with random data\nx2 = [2, 3, 4, 5, 6, 7, 8]\ny2 = [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3]\nax2.scatter(x2, y2, color='red')\n\n# Add labels to the x-axis\nax2.set_xlabel('Number of Microphones')\n\n# Add labels to the y-axis\nax2.set_ylabel('WER (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_22.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Performance Comparison')\n\n# Create a scatter plot\nax.scatter([0.5, 0.7, 0.9], [0.3, 0.4, 0.5], color='blue')\nax.scatter([0.2, 0.4, 0.6], [0.1, 0.2, 0.3], color='orange')\nax.scatter([0.8, 0.9, 0.7], [0.6, 0.7, 0.8], color='red')\n\n# Set the x-axis label\nax.set_xlabel('Value')\n\n# Set the y-axis label\nax.set_ylabel('Performance')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_23.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis for the first subplot\nfig1, ax1 = plt.subplots(figsize=(8.0, 8.0))\nax1.plot([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 'b-')\nax1.set_title('Model-Basedness')\nax1.set_xlabel('Models')\nax1.set_ylabel('Score')\n\n# Create a figure and axis for the second subplot\nfig2, ax2 = plt.subplots(figsize=(8.0, 8.0))\nax2.plot([1, 2, 3, 4, 5], [5, 4, 3, 2, 1], 'y-')\nax2.set_title('Meta-Cognition')\nax2.set_xlabel('Models')\nax2.set_ylabel('Score')\n\n# Create a figure and axis for the third subplot\nfig3, ax3 = plt.subplots(figsize=(8.0, 8.0))\nax3.plot([1, 2, 3, 4, 5], [1, 2, 3, 4, 5], 'g-')\nax3.set_title('Exploration')\nax3.set_xlabel('Models')\nax3.set_ylabel('Score')\n\n# Create a figure and axis for the fourth subplot\nfig4, ax4 = plt.subplots(figsize=(8.0, 8.0))\nax4.plot([1, 2, 3, 4, 5], [5, 4, 3, 2, 1], 'r-')\nax4.set_title('Risk Taking')\nax4.set_xlabel('Models')\nax4.set_ylabel('Score')\n\n# Display the plots\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_24.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(2, 2, figsize=(15, 5))\n\n# Scatter plot for the first subplot\naxs[0, 0].scatter([70, 80, 90], [40, 50, 60], color='blue')\naxs[0, 0].set_title('Scatter Plot - deepskyblue')\n\n# Scatter plot for the second subplot\naxs[0, 1].scatter([70, 80, 90], [30, 40, 50], color='magenta')\naxs[0, 1].set_title('Scatter Plot - magenta')\n\n# Scatter plot for the third subplot\naxs[1, 0].scatter([70, 80, 90], [20, 30, 40], color='limegreen')\naxs[1, 0].set_title('Scatter Plot - limegreen')\n\n# Scatter plot for the fourth subplot\naxs[1, 1].scatter([70, 80, 90], [10, 20, 30], color='cyan')\naxs[1, 1].set_title('Scatter Plot - cyan')\n\n# Set the x-axis and y-axis limits for all subplots\nfor ax in axs.flat:\n    ax.set_xlim(70, 90)\n    ax.set_ylim(10, 60)\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_25.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Data for the plots\nx = [70, 72, 74, 76, 78, 80, 82, 84, 86, 88]\ny1 = [30, 32, 35, 37, 39, 41, 43, 45, 47, 49]\ny2 = [35, 37, 39, 41, 43, 45, 47, 49, 51, 53]\ny3 = [40, 42, 44, 46, 48, 50, 52, 54, 56, 58]\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(1, 3, figsize=(15, 5))\n\n# Plot the data\naxs[0].plot(x, y1, 'b-')\naxs[1].plot(x, y2, 'r-')\naxs[2].plot(x, y3, 'g-')\n\n# Add a title to each subplot\naxs[0].set_title('ViTPose (sc) Performance')\naxs[1].set_title('ViTPose (ft) Performance')\naxs[2].set_title('VLPose Performance')\n\n# Add a legend to each subplot\naxs[0].legend(['ViTPose (sc)'])\naxs[1].legend(['ViTPose (ft)'])\naxs[2].legend(['VLPose'])\n\n# Set the x-axis label\naxs[0].set_xlabel('Average Precision on HumanArt (%)')\naxs[1].set_xlabel('Average Precision on HumanArt (%)')\naxs[2].set_xlabel('Average Precision on HumanArt (%)')\n\n# Set the y-axis label\naxs[0].set_ylabel('Average Precision on MSCOCO (%)')\naxs[1].set_ylabel('Average Precision on MSCOCO (%)')\naxs[2].set_ylabel('Average Precision on MSCOCO (%)')\n\n# Set the x-ticks\naxs[0].set_xticks(x)\naxs[1].set_xticks(x)\naxs[2].set_xticks(x)\n\n# Set the y-ticks\naxs[0].set_yticks(range(30, 50, 5))\naxs[1].set_yticks(range(30, 50, 5))\naxs[2].set_yticks(range(30, 50, 5))\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Token cost ($)')\n\n# Set the x-axis label\nax.set_xlabel('Diversity (%)')\n\n# Set the y-axis label\nax.set_ylabel('Accuracy (%)')\n\n# Create a scatter plot with the data\nax.scatter([12, 14, 16, 18, 20, 22, 24], [75, 65, 55, 45, 35, 25, 15], c='blue', s=100)\n\n# Add a legend to the plot\nax.legend(['DefInt', 'CoT', 'SPP', 'Self-refine', 'ToT', 'MAD+judge', 'SPF'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_4.pdf", "response": "import matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(5.0, 5.0))\n\n# Set the background color of the plot\nax.set_facecolor('white')\n\n# Create a scatter plot with random data points\nx = np.random.rand(100)\ny = np.random.rand(100)\ncolors = np.random.rand(100)\nsizes = 1000 * np.random.rand(100)\nscatter = ax.scatter(x, y, c=colors, s=sizes, alpha=0.5)\n\n# Set the title of the plot\nax.set_title('Random Scatter Plot')\n\n# Set the x and y labels\nax.set_xlabel('X-axis')\nax.set_ylabel('Y-axis')\n\n# Show the plot\nplt.show()"}
{"file": "dataset/ori_500/scatter_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Scatter Plot of WRMSE vs BPP')\n\n# Set the x-axis label\nax.set_xlabel('Bit per pixel (BPP)')\n\n# Set the y-axis label\nax.set_ylabel('WRMSE')\n\n# Define the data points\nx = [0.06, 0.08, 0.1, 0.12, 0.14, 0.16, 0.18, 0.2]\ny = [800, 700, 600, 500, 400, 300, 200, 100]\n\n# Define the colors for each point\ncolors = ['blue', 'cyan', 'red', 'green', 'purple', 'pink', 'orange', 'yellow']\n\n# Define the labels for each point\nlabels = ['SIREN', 'WIRE', 'FFN', 'SZ3', 'NNComp', 'Ours']\n\n# Plot the data points with their respective colors and labels\nfor i in range(len(x)):\n    ax.scatter(x[i], y[i], color=colors[i], label=labels[i])\n\n# Add a legend to the plot\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Define the data for each scatter plot\nx1 = [1, 2, 3, 4, 5]\ny1 = [1, 2, 3, 4, 5]\nx2 = [1, 2, 3, 4, 5]\ny2 = [5, 4, 3, 2, 1]\nx3 = [1, 2, 3, 4, 5]\ny3 = [1, 2, 3, 4, 5]\nx4 = [1, 2, 3, 4, 5]\ny4 = [5, 4, 3, 2, 1]\n\n# Create the scatter plots\nax.scatter(x1, y1, color='orange')\nax.scatter(x2, y2, color='blue')\nax.scatter(x3, y3, color='green')\nax.scatter(x4, y4, color='red')\n\n# Add a legend\nax.legend(['Daytime Sunny', 'Night Rainy', 'PGST'])\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 3.0))\n\n# Set the title of the plot\nax.set_title('Number of params. vs. NMAE on QM9')\n\n# Set the x-axis label\nax.set_xlabel('Number of parameters (M)')\n\n# Set the y-axis label\nax.set_ylabel('NMAE')\n\n# Define the data points\nx = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\ny = [10, 12, 14, 16, 18, 20, 22, 24, 26, 28]\n\n# Plot the data points\nax.plot(x, y, 'o-')\n\n# Add a rectangle to represent a model\nrect = plt.Rectangle((2, 15), 1, 1, color='red')\nax.add_patch(rect)\n\n# Add a text label to the rectangle\nax.text(2.5, 16, 'LNO', fontsize=12, verticalalignment='center')\n\n# Add a circle to represent a model\ncircle = plt.Circle((4, 20), 0.5, color='blue')\nax.add_artist(circle)\n\n# Add a text label to the circle\nax.text(4.5, 20.5, 'GNO', fontsize=12, verticalalignment='center')\n\n# Add a triangle to represent a model\ntriangle = plt.Polygon([[6, 25], [7, 27], [5, 27]], color='green')\nax.add_patch(triangle)\n\n# Add a text label to the triangle\nax.text(6.5, 26, 'InfGCN', fontsize=12, verticalalignment='center')\n\n# Add a star to represent a model\nstar = plt.Polygon([[8, 30], [9, 32], [7, 32], [8, 34], [6, 34], [7, 36], [5, 36], [6, 38], [4, 38], [5, 40], [3, 40], [4, 38], [2, 38], [3, 36], [1, 36], [2, 34], [0, 34], [1, 32], [3, 32]], color='purple')\nax.add_patch(star)\n\n# Add a text label to the star\nax.text(8.5, 31, 'DeepDFT2', fontsize=12, verticalalignment='center')\n\n# Add a rectangle to represent a model\nrect = plt.Rectangle((2, 15), 1, 1, color='red')\nax.add_patch(rect)\n\n# Add a text label to the rectangle\nax.text(2.5, 16, 'LNO', fontsize=12, verticalalignment='center')\n\n# Add a circle to represent a model\ncircle = plt.Circle((4, 20), 0.5, color='blue')\nax.add_artist(circle)\n\n# Add a text label to the circle\nax.text(4.5, 20.5, 'GNO', fontsize=12, verticalalignment='center')\n\n# Add a triangle to represent a model\ntriangle = plt.Polygon([[6, 25], [7, 27], [5, 27]], color='green')\nax.add_patch(triangle)\n\n# Add a text label to the triangle\nax.text(6.5, 26, 'InfGCN', fontsize=12, verticalalignment='center')\n\n# Add a star to represent a model\nstar = plt.Polygon([[8, 30], [9, 32], [7, 32], [8, 34], [6, 34], [7, 36], [5, 36], [6, 38], [4, 38], [5, 40], [3, 40], [4, 38], [2, 38], [3, 36], [1, 36], [2, 34], [0, 34], [1, 32], [3, 32]], color='purple')\nax.add_patch(star)\n\n# Add a text label to the star\nax.text(8.5, 31, 'DeepDFT2', fontsize=12, verticalalignment='center')\n\n# Add a rectangle to represent a model\nrect = plt.Rectangle((2, 15), 1, 1, color='red')\nax.add_patch(rect)\n\n# Add a text label to the rectangle\nax.text(2.5, 16, 'LNO', fontsize=12, verticalalignment='center')\n\n# Add a circle to represent a model\ncircle = plt.Circle((4, 20), 0.5, color='blue')\nax.add_artist(circle)\n\n# Add a text label to the circle\nax.text(4.5, 20.5, 'GNO', fontsize=12, verticalalignment='center')\n\n# Add a triangle to represent a model\ntriangle = plt.Polygon([[6, 25], [7, 27], [5, 27]], color='green')\nax.add_patch(triangle)\n\n# Add a text label to the triangle\nax.text(6.5, 26, 'InfGCN', fontsize=12, verticalalignment='center')\n\n# Add a star to represent a model\nstar = plt.Polygon([[8, 30], [9, 32], [7, 32], [8, 34], [6, 34], [7, 36], [5, 36], [6, 38], [4, 38], [5, 40], [3, 40], [4, 38], [2, 38], [3, 36], [1, 36], [2, 34], [0, 34], [1, 32], [3, 32]], color='purple')\nax.add_patch(star)\n\n# Add a text label to the star\nax.text(8.5, 31, 'DeepDFT2', fontsize=12, verticalalignment='center')\n\n# Add a rectangle to represent a model\nrect = plt.Rectangle((2, 15), 1, 1, color='red')\nax.add_patch(rect)\n\n# Add a text label to the rectangle\nax.text(2.5, 16, 'LNO', fontsize=12, verticalalignment='center')\n\n# Add a circle to represent a model\ncircle = plt.Circle((4, 20), 0.5, color='blue')\nax.add_artist(circle)\n\n# Add a text label to the circle\nax.text(4.5, 20.5, 'GNO', fontsize=12, verticalalignment='center')\n\n# Add a triangle to represent a model\ntriangle = plt.Polygon([[6, 25], [7, 27], [5, 27]], color='green')\nax.add_patch(triangle)\n\n# Add a text label to the triangle\nax.text(6.5, 26, 'InfGCN', fontsize=12, verticalalignment='center')\n\n# Add a star to represent a model\nstar = plt.Polygon([[8, 30], [9, 32], [7, 32], [8, 34], [6, 34], [7, 36], [5, 36], [6, 38], [4, 38], [5, 40], [3, 40], [4, 38], [2, 38], [3, 36], [1, 36], [2, 34], [0, 34], [1, 32], [3, 32]], color='purple')\nax.add_patch(star)\n\n# Add a text label to the star\nax.text(8.5, 31, 'DeepDFT2', fontsize=12, verticalalignment='center')\n\n# Add a rectangle to represent a model\nrect = plt.Rectangle((2, 15), 1, 1, color='red')\nax.add_patch(rect)\n\n# Add a text label to the rectangle\nax.text(2.5, 16, 'LNO', fontsize=12, verticalalignment='center')\n\n# Add a circle to represent a model\ncircle = plt.Circle((4, 20), 0.5, color='blue')\nax.add_artist(circle)\n\n# Add a text label to the circle\nax.text(4.5, 20.5, 'GNO', fontsize=12, verticalalignment='center')\n\n# Add a triangle to represent a model\ntriangle = plt.Polygon([[6, 25], [7, 27], [5, 27]], color='green')\nax.add_patch(triangle)\n\n# Add a text label to the triangle\nax.text(6.5, 26, 'InfGCN', fontsize=12, verticalalignment='center')\n\n# Add a star to represent a model\nstar = plt.Polygon([[8, 30], [9, 32], [7, 32], [8, 34], [6, 34], [7, 36], [5, 36], [6, 38], [4, 38], [5, 40], [3, 40], [4, 38], [2, 38], [3, 36], [1, 36], [2, 34], [0, 34], [1, 32], [3, 32]], color='purple')\nax.add_patch(star)\n\n# Add a text label to the star\nax.text(8.5, 31, 'DeepDFT2', fontsize=12, verticalalignment='center')\n\n# Add a rectangle to represent a model\nrect = plt.Rectangle((2, 15), 1, 1, color='red')\nax.add_patch(rect)\n\n# Add a text label to the rectangle\nax.text(2.5, 16, 'LNO', fontsize=12, verticalalignment='center')\n\n# Add a circle to represent a model\ncircle = plt.Circle((4, 20), 0.5, color='blue')\nax.add_artist(circle)\n\n# Add a text label to the circle\nax.text(4.5, 20.5, 'GNO', fontsize=12, verticalalignment='center')\n\n# Add a triangle to represent a model\ntriangle = plt.Polygon([[6, 25], [7, 27], [5, 27]], color='green')\nax.add_patch(triangle)\n\n# Add a text label to the triangle\nax.text(6.5, 26, 'InfGCN', fontsize=12, verticalalignment='center')\n\n# Add a star to represent a model\nstar = plt.Polygon([[8, 30], [9, 32], [7, 32], [8, 34], [6, 34], [7, 36], [5, 36], [6, 38], [4, 38], [5, 40], [3, 40], [4, 38], [2, 38], [3, 36], [1, 36], [2, 34], [0, 34], [1, 32], [3, 32]], color='purple')\nax.add_patch(star)\n\n# Add a text label to the star\nax.text(8.5, 31, 'DeepDFT2', fontsize=12, verticalalignment='center')\n\n# Add a rectangle to represent a model\nrect = plt.Rectangle((2, 15), 1, 1, color='red')\nax.add_patch(rect)\n\n# Add a text label to the rectangle\nax.text(2.5, 16, 'LNO', fontsize=12, verticalalignment='center')\n\n# Add a circle to represent a model\ncircle = plt.Circle((4, 20), 0.5, color='blue')\nax.add_artist(circle)\n\n# Add a text label to the circle\nax.text(4.5, 20.5, 'GNO', fontsize=12, verticalalignment='center')\n\n# Add a triangle to represent a model\ntriangle = plt.Polygon([[6, 25], [7, 27], [5, 27]], color='green')\nax.add_patch(triangle)\n\n# Add a text label to the triangle\nax.text(6.5, 26, 'InfGCN', fontsize=12, verticalalignment='center')\n\n# Add a star to represent a model\nstar = plt.Polygon([[8, 30], [9, 32], [7, 32], [8, 34], [6, 34], [7, 36], [5, 36], [6, 38], [4, 38], [5, 40], [3, 40], [4, 38], [2, 38], [3, 36], [1, 36], [2, 34], [0, 34], [1, 32], [3, 32]], color='purple')\nax.add_patch(star)\n\n# Add a text label to the star\nax.text(8.5, 31, 'DeepDFT2', fontsize=12, verticalalignment='center')\n\n# Add a rectangle to represent a model\nrect = plt.Rectangle((2, 15), 1, 1, color='red')\nax.add_patch(rect)\n\n# Add a text label to the rectangle\nax.text(2.5, 16, 'LNO', fontsize=12, verticalalignment='center')\n\n# Add a circle to represent a model\ncircle = plt.Circle((4, 20), 0.5, color='blue')\nax.add_artist(circle)\n\n# Add a text label to the circle\nax.text(4.5, 20.5, 'GNO', fontsize=12, verticalalignment='center')\n\n# Add a triangle to represent a model\ntriangle = plt.Polygon([[6, 25], [7, 27], [5, 27]], color='green')\nax.add_patch(triangle)\n\n# Add a text label to the triangle\nax.text(6.5, 26, 'InfGCN', fontsize=12, verticalalignment='center')\n\n# Add a star to represent a model\nstar = plt.Polygon([[8, 30], [9, 32], [7, 32], [8, 34], [6, 34], [7, 36], [5, 36], [6, 38], [4, 38], [5, 40], [3, 40], [4, 38], [2, 38], [3, 36], [1, 36], [2, 34], [0, 34], [1, 32], [3, 32]], color='purple')\nax.add_patch(star)\n\n# Add a text label to the star\nax.text(8.5, 31, 'DeepDFT2', fontsize=12, verticalalignment='center')\n\n# Add a rectangle to represent a model\nrect = plt.Rectangle((2, 15), 1, 1, color='red')\nax.add_patch(rect)\n\n# Add a text label to the rectangle\nax.text(2.5, 16, 'LNO', fontsize=12, verticalalignment='center')\n\n# Add a circle to represent a model\ncircle = plt.Circle((4, 20), 0.5, color='blue')\nax.add_artist(circle)\n\n# Add a text label to the circle\nax.text(4.5, 20.5, 'GNO', fontsize=12, verticalalignment='center')\n\n# Add a triangle to represent a model\ntriangle = plt.Polygon([[6, 25], [7, 27], [5, 27]], color='green')\nax.add_patch(triangle)\n\n# Add a text label to the triangle\nax.text(6.5, 26, 'InfGCN', fontsize=12, verticalalignment='center')\n\n# Add a star to represent a model\nstar = plt.Polygon([[8, 30], [9, 32], [7, 32], [8, 34], [6, 34], [7, 36], [5, 36], [6, 38], [4, 38], [5, 40], [3, 40], [4, 38], [2, 38], [3, 36], [1, 36], [2, 34], [0, 34], [1, 32], [3, 32]], color='purple')\nax.add_patch(star)\n\n# Add a text label to the star\nax.text(8.5, 31, 'DeepDFT2', fontsize=12, verticalalignment='center')\n\n# Add a rectangle to represent a model\nrect = plt.Rectangle((2, 15), 1, 1, color='red')\nax.add_patch(rect)\n\n# Add a text label to the rectangle\nax.text(2.5, 16, 'LNO', fontsize=12, verticalalignment='center')\n\n# Add a circle to represent a model\ncircle = plt.Circle((4, 20), 0.5, color='blue')\nax.add_artist(circle)\n\n# Add a text label to the circle\nax.text(4.5, 20.5, 'GNO', fontsize=12, verticalalignment='center')\n\n# Add a triangle to represent a model\ntriangle = plt.Polygon([[6, 25], [7, 27], [5, 27]], color='green')\nax.add_patch(triangle)\n\n# Add a text label to the triangle\nax.text(6.5"}
{"file": "dataset/ori_500/scatter_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('Legend')\n\n# Set the x and y labels\nax.set_xlabel('PC1')\nax.set_ylabel('PC2')\n\n# Set the x and y limits\nax.set_xlim(-0.4, 0.4)\nax.set_ylim(-0.2, 0.4)\n\n# Create scatter plots for each class\nax.scatter([0.1, 0.2], [0.3, 0.4], color='blue', label='ar')\nax.scatter([0.2, 0.3], [0.4, 0.5], color='pink', label='de')\nax.scatter([0.3, 0.4], [0.5, 0.6], color='yellow', label='fr')\nax.scatter([0.4, 0.5], [0.6, 0.7], color='green', label='he')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/scatter_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(7.0, 10.0))\n\n# Set the title of the plot\nax.set_title('DE')\n\n# Set the x-axis label\nax.set_xlabel('CFA Similarity')\n\n# Set the y-axis label\nax.set_ylabel('MSE')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='red')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='blue')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='green')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='orange')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='cyan')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='magenta')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='yellow')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='black')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='white')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='gray')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='silver')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='gold')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='brown')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='pink')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='lime')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='teal')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='navy')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='maroon')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='crimson')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='purple')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='indigo')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='violet')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='beige')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='wheat')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='tan')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='chocolate')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='sienna')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='peru')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='burlywood')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='saddlebrown')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='rosybrown')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='slategray')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='darkslategray')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='silver')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='gray')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='dimgray')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='lightslategray')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='slategrey')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='darkslategrey')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='silver')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='gray')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='dimgray')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='lightslategray')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='slategrey')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='darkslategrey')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='silver')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='gray')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='dimgray')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='lightslategray')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='slategrey')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='darkslategrey')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='silver')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='gray')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='dimgray')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='lightslategray')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='slategrey')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='darkslategrey')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='silver')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='gray')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5], color='dimgray')\n\n# Create a scatter plot with random data\nax.scatter([0.5, 0.6, 0.7, 0.8, 0.9], [0.1, 0.2, 0.3, 0.4, 0.5],"}
{"file": "dataset/ori_500/tree_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and a set of subplots\nfig, axs = plt.subplots(3, 2, figsize=(12.0, 8.0))\n\n# Set the color of the subplots\naxs[0, 0].set_facecolor('lightblue')\naxs[0, 1].set_facecolor('lightcoral')\naxs[1, 0].set_facecolor('lightgreen')\naxs[1, 1].set_facecolor('lightsalmon')\naxs[2, 0].set_facecolor('lightcyan')\naxs[2, 1].set_facecolor('lightyellow')\n\n# Set the title of each subplot\naxs[0, 0].set_title('physicsforums.com 18.42%')\naxs[0, 1].set_title('gmatclub.com 6.26%')\naxs[1, 0].set_title('stackexchange.com 30.6%')\naxs[1, 1].set_title('mathoverflow.net 10.91%')\naxs[2, 0].set_title('mathhelpforum.com 14.21%')\naxs[2, 1].set_title('proofwiki.org 8.54%')\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/tree_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\n\n# Set the background color of the plot\nax.set_facecolor('#f5f5f5')\n\n# Create a bar chart with the data\nax.bar(['Java', 'Python', 'JavaScript', 'C++'], [10, 20, 27, 23], color='#9c27b0')\n\n# Add labels to the bars\nfor i, v in enumerate([10, 20, 27, 23]):\n    ax.text(i, v + 1, str(v) + '%', ha='center', va='bottom')\n\n# Set the title of the plot\nax.set_title('Programming Language Popularity')\n\n# Set the x-axis label\nax.set_xlabel('Programming Languages')\n\n# Set the y-axis label\nax.set_ylabel('Popularity (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/tree_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(12.0, 8.0))\n\n# Create a rectangle for the first product\nrect1 = plt.Rectangle((0.1, 0.7), 0.3, 0.2, color='cyan')\nax.add_patch(rect1)\nax.text(0.25, 0.8, 'Adidas\\n13.42%', ha='center', va='center')\n\n# Create a rectangle for the second product\nrect2 = plt.Rectangle((0.6, 0.7), 0.3, 0.2, color='orange')\nax.add_patch(rect2)\nax.text(0.85, 0.8, 'Under Armour\\n8.54%', ha='center', va='center')\n\n# Create a rectangle for the third product\nrect3 = plt.Rectangle((0.1, 0.4), 0.3, 0.2, color='yellow')\nax.add_patch(rect3)\nax.text(0.25, 0.5, 'Nike\\n30.6%', ha='center', va='center')\n\n# Create a rectangle for the fourth product\nrect4 = plt.Rectangle((0.6, 0.4), 0.3, 0.2, color='green')\nax.add_patch(rect4)\nax.text(0.85, 0.5, 'Reebok\\n10.91%', ha='center', va='center')\n\n# Create a rectangle for the fifth product\nrect5 = plt.Rectangle((0.1, 0.1), 0.3, 0.2, color='lightblue')\nax.add_patch(rect5)\nax.text(0.25, 0.2, 'Puma\\n14.21%', ha='center', va='center')\n\n# Create a rectangle for the sixth product\nrect6 = plt.Rectangle((0.6, 0.1), 0.3, 0.2, color='orange')\nax.add_patch(rect6)\nax.text(0.85, 0.2, 'New Balance\\n6.26%', ha='center', va='center')\n\n# Set the limits of the plot\nax.set_xlim([0, 1])\nax.set_ylim([0, 1])\n\n# Display the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/tree_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(4.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('#FFDAB9')\n\n# Create a bar chart with the data\nax.bar(['A', 'B', 'C'], [50, 15, 20], color='#87CEEB')\n\n# Set the title of the plot\nax.set_title('Bar Chart Example')\n\n# Set the x-axis label\nax.set_xlabel('Categories')\n\n# Set the y-axis label\nax.set_ylabel('Values')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/tree_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Global Population Distribution')\n\n# Create a bar chart with the data\nax.bar(['Europe', 'Australia', 'South America', 'Africa', 'North America'], [15, 18, 10, 12, 20], color=['yellow', 'purple', 'cyan', 'blue', 'green'])\n\n# Set the x-axis label\nax.set_xlabel('Region')\n\n# Set the y-axis label\nax.set_ylabel('Population Percentage (%)')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_1.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 7.0))\n\n# Set the title of the plot\nax.set_title('Llama2 Performance')\n\n# Set the x-axis label\nax.set_xlabel('Number of examples')\n\n# Set the y-axis label\nax.set_ylabel('LogP(CL)')\n\n# Set the x-axis limits\nax.set_xlim(1, 5)\n\n# Set the y-axis limits\nax.set_ylim(1, 7)\n\n# Set the x-ticks\nax.set_xticks([1, 2, 3, 4, 5])\n\n# Set the y-ticks\nax.set_yticks([1, 2, 3, 4, 5, 6, 7])\n\n# Set the grid\nax.grid(True)\n\n# Add a legend\nax.legend()\n\n# Add a rectangle for the logo\nlogo = plt.Rectangle((0, 0), 1, 1, color='blue')\nax.add_patch(logo)\n\n# Add a rectangle for the chatbot\nchatbot = plt.Rectangle((0, 0), 1, 1, color='orange')\nax.add_patch(chatbot)\n\n# Add a scatter plot for the data points\nx = [1, 2, 3, 4, 5]\ny = [2, 3, 4, 5, 6]\nax.scatter(x, y, color='red')\n\n# Add a line plot for the regression line\nx_line = np.linspace(1, 5, 100)\ny_line = 1.5 * x_line + 1\nax.plot(x_line, y_line, color='green')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_10.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the title of the plot\nax.set_title('Comparison of Scores with and without Memory')\n\n# Create a color map for the scores\ncmap = plt.get_cmap('coolwarm')\n\n# Create a scatter plot for each car model\nfor i, car in enumerate(car_models):\n    # Get the score for the car model\n    score = car['score']\n    \n    # Get the efficiency, comfort, and safety scores\n    efficiency = car['efficiency']\n    comfort = car['comfort']\n    safety = car['safety']\n    \n    # Get the memory type\n    memory_type = car['memory_type']\n    \n    # Plot the car model\n    ax.scatter(efficiency, score, c=cmap(efficiency), label=car['name'])\n    ax.scatter(comfort, score, c=cmap(comfort), label=car['name'])\n    ax.scatter(safety, score, c=cmap(safety), label=car['name'])\n    \n    # Add a star to the plot if the car has memory\n    if memory_type == 'With Memory':\n        ax.plot([efficiency, comfort, safety], [score, score, score], 'r*')\n    \n    # Add a legend to the plot\n    ax.legend()\n\n# Set the x-axis and y-axis labels\nax.set_xlabel('Score')\nax.set_ylabel('Memory Type')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_2.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Define the data\nx = np.linspace(0, 10, 100)\ny = np.sin(x)\n\n# Plot the data\nax.plot(x, y)\n\n# Set the title and labels\nax.set_title('Efficiency vs Comfort')\nax.set_xlabel('Efficiency')\nax.set_ylabel('Comfort')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_3.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(8.0, 4.0))\n\n# Set the title of the plot\nax.set_title('Scoring Evaluation')\n\n# Create a bar chart\nax.bar([1, 2, 3, 4, 5], [0.9, 0.8, 0.7, 0.6, 0.5], color='green')\n\n# Set the x-axis label\nax.set_xlabel('Player')\n\n# Set the y-axis label\nax.set_ylabel('Score')\n\n# Create a second subplot\nax2 = fig.add_subplot(122)\n\n# Set the title of the second subplot\nax2.set_title('Pair Comparison')\n\n# Create a bar chart for the second subplot\nax2.bar(['Winner', 'Losser Preference', 'Tie'], [0.95, 0.85, 0.75], color='orange')\n\n# Set the x-axis label for the second subplot\nax2.set_xlabel('Pair')\n\n# Set the y-axis label for the second subplot\nax2.set_ylabel('Score')\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_4.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10, 6))\n\n# Define the data for the plots\nx = np.linspace(0, 10, 100)\ny1 = np.sin(x)\ny2 = np.cos(x)\ny3 = np.tan(x)\n\n# Plot the data\nax.plot(x, y1, label='jTrans')\nax.plot(x, y2, label='PalmTree')\nax.plot(x, y3, label='CLAP')\n\n# Set the title and labels\nax.set_title('Stock Market Analysis')\nax.set_xlabel('Time')\nax.set_ylabel('Price')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_5.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 6.0))\n\n# Set the background color of the plot\nax.set_facecolor('lightblue')\n\n# Create a rectangle for the school logo\nlogo = plt.Rectangle((0.45, 0.9), 0.1, 0.1, color='orange')\nax.add_patch(logo)\n\n# Create a rectangle for the school name\nname = plt.Rectangle((0.2, 0.85), 0.6, 0.1, color='blue')\nax.add_patch(name)\n\n# Create a rectangle for the school motto\nmotto = plt.Rectangle((0.3, 0.8), 0.4, 0.1, color='green')\nax.add_patch(motto)\n\n# Create a rectangle for the school colors\ncolors = plt.Rectangle((0.1, 0.75), 0.8, 0.1, color='brown')\nax.add_patch(colors)\n\n# Create a rectangle for the school mascot\nmascot = plt.Rectangle((0.4, 0.7), 0.2, 0.1, color='yellow')\nax.add_patch(mascot)\n\n# Create a rectangle for the school location\nlocation = plt.Rectangle((0.1, 0.65), 0.8, 0.1, color='purple')\nax.add_patch(location)\n\n# Create a rectangle for the school sports\nsports = plt.Rectangle((0.3, 0.6), 0.4, 0.1, color='red')\nax.add_patch(sports)\n\n# Create a rectangle for the school achievements\nachievements = plt.Rectangle((0.1, 0.55), 0.8, 0.1, color='pink')\nax.add_patch(achievements)\n\n# Create a rectangle for the school events\nevents = plt.Rectangle((0.3, 0.5), 0.4, 0.1, color='cyan')\nax.add_patch(events)\n\n# Create a rectangle for the school clubs\nclubs = plt.Rectangle((0.1, 0.45), 0.8, 0.1, color='grey')\nax.add_patch(clubs)\n\n# Create a rectangle for the school teachers\nteachers = plt.Rectangle((0.3, 0.4), 0.4, 0.1, color='black')\nax.add_patch(teachers)\n\n# Create a rectangle for the school students\nstudents = plt.Rectangle((0.1, 0.35), 0.8, 0.1, color='white')\nax.add_patch(students)\n\n# Create a rectangle for the school staff\nstaff = plt.Rectangle((0.3, 0.3), 0.4, 0.1, color='silver')\nax.add_patch(staff)\n\n# Create a rectangle for the school facilities\nfacilities = plt.Rectangle((0.1, 0.25), 0.8, 0.1, color='gold')\nax.add_patch(facilities)\n\n# Create a rectangle for the school library\nlibrary = plt.Rectangle((0.3, 0.2), 0.4, 0.1, color='brown')\nax.add_patch(library)\n\n# Create a rectangle for the school cafeteria\ncafeteria = plt.Rectangle((0.1, 0.15), 0.8, 0.1, color='orange')\nax.add_patch(cafeteria)\n\n# Create a rectangle for the school sports teams\nteams = plt.Rectangle((0.3, 0.1), 0.4, 0.1, color='blue')\nax.add_patch(teams)\n\n# Create a rectangle for the school sports scores\nscores = plt.Rectangle((0.1, 0.05), 0.8, 0.1, color='green')\nax.add_patch(scores)\n\n# Create a rectangle for the school sports records\nrecords = plt.Rectangle((0.3, 0.0), 0.4, 0.1, color='red')\nax.add_patch(records)\n\n# Create a rectangle for the school sports awards\nawards = plt.Rectangle((0.1, -0.05), 0.8, 0.1, color='pink')\nax.add_patch(awards)\n\n# Create a rectangle for the school sports events\nevents = plt.Rectangle((0.3, -0.1), 0.4, 0.1, color='cyan')\nax.add_patch(events)\n\n# Create a rectangle for the school sports clubs\nclubs = plt.Rectangle((0.1, -0.15), 0.8, 0.1, color='grey')\nax.add_patch(clubs)\n\n# Create a rectangle for the school sports teachers\nteachers = plt.Rectangle((0.3, -0.2), 0.4, 0.1, color='black')\nax.add_patch(teachers)\n\n# Create a rectangle for the school sports students\nstudents = plt.Rectangle((0.1, -0.25), 0.8, 0.1, color='white')\nax.add_patch(students)\n\n# Create a rectangle for the school sports staff\nstaff = plt.Rectangle((0.3, -0.3), 0.4, 0.1, color='silver')\nax.add_patch(staff)\n\n# Create a rectangle for the school sports facilities\nfacilities = plt.Rectangle((0.1, -0.35), 0.8, 0.1, color='gold')\nax.add_patch(facilities)\n\n# Create a rectangle for the school sports library\nlibrary = plt.Rectangle((0.3, -0.4), 0.4, 0.1, color='brown')\nax.add_patch(library)\n\n# Create a rectangle for the school sports cafeteria\ncafeteria = plt.Rectangle((0.1, -0.45), 0.8, 0.1, color='orange')\nax.add_patch(cafeteria)\n\n# Create a rectangle for the school sports teams\nteams = plt.Rectangle((0.3, -0.5), 0.4, 0.1, color='blue')\nax.add_patch(teams)\n\n# Create a rectangle for the school sports scores\nscores = plt.Rectangle((0.1, -0.55), 0.8, 0.1, color='green')\nax.add_patch(scores)\n\n# Create a rectangle for the school sports records\nrecords = plt.Rectangle((0.3, -0.6), 0.4, 0.1, color='red')\nax.add_patch(records)\n\n# Create a rectangle for the school sports awards\nawards = plt.Rectangle((0.1, -0.65), 0.8, 0.1, color='pink')\nax.add_patch(awards)\n\n# Create a rectangle for the school sports events\nevents = plt.Rectangle((0.3, -0.7), 0.4, 0.1, color='cyan')\nax.add_patch(events)\n\n# Create a rectangle for the school sports clubs\nclubs = plt.Rectangle((0.1, -0.75), 0.8, 0.1, color='grey')\nax.add_patch(clubs)\n\n# Create a rectangle for the school sports teachers\nteachers = plt.Rectangle((0.3, -0.8), 0.4, 0.1, color='black')\nax.add_patch(teachers)\n\n# Create a rectangle for the school sports students\nstudents = plt.Rectangle((0.1, -0.85), 0.8, 0.1, color='white')\nax.add_patch(students)\n\n# Create a rectangle for the school sports staff\nstaff = plt.Rectangle((0.3, -0.9), 0.4, 0.1, color='silver')\nax.add_patch(staff)\n\n# Create a rectangle for the school sports facilities\nfacilities = plt.Rectangle((0.1, -0.95), 0.8, 0.1, color='gold')\nax.add_patch(facilities)\n\n# Create a rectangle for the school sports library\nlibrary = plt.Rectangle((0.3, -1.0), 0.4, 0.1, color='brown')\nax.add_patch(library)\n\n# Create a rectangle for the school sports cafeteria\ncafeteria = plt.Rectangle((0.1, -1.05), 0.8, 0.1, color='orange')\nax.add_patch(cafeteria)\n\n# Create a rectangle for the school sports teams\nteams = plt.Rectangle((0.3, -1.1), 0.4, 0.1, color='blue')\nax.add_patch(teams)\n\n# Create a rectangle for the school sports scores\nscores = plt.Rectangle((0.1, -1.15), 0.8, 0.1, color='green')\nax.add_patch(scores)\n\n# Create a rectangle for the school sports records\nrecords = plt.Rectangle((0.3, -1.2), 0.4, 0.1, color='red')\nax.add_patch(records)\n\n# Create a rectangle for the school sports awards\nawards = plt.Rectangle((0.1, -1.25), 0.8, 0.1, color='pink')\nax.add_patch(awards)\n\n# Create a rectangle for the school sports events\nevents = plt.Rectangle((0.3, -1.3), 0.4, 0.1, color='cyan')\nax.add_patch(events)\n\n# Create a rectangle for the school sports clubs\nclubs = plt.Rectangle((0.1, -1.35), 0.8, 0.1, color='grey')\nax.add_patch(clubs)\n\n# Create a rectangle for the school sports teachers\nteachers = plt.Rectangle((0.3, -1.4), 0.4, 0.1, color='black')\nax.add_patch(teachers)\n\n# Create a rectangle for the school sports students\nstudents = plt.Rectangle((0.1, -1.45), 0.8, 0.1, color='white')\nax.add_patch(students)\n\n# Create a rectangle for the school sports staff\nstaff = plt.Rectangle((0.3, -1.5), 0.4, 0.1, color='silver')\nax.add_patch(staff)\n\n# Create a rectangle for the school sports facilities\nfacilities = plt.Rectangle((0.1, -1.55), 0.8, 0.1, color='gold')\nax.add_patch(facilities)\n\n# Create a rectangle for the school sports library\nlibrary = plt.Rectangle((0.3, -1.6), 0.4, 0.1, color='brown')\nax.add_patch(library)\n\n# Create a rectangle for the school sports cafeteria\ncafeteria = plt.Rectangle((0.1, -1.65), 0.8, 0.1, color='orange')\nax.add_patch(cafeteria)\n\n# Create a rectangle for the school sports teams\nteams = plt.Rectangle((0.3, -1.7), 0.4, 0.1, color='blue')\nax.add_patch(teams)\n\n# Create a rectangle for the school sports scores\nscores = plt.Rectangle((0.1, -1.75), 0.8, 0.1, color='green')\nax.add_patch(scores)\n\n# Create a rectangle for the school sports records\nrecords = plt.Rectangle((0.3, -1.8), 0.4, 0.1, color='red')\nax.add_patch(records)\n\n# Create a rectangle for the school sports awards\nawards = plt.Rectangle((0.1, -1.85), 0.8, 0.1, color='pink')\nax.add_patch(awards)\n\n# Create a rectangle for the school sports events\nevents = plt.Rectangle((0.3, -1.9), 0.4, 0.1, color='cyan')\nax.add_patch(events)\n\n# Create a rectangle for the school sports clubs\nclubs = plt.Rectangle((0.1, -1.95), 0.8, 0.1, color='grey')\nax.add_patch(clubs)\n\n# Create a rectangle for the school sports teachers\nteachers = plt.Rectangle((0.3, -2.0), 0.4, 0.1, color='black')\nax.add_patch(teachers)\n\n# Create a rectangle for the school sports students\nstudents = plt.Rectangle((0.1, -2.05), 0.8, 0.1, color='white')\nax.add_patch(students)\n\n# Create a rectangle for the school sports staff\nstaff = plt.Rectangle((0.3, -2.1), 0.4, 0.1, color='silver')\nax.add_patch(staff)\n\n# Create a rectangle for the school sports facilities\nfacilities = plt.Rectangle((0.1, -2.15), 0.8, 0.1, color='gold')\nax.add_patch(facilities)\n\n# Create a rectangle for the school sports library\nlibrary = plt.Rectangle((0.3, -2.2), 0.4, 0.1, color='brown')\nax.add_patch(library)\n\n# Create a rectangle for the school sports cafeteria\ncafeteria = plt.Rectangle((0.1, -2.25), 0.8, 0.1, color='orange')\nax.add_patch(cafeteria)\n\n# Create a rectangle for the school sports teams\nteams = plt.Rectangle((0.3, -2.3), 0.4, 0.1, color='blue')\nax.add_patch(teams)\n\n# Create a rectangle for the school sports scores\nscores = plt.Rectangle((0.1, -2.35), 0.8, 0.1, color='green')\nax.add_patch(scores)\n\n# Create a rectangle for the school sports records\nrecords = plt.Rectangle((0.3, -2.4), 0.4, 0.1, color='red')\nax.add_patch(records)\n\n# Create a rectangle for the school sports awards\nawards = plt.Rectangle((0.1, -2.45), 0.8, 0.1, color='pink')\nax.add_patch(awards)\n\n# Create a rectangle for the school sports events\nevents = plt.Rectangle((0.3, -2.5), 0.4, 0.1, color='cyan')\nax.add_patch(events)\n\n# Create a rectangle for the school sports clubs\nclubs = plt.Rectangle((0.1, -2.55), 0.8, 0.1, color='grey')\nax.add_patch(clubs)\n\n# Create a rectangle for the school sports teachers\nteachers = plt.Rectangle((0.3, -2.6), 0.4, 0.1, color='black')\nax.add_patch(teachers)\n\n# Create a rectangle for the school sports students\nstudents = plt.Rectangle((0.1, -2.65), 0.8, 0.1, color='white')\nax.add_patch(students)\n\n# Create a rectangle for the school sports staff\nstaff = plt.Rectangle((0.3, -2.7), 0.4, 0.1, color='silver')\nax.add_patch(staff)\n\n# Create a rectangle for the school sports facilities\nfacilities = plt.Rectangle((0.1, -2.75), 0.8, 0.1, color='gold')\nax.add_patch(facilities)\n\n# Create a rectangle for the school sports library\nlibrary = plt.Rectangle((0.3, -2.8), 0.4, 0.1, color='brown')\nax.add_patch(library)\n\n# Create a rectangle for the school sports cafeteria\ncafeteria = plt.Rectangle((0.1, -2.85), 0.8, 0.1, color='orange')\nax.add_patch(cafeteria)\n\n# Create a rectangle for the school sports teams\nteams = plt.Rectangle((0.3, -2.9), 0.4, 0.1, color='blue')\nax.add_patch(teams)\n\n# Create a rectangle for the school sports scores\nscores = plt.Rectangle((0.1, -2.95), 0.8, 0.1, color='green')\nax.add_patch(scores)\n\n# Create a rectangle for the school sports records\nrecords = plt.Rectangle((0.3, -3.0), 0.4, 0.1, color='red')\nax.add_patch(records)\n\n# Create a rectangle for the school sports awards\nawards = plt.Rectangle((0.1, -3.05), 0.8, 0.1, color='pink')\nax.add_patch(awards)\n\n# Create a rectangle for the school sports events\nevents = plt.Rectangle((0.3, -3.1), 0.4, 0.1, color='cyan')\nax.add_patch(events)\n\n# Create a rectangle for the school sports clubs\nclubs = plt.Rectangle((0.1, -3.15), 0.8, 0.1, color='grey')\nax.add_patch(clubs)\n\n# Create a rectangle for the school sports teachers\nteachers = plt.Rectangle((0.3, -3.2), 0.4, 0.1, color='black')\nax.add_patch(teachers)\n\n# Create a rectangle for the school sports students\nstudents = plt.Rectangle((0.1, -3.25), 0.8, 0.1, color='white')\nax.add_patch(students)\n\n# Create a rectangle for the school sports staff\nstaff = plt.Rectangle((0.3, -3.3), 0.4, 0.1, color='silver')\nax.add_patch(staff)\n\n# Create a rectangle for the school sports facilities\nfacilities = plt.Rectangle((0.1, -3.35), 0.8, 0.1, color='gold')\nax.add_patch(facilities)\n\n# Create a rectangle for the school sports library\nlibrary = plt.Rectangle((0.3, -3.4), 0.4, 0.1, color='brown')\nax.add_patch(library)\n\n# Create a rectangle for the school sports cafeteria\ncafeteria = plt.Rectangle((0.1, -3.45), 0.8, 0.1, color='orange')\nax.add_patch(cafeteria)\n\n# Create a rectangle for the school sports teams\nteams = plt.Rectangle((0.3, -3.5), 0.4, 0.1, color='blue')\nax.add_patch(teams)\n\n# Create a rectangle for the school sports scores\nscores = plt.Rectangle((0.1, -3.55), 0.8, 0.1, color='green')\nax.add_patch(scores)\n\n# Create a rectangle for the school sports records\nrecords = plt.Rectangle((0.3, -3.6), 0.4, 0.1, color"}
{"file": "dataset/ori_500/violin_6.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(6.0, 4.0))\n\n# Create a rectangle for the logo\nlogo = plt.Rectangle((0.5, 0.5), 1, 1, fc='black')\nax.add_patch(logo)\n\n# Create a circle for the logo\ncircle = plt.Circle((0.5, 0.5), 0.2, fc='white')\nax.add_artist(circle)\n\n# Set the title of the plot\nax.set_title('Company Name')\n\n# Set the x-axis label\nax.set_xlabel('X Axis Label')\n\n# Set the y-axis label\nax.set_ylabel('Y Axis Label')\n\n# Set the x-axis limits\nax.set_xlim([0, 1])\n\n# Set the y-axis limits\nax.set_ylim([0, 1])\n\n# Set the x-axis ticks\nax.set_xticks([])\n\n# Set the y-axis ticks\nax.set_yticks([])\n\n# Set the background color\nax.set_facecolor('lightgrey')\n\n# Set the grid lines\nax.grid(True)\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_7.pdf", "response": "```python\nimport matplotlib.pyplot as plt\n\n# Create a figure and axis object\nfig, ax = plt.subplots(figsize=(8.0, 8.0))\n\n# Set the title of the plot\nax.set_title('% Decrease in Test MSE vs. FLAM-GL')\n\n# Set the x-axis label\nax.set_xlabel('Number of Features')\n\n# Set the y-axis label\nax.set_ylabel('% Decrease in Test MSE')\n\n# Set the x-ticks\nax.set_xticks([2, 4, 6, 8, 10])\n\n# Set the y-ticks\nax.set_yticks(range(0, 100, 10))\n\n# Set the color of the grid lines\nax.grid(color='gray', linestyle='--', linewidth=0.5)\n\n# Set the color of the background\nax.set_facecolor('#f0f0f0')\n\n# Set the color of the text\nax.set_color_cycle(['blue', 'orange'])\n\n# Plot the data\nax.plot([2, 4, 6, 8, 10], [163, 201, 176, 159, 137], label='Group l0')\nax.plot([2, 4, 6, 8, 10], [97, 95, 95, 97, 97], label='AGIS')\n\n# Add a legend\nax.legend()\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_8.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(10.0, 6.0))\n\n# Define the data\nx = np.array([0.88, 0.85, 0.79, 0.67, 0.57])\ny = np.array([0.18, 0.19, 0.19, 0.18, 0.16])\ncolors = ['blue', 'orange', 'green', 'red', 'purple']\narea = np.pi * (np.array([2, 2, 2, 2, 2]))**2  # 0 to 15 point radii\n\n# Plot the scatter plot\nscatter = ax.scatter(x, y, s=area, c=colors, alpha=0.5)\n\n# Add labels and title\nax.set_xlabel('Decimated Sampling Rate')\nax.set_ylabel('KCC')\nax.set_title('KCC vs Decimated Sampling Rate')\n\n# Add a color bar which maps values to colors\ncbar = fig.colorbar(scatter)\ncbar.set_label('Pearson R')\n\n# Add text annotations\nfor i, txt in enumerate(['Raw', '125Hz', '50Hz', '25Hz', '10Hz']):\n    ax.annotate(txt, (x[i], y[i]))\n\n# Show the plot\nplt.show()\n```"}
{"file": "dataset/ori_500/violin_9.pdf", "response": "```python\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Create a figure and axis\nfig, ax = plt.subplots(figsize=(12, 8))\n\n# Set the title of the plot\nax.set_title('Distribution of Grades: Class 1')\n\n# Create a bar chart\nax.bar(['Boys', 'Girls'], [95, 85], color='blue')\n\n# Set the x-axis label\nax.set_xlabel('Gender')\n\n# Set the y-axis label\nax.set_ylabel('Grades')\n\n# Display the plot\nplt.show()\n```"}
